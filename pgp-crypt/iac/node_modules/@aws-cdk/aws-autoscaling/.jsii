{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-autoscaling-common": "1.193.0",
    "@aws-cdk/aws-cloudwatch": "1.193.0",
    "@aws-cdk/aws-ec2": "1.193.0",
    "@aws-cdk/aws-elasticloadbalancing": "1.193.0",
    "@aws-cdk/aws-elasticloadbalancingv2": "1.193.0",
    "@aws-cdk/aws-iam": "1.193.0",
    "@aws-cdk/aws-sns": "1.193.0",
    "@aws-cdk/core": "1.193.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-acmpca": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ACMPCA",
          "packageId": "Amazon.CDK.AWS.ACMPCA"
        },
        "java": {
          "maven": {
            "artifactId": "acmpca",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.acmpca"
        },
        "js": {
          "npm": "@aws-cdk/aws-acmpca"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-acmpca",
          "module": "aws_cdk.aws_acmpca"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::AutoScaling",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "autoscaling"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-autoscaling",
  "readme": {
    "markdown": "# Amazon EC2 Auto Scaling Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n## Auto Scaling Group\n\nAn `AutoScalingGroup` represents a number of instances on which you run your code. You\npick the size of the fleet, the instance type and the OS image:\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage() // get the latest Amazon Linux image\n});\n```\n\nNOTE: AutoScalingGroup has an property called `allowAllOutbound` (allowing the instances to contact the\ninternet) which is set to `true` by default. Be sure to set this to `false`  if you don't want\nyour instances to be able to start arbitrary connections. Alternatively, you can specify an existing security\ngroup to attach to the instances that are launched, rather than have the group create a new one.\n\n```ts\ndeclare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});\n```\n\nAlternatively you can create an `AutoScalingGroup` from a `LaunchTemplate`:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const launchTemplate: ec2.LaunchTemplate;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  launchTemplate: launchTemplate\n});\n```\n\nTo launch a mixture of Spot and on-demand instances, and/or with multiple instance types, you can create an `AutoScalingGroup` from a MixedInstancesPolicy:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const launchTemplate1: ec2.LaunchTemplate;\ndeclare const launchTemplate2: ec2.LaunchTemplate;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  mixedInstancesPolicy: {\n    instancesDistribution: {\n      onDemandPercentageAboveBaseCapacity: 50, // Mix Spot and On-Demand instances\n    },\n    launchTemplate: launchTemplate1,\n    launchTemplateOverrides: [ // Mix multiple instance types\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: launchTemplate2 },\n    ],\n  }\n});\n```\n\n## Machine Images (AMIs)\n\nAMIs control the OS that gets launched when you start your EC2 instance. The EC2\nlibrary contains constructs to select the AMI you want to use.\n\nDepending on the type of AMI, you select it a different way.\n\nThe latest version of Amazon Linux and Microsoft Windows images are\nselectable by instantiating one of these classes:\n\n```ts lit=test/example.images.lit.ts\n// Pick a Windows edition to use\nconst windows = new ec2.WindowsImage(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = new ec2.AmazonLinuxImage({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nconst linux = new ec2.GenericLinuxImage({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n```\n\n> NOTE: The Amazon Linux images selected will be cached in your `cdk.json`, so that your\n> AutoScalingGroups don't automatically change out from under you when you're making unrelated\n> changes. To update to the latest version of Amazon Linux, remove the cache entry from the `context`\n> section of your `cdk.json`.\n>\n> We will add command-line options to make this step easier in the future.\n\n## AutoScaling Instance Counts\n\nAutoScalingGroups make it possible to raise and lower the number of instances in the group,\nin response to (or in advance of) changes in workload.\n\nWhen you create your AutoScalingGroup, you specify a `minCapacity` and a\n`maxCapacity`. AutoScaling policies that respond to metrics will never go higher\nor lower than the indicated capacity (but scheduled scaling actions might, see\nbelow).\n\nThere are three ways to scale your capacity:\n\n* **In response to a metric** (also known as step scaling); for example, you\n  might want to scale out if the CPU usage across your cluster starts to rise,\n  and scale in when it drops again.\n* **By trying to keep a certain metric around a given value** (also known as\n  target tracking scaling); you might want to automatically scale out and in to\n  keep your CPU usage around 50%.\n* **On a schedule**; you might want to organize your scaling around traffic\n  flows you expect, by scaling out in the morning and scaling in in the\n  evening.\n\nThe general pattern of autoscaling will look like this:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nconst autoScalingGroup = new autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  minCapacity: 5,\n  maxCapacity: 100\n  // ...\n});\n\n// Then call one of the scaling methods (explained below)\n//\n// autoScalingGroup.scaleOnMetric(...);\n//\n// autoScalingGroup.scaleOnCpuUtilization(...);\n// autoScalingGroup.scaleOnIncomingBytes(...);\n// autoScalingGroup.scaleOnOutgoingBytes(...);\n// autoScalingGroup.scaleOnRequestCount(...);\n// autoScalingGroup.scaleToTrackMetric(...);\n//\n// autoScalingGroup.scaleOnSchedule(...);\n```\n\n### Step Scaling\n\nThis type of scaling scales in and out in deterministics steps that you\nconfigure, in response to metric values. For example, your scaling strategy to\nscale in response to a metric that represents your average worker pool usage\nmight look like this:\n\n```plaintext\n Scaling        -1          (no change)          +1       +3\n            │        │                       │        │        │\n            ├────────┼───────────────────────┼────────┼────────┤\n            │        │                       │        │        │\nWorker use  0%      10%                     50%       70%     100%\n```\n\n(Note that this is not necessarily a recommended scaling strategy, but it's\na possible one. You will have to determine what thresholds are right for you).\n\nNote that in order to set up this scaling strategy, you will have to emit a\nmetric representing your worker utilization from your instances. After that,\nyou would configure the scaling something like this:\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});\n```\n\nThe AutoScaling construct library will create the required CloudWatch alarms and\nAutoScaling policies for you.\n\n### Target Tracking Scaling\n\nThis type of scaling scales in and out in order to keep a metric around a value\nyou prefer. There are four types of predefined metrics you can track, or you can\nchoose to track a custom metric. If you do choose to track a custom metric,\nbe aware that the metric has to represent instance utilization in some way\n(AutoScaling will scale out if the metric is higher than the target, and scale\nin if the metric is lower than the target).\n\nIf you configure multiple target tracking policies, AutoScaling will use the\none that yields the highest capacity.\n\nThe following example scales to keep the CPU usage of your instances around\n50% utilization:\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnCpuUtilization('KeepSpareCPU', {\n  targetUtilizationPercent: 50\n});\n```\n\nTo scale on average network traffic in and out of your instances:\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnIncomingBytes('LimitIngressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\nautoScalingGroup.scaleOnOutgoingBytes('LimitEgressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\n```\n\nTo scale on the average request count per instance (only works for\nAutoScalingGroups that have been attached to Application Load\nBalancers):\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnRequestCount('LimitRPS', {\n    targetRequestsPerSecond: 1000\n});\n```\n\n### Scheduled Scaling\n\nThis type of scaling is used to change capacities based on time. It works by\nchanging `minCapacity`, `maxCapacity` and `desiredCapacity` of the\nAutoScalingGroup, and so can be used for two purposes:\n\n* Scale in and out on a schedule by setting the `minCapacity` high or\n  the `maxCapacity` low.\n* Still allow the regular scaling actions to do their job, but restrict\n  the range they can scale over (by setting both `minCapacity` and\n  `maxCapacity` but changing their range over time).\n\nA schedule is expressed as a cron expression. The `Schedule` class has a `cron` method to help build cron expressions.\n\nThe following example scales the fleet out in the morning, going back to natural\nscaling (all the way down to 1 instance if necessary) at night:\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nautoScalingGroup.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: autoscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});\n```\n\n## Configuring Instances using CloudFormation Init\n\nIt is possible to use the CloudFormation Init mechanism to configure the\ninstances in the AutoScalingGroup. You can write files to it, run commands,\nstart services, etc. See the documentation of\n[AWS::CloudFormation::Init](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html)\nand the documentation of CDK's `aws-ec2` library for more information.\n\nWhen you specify a CloudFormation Init configuration for an AutoScalingGroup:\n\n* you *must* also specify `signals` to configure how long CloudFormation\n  should wait for the instances to successfully configure themselves.\n* you *should* also specify an `updatePolicy` to configure how instances\n  should be updated when the AutoScalingGroup is updated (for example,\n  when the AMI is updated). If you don't specify an update policy, a *rolling\n  update* is chosen by default.\n\nHere's an example of using CloudFormation Init to write a file to the\ninstance hosts on startup:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});\n```\n\n## Signals\n\nIn normal operation, CloudFormation will send a Create or Update command to\nan AutoScalingGroup and proceed with the rest of the deployment without waiting\nfor the *instances in the AutoScalingGroup*.\n\nConfigure `signals` to tell CloudFormation to wait for a specific number of\ninstances in the AutoScalingGroup to have been started (or failed to start)\nbefore moving on. An instance is supposed to execute the\n[`cfn-signal`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-signal.html)\nprogram as part of its startup to indicate whether it was started\nsuccessfully or not.\n\nIf you use CloudFormation Init support (described in the previous section),\nthe appropriate call to `cfn-signal` is automatically added to the\nAutoScalingGroup's UserData. If you don't use the `signals` directly, you are\nresponsible for adding such a call yourself.\n\nThe following type of `Signals` are available:\n\n* `Signals.waitForAll([options])`: wait for all of `desiredCapacity` amount of instances\n  to have started (recommended).\n* `Signals.waitForMinCapacity([options])`: wait for a `minCapacity` amount of instances\n  to have started (use this if waiting for all instances takes too long and you are happy\n  with a minimum count of healthy hosts).\n* `Signals.waitForCount(count, [options])`: wait for a specific amount of instances to have\n  started.\n\nThere are two `options` you can configure:\n\n* `timeout`: maximum time a host startup is allowed to take. If a host does not report\n  success within this time, it is considered a failure. Default is 5 minutes.\n* `minSuccessPercentage`: percentage of hosts that needs to be healthy in order for the\n  update to succeed. If you set this value lower than 100, some percentage of hosts may\n  report failure, while still considering the deployment a success. Default is 100%.\n\n## Update Policy\n\nThe *update policy* describes what should happen to running instances when the definition\nof the AutoScalingGroup is changed. For example, if you add a command to the UserData\nof an AutoScalingGroup, do the existing instances get replaced with new instances that\nhave executed the new UserData? Or do the \"old\" instances just keep on running?\n\nIt is recommended to always use an update policy, otherwise the current state of your\ninstances also depends the previous state of your instances, rather than just on your\nsource code. This degrades the reproducibility of your deployments.\n\nThe following update policies are available:\n\n* `UpdatePolicy.none()`: leave existing instances alone (not recommended).\n* `UpdatePolicy.rollingUpdate([options])`: progressively replace the existing\n  instances with new instances, in small batches. At any point in time,\n  roughly the same amount of total instances will be running. If the deployment\n  needs to be rolled back, the fresh instances will be replaced with the \"old\"\n  configuration again.\n* `UpdatePolicy.replacingUpdate([options])`: build a completely fresh copy\n  of the new AutoScalingGroup next to the old one. Once the AutoScalingGroup\n  has been successfully created (and the instances started, if `signals` is\n  configured on the AutoScalingGroup), the old AutoScalingGroup is deleted.\n  If the deployment needs to be rolled back, the new AutoScalingGroup is\n  deleted and the old one is left unchanged.\n\n## Allowing Connections\n\nSee the documentation of the `@aws-cdk/aws-ec2` package for more information\nabout allowing connections between resources backed by instances.\n\n## Max Instance Lifetime\n\nTo enable the max instance lifetime support, specify `maxInstanceLifetime` property\nfor the `AutoscalingGroup` resource. The value must be between 7 and 365 days(inclusive).\nTo clear a previously set value, leave this property undefined.\n\n## Instance Monitoring\n\nTo disable detailed instance monitoring, specify `instanceMonitoring` property\nfor the `AutoscalingGroup` resource as `Monitoring.BASIC`. Otherwise detailed monitoring\nwill be enabled.\n\n## Monitoring Group Metrics\n\nGroup metrics are used to monitor group level properties; they describe the group rather than any of its instances (e.g GroupMaxSize, the group maximum size). To enable group metrics monitoring, use the `groupMetrics` property.\nAll group metrics are reported in a granularity of 1 minute at no additional charge.\n\nSee [EC2 docs](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html#as-group-metrics) for a list of all available group metrics.\n\nTo enable group metrics monitoring using the `groupMetrics` property:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});\n```\n\n## Termination policies\n\nAuto Scaling uses [termination policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html)\nto determine which instances it terminates first during scale-in events. You\ncan specify one or more termination policies with the `terminationPolicies`\nproperty:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  terminationPolicies: [\n    autoscaling.TerminationPolicy.OLDEST_INSTANCE,\n    autoscaling.TerminationPolicy.DEFAULT,\n  ],\n});\n```\n\n## Protecting new instances from being terminated on scale-in\n\nBy default, Auto Scaling can terminate an instance at any time after launch when\nscaling in an Auto Scaling Group, subject to the group's [termination\npolicy](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html).\n\nHowever, you may wish to protect newly-launched instances from being scaled in\nif they are going to run critical applications that should not be prematurely\nterminated. EC2 Capacity Providers for Amazon ECS requires this attribute be\nset to `true`.\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  newInstancesProtectedFromScaleIn: true,\n});\n```\n\n## Configuring Instance Metadata Service (IMDS)\n\n### Toggling IMDSv1\n\nYou can configure [EC2 Instance Metadata Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) options to either\nallow both IMDSv1 and IMDSv2 or enforce IMDSv2 when interacting with the IMDS.\n\nTo do this for a single `AutoScalingGroup`, you can use set the `requireImdsv2` property.\nThe example below demonstrates IMDSv2 being required on a single `AutoScalingGroup`:\n\n```ts\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  requireImdsv2: true,\n});\n```\n\nYou can also use `AutoScalingGroupRequireImdsv2Aspect` to apply the operation to multiple AutoScalingGroups.\nThe example below demonstrates the `AutoScalingGroupRequireImdsv2Aspect` being used to require IMDSv2 for all AutoScalingGroups in a stack:\n\n```ts\nconst aspect = new autoscaling.AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.of(this).add(aspect);\n```\n\n## Warm Pool\n\nAuto Scaling offers [a warm pool](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html) which gives an ability to decrease latency for applications that have exceptionally long boot times. You can create a warm pool with default parameters as below:\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.addWarmPool();\n```\n\nYou can also customize a warm pool by configuring parameters:\n\n```ts\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.addWarmPool({\n  minSize: 1,\n  reuseOnScaleIn: true,\n});\n```\n\n## Future work\n\n* [ ] CloudWatch Events (impossible to add currently as the AutoScalingGroup ARN is\n  necessary to make this rule and this cannot be accessed from CloudFormation).\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-autoscaling",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.AutoScaling",
      "packageId": "Amazon.CDK.AWS.AutoScaling"
    },
    "java": {
      "maven": {
        "artifactId": "autoscaling",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.autoscaling"
    },
    "js": {
      "npm": "@aws-cdk/aws-autoscaling"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-autoscaling",
      "module": "aws_cdk.aws_autoscaling"
    }
  },
  "types": {
    "@aws-cdk/aws-autoscaling.AdjustmentTier": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "An adjustment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst adjustmentTier: autoscaling.AdjustmentTier = {\n  adjustment: 123,\n\n  // the properties below are optional\n  lowerBound: 123,\n  upperBound: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.AdjustmentTier",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 155
      },
      "name": "AdjustmentTier",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The number is interpeted as an added capacity, a new fixed capacity or an\nadded percentage depending on the AdjustmentType value of the\nStepScalingPolicy.\n\nCan be positive or negative.",
            "stability": "stable",
            "summary": "What number to adjust the capacity with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 165
          },
          "name": "adjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "-Infinity if this is the first tier, otherwise the upperBound of the previous tier",
            "remarks": "The scaling tier applies if the difference between the metric\nvalue and its alarm threshold is higher than this value.",
            "stability": "stable",
            "summary": "Lower bound where this scaling tier applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 175
          },
          "name": "lowerBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "+Infinity",
            "remarks": "The scaling tier applies if the difference between the metric\nvalue and its alarm threshold is lower than this value.",
            "stability": "stable",
            "summary": "Upper bound where this scaling tier applies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 185
          },
          "name": "upperBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/step-scaling-action:AdjustmentTier"
    },
    "@aws-cdk/aws-autoscaling.AdjustmentType": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "How adjustment numbers are interpreted.",
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.AdjustmentType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 110
      },
      "members": [
        {
          "docs": {
            "remarks": "A positive number increases capacity, a negative number decreases capacity.",
            "stability": "stable",
            "summary": "Add the adjustment number to the current capacity."
          },
          "name": "CHANGE_IN_CAPACITY"
        },
        {
          "docs": {
            "remarks": "The number must be between -100 and 100; a positive number increases\ncapacity and a negative number decreases it.",
            "stability": "stable",
            "summary": "Add this percentage of the current capacity to itself."
          },
          "name": "PERCENT_CHANGE_IN_CAPACITY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Make the capacity equal to the exact number given."
          },
          "name": "EXACT_CAPACITY"
        }
      ],
      "name": "AdjustmentType",
      "symbolId": "lib/step-scaling-action:AdjustmentType"
    },
    "@aws-cdk/aws-autoscaling.ApplyCloudFormationInitOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for applying CloudFormation init to an instance or instance group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst applyCloudFormationInitOptions: autoscaling.ApplyCloudFormationInitOptions = {\n  configSets: ['configSets'],\n  embedFingerprint: false,\n  ignoreFailures: false,\n  includeRole: false,\n  includeUrl: false,\n  printLog: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ApplyCloudFormationInitOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 2180
      },
      "name": "ApplyCloudFormationInitOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "['default']",
            "stability": "stable",
            "summary": "ConfigSet to activate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2186
          },
          "name": "configSets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If `true` (the default), a hash of the config will be embedded into the\nUserData, so that if the config changes, the UserData changes and\ninstances will be replaced (given an UpdatePolicy has been configured on\nthe AutoScalingGroup).\n\nIf `false`, no such hash will be embedded, and if the CloudFormation Init\nconfig changes nothing will happen to the running instances. If a\nconfig update introduces errors, you will not notice until after the\nCloudFormation deployment successfully finishes and the next instance\nfails to launch.",
            "stability": "stable",
            "summary": "Force instance replacement by embedding a config fingerprint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2204
          },
          "name": "embedFingerprint",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "You can use this to prevent CloudFormation from rolling back when\ninstances fail to start up, to help in debugging.",
            "stability": "stable",
            "summary": "Don't fail the instance creation when cfn-init fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2229
          },
          "name": "ignoreFailures",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the IAM instance profile attached to the EC2 instance",
            "stability": "stable",
            "summary": "Include --role argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2248
          },
          "name": "includeRole",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "This will be the cloudformation endpoint in the deployed region\ne.g. https://cloudformation.us-east-1.amazonaws.com",
            "stability": "stable",
            "summary": "Include --url argument when running cfn-init and cfn-signal commands."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2239
          },
          "name": "includeUrl",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "By default, the output of running cfn-init is written to a log file\non the instance. Set this to `true` to print it to the System Log\n(visible from the EC2 Console), `false` to not print it.\n\n(Be aware that the system log is refreshed at certain points in\ntime of the instance life cycle, and successful execution may\nnot always show up).",
            "stability": "stable",
            "summary": "Print the results of running cfn-init to the Instance System Log."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2219
          },
          "name": "printLog",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:ApplyCloudFormationInitOptions"
    },
    "@aws-cdk/aws-autoscaling.AutoScalingGroup": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "The Fleet models a number of AutoScalingGroups, a launch configuration, a\nsecurity group and an instance role.\n\nIt allows adding arbitrary commands to the startup scripts of the instances\nin the fleet.\n\nThe ASG spans the availability zones specified by vpcSubnets, falling back to\nthe Vpc default strategy if not specified.",
        "stability": "stable",
        "summary": "A Fleet represents a managed set of EC2 instances.",
        "example": "declare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/auto-scaling-group.ts",
          "line": 1160
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
        "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1095
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1101
          },
          "name": "fromAutoScalingGroupName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "autoScalingGroupName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Send a message to either an SQS queue or SNS topic when instances launch or terminate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 958
          },
          "name": "addLifecycleHook",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.LifecycleHook"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add the security group to all instances via the launch configuration security groups array."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1364
          },
          "name": "addSecurityGroup",
          "parameters": [
            {
              "docs": {
                "summary": ": The security group to add."
              },
              "name": "securityGroup",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the IAM role assumed by instances of this fleet."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1413
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "The command must be in the scripting language supported by the fleet's OS (i.e. Linux/Windows).\nDoes nothing for imported ASGs.",
            "stability": "stable",
            "summary": "Add command to the startup script of fleet instances."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1406
          },
          "name": "addUserData",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a pool of pre-initialized EC2 instances that sits alongside an Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 968
          },
          "name": "addWarmPool",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.WarmPoolOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.WarmPool"
            }
          }
        },
        {
          "docs": {
            "remarks": "This does the following:\n\n- Attaches the CloudFormation Init metadata to the AutoScalingGroup resource.\n- Add commands to the UserData to run `cfn-init` and `cfn-signal`.\n- Update the instance's CreationPolicy to wait for `cfn-init` to finish\n   before reporting success.",
            "stability": "stable",
            "summary": "Use a CloudFormation Init configuration at instance startup."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1427
          },
          "name": "applyCloudFormationInit",
          "parameters": [
            {
              "name": "init",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.ApplyCloudFormationInitOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns `true` if newly-launched instances are protected from scale-in."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1455
          },
          "name": "areNewInstancesProtectedFromScaleIn",
          "returns": {
            "type": {
              "primitive": "boolean"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Attach to ELBv2 Application Target Group."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1382
          },
          "name": "attachToApplicationTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Attach to a classic load balancer."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1375
          },
          "name": "attachToClassicLB",
          "overrides": "@aws-cdk/aws-elasticloadbalancing.ILoadBalancerTarget",
          "parameters": [
            {
              "name": "loadBalancer",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancer"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Attach to ELBv2 Application Target Group."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1401
          },
          "name": "attachToNetworkTargetGroup",
          "overrides": "@aws-cdk/aws-elasticloadbalancingv2.INetworkLoadBalancerTarget",
          "parameters": [
            {
              "name": "targetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.LoadBalancerTargetProps"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Ensures newly-launched instances are protected from scale-in."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1448
          },
          "name": "protectNewInstancesFromScaleIn"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target CPU utilization."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 988
          },
          "name": "scaleOnCpuUtilization",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target network ingress rate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1000
          },
          "name": "scaleOnIncomingBytes",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in, in response to a metric."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1074
          },
          "name": "scaleOnMetric",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target network egress rate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1012
          },
          "name": "scaleOnOutgoingBytes",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "remarks": "The AutoScalingGroup must have been attached to an Application Load Balancer\nin order to be able to call this.",
            "stability": "stable",
            "summary": "Scale out or in to achieve a target request handling rate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1027
          },
          "name": "scaleOnRequestCount",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.RequestCountScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in based on time."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 978
          },
          "name": "scaleOnSchedule",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicScheduledActionProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.ScheduledAction"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in in order to keep a metric around a target value."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1063
          },
          "name": "scaleToTrackMetric",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.MetricTargetTrackingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        }
      ],
      "name": "AutoScalingGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Arn of the AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1133
          },
          "name": "autoScalingGroupArn",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Name of the AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1128
          },
          "name": "autoScalingGroupName",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The network connections associated with this resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1462
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1123
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of OS instances of this fleet are running."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1118
          },
          "name": "osType",
          "overrides": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "an error if a launch template is given"
            },
            "stability": "stable",
            "summary": "The IAM Role in the instance profile."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1496
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "custom": {
              "throws": "an error if a launch template is given and it does not provide a non-null `userData`"
            },
            "stability": "stable",
            "summary": "The Base64-encoded user data to make available to the launched EC2 instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1479
          },
          "name": "userData",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The maximum amount of time that an instance can be in service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1144
          },
          "name": "maxInstanceLifetime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "docs": {
            "remarks": "`undefined`\nindicates that this group uses on-demand capacity.",
            "stability": "stable",
            "summary": "The maximum spot price configured for the autoscaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1139
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 952
          },
          "name": "albTargetGroup",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1158
          },
          "name": "newInstancesProtectedFromScaleIn",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:AutoScalingGroup"
    },
    "@aws-cdk/aws-autoscaling.AutoScalingGroupProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of a Fleet.",
        "example": "declare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 517
      },
      "name": "AutoScalingGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC to launch these instances in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 521
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no CloudFormation init",
            "remarks": "If you specify `init`, you must also specify `signals` to configure\nthe number of instances to wait for and the timeout for waiting for the\ninit process.",
            "stability": "stable",
            "summary": "Apply the given CloudFormation Init configuration to the instances in the AutoScalingGroup at startup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 608
          },
          "name": "init",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.CloudFormationInit"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default options",
            "remarks": "Describes the configsets to use and the timeout to wait",
            "stability": "stable",
            "summary": "Use the given options for applying CloudFormation Init."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 617
          },
          "name": "initOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ApplyCloudFormationInitOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not provide any instance type",
            "remarks": "`launchTemplate` must not be specified when this property is specified.",
            "stability": "stable",
            "summary": "Type of instance to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 550
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not provide any launch template",
            "remarks": "Launch configuration related settings and MixedInstancesPolicy must not be specified when a\nlaunch template is specified.",
            "stability": "stable",
            "summary": "Launch template to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 531
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ILaunchTemplate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not provide any machine image",
            "remarks": "`launchTemplate` must not be specified when this property is specified.",
            "stability": "stable",
            "summary": "AMI to launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 559
          },
          "name": "machineImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IMachineImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not provide any MixedInstancesPolicy",
            "remarks": "Launch configuration related settings and Launch Template  must not be specified when a\nMixedInstancesPolicy is specified.",
            "stability": "stable",
            "summary": "Mixed Instances Policy to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 541
          },
          "name": "mixedInstancesPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.MixedInstancesPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether IMDSv2 should be required on launched instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 624
          },
          "name": "requireImdsv2",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A role will automatically be created, it can be accessed via the `role` property",
            "example": "   const role = new iam.Role(this, 'MyRole', {\n     assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com')\n   });",
            "remarks": "The role must be assumable by the service principal `ec2.amazonaws.com`:\n\n`launchTemplate` must not be specified when this property is specified.",
            "stability": "stable",
            "summary": "An IAM role to associate with the instance profile assigned to this Auto Scaling Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 597
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A SecurityGroup will be created if none is specified.",
            "remarks": "`launchTemplate` must not be specified when this property is specified.",
            "stability": "stable",
            "summary": "Security group to launch the instances in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 568
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A UserData object appropriate for the MachineImage's\nOperating System is created.",
            "remarks": "The UserData may still be mutated after creation.\n\n`launchTemplate` must not be specified when this property is specified.",
            "stability": "stable",
            "summary": "Specific UserData to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 580
          },
          "name": "userData",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.UserData"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:AutoScalingGroupProps"
    },
    "@aws-cdk/aws-autoscaling.AutoScalingGroupRequireImdsv2Aspect": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Aspect that makes IMDSv2 required on instances deployed by AutoScalingGroups.",
        "example": "const aspect = new autoscaling.AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.of(this).add(aspect);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroupRequireImdsv2Aspect",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/aspects/require-imdsv2-aspect.ts",
          "line": 9
        }
      },
      "interfaces": [
        "@aws-cdk/core.IAspect"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aspects/require-imdsv2-aspect.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "All aspects can visit an IConstruct."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 12
          },
          "name": "visit",
          "overrides": "@aws-cdk/core.IAspect",
          "parameters": [
            {
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a warning annotation to a node."
          },
          "locationInModule": {
            "filename": "lib/aspects/require-imdsv2-aspect.ts",
            "line": 35
          },
          "name": "warn",
          "parameters": [
            {
              "docs": {
                "summary": "The scope to add the warning to."
              },
              "name": "node",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            },
            {
              "docs": {
                "summary": "The warning message."
              },
              "name": "message",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "AutoScalingGroupRequireImdsv2Aspect",
      "symbolId": "lib/aspects/require-imdsv2-aspect:AutoScalingGroupRequireImdsv2Aspect"
    },
    "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "Contains the attributes that are common to target tracking policies,\nexcept the ones relating to the metric and to the scalable target.\n\nThis interface is reused by more specific target tracking props objects.",
        "stability": "stable",
        "summary": "Base interface for target tracking props.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst baseTargetTrackingProps: autoscaling.BaseTargetTrackingProps = {\n  cooldown: cdk.Duration.minutes(30),\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 19
      },
      "name": "BaseTargetTrackingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The default cooldown configured on the AutoScalingGroup.",
            "stability": "stable",
            "summary": "Period after a scaling completes before another scaling activity can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 37
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If the value is true, scale in is disabled and the target tracking policy\nwon't remove capacity from the autoscaling group. Otherwise, scale in is\nenabled and the target tracking policy can remove capacity from the\ngroup.",
            "stability": "stable",
            "summary": "Indicates whether scale in by the target tracking policy is disabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 30
          },
          "name": "disableScaleIn",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Same as the cooldown.",
            "stability": "stable",
            "summary": "Estimated time until a newly launched instance can send metrics to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 44
          },
          "name": "estimatedInstanceWarmup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:BaseTargetTrackingProps"
    },
    "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic properties for a lifecycle hook.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\nconst basicLifecycleHookProps: autoscaling.BasicLifecycleHookProps = {\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 11
      },
      "name": "BasicLifecycleHookProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The state of the Amazon EC2 instance to which you want to attach the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 38
          },
          "name": "lifecycleTransition",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.LifecycleTransition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Continue",
            "stability": "stable",
            "summary": "The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 24
          },
          "name": "defaultResult",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.DefaultResult"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No heartbeat timeout.",
            "remarks": "If the lifecycle hook times out, perform the action in DefaultResult.",
            "stability": "stable",
            "summary": "Maximum time between calls to RecordLifecycleActionHeartbeat for the hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 33
          },
          "name": "heartbeatTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated name.",
            "stability": "stable",
            "summary": "Name of the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 17
          },
          "name": "lifecycleHookName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No metadata.",
            "stability": "stable",
            "summary": "Additional data to pass to the lifecycle hook target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 45
          },
          "name": "notificationMetadata",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No target.",
            "stability": "stable",
            "summary": "The target of the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 52
          },
          "name": "notificationTarget",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ILifecycleHookTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role will be created if a target is provided. Otherwise, no role is created.",
            "stability": "stable",
            "summary": "The role that allows publishing to the notification target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 59
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook:BasicLifecycleHookProps"
    },
    "@aws-cdk/aws-autoscaling.BasicScheduledActionProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a scheduled scaling action.",
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nautoScalingGroup.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: autoscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BasicScheduledActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scheduled-action.ts",
        "line": 10
      },
      "name": "BasicScheduledActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Supports cron expressions.\n\nFor more information about cron expressions, see https://en.wikipedia.org/wiki/Cron.",
            "stability": "stable",
            "summary": "When to perform this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 29
          },
          "name": "schedule",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.Schedule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No new desired capacity.",
            "remarks": "At the scheduled time, set the desired capacity to the given capacity.\n\nAt least one of maxCapacity, minCapacity, or desiredCapacity must be supplied.",
            "stability": "stable",
            "summary": "The new desired capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 76
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The rule never expires.",
            "stability": "stable",
            "summary": "When this scheduled action expires."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 43
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No new maximum capacity.",
            "remarks": "At the scheduled time, set the maximum capacity to the given capacity.\n\nAt least one of maxCapacity, minCapacity, or desiredCapacity must be supplied.",
            "stability": "stable",
            "summary": "The new maximum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 65
          },
          "name": "maxCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No new minimum capacity.",
            "remarks": "At the scheduled time, set the minimum capacity to the given capacity.\n\nAt least one of maxCapacity, minCapacity, or desiredCapacity must be supplied.",
            "stability": "stable",
            "summary": "The new minimum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 54
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The rule is activate immediately.",
            "stability": "stable",
            "summary": "When this scheduled action becomes active."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 36
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "primitive": "date"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- UTC",
            "remarks": "If a time zone is not provided, UTC is used by default.\n\nValid values are the canonical names of the IANA time zones, derived from the IANA Time Zone Database (such as Etc/GMT+9 or Pacific/Tahiti).\n\nFor more information, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
            "stability": "stable",
            "summary": "Specifies the time zone for a cron expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 21
          },
          "name": "timeZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/scheduled-action:BasicScheduledActionProps"
    },
    "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 12
      },
      "name": "BasicStepScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Metric to scale on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 16
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Maps a range of metric values to a particular scaling behavior.",
            "stability": "stable",
            "summary": "The intervals for scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 23
          },
          "name": "scalingSteps",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.ScalingInterval"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ChangeInCapacity",
            "stability": "stable",
            "summary": "How the adjustment numbers inside 'intervals' are interpreted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 30
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.AdjustmentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Default cooldown period on your AutoScalingGroup",
            "stability": "stable",
            "summary": "Grace period after scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 37
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Same as the cooldown",
            "stability": "stable",
            "summary": "Estimated time until a newly launched instance can send metrics to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 44
          },
          "name": "estimatedInstanceWarmup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "Raising this value can be used to smooth out the metric, at the expense\nof slower response times.",
            "stability": "stable",
            "summary": "How many evaluation periods of the metric to wait before triggering a scaling action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 64
          },
          "name": "evaluationPeriods",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The statistic from the metric if applicable (MIN, MAX, AVERAGE), otherwise AVERAGE.",
            "remarks": "Only has meaning if `evaluationPeriods != 1`.",
            "stability": "stable",
            "summary": "Aggregation to apply to all data points over the evaluation periods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 73
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.MetricAggregationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No minimum scaling effect",
            "remarks": "Only when using AdjustmentType = PercentChangeInCapacity, this number controls\nthe minimum absolute effect size.",
            "stability": "stable",
            "summary": "Minimum absolute number to adjust capacity with as result of percentage scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 54
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:BasicStepScalingPolicyProps"
    },
    "@aws-cdk/aws-autoscaling.BasicTargetTrackingScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Target Tracking policy that include the metric but exclude the target.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\nconst basicTargetTrackingScalingPolicyProps: autoscaling.BasicTargetTrackingScalingPolicyProps = {\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BasicTargetTrackingScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 50
      },
      "name": "BasicTargetTrackingScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target value for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 54
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No custom metric.",
            "remarks": "The metric must track utilization. Scaling out will happen if the metric is higher than\nthe target value, scaling in will happen in the metric is lower than the target value.\n\nExactly one of customMetric or predefinedMetric must be specified.",
            "stability": "stable",
            "summary": "A custom metric for application autoscaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 78
          },
          "name": "customMetric",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No predefined metric.",
            "remarks": "The metric must track utilization. Scaling out will happen if the metric is higher than\nthe target value, scaling in will happen in the metric is lower than the target value.\n\nExactly one of customMetric or predefinedMetric must be specified.",
            "stability": "stable",
            "summary": "A predefined metric for application autoscaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 66
          },
          "name": "predefinedMetric",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.PredefinedMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No resource label.",
            "remarks": "Should be supplied if the predefined metric is ALBRequestCountPerTarget, and the\nformat should be:\n\napp/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>",
            "stability": "stable",
            "summary": "The resource label associated with the predefined metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 90
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:BasicTargetTrackingScalingPolicyProps"
    },
    "@aws-cdk/aws-autoscaling.BindHookTargetOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "[disable-awslint:ref-via-interface] The lifecycle hook to attach to and an IRole to use",
        "stability": "stable",
        "summary": "Options needed to bind a target to a lifecycle hook.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const lifecycleHook: autoscaling.LifecycleHook;\ndeclare const role: iam.Role;\nconst bindHookTargetOptions: autoscaling.BindHookTargetOptions = {\n  lifecycleHook: lifecycleHook,\n\n  // the properties below are optional\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BindHookTargetOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook-target.ts",
        "line": 13
      },
      "name": "BindHookTargetOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "The lifecycle hook to attach to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook-target.ts",
            "line": 18
          },
          "name": "lifecycleHook",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.LifecycleHook"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": ": a role is not created unless the target arn is specified",
            "remarks": "[disable-awslint:ref-via-interface]",
            "stability": "stable",
            "summary": "The role to use when attaching to the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook-target.ts",
            "line": 24
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook-target:BindHookTargetOptions"
    },
    "@aws-cdk/aws-autoscaling.BlockDevice": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Block device.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const blockDeviceVolume: autoscaling.BlockDeviceVolume;\nconst blockDevice: autoscaling.BlockDevice = {\n  deviceName: 'deviceName',\n  volume: blockDeviceVolume,\n\n  // the properties below are optional\n  mappingEnabled: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BlockDevice",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 8
      },
      "name": "BlockDevice",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Supply a value like `/dev/sdh`, `xvdh`.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html",
            "stability": "stable",
            "summary": "The device name exposed to the EC2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 16
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Supply a value like `BlockDeviceVolume.ebs(15)`, `BlockDeviceVolume.ephemeral(0)`.",
            "stability": "stable",
            "summary": "Defines the block device volume, to be either an Amazon EBS volume or an ephemeral instance store volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 23
          },
          "name": "volume",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true - device mapping is left untouched",
            "deprecated": "use `BlockDeviceVolume.noDevice()` as the volume to supress a mapping.",
            "remarks": "If set to false for the root device, the instance might fail the Amazon EC2 health check.\nAmazon EC2 Auto Scaling launches a replacement instance if the instance fails the health check.",
            "stability": "deprecated",
            "summary": "If false, the device mapping will be suppressed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 34
          },
          "name": "mappingEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/volume:BlockDevice"
    },
    "@aws-cdk/aws-autoscaling.BlockDeviceVolume": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Describes a block device mapping for an EC2 instance or Auto Scaling group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst blockDeviceVolume = autoscaling.BlockDeviceVolume.ebs(123, /* all optional props */ {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/volume.ts",
          "line": 166
        },
        "parameters": [
          {
            "docs": {
              "summary": "EBS device info."
            },
            "name": "ebsDevice",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceProps"
            }
          },
          {
            "docs": {
              "summary": "Virtual device name."
            },
            "name": "virtualName",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ],
        "protected": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 115
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new Elastic Block Storage device."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 127
          },
          "name": "ebs",
          "parameters": [
            {
              "docs": {
                "summary": "The volume size, in Gibibytes (GiB)."
              },
              "name": "volumeSize",
              "type": {
                "primitive": "number"
              }
            },
            {
              "docs": {
                "summary": "additional device options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new Elastic Block Storage device from an existing snapshot."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 137
          },
          "name": "ebsFromSnapshot",
          "parameters": [
            {
              "docs": {
                "summary": "The snapshot ID of the volume to use."
              },
              "name": "snapshotId",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "additional device options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceSnapshotOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "The name will be in the form ephemeral{volumeIndex}.",
            "stability": "stable",
            "summary": "Creates a virtual, ephemeral device."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 147
          },
          "name": "ephemeral",
          "parameters": [
            {
              "docs": {
                "remarks": "Must be equal or greater than 0",
                "summary": "the volume index."
              },
              "name": "volumeIndex",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Supresses a volume mapping."
          },
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 158
          },
          "name": "noDevice",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
            }
          },
          "static": true
        }
      ],
      "name": "BlockDeviceVolume",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "EBS device info."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 166
          },
          "name": "ebsDevice",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceProps"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Virtual device name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 166
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/volume:BlockDeviceVolume"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::AutoScalingGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::AutoScaling::AutoScalingGroup` resource defines an Amazon EC2 Auto Scaling group, which is a collection of Amazon EC2 instances that are treated as a logical grouping for the purposes of automatic scaling and management.\n\nFor more information about Amazon EC2 Auto Scaling, see the [Amazon EC2 Auto Scaling User Guide](https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html) .\n\n> Amazon EC2 Auto Scaling configures instances launched as part of an Auto Scaling group using either a [launch template](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html) or a launch configuration. We strongly recommend that you do not use launch configurations. They do not provide full functionality for Amazon EC2 Auto Scaling or Amazon EC2. For more information, see [Launch configurations](https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-configurations.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::AutoScalingGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnAutoScalingGroup = new autoscaling.CfnAutoScalingGroup(this, 'MyCfnAutoScalingGroup', {\n  maxSize: 'maxSize',\n  minSize: 'minSize',\n\n  // the properties below are optional\n  autoScalingGroupName: 'autoScalingGroupName',\n  availabilityZones: ['availabilityZones'],\n  capacityRebalance: false,\n  context: 'context',\n  cooldown: 'cooldown',\n  defaultInstanceWarmup: 123,\n  desiredCapacity: 'desiredCapacity',\n  desiredCapacityType: 'desiredCapacityType',\n  healthCheckGracePeriod: 123,\n  healthCheckType: 'healthCheckType',\n  instanceId: 'instanceId',\n  launchConfigurationName: 'launchConfigurationName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  lifecycleHookSpecificationList: [{\n    lifecycleHookName: 'lifecycleHookName',\n    lifecycleTransition: 'lifecycleTransition',\n\n    // the properties below are optional\n    defaultResult: 'defaultResult',\n    heartbeatTimeout: 123,\n    notificationMetadata: 'notificationMetadata',\n    notificationTargetArn: 'notificationTargetArn',\n    roleArn: 'roleArn',\n  }],\n  loadBalancerNames: ['loadBalancerNames'],\n  maxInstanceLifetime: 123,\n  metricsCollection: [{\n    granularity: 'granularity',\n\n    // the properties below are optional\n    metrics: ['metrics'],\n  }],\n  mixedInstancesPolicy: {\n    launchTemplate: {\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n\n      // the properties below are optional\n      overrides: [{\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          allowedInstanceTypes: ['allowedInstanceTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkBandwidthGbps: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        launchTemplateSpecification: {\n          version: 'version',\n\n          // the properties below are optional\n          launchTemplateId: 'launchTemplateId',\n          launchTemplateName: 'launchTemplateName',\n        },\n        weightedCapacity: 'weightedCapacity',\n      }],\n    },\n\n    // the properties below are optional\n    instancesDistribution: {\n      onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n      onDemandBaseCapacity: 123,\n      onDemandPercentageAboveBaseCapacity: 123,\n      spotAllocationStrategy: 'spotAllocationStrategy',\n      spotInstancePools: 123,\n      spotMaxPrice: 'spotMaxPrice',\n    },\n  },\n  newInstancesProtectedFromScaleIn: false,\n  notificationConfigurations: [{\n    topicArn: 'topicArn',\n\n    // the properties below are optional\n    notificationTypes: ['notificationTypes'],\n  }],\n  placementGroup: 'placementGroup',\n  serviceLinkedRoleArn: 'serviceLinkedRoleArn',\n  tags: [{\n    key: 'key',\n    propagateAtLaunch: false,\n    value: 'value',\n  }],\n  targetGroupArns: ['targetGroupArns'],\n  terminationPolicies: ['terminationPolicies'],\n  vpcZoneIdentifier: ['vpcZoneIdentifier'],\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::AutoScalingGroup`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 684
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 408
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 725
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 763
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAutoScalingGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 412
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 730
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-tags"
            },
            "remarks": "You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group. For more information, see [Tag Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "One or more tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 646
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxsize"
            },
            "remarks": "> With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above `MaxSize` to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above `MaxSize` by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).",
            "stability": "external",
            "summary": "The maximum size of the group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 440
          },
          "name": "maxSize",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-minsize"
            },
            "stability": "external",
            "summary": "The minimum size of the group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 447
          },
          "name": "minSize",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-autoscalinggroupname"
            },
            "remarks": "The name can contain any ASCII character 33 to 126 including most punctuation characters, digits, and upper and lowercased letters.\n\n> You cannot use a colon (:) in the name.",
            "stability": "external",
            "summary": "The name of the Auto Scaling group. This name must be unique per Region per account."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 458
          },
          "name": "autoScalingGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-availabilityzones"
            },
            "remarks": "Used for launching into the default VPC subnet in each Availability Zone when not using the `VPCZoneIdentifier` property, or for attaching a network interface when an existing network interface ID is specified in a launch template.",
            "stability": "external",
            "summary": "A list of Availability Zones where instances in the Auto Scaling group can be created."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 465
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-capacityrebalance"
            },
            "remarks": "Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see [Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html) in the in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "Indicates whether Capacity Rebalancing is enabled."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 472
          },
          "name": "capacityRebalance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-context"
            },
            "stability": "external",
            "summary": "Reserved."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 479
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-cooldown"
            },
            "remarks": "The amount of time, in seconds, between one scaling activity ending and another one starting due to simple scaling policies. For more information, see [Scaling cooldowns for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nDefault: `300` seconds",
            "stability": "external",
            "summary": "*Only needed if you use simple scaling policies.*."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 490
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-defaultinstancewarmup"
            },
            "remarks": "During an instance refresh, Amazon EC2 Auto Scaling waits for the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see [Set the default instance warmup for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\n> To manage various warm-up settings at the group level, we recommend that you set the default instance warmup, *even if it is set to 0 seconds* . To remove a value that you previously set, include the property but specify `-1` for the value. However, we strongly recommend keeping the default instance warmup enabled by specifying a value of `0` or other nominal value.\n\nDefault: None",
            "stability": "external",
            "summary": "The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption to become stable after it enters the `InService` state."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 503
          },
          "name": "defaultInstanceWarmup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity"
            },
            "remarks": "It can scale beyond this capacity if you configure automatic scaling.\n\nThe number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity when creating the stack, the default is the minimum size of the group.\n\nCloudFormation marks the Auto Scaling group as successful (by setting its status to CREATE_COMPLETE) when the desired capacity is reached. However, if a maximum Spot price is set in the launch template or launch configuration that you specified, then desired capacity is not used as a criteria for success. Whether your request is fulfilled depends on Spot Instance capacity and your maximum price.",
            "stability": "external",
            "summary": "The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 514
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacitytype"
            },
            "remarks": "Amazon EC2 Auto Scaling supports `DesiredCapacityType` for attribute-based instance type selection only. For more information, see [Creating an Auto Scaling group using attribute-based instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nBy default, Amazon EC2 Auto Scaling specifies `units` , which translates into number of instances.\n\nValid values: `units` | `vcpu` | `memory-mib`",
            "stability": "external",
            "summary": "The unit of measurement for the value specified for desired capacity."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 525
          },
          "name": "desiredCapacityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthcheckgraceperiod"
            },
            "remarks": "This is useful if your instances do not immediately pass their health checks after they enter the `InService` state. For more information, see [Set the health check grace period for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nDefault: `0` seconds",
            "stability": "external",
            "summary": "The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed health check."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 534
          },
          "name": "healthCheckGracePeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthchecktype"
            },
            "remarks": "Amazon EC2 health checks are always on. For more information, see [Health checks for Auto Scaling instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nThe valid values are `EC2` (default), `ELB` , and `VPC_LATTICE` . The `VPC_LATTICE` health check type is reserved for use with VPC Lattice, which is in preview release and is subject to change.",
            "stability": "external",
            "summary": "Determines whether any additional health checks are performed on the instances in this group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 543
          },
          "name": "healthCheckType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-instanceid"
            },
            "remarks": "For more information, see [Create an Auto Scaling group using an EC2 instance](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nIf you specify `LaunchTemplate` , `MixedInstancesPolicy` , or `LaunchConfigurationName` , don't specify `InstanceId` .",
            "stability": "external",
            "summary": "The ID of the instance used to base the launch configuration on."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 552
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchconfigurationname"
            },
            "remarks": "Required only if you don't specify `LaunchTemplate` , `MixedInstancesPolicy` , or `InstanceId` .",
            "stability": "external",
            "summary": "The name of the launch configuration to use to launch instances."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 561
          },
          "name": "launchConfigurationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchtemplate"
            },
            "remarks": "You can alternatively associate a launch template to the Auto Scaling group by specifying a `MixedInstancesPolicy` . For more information about creating launch templates, see [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nIf you omit this property, you must specify `MixedInstancesPolicy` , `LaunchConfigurationName` , or `InstanceId` .",
            "stability": "external",
            "summary": "Information used to specify the launch template and version to use to launch instances."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 570
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecificationlist"
            },
            "stability": "external",
            "summary": "One or more lifecycle hooks to add to the Auto Scaling group before instances are launched."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 577
          },
          "name": "lifecycleHookSpecificationList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-loadbalancernames"
            },
            "remarks": "For Application Load Balancers, Network Load Balancers, and Gateway Load Balancer, specify the `TargetGroupARNs` property instead.",
            "stability": "external",
            "summary": "A list of Classic Load Balancers associated with this Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 584
          },
          "name": "loadBalancerNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxinstancelifetime"
            },
            "remarks": "The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see [Replacing Auto Scaling instances based on maximum instance lifetime](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "The maximum amount of time, in seconds, that an instance can be in service."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 591
          },
          "name": "maxInstanceLifetime",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-metricscollection"
            },
            "remarks": "By default, these metrics are disabled.",
            "stability": "external",
            "summary": "Enables the monitoring of group metrics of an Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 598
          },
          "name": "metricsCollection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-mixedinstancespolicy"
            },
            "remarks": "The policy includes properties that not only define the distribution of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances (optional), and how the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacities, but also the properties that specify the instance configuration information—the launch template and instance types. The policy can also include a weight for each instance type and different launch templates for individual instance types.\n\nFor more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "An embedded object that specifies a mixed instances policy."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 609
          },
          "name": "mixedInstancesPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-newinstancesprotectedfromscalein"
            },
            "remarks": "For more information about preventing instances from terminating on scale in, see [Using instance scale-in protection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 616
          },
          "name": "newInstancesProtectedFromScaleIn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations"
            },
            "stability": "external",
            "summary": "Configures an Auto Scaling group to send notifications when specified events take place."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 623
          },
          "name": "notificationConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-placementgroup"
            },
            "remarks": "For more information, see [Placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\n> A *cluster* placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group.",
            "stability": "external",
            "summary": "The name of the placement group into which to launch your instances."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 632
          },
          "name": "placementGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-servicelinkedrolearn"
            },
            "remarks": "By default, Amazon EC2 Auto Scaling uses a service-linked role named `AWSServiceRoleForAutoScaling` , which it creates if it does not exist. For more information, see [Service-linked roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS service on your behalf."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 639
          },
          "name": "serviceLinkedRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-targetgrouparns"
            },
            "remarks": "Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests to one or more registered targets. For more information, see [Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 653
          },
          "name": "targetGroupArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-termpolicy"
            },
            "remarks": "These policies are executed in the order that you list them. For more information, see [Work with Amazon EC2 Auto Scaling termination policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nValid values: `Default` | `AllocationStrategy` | `ClosestToNextInstanceHour` | `NewestInstance` | `OldestInstance` | `OldestLaunchConfiguration` | `OldestLaunchTemplate` | `arn:aws:lambda:region:account-id:function:my-function:my-alias`",
            "stability": "external",
            "summary": "A policy or a list of policies that are used to select the instance to terminate."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 662
          },
          "name": "terminationPolicies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-vpczoneidentifier"
            },
            "remarks": "If this resource specifies public subnets and is also in a VPC that is defined in the same stack template, you must use the [DependsOn attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the [VPC-gateway attachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html) .\n\n> When you update `VPCZoneIdentifier` , this retains the same Auto Scaling group and replaces old instances with new ones, according to the specified subnets. You can optionally specify how CloudFormation handles these updates by using an [UpdatePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html) .\n\nRequired to launch instances into a nondefault VPC. If you specify `VPCZoneIdentifier` with `AvailabilityZones` , the subnets that you specify for this property must reside in those Availability Zones.",
            "stability": "external",
            "summary": "A list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 675
          },
          "name": "vpcZoneIdentifier",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratorcountrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`AcceleratorCountRequest` is a property of the `InstanceRequirements` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum number of accelerators for an instance type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst acceleratorCountRequestProperty: autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 777
      },
      "name": "AcceleratorCountRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratorcountrequest.html#cfn-autoscaling-autoscalinggroup-acceleratorcountrequest-max"
            },
            "stability": "external",
            "summary": "The maximum value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 783
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratorcountrequest.html#cfn-autoscaling-autoscalinggroup-acceleratorcountrequest-min"
            },
            "stability": "external",
            "summary": "The minimum value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 789
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.AcceleratorCountRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratortotalmemorymibrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`AcceleratorTotalMemoryMiBRequest` is a property of the `InstanceRequirements` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum total memory size for the accelerators for an instance type, in MiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst acceleratorTotalMemoryMiBRequestProperty: autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 853
      },
      "name": "AcceleratorTotalMemoryMiBRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratortotalmemorymibrequest.html#cfn-autoscaling-autoscalinggroup-acceleratortotalmemorymibrequest-max"
            },
            "stability": "external",
            "summary": "The memory maximum in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 859
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-acceleratortotalmemorymibrequest.html#cfn-autoscaling-autoscalinggroup-acceleratortotalmemorymibrequest-min"
            },
            "stability": "external",
            "summary": "The memory minimum in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 865
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-baselineebsbandwidthmbpsrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`BaselineEbsBandwidthMbpsRequest` is a property of the `InstanceRequirements` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum baseline bandwidth performance for an instance type, in Mbps.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst baselineEbsBandwidthMbpsRequestProperty: autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 929
      },
      "name": "BaselineEbsBandwidthMbpsRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-baselineebsbandwidthmbpsrequest.html#cfn-autoscaling-autoscalinggroup-baselineebsbandwidthmbpsrequest-max"
            },
            "stability": "external",
            "summary": "The maximum value in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 935
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-baselineebsbandwidthmbpsrequest.html#cfn-autoscaling-autoscalinggroup-baselineebsbandwidthmbpsrequest-min"
            },
            "stability": "external",
            "summary": "The minimum value in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 941
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Amazon EC2 Auto Scaling uses your specified requirements to identify instance types. Then, it uses your On-Demand and Spot allocation strategies to launch instances from these instance types.\n\nWhen you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.\n\nTo limit the list of instance types from which Amazon EC2 Auto Scaling can identify matching instance types, you can use one of the following parameters, but not both in the same request:\n\n- `AllowedInstanceTypes` - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.\n- `ExcludedInstanceTypes` - The instance types to exclude from the list, even if they match your specified attributes.\n\n> You must specify `VCpuCount` and `MemoryMiB` . All other attributes are optional. Any unspecified optional attribute is set to its default.\n\nFor an example template, see [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html) .\n\nFor more information, see [Creating an Auto Scaling group using attribute-based instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html) in the *Amazon EC2 Auto Scaling User Guide* . For help determining which instance types match your attributes before you apply them to your Auto Scaling group, see [Preview instance types with specified attributes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html#ec2fleet-get-instance-types-from-instance-requirements) in the *Amazon EC2 User Guide for Linux Instances* .\n\n`InstanceRequirements` is a property of the `LaunchTemplateOverrides` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplate.html) property type.",
        "stability": "external",
        "summary": "The attributes for the instance types for a mixed instances policy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst instanceRequirementsProperty: autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty = {\n  acceleratorCount: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorManufacturers: ['acceleratorManufacturers'],\n  acceleratorNames: ['acceleratorNames'],\n  acceleratorTotalMemoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorTypes: ['acceleratorTypes'],\n  allowedInstanceTypes: ['allowedInstanceTypes'],\n  bareMetal: 'bareMetal',\n  baselineEbsBandwidthMbps: {\n    max: 123,\n    min: 123,\n  },\n  burstablePerformance: 'burstablePerformance',\n  cpuManufacturers: ['cpuManufacturers'],\n  excludedInstanceTypes: ['excludedInstanceTypes'],\n  instanceGenerations: ['instanceGenerations'],\n  localStorage: 'localStorage',\n  localStorageTypes: ['localStorageTypes'],\n  memoryGiBPerVCpu: {\n    max: 123,\n    min: 123,\n  },\n  memoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  networkBandwidthGbps: {\n    max: 123,\n    min: 123,\n  },\n  networkInterfaceCount: {\n    max: 123,\n    min: 123,\n  },\n  onDemandMaxPricePercentageOverLowestPrice: 123,\n  requireHibernateSupport: false,\n  spotMaxPricePercentageOverLowestPrice: 123,\n  totalLocalStorageGb: {\n    max: 123,\n    min: 123,\n  },\n  vCpuCount: {\n    max: 123,\n    min: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1020
      },
      "name": "InstanceRequirementsProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-acceleratorcount"
            },
            "remarks": "To exclude accelerator-enabled instance types, set `Max` to `0` .\n\nDefault: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) for an instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1030
          },
          "name": "acceleratorCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-acceleratormanufacturers"
            },
            "remarks": "- For instance types with NVIDIA devices, specify `nvidia` .\n- For instance types with AMD devices, specify `amd` .\n- For instance types with AWS devices, specify `amazon-web-services` .\n- For instance types with Xilinx devices, specify `xilinx` .\n\nDefault: Any manufacturer",
            "stability": "external",
            "summary": "Indicates whether instance types must have accelerators by specific manufacturers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1043
          },
          "name": "acceleratorManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-acceleratornames"
            },
            "remarks": "- For instance types with NVIDIA A100 GPUs, specify `a100` .\n- For instance types with NVIDIA V100 GPUs, specify `v100` .\n- For instance types with NVIDIA K80 GPUs, specify `k80` .\n- For instance types with NVIDIA T4 GPUs, specify `t4` .\n- For instance types with NVIDIA M60 GPUs, specify `m60` .\n- For instance types with AMD Radeon Pro V520 GPUs, specify `radeon-pro-v520` .\n- For instance types with Xilinx VU9P FPGAs, specify `vu9p` .\n\nDefault: Any accelerator",
            "stability": "external",
            "summary": "Lists the accelerators that must be on an instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1059
          },
          "name": "acceleratorNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-acceleratortotalmemorymib"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum total memory size for the accelerators on an instance type, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1067
          },
          "name": "acceleratorTotalMemoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-acceleratortypes"
            },
            "remarks": "- For instance types with GPU accelerators, specify `gpu` .\n- For instance types with FPGA accelerators, specify `fpga` .\n- For instance types with inference accelerators, specify `inference` .\n\nDefault: Any accelerator type",
            "stability": "external",
            "summary": "Lists the accelerator types that must be on an instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1079
          },
          "name": "acceleratorTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-allowedinstancetypes"
            },
            "remarks": "All other instance types are ignored, even if they match your specified attributes.\n\nYou can use strings with one or more wild cards, represented by an asterisk ( `*` ), to allow an instance type, size, or generation. The following are examples: `m5.8xlarge` , `c5*.*` , `m5a.*` , `r*` , `*3*` .\n\nFor example, if you specify `c5*` , Amazon EC2 Auto Scaling will allow the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*` , Amazon EC2 Auto Scaling will allow all the M5a instance types, but not the M5n instance types.\n\n> If you specify `AllowedInstanceTypes` , you can't specify `ExcludedInstanceTypes` .\n\nDefault: All instance types",
            "stability": "external",
            "summary": "The instance types to apply your specified attributes against."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1093
          },
          "name": "allowedInstanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-baremetal"
            },
            "remarks": "Default: `excluded`",
            "stability": "external",
            "summary": "Indicates whether bare metal instance types are included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1101
          },
          "name": "bareMetal",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-baselineebsbandwidthmbps"
            },
            "remarks": "For more information, see [Amazon EBS–optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\nDefault: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum baseline bandwidth performance for an instance type, in Mbps."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1109
          },
          "name": "baselineEbsBandwidthMbps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-burstableperformance"
            },
            "remarks": "For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\nDefault: `excluded`",
            "stability": "external",
            "summary": "Indicates whether burstable performance instance types are included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1117
          },
          "name": "burstablePerformance",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-cpumanufacturers"
            },
            "remarks": "- For instance types with Intel CPUs, specify `intel` .\n- For instance types with AMD CPUs, specify `amd` .\n- For instance types with AWS CPUs, specify `amazon-web-services` .\n\n> Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.\n\nDefault: Any manufacturer",
            "stability": "external",
            "summary": "Lists which specific CPU manufacturers to include."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1131
          },
          "name": "cpuManufacturers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-excludedinstancetypes"
            },
            "remarks": "You can use strings with one or more wild cards, represented by an asterisk ( `*` ), to exclude an instance family, type, size, or generation. The following are examples: `m5.8xlarge` , `c5*.*` , `m5a.*` , `r*` , `*3*` .\n\nFor example, if you specify `c5*` , you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify `m5a.*` , Amazon EC2 Auto Scaling will exclude all the M5a instance types, but not the M5n instance types.\n\n> If you specify `ExcludedInstanceTypes` , you can't specify `AllowedInstanceTypes` .\n\nDefault: No excluded instance types",
            "stability": "external",
            "summary": "The instance types to exclude."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1143
          },
          "name": "excludedInstanceTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-instancegenerations"
            },
            "remarks": "- For current generation instance types, specify `current` . The current generation includes EC2 instance types currently recommended for use. This typically includes the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide for Linux Instances* .\n- For previous generation instance types, specify `previous` .\n\nDefault: Any current or previous generation",
            "stability": "external",
            "summary": "Indicates whether current or previous generation instance types are included."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1154
          },
          "name": "instanceGenerations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-localstorage"
            },
            "remarks": "For more information, see [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\nDefault: `included`",
            "stability": "external",
            "summary": "Indicates whether instance types with instance store volumes are included, excluded, or required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1162
          },
          "name": "localStorage",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-localstoragetypes"
            },
            "remarks": "- For instance types with hard disk drive (HDD) storage, specify `hdd` .\n- For instance types with solid state drive (SSD) storage, specify `ssd` .\n\nDefault: Any local storage type",
            "stability": "external",
            "summary": "Indicates the type of local storage that is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1173
          },
          "name": "localStorageTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-memorygibpervcpu"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of memory per vCPU for an instance type, in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1181
          },
          "name": "memoryGiBPerVCpu",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-memorymib"
            },
            "stability": "external",
            "summary": "The minimum and maximum instance memory size for an instance type, in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1187
          },
          "name": "memoryMiB",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-networkbandwidthgbps"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1195
          },
          "name": "networkBandwidthGbps",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-networkinterfacecount"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum number of network interfaces for an instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1203
          },
          "name": "networkInterfaceCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-ondemandmaxpricepercentageoverlowestprice"
            },
            "remarks": "This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as `999999` .\n\nIf you set `DesiredCapacityType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.\n\nDefault: `20`",
            "stability": "external",
            "summary": "The price protection threshold for On-Demand Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1213
          },
          "name": "onDemandMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-requirehibernatesupport"
            },
            "remarks": "Default: `false`",
            "stability": "external",
            "summary": "Indicates whether instance types must provide On-Demand Instance hibernation support."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1221
          },
          "name": "requireHibernateSupport",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-spotmaxpricepercentageoverlowestprice"
            },
            "remarks": "This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as `999999` .\n\nIf you set `DesiredCapacityType` to `vcpu` or `memory-mib` , the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.\n\nDefault: `100`",
            "stability": "external",
            "summary": "The price protection threshold for Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1231
          },
          "name": "spotMaxPricePercentageOverLowestPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-totallocalstoragegb"
            },
            "remarks": "Default: No minimum or maximum limits",
            "stability": "external",
            "summary": "The minimum and maximum total local storage size for an instance type, in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1239
          },
          "name": "totalLocalStorageGb",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancerequirements.html#cfn-autoscaling-autoscalinggroup-instancerequirements-vcpucount"
            },
            "stability": "external",
            "summary": "The minimum and maximum number of vCPUs for an instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1245
          },
          "name": "vCpuCount",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.InstanceRequirementsProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\n`InstancesDistribution` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.",
        "stability": "external",
        "summary": "Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst instancesDistributionProperty: autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty = {\n  onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n  onDemandBaseCapacity: 123,\n  onDemandPercentageAboveBaseCapacity: 123,\n  spotAllocationStrategy: 'spotAllocationStrategy',\n  spotInstancePools: 123,\n  spotMaxPrice: 'spotMaxPrice',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1376
      },
      "name": "InstancesDistributionProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandallocationstrategy"
            },
            "remarks": "Possible instance types are determined by the launch template overrides that you specify.\n\nThe following lists the valid values:\n\n- **lowest-price** - Uses price to determine which instance types are the highest priority, launching the lowest priced instance types within an Availability Zone first. This is the default value for Auto Scaling groups that specify `InstanceRequirements` .\n- **prioritized** - You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify `InstanceRequirements` and cannot be used for groups that do.",
            "stability": "external",
            "summary": "The allocation strategy to apply to your On-Demand Instances when they are launched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1387
          },
          "name": "onDemandAllocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandbasecapacity"
            },
            "remarks": "This base portion is launched first as your group scales.\n\nThis number has the same unit of measurement as the group's desired capacity. If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch template overrides list, or by changing the default desired capacity type setting of the group, you must specify this number using the same unit of measurement.\n\nDefault: 0\n\n> An update to this setting means a gradual replacement of instances to adjust the current On-Demand Instance levels. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.",
            "stability": "external",
            "summary": "The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1399
          },
          "name": "onDemandBaseCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandpercentageabovebasecapacity"
            },
            "remarks": "Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand Instances are used.\n\nDefault: 100\n\n> An update to this setting means a gradual replacement of instances to adjust the current On-Demand and Spot Instance levels for your additional capacity higher than the base capacity. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.",
            "stability": "external",
            "summary": "Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond `OnDemandBaseCapacity` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1409
          },
          "name": "onDemandPercentageAboveBaseCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotallocationstrategy"
            },
            "remarks": "Possible instance types are determined by the launch template overrides that you specify.\n\nThe following lists the valid values:\n\n- **capacity-optimized** - Requests Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest risk of interruption. To give certain instance types a higher chance of launching first, use `capacity-optimized-prioritized` .\n- **capacity-optimized-prioritized** - You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to `prioritized` , the same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify `InstanceRequirements` .\n- **lowest-price** - Requests Spot Instances using the lowest priced pools within an Availability Zone, across the number of Spot pools that you specify for the `SpotInstancePools` property. To ensure that your desired capacity is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption rates because this strategy only considers instance price and not available capacity.\n- **price-capacity-optimized (recommended)** - The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools that are the least likely to be interrupted and have the lowest possible price.",
            "stability": "external",
            "summary": "The allocation strategy to apply to your Spot Instances when they are launched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1422
          },
          "name": "spotAllocationStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotinstancepools"
            },
            "remarks": "The Spot pools are determined from the different instance types in the overrides. Valid only when the `SpotAllocationStrategy` is `lowest-price` . Value must be in the range of 1–20.\n\nDefault: 2",
            "stability": "external",
            "summary": "The number of Spot Instance pools across which to allocate your Spot Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1430
          },
          "name": "spotInstancePools",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotmaxprice"
            },
            "remarks": "If your maximum price is lower than the Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price. To remove a maximum price that you previously set, include the property but specify an empty string (\"\") for the value.\n\n> If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one.\n\nValid Range: Minimum value of 0.001",
            "stability": "external",
            "summary": "The maximum price per unit hour that you are willing to pay for a Spot Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1440
          },
          "name": "spotMaxPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.InstancesDistributionProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "- Use multiple instance types.\n\nSpecify the instance types that you want, or define your instance requirements instead and let Amazon EC2 Auto Scaling provision the available instance types that meet your requirements. This can provide Amazon EC2 Auto Scaling with a larger selection of instance types to choose from when fulfilling Spot and On-Demand capacities. You can view which instance types are matched before you apply the instance requirements to your Auto Scaling group.\n\nAfter you define your instance requirements, you don't have to keep updating these settings to get new EC2 instance types automatically. Amazon EC2 Auto Scaling uses the instance requirements of the Auto Scaling group to determine whether a new EC2 instance type can be used.\n\n`LaunchTemplateOverrides` is a property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplate.html) property type.",
        "stability": "external",
        "summary": "Use this structure to let Amazon EC2 Auto Scaling do the following when the Auto Scaling group has a mixed instances policy:  - Override the instance type that is specified in the launch template.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst launchTemplateOverridesProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty = {\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    allowedInstanceTypes: ['allowedInstanceTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkBandwidthGbps: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  launchTemplateSpecification: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  weightedCapacity: 'weightedCapacity',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1604
      },
      "name": "LaunchTemplateOverridesProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-as-mixedinstancespolicy-instancerequirements"
            },
            "remarks": "Amazon EC2 Auto Scaling uses your specified requirements to identify instance types. Then, it uses your On-Demand and Spot allocation strategies to launch instances from these instance types.\n\nYou can specify up to four separate sets of instance requirements per Auto Scaling group. This is useful for provisioning instances from different Amazon Machine Images (AMIs) in the same Auto Scaling group. To do this, create the AMIs and create a new launch template for each AMI. Then, create a compatible set of instance requirements for each launch template.\n\n> If you specify `InstanceRequirements` , you can't specify `InstanceType` .",
            "stability": "external",
            "summary": "The instance requirements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1614
          },
          "name": "instanceRequirements",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-instancetype"
            },
            "remarks": "You can specify up to 40 instance types per Auto Scaling group.",
            "stability": "external",
            "summary": "The instance type, such as `m3.xlarge` . You must specify an instance type that is supported in your requested Region and Availability Zones. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon Elastic Compute Cloud User Guide* ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1622
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-launchtemplatespecification"
            },
            "remarks": "For example, some instance types might require a launch template with a different AMI. If not provided, Amazon EC2 Auto Scaling uses the launch template that's specified in the `LaunchTemplate` definition. For more information, see [Specifying a different launch template for an instance type](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups-launch-template-overrides.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nYou can specify up to 20 launch templates per Auto Scaling group. The launch templates specified in the overrides and in the `LaunchTemplate` definition count towards this limit.",
            "stability": "external",
            "summary": "Provides a launch template for the specified instance type or set of instance requirements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1630
          },
          "name": "launchTemplateSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-weightedcapacity"
            },
            "remarks": "When a Spot or On-Demand Instance is launched, the capacity units count toward the desired capacity. Amazon EC2 Auto Scaling launches instances until the desired capacity is totally fulfilled, even if this results in an overage. For example, if there are two units remaining to fulfill capacity, and Amazon EC2 Auto Scaling can only launch an instance with a `WeightedCapacity` of five units, the instance is launched, and the desired capacity is exceeded by three units. For more information, see [Configure instance weighting for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups-instance-weighting.html) in the *Amazon EC2 Auto Scaling User Guide* . Value must be in the range of 1-999.\n\nIf you specify a value for `WeightedCapacity` for one instance type, you must specify a value for `WeightedCapacity` for all of them.\n\n> Every Auto Scaling group has three size parameters ( `DesiredCapacity` , `MaxSize` , and `MinSize` ). Usually, you set these sizes based on a specific number of instances. However, if you configure a mixed instances policy that defines weights for the instance types, you must specify these sizes with the same units that you use for weighting instances.",
            "stability": "external",
            "summary": "If you provide a list of instance types to use, you can specify the number of capacity units provided by each instance type in terms of virtual CPUs, memory, storage, throughput, or other relative performance characteristic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1640
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.LaunchTemplateOverridesProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`LaunchTemplate` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.",
        "stability": "external",
        "summary": "Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst launchTemplateProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty = {\n  launchTemplateSpecification: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n\n  // the properties below are optional\n  overrides: [{\n    instanceRequirements: {\n      acceleratorCount: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorManufacturers: ['acceleratorManufacturers'],\n      acceleratorNames: ['acceleratorNames'],\n      acceleratorTotalMemoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorTypes: ['acceleratorTypes'],\n      allowedInstanceTypes: ['allowedInstanceTypes'],\n      bareMetal: 'bareMetal',\n      baselineEbsBandwidthMbps: {\n        max: 123,\n        min: 123,\n      },\n      burstablePerformance: 'burstablePerformance',\n      cpuManufacturers: ['cpuManufacturers'],\n      excludedInstanceTypes: ['excludedInstanceTypes'],\n      instanceGenerations: ['instanceGenerations'],\n      localStorage: 'localStorage',\n      localStorageTypes: ['localStorageTypes'],\n      memoryGiBPerVCpu: {\n        max: 123,\n        min: 123,\n      },\n      memoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      networkBandwidthGbps: {\n        max: 123,\n        min: 123,\n      },\n      networkInterfaceCount: {\n        max: 123,\n        min: 123,\n      },\n      onDemandMaxPricePercentageOverLowestPrice: 123,\n      requireHibernateSupport: false,\n      spotMaxPricePercentageOverLowestPrice: 123,\n      totalLocalStorageGb: {\n        max: 123,\n        min: 123,\n      },\n      vCpuCount: {\n        max: 123,\n        min: 123,\n      },\n    },\n    instanceType: 'instanceType',\n    launchTemplateSpecification: {\n      version: 'version',\n\n      // the properties below are optional\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n    },\n    weightedCapacity: 'weightedCapacity',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1518
      },
      "name": "LaunchTemplateProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html#cfn-as-group-launchtemplate"
            },
            "stability": "external",
            "summary": "The launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1524
          },
          "name": "launchTemplateSpecification",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html#cfn-as-mixedinstancespolicy-overrides"
            },
            "stability": "external",
            "summary": "Any properties that you specify override the same properties in the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1530
          },
          "name": "overrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.LaunchTemplateProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must specify the following:\n\n- The ID or the name of the launch template, but not both.\n- The version of the launch template.\n\n`LaunchTemplateSpecification` is property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html) resource. It is also a property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplate.html) and [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property types.\n\nFor information about creating a launch template, see [AWS::EC2::LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html) and [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nFor examples of launch templates, see [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html) and the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#aws-resource-ec2-launchtemplate--examples) section in the `AWS::EC2::LaunchTemplate` resource.",
        "stability": "external",
        "summary": "Specifies a launch template to use when provisioning EC2 instances for an Auto Scaling group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst launchTemplateSpecificationProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty = {\n  version: 'version',\n\n  // the properties below are optional\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1721
      },
      "name": "LaunchTemplateSpecificationProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-version"
            },
            "remarks": "Specifying `$Latest` or `$Default` for the template version number is not supported. However, you can specify `LatestVersionNumber` or `DefaultVersionNumber` using the `Fn::GetAtt` intrinsic function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html) .\n\n> For an example of using the `Fn::GetAtt` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#aws-properties-as-group--examples) section of the `AWS::AutoScaling::AutoScalingGroup` resource.",
            "stability": "external",
            "summary": "The version number of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1747
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-launchtemplateid"
            },
            "remarks": "You must specify the `LaunchTemplateID` or the `LaunchTemplateName` , but not both.",
            "stability": "external",
            "summary": "The ID of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1729
          },
          "name": "launchTemplateId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-launchtemplatename"
            },
            "remarks": "You must specify the `LaunchTemplateName` or the `LaunchTemplateID` , but not both.",
            "stability": "external",
            "summary": "The name of the launch template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1737
          },
          "name": "launchTemplateName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Amazon EC2 Auto Scaling lifecycle hooks](https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html) in the *Amazon EC2 Auto Scaling User Guide* . You can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#aws-resource-as-lifecyclehook--examples) section of the `AWS::AutoScaling::LifecycleHook` resource.",
        "stability": "external",
        "summary": "`LifecycleHookSpecification` specifies a lifecycle hook for the `LifecycleHookSpecificationList` property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html) resource. A lifecycle hook specifies actions to perform when Amazon EC2 Auto Scaling launches or terminates instances.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst lifecycleHookSpecificationProperty: autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty = {\n  lifecycleHookName: 'lifecycleHookName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1817
      },
      "name": "LifecycleHookSpecificationProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-lifecyclehookname"
            },
            "stability": "external",
            "summary": "The name of the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1837
          },
          "name": "lifecycleHookName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-lifecycletransition"
            },
            "remarks": "- To create a lifecycle hook for scale-out events, specify `autoscaling:EC2_INSTANCE_LAUNCHING` .\n- To create a lifecycle hook for scale-in events, specify `autoscaling:EC2_INSTANCE_TERMINATING` .",
            "stability": "external",
            "summary": "The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1846
          },
          "name": "lifecycleTransition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-defaultresult"
            },
            "remarks": "The default value is `ABANDON` .\n\nValid values: `CONTINUE` | `ABANDON`",
            "stability": "external",
            "summary": "The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1825
          },
          "name": "defaultResult",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-heartbeattimeout"
            },
            "remarks": "The range is from `30` to `7200` seconds. The default value is `3600` seconds (1 hour).",
            "stability": "external",
            "summary": "The maximum time, in seconds, that can elapse before the lifecycle hook times out."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1831
          },
          "name": "heartbeatTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-notificationmetadata"
            },
            "stability": "external",
            "summary": "Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1852
          },
          "name": "notificationMetadata",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-notificationtargetarn"
            },
            "remarks": "You can specify an Amazon SNS topic or an Amazon SQS queue.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an instance is in a wait state for the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1858
          },
          "name": "notificationTargetArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-rolearn"
            },
            "remarks": "For information about creating this role, see [Configure a notification target for a lifecycle hook](https://docs.aws.amazon.com/autoscaling/ec2/userguide/prepare-for-lifecycle-notifications.html#lifecycle-hook-notification-target) in the *Amazon EC2 Auto Scaling User Guide* .\n\nValid only if the notification target is an Amazon SNS topic or an Amazon SQS queue.",
            "stability": "external",
            "summary": "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1866
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.LifecycleHookSpecificationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorygibpervcpurequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`MemoryGiBPerVCpuRequest` is a property of the `InstanceRequirements` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum amount of memory per vCPU for an instance type, in GiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst memoryGiBPerVCpuRequestProperty: autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 1947
      },
      "name": "MemoryGiBPerVCpuRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorygibpervcpurequest.html#cfn-autoscaling-autoscalinggroup-memorygibpervcpurequest-max"
            },
            "stability": "external",
            "summary": "The memory maximum in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1953
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorygibpervcpurequest.html#cfn-autoscaling-autoscalinggroup-memorygibpervcpurequest-min"
            },
            "stability": "external",
            "summary": "The memory minimum in GiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 1959
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorymibrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`MemoryMiBRequest` is a property of the `InstanceRequirements` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum instance memory size for an instance type, in MiB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst memoryMiBRequestProperty: autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2023
      },
      "name": "MemoryMiBRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorymibrequest.html#cfn-autoscaling-autoscalinggroup-memorymibrequest-max"
            },
            "stability": "external",
            "summary": "The memory maximum in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2029
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-memorymibrequest.html#cfn-autoscaling-autoscalinggroup-memorymibrequest-min"
            },
            "stability": "external",
            "summary": "The memory minimum in MiB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2035
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.MemoryMiBRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Monitor CloudWatch metrics for your Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html) in the *Amazon EC2 Auto Scaling User Guide* . You can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#aws-properties-as-group--examples) section of the `AWS::AutoScaling::AutoScalingGroup` resource.",
        "stability": "external",
        "summary": "`MetricsCollection` is a property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html) resource that describes the group metrics that an Amazon EC2 Auto Scaling group sends to Amazon CloudWatch. These metrics describe the group rather than any of its instances.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metricsCollectionProperty: autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty = {\n  granularity: 'granularity',\n\n  // the properties below are optional\n  metrics: ['metrics'],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2101
      },
      "name": "MetricsCollectionProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html#cfn-as-metricscollection-granularity"
            },
            "remarks": "The only valid value is `1Minute` .",
            "stability": "external",
            "summary": "The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2107
          },
          "name": "granularity",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html#cfn-as-metricscollection-metrics"
            },
            "remarks": "You can specify one or more of the following metrics:\n\n- `GroupMinSize`\n- `GroupMaxSize`\n- `GroupDesiredCapacity`\n- `GroupInServiceInstances`\n- `GroupPendingInstances`\n- `GroupStandbyInstances`\n- `GroupTerminatingInstances`\n- `GroupTotalInstances`\n- `GroupInServiceCapacity`\n- `GroupPendingCapacity`\n- `GroupStandbyCapacity`\n- `GroupTerminatingCapacity`\n- `GroupTotalCapacity`\n- `WarmPoolDesiredCapacity`\n- `WarmPoolWarmedCapacity`\n- `WarmPoolPendingCapacity`\n- `WarmPoolTerminatingCapacity`\n- `WarmPoolTotalCapacity`\n- `GroupAndWarmPoolDesiredCapacity`\n- `GroupAndWarmPoolTotalCapacity`\n\nIf you specify `Granularity` and don't specify any metrics, all metrics are enabled.\n\nFor more information, see [Auto Scaling group metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-cloudwatch-monitoring.html#as-group-metrics) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "Identifies the metrics to enable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2140
          },
          "name": "metrics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.MetricsCollectionProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A mixed instances policy contains information that Amazon EC2 Auto Scaling can use to launch instances and help optimize your costs. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nYou can create a mixed instances policy for new and existing Auto Scaling groups. You must use a launch template to configure the policy. You cannot use a launch configuration.\n\nThere are key differences between Spot Instances and On-Demand Instances:\n\n- The price for Spot Instances varies based on demand\n- Amazon EC2 can terminate an individual Spot Instance as the availability of, or price for, Spot Instances changes\n\nWhen a Spot Instance is terminated, Amazon EC2 Auto Scaling group attempts to launch a replacement instance to maintain the desired capacity for the group.\n\n`MixedInstancesPolicy` is a property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html) resource.",
        "stability": "external",
        "summary": "Use this structure to launch multiple instance types and On-Demand Instances and Spot Instances within a single Auto Scaling group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst mixedInstancesPolicyProperty: autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty = {\n  launchTemplate: {\n    launchTemplateSpecification: {\n      version: 'version',\n\n      // the properties below are optional\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n    },\n\n    // the properties below are optional\n    overrides: [{\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        allowedInstanceTypes: ['allowedInstanceTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkBandwidthGbps: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n      weightedCapacity: 'weightedCapacity',\n    }],\n  },\n\n  // the properties below are optional\n  instancesDistribution: {\n    onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n    onDemandBaseCapacity: 123,\n    onDemandPercentageAboveBaseCapacity: 123,\n    spotAllocationStrategy: 'spotAllocationStrategy',\n    spotInstancePools: 123,\n    spotMaxPrice: 'spotMaxPrice',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2218
      },
      "name": "MixedInstancesPolicyProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html#cfn-as-mixedinstancespolicy-launchtemplate"
            },
            "stability": "external",
            "summary": "One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2230
          },
          "name": "launchTemplate",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html#cfn-as-mixedinstancespolicy-instancesdistribution"
            },
            "stability": "external",
            "summary": "The instances distribution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2224
          },
          "name": "instancesDistribution",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.MixedInstancesPolicyProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-networkbandwidthgbpsrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> Setting the minimum bandwidth does not guarantee that your instance will achieve the minimum bandwidth. Amazon EC2 will identify instance types that support the specified minimum bandwidth, but the actual bandwidth of your instance might go below the specified minimum at times. For more information, see [Available instance bandwidth](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth) in the *Amazon EC2 User Guide for Linux Instances* .",
        "stability": "external",
        "summary": "`NetworkBandwidthGbpsRequest` is a property of the `InstanceRequirements` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum network bandwidth for an instance type, in Gbps.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst networkBandwidthGbpsRequestProperty: autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2297
      },
      "name": "NetworkBandwidthGbpsRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-networkbandwidthgbpsrequest.html#cfn-autoscaling-autoscalinggroup-networkbandwidthgbpsrequest-max"
            },
            "stability": "external",
            "summary": "The maximum amount of network bandwidth, in gigabits per second (Gbps)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2303
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-networkbandwidthgbpsrequest.html#cfn-autoscaling-autoscalinggroup-networkbandwidthgbpsrequest-min"
            },
            "stability": "external",
            "summary": "The minimum amount of network bandwidth, in gigabits per second (Gbps)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2309
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-networkinterfacecountrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`NetworkInterfaceCountRequest` is a property of the `InstanceRequirements` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum number of network interfaces for an instance type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst networkInterfaceCountRequestProperty: autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2373
      },
      "name": "NetworkInterfaceCountRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-networkinterfacecountrequest.html#cfn-autoscaling-autoscalinggroup-networkinterfacecountrequest-max"
            },
            "stability": "external",
            "summary": "The maximum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2379
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-networkinterfacecountrequest.html#cfn-autoscaling-autoscalinggroup-networkinterfacecountrequest-min"
            },
            "stability": "external",
            "summary": "The minimum number of network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2385
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For an example template snippet, see [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html) .\n\nFor more information, see [Get Amazon SNS notifications when your Auto Scaling group scales](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "A structure that specifies an Amazon SNS notification configuration for the `NotificationConfigurations` property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html) resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst notificationConfigurationProperty: autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty = {\n  topicArn: 'topicArn',\n\n  // the properties below are optional\n  notificationTypes: ['notificationTypes'],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2453
      },
      "name": "NotificationConfigurationProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html#cfn-autoscaling-autoscalinggroup-notificationconfigurations-topicarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Amazon SNS topic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2473
          },
          "name": "topicArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html#cfn-as-group-notificationconfigurations-notificationtypes"
            },
            "remarks": "*Allowed values* :\n\n- `autoscaling:EC2_INSTANCE_LAUNCH`\n- `autoscaling:EC2_INSTANCE_LAUNCH_ERROR`\n- `autoscaling:EC2_INSTANCE_TERMINATE`\n- `autoscaling:EC2_INSTANCE_TERMINATE_ERROR`\n- `autoscaling:TEST_NOTIFICATION`",
            "stability": "external",
            "summary": "A list of event types that send a notification. Event types can include any of the following types."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2467
          },
          "name": "notificationTypes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.NotificationConfigurationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TagPropertyProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Tag Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html) in the *Amazon EC2 Auto Scaling User Guide* . You can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#aws-properties-as-group--examples) section of the `AWS::AutoScaling::AutoScalingGroup` resource.\n\nCloudFormation adds the following tags to all Auto Scaling groups and associated instances:\n\n- aws:cloudformation:stack-name\n- aws:cloudformation:stack-id\n- aws:cloudformation:logical-id",
        "stability": "external",
        "summary": "A structure that specifies a tag for the `Tags` property of [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html) resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst tagPropertyProperty: autoscaling.CfnAutoScalingGroup.TagPropertyProperty = {\n  key: 'key',\n  propagateAtLaunch: false,\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TagPropertyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2546
      },
      "name": "TagPropertyProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-Key"
            },
            "stability": "external",
            "summary": "The tag key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2552
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-PropagateAtLaunch"
            },
            "remarks": "Set to `false` if you want the tag attached only to the Auto Scaling group and not copied to any instances launched as part of the Auto Scaling group.",
            "stability": "external",
            "summary": "Set to `true` if you want CloudFormation to copy the tag to EC2 instances that are launched as part of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2558
          },
          "name": "propagateAtLaunch",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-Value"
            },
            "stability": "external",
            "summary": "The tag value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2564
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.TagPropertyProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-totallocalstoragegbrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`TotalLocalStorageGBRequest` is a property of the `InstanceRequirements` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum total local storage size for an instance type, in GB.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst totalLocalStorageGBRequestProperty: autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2634
      },
      "name": "TotalLocalStorageGBRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-totallocalstoragegbrequest.html#cfn-autoscaling-autoscalinggroup-totallocalstoragegbrequest-max"
            },
            "stability": "external",
            "summary": "The storage maximum in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2640
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-totallocalstoragegbrequest.html#cfn-autoscaling-autoscalinggroup-totallocalstoragegbrequest-min"
            },
            "stability": "external",
            "summary": "The storage minimum in GB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2646
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-vcpucountrequest.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`VCpuCountRequest` is a property of the `InstanceRequirements` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum number of vCPUs for an instance type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst vCpuCountRequestProperty: autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty = {\n  max: 123,\n  min: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2710
      },
      "name": "VCpuCountRequestProperty",
      "namespace": "CfnAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-vcpucountrequest.html#cfn-autoscaling-autoscalinggroup-vcpucountrequest-max"
            },
            "stability": "external",
            "summary": "The maximum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2716
          },
          "name": "max",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-vcpucountrequest.html#cfn-autoscaling-autoscalinggroup-vcpucountrequest-min"
            },
            "stability": "external",
            "summary": "The minimum number of vCPUs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2722
          },
          "name": "min",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroup.VCpuCountRequestProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnAutoScalingGroupProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnAutoScalingGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnAutoScalingGroupProps: autoscaling.CfnAutoScalingGroupProps = {\n  maxSize: 'maxSize',\n  minSize: 'minSize',\n\n  // the properties below are optional\n  autoScalingGroupName: 'autoScalingGroupName',\n  availabilityZones: ['availabilityZones'],\n  capacityRebalance: false,\n  context: 'context',\n  cooldown: 'cooldown',\n  defaultInstanceWarmup: 123,\n  desiredCapacity: 'desiredCapacity',\n  desiredCapacityType: 'desiredCapacityType',\n  healthCheckGracePeriod: 123,\n  healthCheckType: 'healthCheckType',\n  instanceId: 'instanceId',\n  launchConfigurationName: 'launchConfigurationName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  lifecycleHookSpecificationList: [{\n    lifecycleHookName: 'lifecycleHookName',\n    lifecycleTransition: 'lifecycleTransition',\n\n    // the properties below are optional\n    defaultResult: 'defaultResult',\n    heartbeatTimeout: 123,\n    notificationMetadata: 'notificationMetadata',\n    notificationTargetArn: 'notificationTargetArn',\n    roleArn: 'roleArn',\n  }],\n  loadBalancerNames: ['loadBalancerNames'],\n  maxInstanceLifetime: 123,\n  metricsCollection: [{\n    granularity: 'granularity',\n\n    // the properties below are optional\n    metrics: ['metrics'],\n  }],\n  mixedInstancesPolicy: {\n    launchTemplate: {\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n\n      // the properties below are optional\n      overrides: [{\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          allowedInstanceTypes: ['allowedInstanceTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkBandwidthGbps: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        launchTemplateSpecification: {\n          version: 'version',\n\n          // the properties below are optional\n          launchTemplateId: 'launchTemplateId',\n          launchTemplateName: 'launchTemplateName',\n        },\n        weightedCapacity: 'weightedCapacity',\n      }],\n    },\n\n    // the properties below are optional\n    instancesDistribution: {\n      onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n      onDemandBaseCapacity: 123,\n      onDemandPercentageAboveBaseCapacity: 123,\n      spotAllocationStrategy: 'spotAllocationStrategy',\n      spotInstancePools: 123,\n      spotMaxPrice: 'spotMaxPrice',\n    },\n  },\n  newInstancesProtectedFromScaleIn: false,\n  notificationConfigurations: [{\n    topicArn: 'topicArn',\n\n    // the properties below are optional\n    notificationTypes: ['notificationTypes'],\n  }],\n  placementGroup: 'placementGroup',\n  serviceLinkedRoleArn: 'serviceLinkedRoleArn',\n  tags: [{\n    key: 'key',\n    propagateAtLaunch: false,\n    value: 'value',\n  }],\n  targetGroupArns: ['targetGroupArns'],\n  terminationPolicies: ['terminationPolicies'],\n  vpcZoneIdentifier: ['vpcZoneIdentifier'],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 19
      },
      "name": "CfnAutoScalingGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxsize"
            },
            "remarks": "> With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above `MaxSize` to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above `MaxSize` by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).",
            "stability": "external",
            "summary": "The maximum size of the group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 28
          },
          "name": "maxSize",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-minsize"
            },
            "stability": "external",
            "summary": "The minimum size of the group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 35
          },
          "name": "minSize",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-autoscalinggroupname"
            },
            "remarks": "The name can contain any ASCII character 33 to 126 including most punctuation characters, digits, and upper and lowercased letters.\n\n> You cannot use a colon (:) in the name.",
            "stability": "external",
            "summary": "The name of the Auto Scaling group. This name must be unique per Region per account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 46
          },
          "name": "autoScalingGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-availabilityzones"
            },
            "remarks": "Used for launching into the default VPC subnet in each Availability Zone when not using the `VPCZoneIdentifier` property, or for attaching a network interface when an existing network interface ID is specified in a launch template.",
            "stability": "external",
            "summary": "A list of Availability Zones where instances in the Auto Scaling group can be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 53
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-capacityrebalance"
            },
            "remarks": "Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see [Use Capacity Rebalancing to handle Amazon EC2 Spot Interruptions](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html) in the in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "Indicates whether Capacity Rebalancing is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 60
          },
          "name": "capacityRebalance",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-context"
            },
            "stability": "external",
            "summary": "Reserved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 67
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-cooldown"
            },
            "remarks": "The amount of time, in seconds, between one scaling activity ending and another one starting due to simple scaling policies. For more information, see [Scaling cooldowns for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nDefault: `300` seconds",
            "stability": "external",
            "summary": "*Only needed if you use simple scaling policies.*."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 78
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-defaultinstancewarmup"
            },
            "remarks": "During an instance refresh, Amazon EC2 Auto Scaling waits for the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see [Set the default instance warmup for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\n> To manage various warm-up settings at the group level, we recommend that you set the default instance warmup, *even if it is set to 0 seconds* . To remove a value that you previously set, include the property but specify `-1` for the value. However, we strongly recommend keeping the default instance warmup enabled by specifying a value of `0` or other nominal value.\n\nDefault: None",
            "stability": "external",
            "summary": "The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption to become stable after it enters the `InService` state."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 91
          },
          "name": "defaultInstanceWarmup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity"
            },
            "remarks": "It can scale beyond this capacity if you configure automatic scaling.\n\nThe number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity when creating the stack, the default is the minimum size of the group.\n\nCloudFormation marks the Auto Scaling group as successful (by setting its status to CREATE_COMPLETE) when the desired capacity is reached. However, if a maximum Spot price is set in the launch template or launch configuration that you specified, then desired capacity is not used as a criteria for success. Whether your request is fulfilled depends on Spot Instance capacity and your maximum price.",
            "stability": "external",
            "summary": "The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 102
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacitytype"
            },
            "remarks": "Amazon EC2 Auto Scaling supports `DesiredCapacityType` for attribute-based instance type selection only. For more information, see [Creating an Auto Scaling group using attribute-based instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nBy default, Amazon EC2 Auto Scaling specifies `units` , which translates into number of instances.\n\nValid values: `units` | `vcpu` | `memory-mib`",
            "stability": "external",
            "summary": "The unit of measurement for the value specified for desired capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 113
          },
          "name": "desiredCapacityType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthcheckgraceperiod"
            },
            "remarks": "This is useful if your instances do not immediately pass their health checks after they enter the `InService` state. For more information, see [Set the health check grace period for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nDefault: `0` seconds",
            "stability": "external",
            "summary": "The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed health check."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 122
          },
          "name": "healthCheckGracePeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthchecktype"
            },
            "remarks": "Amazon EC2 health checks are always on. For more information, see [Health checks for Auto Scaling instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nThe valid values are `EC2` (default), `ELB` , and `VPC_LATTICE` . The `VPC_LATTICE` health check type is reserved for use with VPC Lattice, which is in preview release and is subject to change.",
            "stability": "external",
            "summary": "Determines whether any additional health checks are performed on the instances in this group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 131
          },
          "name": "healthCheckType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-instanceid"
            },
            "remarks": "For more information, see [Create an Auto Scaling group using an EC2 instance](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nIf you specify `LaunchTemplate` , `MixedInstancesPolicy` , or `LaunchConfigurationName` , don't specify `InstanceId` .",
            "stability": "external",
            "summary": "The ID of the instance used to base the launch configuration on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 140
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchconfigurationname"
            },
            "remarks": "Required only if you don't specify `LaunchTemplate` , `MixedInstancesPolicy` , or `InstanceId` .",
            "stability": "external",
            "summary": "The name of the launch configuration to use to launch instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 149
          },
          "name": "launchConfigurationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchtemplate"
            },
            "remarks": "You can alternatively associate a launch template to the Auto Scaling group by specifying a `MixedInstancesPolicy` . For more information about creating launch templates, see [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nIf you omit this property, you must specify `MixedInstancesPolicy` , `LaunchConfigurationName` , or `InstanceId` .",
            "stability": "external",
            "summary": "Information used to specify the launch template and version to use to launch instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 158
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecificationlist"
            },
            "stability": "external",
            "summary": "One or more lifecycle hooks to add to the Auto Scaling group before instances are launched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 165
          },
          "name": "lifecycleHookSpecificationList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-loadbalancernames"
            },
            "remarks": "For Application Load Balancers, Network Load Balancers, and Gateway Load Balancer, specify the `TargetGroupARNs` property instead.",
            "stability": "external",
            "summary": "A list of Classic Load Balancers associated with this Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 172
          },
          "name": "loadBalancerNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxinstancelifetime"
            },
            "remarks": "The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see [Replacing Auto Scaling instances based on maximum instance lifetime](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "The maximum amount of time, in seconds, that an instance can be in service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 179
          },
          "name": "maxInstanceLifetime",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-metricscollection"
            },
            "remarks": "By default, these metrics are disabled.",
            "stability": "external",
            "summary": "Enables the monitoring of group metrics of an Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 186
          },
          "name": "metricsCollection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-mixedinstancespolicy"
            },
            "remarks": "The policy includes properties that not only define the distribution of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances (optional), and how the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacities, but also the properties that specify the instance configuration information—the launch template and instance types. The policy can also include a weight for each instance type and different launch templates for individual instance types.\n\nFor more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "An embedded object that specifies a mixed instances policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 197
          },
          "name": "mixedInstancesPolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-newinstancesprotectedfromscalein"
            },
            "remarks": "For more information about preventing instances from terminating on scale in, see [Using instance scale-in protection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 204
          },
          "name": "newInstancesProtectedFromScaleIn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations"
            },
            "stability": "external",
            "summary": "Configures an Auto Scaling group to send notifications when specified events take place."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 211
          },
          "name": "notificationConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-placementgroup"
            },
            "remarks": "For more information, see [Placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\n> A *cluster* placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group.",
            "stability": "external",
            "summary": "The name of the placement group into which to launch your instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 220
          },
          "name": "placementGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-servicelinkedrolearn"
            },
            "remarks": "By default, Amazon EC2 Auto Scaling uses a service-linked role named `AWSServiceRoleForAutoScaling` , which it creates if it does not exist. For more information, see [Service-linked roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS service on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 227
          },
          "name": "serviceLinkedRoleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-tags"
            },
            "remarks": "You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group. For more information, see [Tag Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "One or more tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 234
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TagPropertyProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-targetgrouparns"
            },
            "remarks": "Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests to one or more registered targets. For more information, see [Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 241
          },
          "name": "targetGroupArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-termpolicy"
            },
            "remarks": "These policies are executed in the order that you list them. For more information, see [Work with Amazon EC2 Auto Scaling termination policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nValid values: `Default` | `AllocationStrategy` | `ClosestToNextInstanceHour` | `NewestInstance` | `OldestInstance` | `OldestLaunchConfiguration` | `OldestLaunchTemplate` | `arn:aws:lambda:region:account-id:function:my-function:my-alias`",
            "stability": "external",
            "summary": "A policy or a list of policies that are used to select the instance to terminate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 250
          },
          "name": "terminationPolicies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-vpczoneidentifier"
            },
            "remarks": "If this resource specifies public subnets and is also in a VPC that is defined in the same stack template, you must use the [DependsOn attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the [VPC-gateway attachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html) .\n\n> When you update `VPCZoneIdentifier` , this retains the same Auto Scaling group and replaces old instances with new ones, according to the specified subnets. You can optionally specify how CloudFormation handles these updates by using an [UpdatePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html) .\n\nRequired to launch instances into a nondefault VPC. If you specify `VPCZoneIdentifier` with `AvailabilityZones` , the subnets that you specify for this property must reside in those Availability Zones.",
            "stability": "external",
            "summary": "A list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 263
          },
          "name": "vpcZoneIdentifier",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnAutoScalingGroupProps"
    },
    "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::LaunchConfiguration",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::AutoScaling::LaunchConfiguration` resource specifies the launch configuration that can be used by an Auto Scaling group to configure Amazon EC2 instances.\n\nWhen you update the launch configuration for an Auto Scaling group, CloudFormation deletes that resource and creates a new launch configuration with the updated properties and a new name. Existing instances are not affected. To update existing instances when you update the `AWS::AutoScaling::LaunchConfiguration` resource, you can specify an [UpdatePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html) for the group. You can find sample update policies for rolling updates in [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html) .\n\n> Amazon EC2 Auto Scaling configures instances launched as part of an Auto Scaling group using either a [launch template](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html) or a launch configuration. We strongly recommend that you do not use launch configurations. They do not provide full functionality for Amazon EC2 Auto Scaling or Amazon EC2. For more information, see [Launch configurations](https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-configurations.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::LaunchConfiguration`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnLaunchConfiguration = new autoscaling.CfnLaunchConfiguration(this, 'MyCfnLaunchConfiguration', {\n  imageId: 'imageId',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  associatePublicIpAddress: false,\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      snapshotId: 'snapshotId',\n      throughput: 123,\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: false,\n    virtualName: 'virtualName',\n  }],\n  classicLinkVpcId: 'classicLinkVpcId',\n  classicLinkVpcSecurityGroups: ['classicLinkVpcSecurityGroups'],\n  ebsOptimized: false,\n  iamInstanceProfile: 'iamInstanceProfile',\n  instanceId: 'instanceId',\n  instanceMonitoring: false,\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchConfigurationName: 'launchConfigurationName',\n  metadataOptions: {\n    httpEndpoint: 'httpEndpoint',\n    httpPutResponseHopLimit: 123,\n    httpTokens: 'httpTokens',\n  },\n  placementTenancy: 'placementTenancy',\n  ramDiskId: 'ramDiskId',\n  securityGroups: ['securityGroups'],\n  spotPrice: 'spotPrice',\n  userData: 'userData',\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::LaunchConfiguration`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 3257
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3064
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3289
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3318
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLaunchConfiguration",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3068
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3294
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-imageid"
            },
            "remarks": "For more information, see [Finding a Linux AMI](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\nIf you specify `InstanceId` , an `ImageId` is not required.",
            "stability": "external",
            "summary": "The ID of the Amazon Machine Image (AMI) that was assigned during registration."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3096
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instancetype"
            },
            "remarks": "For information about available instance types, see [Available instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes) in the *Amazon EC2 User Guide for Linux Instances* .\n\nIf you specify `InstanceId` , an `InstanceType` is not required.",
            "stability": "external",
            "summary": "Specifies the instance type of the EC2 instance."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3105
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-associatepublicipaddress"
            },
            "remarks": "If the instance is launched into a default subnet, the default is to assign a public IPv4 address, unless you disabled the option to assign a public IPv4 address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IPv4 address, unless you enabled the option to assign a public IPv4 address on the subnet.\n\nIf you specify `true` , each instance in the Auto Scaling group receives a unique public IPv4 address. For more information, see [Launching Auto Scaling instances in a VPC](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nIf you specify this property, you must specify at least one subnet for `VPCZoneIdentifier` when you create your group.",
            "stability": "external",
            "summary": "Specifies whether to assign a public IPv4 address to the group's instances."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3116
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-blockdevicemappings"
            },
            "remarks": "By default, the block devices specified in the block device mapping for the AMI are used. For more information, see [Block device mappings](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The block device mapping entries that define the block devices to attach to the instances at launch."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3123
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-classiclinkvpcid"
            },
            "stability": "external",
            "summary": "Available for backward compatibility."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3130
          },
          "name": "classicLinkVpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-classiclinkvpcsecuritygroups"
            },
            "stability": "external",
            "summary": "Available for backward compatibility."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3137
          },
          "name": "classicLinkVpcSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-ebsoptimized"
            },
            "remarks": "The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional fees are incurred when you enable EBS optimization for an instance type that is not EBS-optimized by default. For more information, see [Amazon EBS-optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\nThe default value is `false` .",
            "stability": "external",
            "summary": "Specifies whether the launch configuration is optimized for EBS I/O ( `true` ) or not ( `false` )."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3146
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-iaminstanceprofile"
            },
            "remarks": "The instance profile contains the IAM role. For more information, see [IAM role for applications that run on Amazon EC2 instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3153
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instanceid"
            },
            "remarks": "When you use an instance to create a launch configuration, all properties are derived from the instance with the exception of `BlockDeviceMapping` and `AssociatePublicIpAddress` . You can override any properties from the instance by specifying them in the launch configuration.",
            "stability": "external",
            "summary": "The ID of the Amazon EC2 instance to use to create the launch configuration."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3160
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instancemonitoring"
            },
            "remarks": "The default value is `true` (enabled).\n\n> When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes. For more information, see [Configure Monitoring for Auto Scaling Instances](https://docs.aws.amazon.com/autoscaling/latest/userguide/enable-as-instance-metrics.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "Controls whether instances in this group are launched with detailed ( `true` ) or basic ( `false` ) monitoring."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3171
          },
          "name": "instanceMonitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-kernelid"
            },
            "remarks": "> We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [User provided kernels](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The ID of the kernel associated with the AMI."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3180
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-keyname"
            },
            "remarks": "For more information, see [Amazon EC2 key pairs and Linux instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The name of the key pair."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3187
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-launchconfigurationname"
            },
            "remarks": "This name must be unique per Region per account.",
            "stability": "external",
            "summary": "The name of the launch configuration."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3194
          },
          "name": "launchConfigurationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-metadataoptions"
            },
            "remarks": "For more information, see [Configuring the Instance Metadata Options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-config.html#launch-configurations-imds) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "The metadata options for the instances."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3201
          },
          "name": "metadataOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-placementtenancy"
            },
            "remarks": "An instance with `dedicated` tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC. To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to `default` ), you must set the value of this property to `dedicated` . For more information, see [Configuring instance tenancy with Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-dedicated-instances.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nIf you specify `PlacementTenancy` , you must specify at least one subnet for `VPCZoneIdentifier` when you create your group.\n\nValid values: `default` | `dedicated`",
            "stability": "external",
            "summary": "The tenancy of the instance, either `default` or `dedicated` ."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3212
          },
          "name": "placementTenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-ramdiskid"
            },
            "remarks": "> We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [User provided kernels](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The ID of the RAM disk to select."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3221
          },
          "name": "ramDiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-securitygroups"
            },
            "remarks": "The list can contain both the IDs of existing security groups and references to [SecurityGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html) resources created in the template.\n\nFor more information, see [Control traffic to resources using security groups](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html) in the *Amazon Virtual Private Cloud User Guide* .",
            "stability": "external",
            "summary": "A list that contains the security groups to assign to the instances in the Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3230
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-spotprice"
            },
            "remarks": "Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see [Request Spot Instances for fault-tolerant and flexible applications](https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-template-spot-instances.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nValid Range: Minimum value of 0.001\n\n> When you change your maximum price by creating a new launch configuration, running instances will continue to run as long as the maximum price for those running instances is higher than the current Spot price.",
            "stability": "external",
            "summary": "The maximum hourly price to be paid for any Spot Instance launched to fulfill the request."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3241
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-userdata"
            },
            "remarks": "For more information, see [Instance metadata and user data](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The Base64-encoded user data to make available to the launched EC2 instances."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3248
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLaunchConfiguration"
    },
    "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevicemapping.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Each instance that is launched has an associated root device volume, either an Amazon EBS volume or an instance store volume. You can use block device mappings to specify additional EBS volumes or instance store volumes to attach to an instance when it is launched.\n\nFor more information, see [Example block device mapping](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#block-device-mapping-ex) in the *Amazon EC2 User Guide for Linux Instances* .",
        "stability": "external",
        "summary": "`BlockDeviceMapping` specifies a block device mapping for the `BlockDeviceMappings` property of the [AWS::AutoScaling::LaunchConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html) resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst blockDeviceMappingProperty: autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty = {\n  deviceName: 'deviceName',\n\n  // the properties below are optional\n  ebs: {\n    deleteOnTermination: false,\n    encrypted: false,\n    iops: 123,\n    snapshotId: 'snapshotId',\n    throughput: 123,\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  noDevice: false,\n  virtualName: 'virtualName',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3483
      },
      "name": "BlockDeviceMappingProperty",
      "namespace": "CfnLaunchConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevicemapping.html#cfn-autoscaling-launchconfiguration-blockdevicemapping-devicename"
            },
            "remarks": "For more information, see [Device naming on Linux instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\n> To define a block device mapping, set the device name and exactly one of the following properties: `Ebs` , `NoDevice` , or `VirtualName` .",
            "stability": "external",
            "summary": "The device name assigned to the volume (for example, `/dev/sdh` or `xvdh` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3491
          },
          "name": "deviceName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevicemapping.html#cfn-autoscaling-launchconfiguration-blockdevicemapping-ebs"
            },
            "stability": "external",
            "summary": "Information to attach an EBS volume to an instance at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3497
          },
          "name": "ebs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevicemapping.html#cfn-autoscaling-launchconfiguration-blockdevicemapping-nodevice"
            },
            "remarks": "If `NoDevice` is `true` for the root device, instances might fail the EC2 health check. In that case, Amazon EC2 Auto Scaling launches replacement instances.",
            "stability": "external",
            "summary": "Setting this value to `true` prevents a volume that is included in the block device mapping of the AMI from being mapped to the specified device name at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3505
          },
          "name": "noDevice",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevicemapping.html#cfn-autoscaling-launchconfiguration-blockdevicemapping-virtualname"
            },
            "remarks": "The name must be in the form ephemeral *X* where *X* is a number starting from zero (0), for example, `ephemeral0` .",
            "stability": "external",
            "summary": "The name of the instance store volume (virtual device) to attach to an instance at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3511
          },
          "name": "virtualName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLaunchConfiguration.BlockDeviceMappingProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevice.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`BlockDevice` is a property of the `EBS` property of the [AWS::AutoScaling::LaunchConfiguration BlockDeviceMapping](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html) property type that describes an Amazon EBS volume.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst blockDeviceProperty: autoscaling.CfnLaunchConfiguration.BlockDeviceProperty = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  throughput: 123,\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3332
      },
      "name": "BlockDeviceProperty",
      "namespace": "CfnLaunchConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevice.html#cfn-autoscaling-launchconfiguration-blockdevice-deleteontermination"
            },
            "remarks": "For Amazon EC2 Auto Scaling, the default value is `true` .",
            "stability": "external",
            "summary": "Indicates whether the volume is deleted on instance termination."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3338
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevice.html#cfn-autoscaling-launchconfiguration-blockdevice-encrypted"
            },
            "remarks": "Encrypted EBS volumes can only be attached to instances that support Amazon EBS encryption. For more information, see [Supported instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances) . If your AMI uses encrypted volumes, you can also only launch it on supported instance types.\n\n> If you are creating a volume from a snapshot, you cannot create an unencrypted volume from an encrypted snapshot. Also, you cannot specify a KMS key ID when using a launch configuration.\n>\n> If you enable encryption by default, the EBS volumes that you create are always encrypted, either using the AWS managed KMS key or a customer-managed KMS key, regardless of whether the snapshot was encrypted.\n>\n> For more information, see [Use AWS KMS keys to encrypt Amazon EBS volumes](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-data-protection.html#encryption) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "Specifies whether the volume should be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3350
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevice.html#cfn-autoscaling-launchconfiguration-blockdevice-iops"
            },
            "remarks": "For `gp3` and `io1` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.\n\nThe following are the supported values for each volume type:\n\n- `gp3` : 3,000-16,000 IOPS\n- `io1` : 100-64,000 IOPS\n\nFor `io1` volumes, we guarantee 64,000 IOPS only for [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) . Other instance families guarantee performance up to 32,000 IOPS.\n\n`Iops` is supported when the volume type is `gp3` or `io1` and required only when the volume type is `io1` . (Not used with `standard` , `gp2` , `st1` , or `sc1` volumes.)",
            "stability": "external",
            "summary": "The number of input/output (I/O) operations per second (IOPS) to provision for the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3365
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevice.html#cfn-autoscaling-launchconfiguration-blockdevice-snapshotid"
            },
            "remarks": "You must specify either a `VolumeSize` or a `SnapshotId` .",
            "stability": "external",
            "summary": "The snapshot ID of the volume to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3373
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevice.html#cfn-autoscaling-launchconfiguration-blockdevice-throughput"
            },
            "stability": "external",
            "summary": "The throughput (MiBps) to provision for a `gp3` volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3379
          },
          "name": "throughput",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevice.html#cfn-autoscaling-launchconfiguration-blockdevice-volumesize"
            },
            "remarks": "- `gp2` and `gp3` : 1-16,384\n- `io1` : 4-16,384\n- `st1` and `sc1` : 125-16,384\n- `standard` : 1-1,024\n\nYou must specify either a `SnapshotId` or a `VolumeSize` . If you specify both `SnapshotId` and `VolumeSize` , the volume size must be equal or greater than the size of the snapshot.",
            "stability": "external",
            "summary": "The volume size, in GiBs. The following are the supported volumes sizes for each volume type:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3392
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-blockdevice.html#cfn-autoscaling-launchconfiguration-blockdevice-volumetype"
            },
            "remarks": "For more information, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\nValid values: `standard` | `io1` | `gp2` | `st1` | `sc1` | `gp3`",
            "stability": "external",
            "summary": "The volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3400
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLaunchConfiguration.BlockDeviceProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-metadataoptions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Configure the instance metadata options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-config.html#launch-configurations-imds) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "`MetadataOptions` is a property of [AWS::AutoScaling::LaunchConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html) that describes metadata options for the instances.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metadataOptionsProperty: autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty = {\n  httpEndpoint: 'httpEndpoint',\n  httpPutResponseHopLimit: 123,\n  httpTokens: 'httpTokens',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3584
      },
      "name": "MetadataOptionsProperty",
      "namespace": "CfnLaunchConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-metadataoptions.html#cfn-autoscaling-launchconfiguration-metadataoptions-httpendpoint"
            },
            "remarks": "If the parameter is not specified, the default state is `enabled` .\n\n> If you specify a value of `disabled` , you will not be able to access your instance metadata.",
            "stability": "external",
            "summary": "This parameter enables or disables the HTTP metadata endpoint on your instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3592
          },
          "name": "httpEndpoint",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-metadataoptions.html#cfn-autoscaling-launchconfiguration-metadataoptions-httpputresponsehoplimit"
            },
            "remarks": "The larger the number, the further instance metadata requests can travel.\n\nDefault: 1",
            "stability": "external",
            "summary": "The desired HTTP PUT response hop limit for instance metadata requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3600
          },
          "name": "httpPutResponseHopLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfiguration-metadataoptions.html#cfn-autoscaling-launchconfiguration-metadataoptions-httptokens"
            },
            "remarks": "If the parameter is not specified in the request, the default state is `optional` .\n\nIf the state is `optional` , you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.\n\nIf the state is `required` , you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.",
            "stability": "external",
            "summary": "The state of token usage for your instance metadata requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3610
          },
          "name": "httpTokens",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLaunchConfiguration.MetadataOptionsProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnLaunchConfigurationProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnLaunchConfiguration`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnLaunchConfigurationProps: autoscaling.CfnLaunchConfigurationProps = {\n  imageId: 'imageId',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  associatePublicIpAddress: false,\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      snapshotId: 'snapshotId',\n      throughput: 123,\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: false,\n    virtualName: 'virtualName',\n  }],\n  classicLinkVpcId: 'classicLinkVpcId',\n  classicLinkVpcSecurityGroups: ['classicLinkVpcSecurityGroups'],\n  ebsOptimized: false,\n  iamInstanceProfile: 'iamInstanceProfile',\n  instanceId: 'instanceId',\n  instanceMonitoring: false,\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchConfigurationName: 'launchConfigurationName',\n  metadataOptions: {\n    httpEndpoint: 'httpEndpoint',\n    httpPutResponseHopLimit: 123,\n    httpTokens: 'httpTokens',\n  },\n  placementTenancy: 'placementTenancy',\n  ramDiskId: 'ramDiskId',\n  securityGroups: ['securityGroups'],\n  spotPrice: 'spotPrice',\n  userData: 'userData',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 2785
      },
      "name": "CfnLaunchConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-imageid"
            },
            "remarks": "For more information, see [Finding a Linux AMI](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\nIf you specify `InstanceId` , an `ImageId` is not required.",
            "stability": "external",
            "summary": "The ID of the Amazon Machine Image (AMI) that was assigned during registration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2794
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instancetype"
            },
            "remarks": "For information about available instance types, see [Available instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes) in the *Amazon EC2 User Guide for Linux Instances* .\n\nIf you specify `InstanceId` , an `InstanceType` is not required.",
            "stability": "external",
            "summary": "Specifies the instance type of the EC2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2803
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-associatepublicipaddress"
            },
            "remarks": "If the instance is launched into a default subnet, the default is to assign a public IPv4 address, unless you disabled the option to assign a public IPv4 address on the subnet. If the instance is launched into a nondefault subnet, the default is not to assign a public IPv4 address, unless you enabled the option to assign a public IPv4 address on the subnet.\n\nIf you specify `true` , each instance in the Auto Scaling group receives a unique public IPv4 address. For more information, see [Launching Auto Scaling instances in a VPC](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nIf you specify this property, you must specify at least one subnet for `VPCZoneIdentifier` when you create your group.",
            "stability": "external",
            "summary": "Specifies whether to assign a public IPv4 address to the group's instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2814
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-blockdevicemappings"
            },
            "remarks": "By default, the block devices specified in the block device mapping for the AMI are used. For more information, see [Block device mappings](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The block device mapping entries that define the block devices to attach to the instances at launch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2821
          },
          "name": "blockDeviceMappings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-classiclinkvpcid"
            },
            "stability": "external",
            "summary": "Available for backward compatibility."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2828
          },
          "name": "classicLinkVpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-classiclinkvpcsecuritygroups"
            },
            "stability": "external",
            "summary": "Available for backward compatibility."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2835
          },
          "name": "classicLinkVpcSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-ebsoptimized"
            },
            "remarks": "The optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization is not available with all instance types. Additional fees are incurred when you enable EBS optimization for an instance type that is not EBS-optimized by default. For more information, see [Amazon EBS-optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) in the *Amazon EC2 User Guide for Linux Instances* .\n\nThe default value is `false` .",
            "stability": "external",
            "summary": "Specifies whether the launch configuration is optimized for EBS I/O ( `true` ) or not ( `false` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2844
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-iaminstanceprofile"
            },
            "remarks": "The instance profile contains the IAM role. For more information, see [IAM role for applications that run on Amazon EC2 instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/us-iam-role.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "The name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2851
          },
          "name": "iamInstanceProfile",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instanceid"
            },
            "remarks": "When you use an instance to create a launch configuration, all properties are derived from the instance with the exception of `BlockDeviceMapping` and `AssociatePublicIpAddress` . You can override any properties from the instance by specifying them in the launch configuration.",
            "stability": "external",
            "summary": "The ID of the Amazon EC2 instance to use to create the launch configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2858
          },
          "name": "instanceId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instancemonitoring"
            },
            "remarks": "The default value is `true` (enabled).\n\n> When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account is charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes. For more information, see [Configure Monitoring for Auto Scaling Instances](https://docs.aws.amazon.com/autoscaling/latest/userguide/enable-as-instance-metrics.html) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "Controls whether instances in this group are launched with detailed ( `true` ) or basic ( `false` ) monitoring."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2869
          },
          "name": "instanceMonitoring",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-kernelid"
            },
            "remarks": "> We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [User provided kernels](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The ID of the kernel associated with the AMI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2878
          },
          "name": "kernelId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-keyname"
            },
            "remarks": "For more information, see [Amazon EC2 key pairs and Linux instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The name of the key pair."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2885
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-launchconfigurationname"
            },
            "remarks": "This name must be unique per Region per account.",
            "stability": "external",
            "summary": "The name of the launch configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2892
          },
          "name": "launchConfigurationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-metadataoptions"
            },
            "remarks": "For more information, see [Configuring the Instance Metadata Options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-config.html#launch-configurations-imds) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "The metadata options for the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2899
          },
          "name": "metadataOptions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-placementtenancy"
            },
            "remarks": "An instance with `dedicated` tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC. To launch dedicated instances into a shared tenancy VPC (a VPC with the instance placement tenancy attribute set to `default` ), you must set the value of this property to `dedicated` . For more information, see [Configuring instance tenancy with Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-dedicated-instances.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nIf you specify `PlacementTenancy` , you must specify at least one subnet for `VPCZoneIdentifier` when you create your group.\n\nValid values: `default` | `dedicated`",
            "stability": "external",
            "summary": "The tenancy of the instance, either `default` or `dedicated` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2910
          },
          "name": "placementTenancy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-ramdiskid"
            },
            "remarks": "> We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see [User provided kernels](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The ID of the RAM disk to select."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2919
          },
          "name": "ramDiskId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-securitygroups"
            },
            "remarks": "The list can contain both the IDs of existing security groups and references to [SecurityGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html) resources created in the template.\n\nFor more information, see [Control traffic to resources using security groups](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html) in the *Amazon Virtual Private Cloud User Guide* .",
            "stability": "external",
            "summary": "A list that contains the security groups to assign to the instances in the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2928
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-spotprice"
            },
            "remarks": "Spot Instances are launched when the price you specify exceeds the current Spot price. For more information, see [Request Spot Instances for fault-tolerant and flexible applications](https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-template-spot-instances.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nValid Range: Minimum value of 0.001\n\n> When you change your maximum price by creating a new launch configuration, running instances will continue to run as long as the maximum price for those running instances is higher than the current Spot price.",
            "stability": "external",
            "summary": "The maximum hourly price to be paid for any Spot Instance launched to fulfill the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2939
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-userdata"
            },
            "remarks": "For more information, see [Instance metadata and user data](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html) in the *Amazon EC2 User Guide for Linux Instances* .",
            "stability": "external",
            "summary": "The Base64-encoded user data to make available to the launched EC2 instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 2946
          },
          "name": "userData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLaunchConfigurationProps"
    },
    "@aws-cdk/aws-autoscaling.CfnLifecycleHook": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::LifecycleHook",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::AutoScaling::LifecycleHook` resource specifies lifecycle hooks for an Auto Scaling group. These hooks let you create solutions that are aware of events in the Auto Scaling instance lifecycle, and then perform a custom action on instances when the corresponding lifecycle event occurs. A lifecycle hook provides a specified amount of time (one hour by default) to wait for the action to complete before the instance transitions to the next state.\n\nUse lifecycle hooks to prepare new instances for use or to delay them from being registered behind a load balancer before their configuration has been applied completely. You can also use lifecycle hooks to prepare running instances to be terminated by, for example, downloading logs or other data.\n\nFor more information, see [Amazon EC2 Auto Scaling lifecycle hooks](https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::LifecycleHook`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnLifecycleHook = new autoscaling.CfnLifecycleHook(this, 'MyCfnLifecycleHook', {\n  autoScalingGroupName: 'autoScalingGroupName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLifecycleHook",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::LifecycleHook`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 3919
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnLifecycleHookProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3824
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3940
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3958
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnLifecycleHook",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3828
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3945
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "The name of the Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3854
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecycletransition"
            },
            "remarks": "- To create a lifecycle hook for scale-out events, specify `autoscaling:EC2_INSTANCE_LAUNCHING` .\n- To create a lifecycle hook for scale-in events, specify `autoscaling:EC2_INSTANCE_TERMINATING` .",
            "stability": "external",
            "summary": "The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3864
          },
          "name": "lifecycleTransition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-defaultresult"
            },
            "remarks": "The default value is `ABANDON` .\n\nValid values: `CONTINUE` | `ABANDON`",
            "stability": "external",
            "summary": "The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3873
          },
          "name": "defaultResult",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-heartbeattimeout"
            },
            "remarks": "The range is from `30` to `7200` seconds. The default value is `3600` seconds (1 hour).",
            "stability": "external",
            "summary": "The maximum time, in seconds, that can elapse before the lifecycle hook times out."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3880
          },
          "name": "heartbeatTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecyclehookname"
            },
            "stability": "external",
            "summary": "The name of the lifecycle hook."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3887
          },
          "name": "lifecycleHookName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-notificationmetadata"
            },
            "stability": "external",
            "summary": "Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3894
          },
          "name": "notificationMetadata",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-notificationtargetarn"
            },
            "remarks": "You can specify an Amazon SNS topic or an Amazon SQS queue.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an instance is in a wait state for the lifecycle hook."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3901
          },
          "name": "notificationTargetArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-rolearn"
            },
            "remarks": "For information about creating this role, see [Configure a notification target for a lifecycle hook](https://docs.aws.amazon.com/autoscaling/ec2/userguide/prepare-for-lifecycle-notifications.html#lifecycle-hook-notification-target) in the *Amazon EC2 Auto Scaling User Guide* .\n\nValid only if the notification target is an Amazon SNS topic or an Amazon SQS queue.",
            "stability": "external",
            "summary": "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3910
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLifecycleHook"
    },
    "@aws-cdk/aws-autoscaling.CfnLifecycleHookProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnLifecycleHook`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnLifecycleHookProps: autoscaling.CfnLifecycleHookProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnLifecycleHookProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3676
      },
      "name": "CfnLifecycleHookProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "The name of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3683
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecycletransition"
            },
            "remarks": "- To create a lifecycle hook for scale-out events, specify `autoscaling:EC2_INSTANCE_LAUNCHING` .\n- To create a lifecycle hook for scale-in events, specify `autoscaling:EC2_INSTANCE_TERMINATING` .",
            "stability": "external",
            "summary": "The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3693
          },
          "name": "lifecycleTransition",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-defaultresult"
            },
            "remarks": "The default value is `ABANDON` .\n\nValid values: `CONTINUE` | `ABANDON`",
            "stability": "external",
            "summary": "The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3702
          },
          "name": "defaultResult",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-heartbeattimeout"
            },
            "remarks": "The range is from `30` to `7200` seconds. The default value is `3600` seconds (1 hour).",
            "stability": "external",
            "summary": "The maximum time, in seconds, that can elapse before the lifecycle hook times out."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3709
          },
          "name": "heartbeatTimeout",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecyclehookname"
            },
            "stability": "external",
            "summary": "The name of the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3716
          },
          "name": "lifecycleHookName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-notificationmetadata"
            },
            "stability": "external",
            "summary": "Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3723
          },
          "name": "notificationMetadata",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-notificationtargetarn"
            },
            "remarks": "You can specify an Amazon SNS topic or an Amazon SQS queue.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an instance is in a wait state for the lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3730
          },
          "name": "notificationTargetArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-lifecyclehook.html#cfn-autoscaling-lifecyclehook-rolearn"
            },
            "remarks": "For information about creating this role, see [Configure a notification target for a lifecycle hook](https://docs.aws.amazon.com/autoscaling/ec2/userguide/prepare-for-lifecycle-notifications.html#lifecycle-hook-notification-target) in the *Amazon EC2 Auto Scaling User Guide* .\n\nValid only if the notification target is an Amazon SNS topic or an Amazon SQS queue.",
            "stability": "external",
            "summary": "The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3739
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnLifecycleHookProps"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::ScalingPolicy",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::AutoScaling::ScalingPolicy` resource specifies an Amazon EC2 Auto Scaling scaling policy so that the Auto Scaling group can scale the number of instances available for your application.\n\nFor more information about using scaling policies to scale your Auto Scaling group automatically, see [Dynamic scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html) and [Predictive scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::ScalingPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnScalingPolicy = new autoscaling.CfnScalingPolicy(this, 'MyCfnScalingPolicy', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  adjustmentType: 'adjustmentType',\n  cooldown: 'cooldown',\n  estimatedInstanceWarmup: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  policyType: 'policyType',\n  predictiveScalingConfiguration: {\n    metricSpecifications: [{\n      targetValue: 123,\n\n      // the properties below are optional\n      customizedCapacityMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedLoadMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedScalingMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      predefinedLoadMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedMetricPairSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedScalingMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n    }],\n\n    // the properties below are optional\n    maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n    maxCapacityBuffer: 123,\n    mode: 'mode',\n    schedulingBufferTime: 123,\n  },\n  scalingAdjustment: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n  targetTrackingConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::ScalingPolicy`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 4344
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4181
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4369
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4390
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnScalingPolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4185
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4210
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "PolicyName"
            },
            "stability": "external",
            "summary": "Returns the name of a scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4216
          },
          "name": "attrPolicyName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4374
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "The name of the Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4223
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-adjustmenttype"
            },
            "remarks": "The valid values are `ChangeInCapacity` , `ExactCapacity` , and `PercentChangeInCapacity` .\n\nRequired if the policy type is `StepScaling` or `SimpleScaling` . For more information, see [Scaling adjustment types](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "Specifies how the scaling adjustment is interpreted (for example, an absolute number or a percentage)."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4232
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-cooldown"
            },
            "remarks": "When a cooldown period is specified here, it overrides the default cooldown.\n\nValid only if the policy type is `SimpleScaling` . For more information, see [Scaling cooldowns for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nDefault: None",
            "stability": "external",
            "summary": "A cooldown period, in seconds, that applies to a specific simple scaling policy."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4243
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-estimatedinstancewarmup"
            },
            "remarks": "The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. This warm-up period applies to instances launched due to a specific target tracking or step scaling policy. When a warm-up period is specified here, it overrides the default instance warmup.\n\nValid only if the policy type is `TargetTrackingScaling` or `StepScaling` .\n\n> The default is to use the value for the default instance warmup defined for the group. If default instance warmup is null, then `EstimatedInstanceWarmup` falls back to the value of default cooldown.",
            "stability": "external",
            "summary": "*Not needed if the default instance warmup is defined for the group.*."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4256
          },
          "name": "estimatedInstanceWarmup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-metricaggregationtype"
            },
            "remarks": "The valid values are `Minimum` , `Maximum` , and `Average` . If the aggregation type is null, the value is treated as `Average` .\n\nValid only if the policy type is `StepScaling` .",
            "stability": "external",
            "summary": "The aggregation type for the CloudWatch metrics."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4265
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-minadjustmentmagnitude"
            },
            "remarks": "For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a `MinAdjustmentMagnitude` of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a `MinAdjustmentMagnitude` of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.\n\nValid only if the policy type is `StepScaling` or `SimpleScaling` . For more information, see [Scaling adjustment types](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment) in the *Amazon EC2 Auto Scaling User Guide* .\n\n> Some Auto Scaling groups use instance weights. In this case, set the `MinAdjustmentMagnitude` to a value that is at least as large as your largest instance weight.",
            "stability": "external",
            "summary": "The minimum value to scale by when the adjustment type is `PercentChangeInCapacity` ."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4276
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-policytype"
            },
            "remarks": "- `TargetTrackingScaling`\n- `StepScaling`\n- `SimpleScaling` (default)\n- `PredictiveScaling`",
            "stability": "external",
            "summary": "One of the following policy types:."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4288
          },
          "name": "policyType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration"
            },
            "remarks": "Predefined metrics include CPU utilization, network in/out, and the Application Load Balancer request count.\n\nRequired if the policy type is `PredictiveScaling` .",
            "stability": "external",
            "summary": "A predictive scaling policy. Provides support for predefined and custom metrics."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4299
          },
          "name": "predictiveScalingConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-scalingadjustment"
            },
            "remarks": "A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value.\n\nRequired if the policy type is `SimpleScaling` . (Not used with any other policy type.)",
            "stability": "external",
            "summary": "The amount by which to scale, based on the specified adjustment type."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4308
          },
          "name": "scalingAdjustment",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-stepadjustments"
            },
            "remarks": "Required if the policy type is `StepScaling` . (Not used with any other policy type.)",
            "stability": "external",
            "summary": "A set of adjustments that enable you to scale based on the size of the alarm breach."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4317
          },
          "name": "stepAdjustments",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.StepAdjustmentProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration"
            },
            "remarks": "The following predefined metrics are available:\n\n- `ASGAverageCPUUtilization`\n- `ASGAverageNetworkIn`\n- `ASGAverageNetworkOut`\n- `ALBRequestCountPerTarget`\n\nIf you specify `ALBRequestCountPerTarget` for the metric, you must specify the `ResourceLabel` property with the `PredefinedMetricSpecification` .\n\nRequired if the policy type is `TargetTrackingScaling` .",
            "stability": "external",
            "summary": "A target tracking scaling policy. Provides support for predefined or custom metrics."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4335
          },
          "name": "targetTrackingConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "To create your customized metric specification:\n\n- Add values for each required property from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see [Publish Custom Metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the *Amazon CloudWatch User Guide* .\n- Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases.\n\nFor more information about CloudWatch, see [Amazon CloudWatch Concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html) .\n\n`CustomizedMetricSpecification` is a property of the [AWS::AutoScaling::ScalingPolicy TargetTrackingConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html) property type.",
        "stability": "external",
        "summary": "Contains customized metric specification information for a target tracking scaling policy for Amazon EC2 Auto Scaling.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst customizedMetricSpecificationProperty: autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty = {\n  metricName: 'metricName',\n  namespace: 'namespace',\n  statistic: 'statistic',\n\n  // the properties below are optional\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n  unit: 'unit',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4413
      },
      "name": "CustomizedMetricSpecificationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-metricname"
            },
            "remarks": "To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html) .",
            "stability": "external",
            "summary": "The name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4427
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-namespace"
            },
            "stability": "external",
            "summary": "The namespace of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4433
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-statistic"
            },
            "stability": "external",
            "summary": "The statistic of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4439
          },
          "name": "statistic",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-dimensions"
            },
            "remarks": "Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.",
            "stability": "external",
            "summary": "The dimensions of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4421
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-unit"
            },
            "remarks": "For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference* .",
            "stability": "external",
            "summary": "The unit of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4445
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.CustomizedMetricSpecificationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDataQueryProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdataquery.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp.\n\n`MetricDataQuery` is a property of the following property types:\n\n- [AWS::AutoScaling::ScalingPolicy PredictiveScalingCustomizedScalingMetric](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingcustomizedscalingmetric.html)\n- [AWS::AutoScaling::ScalingPolicy PredictiveScalingCustomizedLoadMetric](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingcustomizedloadmetric.html)\n- [AWS::AutoScaling::ScalingPolicy PredictiveScalingCustomizedCapacityMetric](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingcustomizedcapacitymetric.html)\n\nPredictive scaling uses the time series data received from CloudWatch to understand how to schedule capacity based on your historical workload patterns.\n\nYou can call for a single metric or perform math expressions on multiple metrics. Any expressions used in a metric specification must eventually return a single time series.\n\nFor more information and examples, see [Advanced predictive scaling policy configurations using custom metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/predictive-scaling-customized-metric-specification.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "The metric data to return.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metricDataQueryProperty: autoscaling.CfnScalingPolicy.MetricDataQueryProperty = {\n  id: 'id',\n\n  // the properties below are optional\n  expression: 'expression',\n  label: 'label',\n  metricStat: {\n    metric: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n    stat: 'stat',\n\n    // the properties below are optional\n    unit: 'unit',\n  },\n  returnData: false,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDataQueryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4624
      },
      "name": "MetricDataQueryProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdataquery.html#cfn-autoscaling-scalingpolicy-metricdataquery-id"
            },
            "remarks": "This name must be unique among all `MetricDataQuery` objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter.",
            "stability": "external",
            "summary": "A short name that identifies the object's results in the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4638
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdataquery.html#cfn-autoscaling-scalingpolicy-metricdataquery-expression"
            },
            "remarks": "This expression can use the `Id` of the other metrics to refer to those metrics, and can also use the `Id` of other expressions to use the result of those expressions.\n\nConditional: Within each `MetricDataQuery` object, you must specify either `Expression` or `MetricStat` , but not both.",
            "stability": "external",
            "summary": "The math expression to perform on the returned data, if this object is performing a math expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4632
          },
          "name": "expression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdataquery.html#cfn-autoscaling-scalingpolicy-metricdataquery-label"
            },
            "remarks": "This is especially useful if this is a math expression, so that you know what the value represents.",
            "stability": "external",
            "summary": "A human-readable label for this metric or expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4644
          },
          "name": "label",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdataquery.html#cfn-autoscaling-scalingpolicy-metricdataquery-metricstat"
            },
            "remarks": "Conditional: Within each `MetricDataQuery` object, you must specify either `Expression` or `MetricStat` , but not both.",
            "stability": "external",
            "summary": "Information about the metric data to return."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4652
          },
          "name": "metricStat",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricStatProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdataquery.html#cfn-autoscaling-scalingpolicy-metricdataquery-returndata"
            },
            "remarks": "If you use any math expressions, specify `true` for this value for only the final math expression that the metric specification is based on. You must specify `false` for `ReturnData` for all the other metrics and expressions used in the metric specification.\n\nIf you are only retrieving metrics and not performing any math expressions, do not specify anything for `ReturnData` . This sets it to its default ( `true` ).",
            "stability": "external",
            "summary": "Indicates whether to return the timestamps and raw data values of this metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4662
          },
          "name": "returnData",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.MetricDataQueryProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDimensionProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`MetricDimension` specifies a name/value pair that is part of the identity of a CloudWatch metric for the `Dimensions` property of the [AWS::AutoScaling::ScalingPolicy CustomizedMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html) property type. Duplicate dimensions are not allowed.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metricDimensionProperty: autoscaling.CfnScalingPolicy.MetricDimensionProperty = {\n  name: 'name',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDimensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4736
      },
      "name": "MetricDimensionProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html#cfn-autoscaling-scalingpolicy-metricdimension-name"
            },
            "stability": "external",
            "summary": "The name of the dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4742
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html#cfn-autoscaling-scalingpolicy-metricdimension-value"
            },
            "stability": "external",
            "summary": "The value of the dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4748
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.MetricDimensionProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metric.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`Metric` is a property of the [AWS::AutoScaling::ScalingPolicy MetricStat](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricstat.html) property type.",
        "stability": "external",
        "summary": "Represents a specific metric.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metricProperty: autoscaling.CfnScalingPolicy.MetricProperty = {\n  metricName: 'metricName',\n  namespace: 'namespace',\n\n  // the properties below are optional\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4523
      },
      "name": "MetricProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metric.html#cfn-autoscaling-scalingpolicy-metric-metricname"
            },
            "stability": "external",
            "summary": "The name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4537
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metric.html#cfn-autoscaling-scalingpolicy-metric-namespace"
            },
            "remarks": "For more information, see the table in [AWS services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide* .",
            "stability": "external",
            "summary": "The namespace of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4543
          },
          "name": "namespace",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metric.html#cfn-autoscaling-scalingpolicy-metric-dimensions"
            },
            "remarks": "For the list of available dimensions, see the AWS documentation available from the table in [AWS services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the *Amazon CloudWatch User Guide* .\n\nConditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.",
            "stability": "external",
            "summary": "The dimensions for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4531
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDimensionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.MetricProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricStatProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricstat.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "This structure defines the CloudWatch metric to return, along with the statistic, period, and unit.\n\nFor more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html) in the *Amazon CloudWatch User Guide* .",
        "stability": "external",
        "summary": "`MetricStat` is a property of the [AWS::AutoScaling::ScalingPolicy MetricDataQuery](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdataquery.html) property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metricStatProperty: autoscaling.CfnScalingPolicy.MetricStatProperty = {\n  metric: {\n    metricName: 'metricName',\n    namespace: 'namespace',\n\n    // the properties below are optional\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n  stat: 'stat',\n\n  // the properties below are optional\n  unit: 'unit',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricStatProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4818
      },
      "name": "MetricStatProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricstat.html#cfn-autoscaling-scalingpolicy-metricstat-metric"
            },
            "remarks": "To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html) .",
            "stability": "external",
            "summary": "The CloudWatch metric to return, including the metric name, namespace, and dimensions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4824
          },
          "name": "metric",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricstat.html#cfn-autoscaling-scalingpolicy-metricstat-stat"
            },
            "remarks": "It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *Amazon CloudWatch User Guide* .\n\nThe most commonly used metrics for predictive scaling are `Average` and `Sum` .",
            "stability": "external",
            "summary": "The statistic to return."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4832
          },
          "name": "stat",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricstat.html#cfn-autoscaling-scalingpolicy-metricstat-unit"
            },
            "remarks": "For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference* .",
            "stability": "external",
            "summary": "The unit to use for the returned data points."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4838
          },
          "name": "unit",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.MetricStatProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`PredefinedMetricSpecification` is a property of the [AWS::AutoScaling::ScalingPolicy TargetTrackingConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html) property type.",
        "stability": "external",
        "summary": "Contains predefined metric specification information for a target tracking scaling policy for Amazon EC2 Auto Scaling.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predefinedMetricSpecificationProperty: autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 4909
      },
      "name": "PredefinedMetricSpecificationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-autoscaling-scalingpolicy-predefinedmetricspecification-predefinedmetrictype"
            },
            "remarks": "- `ASGAverageCPUUtilization` - Average CPU utilization of the Auto Scaling group.\n- `ASGAverageNetworkIn` - Average number of bytes received on all network interfaces by the Auto Scaling group.\n- `ASGAverageNetworkOut` - Average number of bytes sent out on all network interfaces by the Auto Scaling group.\n- `ALBRequestCountPerTarget` - Average Application Load Balancer request count per target for your Auto Scaling group.",
            "stability": "external",
            "summary": "The metric type. The following predefined metrics are available:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4920
          },
          "name": "predefinedMetricType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-autoscaling-scalingpolicy-predefinedmetricspecification-resourcelabel"
            },
            "remarks": "You can't specify a resource label unless the target group is attached to the Auto Scaling group.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:\n\n`app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff` .\n\nWhere:\n\n- app/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n- targetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nTo find the ARN for an Application Load Balancer, use the [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operation. To find the ARN for the target group, use the [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) API operation.",
            "stability": "external",
            "summary": "A label that uniquely identifies a specific Application Load Balancer target group from which to determine the average request count served by your Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4937
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredefinedMetricSpecificationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Predictive scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "`PredictiveScalingConfiguration` is a property of the [AWS::AutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html) resource that specifies a predictive scaling policy for Amazon EC2 Auto Scaling.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingConfigurationProperty: autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty = {\n  metricSpecifications: [{\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedCapacityMetricSpecification: {\n      metricDataQueries: [{\n        id: 'id',\n\n        // the properties below are optional\n        expression: 'expression',\n        label: 'label',\n        metricStat: {\n          metric: {\n            metricName: 'metricName',\n            namespace: 'namespace',\n\n            // the properties below are optional\n            dimensions: [{\n              name: 'name',\n              value: 'value',\n            }],\n          },\n          stat: 'stat',\n\n          // the properties below are optional\n          unit: 'unit',\n        },\n        returnData: false,\n      }],\n    },\n    customizedLoadMetricSpecification: {\n      metricDataQueries: [{\n        id: 'id',\n\n        // the properties below are optional\n        expression: 'expression',\n        label: 'label',\n        metricStat: {\n          metric: {\n            metricName: 'metricName',\n            namespace: 'namespace',\n\n            // the properties below are optional\n            dimensions: [{\n              name: 'name',\n              value: 'value',\n            }],\n          },\n          stat: 'stat',\n\n          // the properties below are optional\n          unit: 'unit',\n        },\n        returnData: false,\n      }],\n    },\n    customizedScalingMetricSpecification: {\n      metricDataQueries: [{\n        id: 'id',\n\n        // the properties below are optional\n        expression: 'expression',\n        label: 'label',\n        metricStat: {\n          metric: {\n            metricName: 'metricName',\n            namespace: 'namespace',\n\n            // the properties below are optional\n            dimensions: [{\n              name: 'name',\n              value: 'value',\n            }],\n          },\n          stat: 'stat',\n\n          // the properties below are optional\n          unit: 'unit',\n        },\n        returnData: false,\n      }],\n    },\n    predefinedLoadMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    predefinedMetricPairSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    predefinedScalingMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  }],\n\n  // the properties below are optional\n  maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n  maxCapacityBuffer: 123,\n  mode: 'mode',\n  schedulingBufferTime: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5004
      },
      "name": "PredictiveScalingConfigurationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration-metricspecifications"
            },
            "remarks": "This is an array, but we currently only support a single metric specification. That is, you can specify a target value and a single metric pair, or a target value and one scaling metric and one load metric.",
            "stability": "external",
            "summary": "This structure includes the metrics and target utilization to use for predictive scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5033
          },
          "name": "metricSpecifications",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration-maxcapacitybreachbehavior"
            },
            "remarks": "Defaults to `HonorMaxCapacity` if not specified.\n\nThe following are possible values:\n\n- `HonorMaxCapacity` - Amazon EC2 Auto Scaling cannot scale out capacity higher than the maximum capacity. The maximum capacity is enforced as a hard limit.\n- `IncreaseMaxCapacity` - Amazon EC2 Auto Scaling can scale out capacity higher than the maximum capacity when the forecast capacity is close to or exceeds the maximum capacity. The upper limit is determined by the forecasted capacity and the value for `MaxCapacityBuffer` .",
            "stability": "external",
            "summary": "Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5015
          },
          "name": "maxCapacityBreachBehavior",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration-maxcapacitybuffer"
            },
            "remarks": "The value is specified as a percentage relative to the forecast capacity. For example, if the buffer is 10, this means a 10 percent buffer, such that if the forecast capacity is 50, and the maximum capacity is 40, then the effective maximum capacity is 55.\n\nIf set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.\n\nRequired if the `MaxCapacityBreachBehavior` property is set to `IncreaseMaxCapacity` , and cannot be used otherwise.",
            "stability": "external",
            "summary": "The size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5025
          },
          "name": "maxCapacityBuffer",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration-mode"
            },
            "remarks": "Defaults to `ForecastOnly` if not specified.",
            "stability": "external",
            "summary": "The predictive scaling mode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5039
          },
          "name": "mode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration-schedulingbuffertime"
            },
            "remarks": "For example, the forecast says to add capacity at 10:00 AM, and you choose to pre-launch instances by 5 minutes. In that case, the instances will be launched at 9:55 AM. The intention is to give resources time to be provisioned. It can take a few minutes to launch an EC2 instance. The actual amount of time required depends on several factors, such as the size of the instance and whether there are startup scripts to complete.\n\nThe value must be less than the forecast interval duration of 3600 seconds (60 minutes). Defaults to 300 seconds if not specified.",
            "stability": "external",
            "summary": "The amount of time, in seconds, by which the instance launch time can be advanced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5047
          },
          "name": "schedulingBufferTime",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingConfigurationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingcustomizedcapacitymetric.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains capacity metric information for the `CustomizedCapacityMetricSpecification` property of the [AWS::AutoScaling::ScalingPolicy PredictiveScalingMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html) property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingCustomizedCapacityMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty = {\n  metricDataQueries: [{\n    id: 'id',\n\n    // the properties below are optional\n    expression: 'expression',\n    label: 'label',\n    metricStat: {\n      metric: {\n        metricName: 'metricName',\n        namespace: 'namespace',\n\n        // the properties below are optional\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n      stat: 'stat',\n\n      // the properties below are optional\n      unit: 'unit',\n    },\n    returnData: false,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5121
      },
      "name": "PredictiveScalingCustomizedCapacityMetricProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingcustomizedcapacitymetric.html#cfn-autoscaling-scalingpolicy-predictivescalingcustomizedcapacitymetric-metricdataqueries"
            },
            "remarks": "Use multiple metric data queries only if you are performing a math expression on returned data.",
            "stability": "external",
            "summary": "One or more metric data queries to provide the data points for a capacity metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5127
          },
          "name": "metricDataQueries",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDataQueryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingcustomizedloadmetric.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains load metric information for the `CustomizedLoadMetricSpecification` property of the [AWS::AutoScaling::ScalingPolicy PredictiveScalingMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html) property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingCustomizedLoadMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty = {\n  metricDataQueries: [{\n    id: 'id',\n\n    // the properties below are optional\n    expression: 'expression',\n    label: 'label',\n    metricStat: {\n      metric: {\n        metricName: 'metricName',\n        namespace: 'namespace',\n\n        // the properties below are optional\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n      stat: 'stat',\n\n      // the properties below are optional\n      unit: 'unit',\n    },\n    returnData: false,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5189
      },
      "name": "PredictiveScalingCustomizedLoadMetricProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingcustomizedloadmetric.html#cfn-autoscaling-scalingpolicy-predictivescalingcustomizedloadmetric-metricdataqueries"
            },
            "remarks": "Use multiple metric data queries only if you are performing a math expression on returned data.",
            "stability": "external",
            "summary": "One or more metric data queries to provide the data points for a load metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5195
          },
          "name": "metricDataQueries",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDataQueryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingcustomizedscalingmetric.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains scaling metric information for the `CustomizedScalingMetricSpecification` property of the [AWS::AutoScaling::ScalingPolicy PredictiveScalingMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html) property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingCustomizedScalingMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty = {\n  metricDataQueries: [{\n    id: 'id',\n\n    // the properties below are optional\n    expression: 'expression',\n    label: 'label',\n    metricStat: {\n      metric: {\n        metricName: 'metricName',\n        namespace: 'namespace',\n\n        // the properties below are optional\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n      stat: 'stat',\n\n      // the properties below are optional\n      unit: 'unit',\n    },\n    returnData: false,\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5257
      },
      "name": "PredictiveScalingCustomizedScalingMetricProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingcustomizedscalingmetric.html#cfn-autoscaling-scalingpolicy-predictivescalingcustomizedscalingmetric-metricdataqueries"
            },
            "remarks": "Use multiple metric data queries only if you are performing a math expression on returned data.",
            "stability": "external",
            "summary": "One or more metric data queries to provide the data points for a scaling metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5263
          },
          "name": "metricDataQueries",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDataQueryProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "You must specify either a metric pair, or a load metric and a scaling metric individually. Specifying a metric pair instead of individual metrics provides a simpler way to configure metrics for a scaling policy. You choose the metric pair, and the policy automatically knows the correct sum and average statistics to use for the load metric and the scaling metric.\n\nExample\n\n- You create a predictive scaling policy and specify `ALBRequestCount` as the value for the metric pair and `1000.0` as the target value. For this type of metric, you must provide the metric dimension for the corresponding target group, so you also provide a resource label for the Application Load Balancer target group that is attached to your Auto Scaling group.\n- The number of requests the target group receives per minute provides the load metric, and the request count averaged between the members of the target group provides the scaling metric. In CloudWatch, this refers to the `RequestCount` and `RequestCountPerTarget` metrics, respectively.\n- For optimal use of predictive scaling, you adhere to the best practice of using a dynamic scaling policy to automatically scale between the minimum capacity and maximum capacity in response to real-time changes in resource utilization.\n- Amazon EC2 Auto Scaling consumes data points for the load metric over the last 14 days and creates an hourly load forecast for predictive scaling. (A minimum of 24 hours of data is required.)\n- After creating the load forecast, Amazon EC2 Auto Scaling determines when to reduce or increase the capacity of your Auto Scaling group in each hour of the forecast period so that the average number of requests received by each instance is as close to 1000 requests per minute as possible at all times.\n\nFor information about using custom metrics with predictive scaling, see [Advanced predictive scaling policy configurations using custom metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/predictive-scaling-customized-metric-specification.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "A structure that specifies a metric specification for the `MetricSpecifications` property of the [AWS::AutoScaling::ScalingPolicy PredictiveScalingConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingconfiguration.html) property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingMetricSpecificationProperty: autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  customizedCapacityMetricSpecification: {\n    metricDataQueries: [{\n      id: 'id',\n\n      // the properties below are optional\n      expression: 'expression',\n      label: 'label',\n      metricStat: {\n        metric: {\n          metricName: 'metricName',\n          namespace: 'namespace',\n\n          // the properties below are optional\n          dimensions: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n        stat: 'stat',\n\n        // the properties below are optional\n        unit: 'unit',\n      },\n      returnData: false,\n    }],\n  },\n  customizedLoadMetricSpecification: {\n    metricDataQueries: [{\n      id: 'id',\n\n      // the properties below are optional\n      expression: 'expression',\n      label: 'label',\n      metricStat: {\n        metric: {\n          metricName: 'metricName',\n          namespace: 'namespace',\n\n          // the properties below are optional\n          dimensions: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n        stat: 'stat',\n\n        // the properties below are optional\n        unit: 'unit',\n      },\n      returnData: false,\n    }],\n  },\n  customizedScalingMetricSpecification: {\n    metricDataQueries: [{\n      id: 'id',\n\n      // the properties below are optional\n      expression: 'expression',\n      label: 'label',\n      metricStat: {\n        metric: {\n          metricName: 'metricName',\n          namespace: 'namespace',\n\n          // the properties below are optional\n          dimensions: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n        stat: 'stat',\n\n        // the properties below are optional\n        unit: 'unit',\n      },\n      returnData: false,\n    }],\n  },\n  predefinedLoadMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  predefinedMetricPairSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  predefinedScalingMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5337
      },
      "name": "PredictiveScalingMetricSpecificationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-targetvalue"
            },
            "remarks": "> Some metrics are based on a count instead of a percentage, such as the request count for an Application Load Balancer or the number of messages in an SQS queue. If the scaling policy specifies one of these metrics, specify the target utilization as the optimal average request or message count per instance during any one-minute interval.",
            "stability": "external",
            "summary": "Specifies the target utilization."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5381
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-customizedcapacitymetricspecification"
            },
            "stability": "external",
            "summary": "The customized capacity metric specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5343
          },
          "name": "customizedCapacityMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-customizedloadmetricspecification"
            },
            "stability": "external",
            "summary": "The customized load metric specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5349
          },
          "name": "customizedLoadMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-customizedscalingmetricspecification"
            },
            "stability": "external",
            "summary": "The customized scaling metric specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5355
          },
          "name": "customizedScalingMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-predefinedloadmetricspecification"
            },
            "stability": "external",
            "summary": "The predefined load metric specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5361
          },
          "name": "predefinedLoadMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-predefinedmetricpairspecification"
            },
            "stability": "external",
            "summary": "The predefined metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5367
          },
          "name": "predefinedMetricPairSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html#cfn-autoscaling-scalingpolicy-predictivescalingmetricspecification-predefinedscalingmetricspecification"
            },
            "stability": "external",
            "summary": "The predefined scaling metric specification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5373
          },
          "name": "predefinedScalingMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedloadmetric.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> Does not apply to policies that use a *metric pair* for the metric specification.",
        "stability": "external",
        "summary": "Contains load metric information for the `PredefinedLoadMetricSpecification` property of the [AWS::AutoScaling::ScalingPolicy PredictiveScalingMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html) property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingPredefinedLoadMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5463
      },
      "name": "PredictiveScalingPredefinedLoadMetricProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedloadmetric.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedloadmetric-predefinedmetrictype"
            },
            "stability": "external",
            "summary": "The metric type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5469
          },
          "name": "predefinedMetricType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedloadmetric.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedloadmetric-resourcelabel"
            },
            "remarks": "You can't specify a resource label unless the target group is attached to the Auto Scaling group.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:\n\n`app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff` .\n\nWhere:\n\n- app/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n- targetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nTo find the ARN for an Application Load Balancer, use the [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operation. To find the ARN for the target group, use the [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) API operation.",
            "stability": "external",
            "summary": "A label that uniquely identifies a specific Application Load Balancer target group from which to determine the request count served by your Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5486
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedmetricpair.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Predictive scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "Contains metric pair information for the `PredefinedMetricPairSpecification` property of the [AWS::AutoScaling::ScalingPolicy PredictiveScalingMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html) property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingPredefinedMetricPairProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5553
      },
      "name": "PredictiveScalingPredefinedMetricPairProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedmetricpair.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedmetricpair-predefinedmetrictype"
            },
            "remarks": "There are two different types of metrics for each metric type: one is a load metric and one is a scaling metric. For example, if the metric type is `ASGCPUUtilization` , the Auto Scaling group's total CPU metric is used as the load metric, and the average CPU metric is used for the scaling metric.",
            "stability": "external",
            "summary": "Indicates which metrics to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5559
          },
          "name": "predefinedMetricType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedmetricpair.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedmetricpair-resourcelabel"
            },
            "remarks": "You can't specify a resource label unless the target group is attached to the Auto Scaling group.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:\n\n`app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff` .\n\nWhere:\n\n- app/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n- targetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nTo find the ARN for an Application Load Balancer, use the [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operation. To find the ARN for the target group, use the [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) API operation.",
            "stability": "external",
            "summary": "A label that uniquely identifies a specific Application Load Balancer target group from which to determine the total and average request count served by your Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5576
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedscalingmetric.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> Does not apply to policies that use a *metric pair* for the metric specification.",
        "stability": "external",
        "summary": "Contains scaling metric information for the `PredefinedScalingMetricSpecification` property of the [AWS::AutoScaling::ScalingPolicy PredictiveScalingMetricSpecification](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingmetricspecification.html) property type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingPredefinedScalingMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5643
      },
      "name": "PredictiveScalingPredefinedScalingMetricProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedscalingmetric.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedscalingmetric-predefinedmetrictype"
            },
            "stability": "external",
            "summary": "The metric type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5649
          },
          "name": "predefinedMetricType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predictivescalingpredefinedscalingmetric.html#cfn-autoscaling-scalingpolicy-predictivescalingpredefinedscalingmetric-resourcelabel"
            },
            "remarks": "You can't specify a resource label unless the target group is attached to the Auto Scaling group.\n\nYou create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is:\n\n`app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff` .\n\nWhere:\n\n- app/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN\n- targetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN.\n\nTo find the ARN for an Application Load Balancer, use the [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operation. To find the ARN for the target group, use the [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) API operation.",
            "stability": "external",
            "summary": "A label that uniquely identifies a specific Application Load Balancer target group from which to determine the average request count served by your Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5666
          },
          "name": "resourceLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.StepAdjustmentProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For the following examples, suppose that you have an alarm with a breach threshold of 50:\n\n- To trigger a step adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.\n- To trigger a step adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.\n\nThere are a few rules for the step adjustments for your step policy:\n\n- The ranges of your step adjustments can't overlap or have a gap.\n- At most one step adjustment can have a null lower bound. If one step adjustment has a negative lower bound, then there must be a step adjustment with a null lower bound.\n- At most one step adjustment can have a null upper bound. If one step adjustment has a positive upper bound, then there must be a step adjustment with a null upper bound.\n- The upper and lower bound can't be null in the same step adjustment.\n\nFor more information, see [Step adjustments](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-steps) in the *Amazon EC2 Auto Scaling User Guide* .\n\nYou can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#aws-properties-as-policy--examples) section of the `AWS::AutoScaling::ScalingPolicy` resource.",
        "stability": "external",
        "summary": "`StepAdjustment` specifies a step adjustment for the `StepAdjustments` property of the [AWS::AutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html) resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst stepAdjustmentProperty: autoscaling.CfnScalingPolicy.StepAdjustmentProperty = {\n  scalingAdjustment: 123,\n\n  // the properties below are optional\n  metricIntervalLowerBound: 123,\n  metricIntervalUpperBound: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.StepAdjustmentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5747
      },
      "name": "StepAdjustmentProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustment.html#cfn-autoscaling-scalingpolicy-stepadjustment-scalingadjustment"
            },
            "remarks": "A positive value adds to the current capacity while a negative number removes from the current capacity.\n\nThe amount by which to scale. The adjustment is based on the value that you specified in the `AdjustmentType` property (either an absolute number or a percentage). A positive value adds to the current capacity and a negative number subtracts from the current capacity.",
            "stability": "external",
            "summary": "The amount by which to scale, based on the specified adjustment type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5769
          },
          "name": "scalingAdjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustment.html#cfn-autoscaling-scalingpolicy-stepadjustment-metricintervallowerbound"
            },
            "remarks": "If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it is exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.",
            "stability": "external",
            "summary": "The lower bound for the difference between the alarm threshold and the CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5753
          },
          "name": "metricIntervalLowerBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustment.html#cfn-autoscaling-scalingpolicy-stepadjustment-metricintervalupperbound"
            },
            "remarks": "If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it is inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity.\n\nThe upper bound must be greater than the lower bound.",
            "stability": "external",
            "summary": "The upper bound for the difference between the alarm threshold and the CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5761
          },
          "name": "metricIntervalUpperBound",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.StepAdjustmentProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about scaling policies, see [Dynamic scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "`TargetTrackingConfiguration` is a property of the [AWS::AutoScaling::ScalingPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html) resource that specifies a target tracking scaling policy configuration for Amazon EC2 Auto Scaling.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst targetTrackingConfigurationProperty: autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  customizedMetricSpecification: {\n    metricName: 'metricName',\n    namespace: 'namespace',\n    statistic: 'statistic',\n\n    // the properties below are optional\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n    unit: 'unit',\n  },\n  disableScaleIn: false,\n  predefinedMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5839
      },
      "name": "TargetTrackingConfigurationProperty",
      "namespace": "CfnScalingPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-targetvalue"
            },
            "remarks": "> Some metrics are based on a count instead of a percentage, such as the request count for an Application Load Balancer or the number of messages in an SQS queue. If the scaling policy specifies one of these metrics, specify the target utilization as the optimal average request or message count per instance during any one-minute interval.",
            "stability": "external",
            "summary": "The target value for the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5865
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-customizedmetricspecification"
            },
            "remarks": "You must specify either a predefined metric or a customized metric.",
            "stability": "external",
            "summary": "A customized metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5845
          },
          "name": "customizedMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-disablescalein"
            },
            "remarks": "If scaling in is disabled, the target tracking scaling policy doesn't remove instances from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove instances from the Auto Scaling group. The default is `false` .",
            "stability": "external",
            "summary": "Indicates whether scaling in by the target tracking scaling policy is disabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5851
          },
          "name": "disableScaleIn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-predefinedmetricspecification"
            },
            "remarks": "You must specify either a predefined metric or a customized metric.",
            "stability": "external",
            "summary": "A predefined metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5857
          },
          "name": "predefinedMetricSpecification",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicy.TargetTrackingConfigurationProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnScalingPolicy`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnScalingPolicyProps: autoscaling.CfnScalingPolicyProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  adjustmentType: 'adjustmentType',\n  cooldown: 'cooldown',\n  estimatedInstanceWarmup: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  policyType: 'policyType',\n  predictiveScalingConfiguration: {\n    metricSpecifications: [{\n      targetValue: 123,\n\n      // the properties below are optional\n      customizedCapacityMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedLoadMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedScalingMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      predefinedLoadMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedMetricPairSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedScalingMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n    }],\n\n    // the properties below are optional\n    maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n    maxCapacityBuffer: 123,\n    mode: 'mode',\n    schedulingBufferTime: 123,\n  },\n  scalingAdjustment: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n  targetTrackingConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 3971
      },
      "name": "CfnScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "The name of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3978
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-adjustmenttype"
            },
            "remarks": "The valid values are `ChangeInCapacity` , `ExactCapacity` , and `PercentChangeInCapacity` .\n\nRequired if the policy type is `StepScaling` or `SimpleScaling` . For more information, see [Scaling adjustment types](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment) in the *Amazon EC2 Auto Scaling User Guide* .",
            "stability": "external",
            "summary": "Specifies how the scaling adjustment is interpreted (for example, an absolute number or a percentage)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3987
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-cooldown"
            },
            "remarks": "When a cooldown period is specified here, it overrides the default cooldown.\n\nValid only if the policy type is `SimpleScaling` . For more information, see [Scaling cooldowns for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\nDefault: None",
            "stability": "external",
            "summary": "A cooldown period, in seconds, that applies to a specific simple scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 3998
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-estimatedinstancewarmup"
            },
            "remarks": "The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. This warm-up period applies to instances launched due to a specific target tracking or step scaling policy. When a warm-up period is specified here, it overrides the default instance warmup.\n\nValid only if the policy type is `TargetTrackingScaling` or `StepScaling` .\n\n> The default is to use the value for the default instance warmup defined for the group. If default instance warmup is null, then `EstimatedInstanceWarmup` falls back to the value of default cooldown.",
            "stability": "external",
            "summary": "*Not needed if the default instance warmup is defined for the group.*."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4011
          },
          "name": "estimatedInstanceWarmup",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-metricaggregationtype"
            },
            "remarks": "The valid values are `Minimum` , `Maximum` , and `Average` . If the aggregation type is null, the value is treated as `Average` .\n\nValid only if the policy type is `StepScaling` .",
            "stability": "external",
            "summary": "The aggregation type for the CloudWatch metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4020
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-minadjustmentmagnitude"
            },
            "remarks": "For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a `MinAdjustmentMagnitude` of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a `MinAdjustmentMagnitude` of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.\n\nValid only if the policy type is `StepScaling` or `SimpleScaling` . For more information, see [Scaling adjustment types](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-adjustment) in the *Amazon EC2 Auto Scaling User Guide* .\n\n> Some Auto Scaling groups use instance weights. In this case, set the `MinAdjustmentMagnitude` to a value that is at least as large as your largest instance weight.",
            "stability": "external",
            "summary": "The minimum value to scale by when the adjustment type is `PercentChangeInCapacity` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4031
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-policytype"
            },
            "remarks": "- `TargetTrackingScaling`\n- `StepScaling`\n- `SimpleScaling` (default)\n- `PredictiveScaling`",
            "stability": "external",
            "summary": "One of the following policy types:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4043
          },
          "name": "policyType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration"
            },
            "remarks": "Predefined metrics include CPU utilization, network in/out, and the Application Load Balancer request count.\n\nRequired if the policy type is `PredictiveScaling` .",
            "stability": "external",
            "summary": "A predictive scaling policy. Provides support for predefined and custom metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4054
          },
          "name": "predictiveScalingConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-scalingadjustment"
            },
            "remarks": "A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value.\n\nRequired if the policy type is `SimpleScaling` . (Not used with any other policy type.)",
            "stability": "external",
            "summary": "The amount by which to scale, based on the specified adjustment type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4063
          },
          "name": "scalingAdjustment",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-stepadjustments"
            },
            "remarks": "Required if the policy type is `StepScaling` . (Not used with any other policy type.)",
            "stability": "external",
            "summary": "A set of adjustments that enable you to scale based on the size of the alarm breach."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4072
          },
          "name": "stepAdjustments",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.StepAdjustmentProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration"
            },
            "remarks": "The following predefined metrics are available:\n\n- `ASGAverageCPUUtilization`\n- `ASGAverageNetworkIn`\n- `ASGAverageNetworkOut`\n- `ALBRequestCountPerTarget`\n\nIf you specify `ALBRequestCountPerTarget` for the metric, you must specify the `ResourceLabel` property with the `PredefinedMetricSpecification` .\n\nRequired if the policy type is `TargetTrackingScaling` .",
            "stability": "external",
            "summary": "A target tracking scaling policy. Provides support for predefined or custom metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 4090
          },
          "name": "targetTrackingConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScalingPolicyProps"
    },
    "@aws-cdk/aws-autoscaling.CfnScheduledAction": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::ScheduledAction",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::AutoScaling::ScheduledAction` resource specifies an Amazon EC2 Auto Scaling scheduled action so that the Auto Scaling group can change the number of instances available for your application in response to predictable load changes.\n\nWhen you update a stack with an Auto Scaling group and scheduled action, CloudFormation always sets the min size, max size, and desired capacity properties of your group to the values that are defined in the `AWS::AutoScaling::AutoScalingGroup` section of your template. However, you might not want CloudFormation to do that when you have a scheduled action in effect. You can use an [UpdatePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html) to prevent CloudFormation from changing the min size, max size, or desired capacity property values during a stack update unless you modified the individual values in your template. If you have rolling updates enabled, before you can update the Auto Scaling group, you must suspend scheduled actions by specifying an [UpdatePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html) for the Auto Scaling group. You can find a sample update policy for rolling updates in [Auto scaling template snippets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-autoscaling.html) .\n\nFor more information, see [Scheduled scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html) and [Suspending and resuming scaling processes](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::ScheduledAction`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnScheduledAction = new autoscaling.CfnScheduledAction(this, 'MyCfnScheduledAction', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: 'endTime',\n  maxSize: 123,\n  minSize: 123,\n  recurrence: 'recurrence',\n  startTime: 'startTime',\n  timeZone: 'timeZone',\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScheduledAction",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::ScheduledAction`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 6189
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnScheduledActionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 6085
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6210
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6228
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnScheduledAction",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6089
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ScheduledActionName"
            },
            "stability": "external",
            "summary": "Returns the name of a scheduled action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6114
          },
          "name": "attrScheduledActionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6215
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "The name of the Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6121
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-desiredcapacity"
            },
            "remarks": "It can scale beyond this capacity if you add more scaling conditions.\n\n> You must specify at least one of the following properties: `MaxSize` , `MinSize` , or `DesiredCapacity` .",
            "stability": "external",
            "summary": "The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6130
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-endtime"
            },
            "remarks": "For example, `\"2021-06-01T00:00:00Z\"` .",
            "stability": "external",
            "summary": "The date and time for the recurring schedule to end, in UTC."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6137
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-maxsize"
            },
            "stability": "external",
            "summary": "The maximum size of the Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6144
          },
          "name": "maxSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-minsize"
            },
            "stability": "external",
            "summary": "The minimum size of the Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6151
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-recurrence"
            },
            "remarks": "This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, `\"30 0 1 1,6,12 *\"` ). For more information about this format, see [Crontab](https://docs.aws.amazon.com/http://crontab.org) .\n\nWhen `StartTime` and `EndTime` are specified with `Recurrence` , they form the boundaries of when the recurring action starts and stops.\n\nCron expressions use Universal Coordinated Time (UTC) by default.",
            "stability": "external",
            "summary": "The recurring schedule for this action."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6162
          },
          "name": "recurrence",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-starttime"
            },
            "remarks": "If you specify `Recurrence` and `StartTime` , Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.",
            "stability": "external",
            "summary": "The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, `\"2021-06-01T00:00:00Z\"` )."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6171
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-timezone"
            },
            "remarks": "If a time zone is not provided, UTC is used by default.\n\nValid values are the canonical names of the IANA time zones, derived from the IANA Time Zone Database (such as `Etc/GMT+9` or `Pacific/Tahiti` ). For more information, see [https://en.wikipedia.org/wiki/List_of_tz_database_time_zones](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) .",
            "stability": "external",
            "summary": "Specifies the time zone for a cron expression."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6180
          },
          "name": "timeZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScheduledAction"
    },
    "@aws-cdk/aws-autoscaling.CfnScheduledActionProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnScheduledAction`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnScheduledActionProps: autoscaling.CfnScheduledActionProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: 'endTime',\n  maxSize: 123,\n  minSize: 123,\n  recurrence: 'recurrence',\n  startTime: 'startTime',\n  timeZone: 'timeZone',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnScheduledActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 5935
      },
      "name": "CfnScheduledActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "The name of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5942
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-desiredcapacity"
            },
            "remarks": "It can scale beyond this capacity if you add more scaling conditions.\n\n> You must specify at least one of the following properties: `MaxSize` , `MinSize` , or `DesiredCapacity` .",
            "stability": "external",
            "summary": "The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5951
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-endtime"
            },
            "remarks": "For example, `\"2021-06-01T00:00:00Z\"` .",
            "stability": "external",
            "summary": "The date and time for the recurring schedule to end, in UTC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5958
          },
          "name": "endTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-maxsize"
            },
            "stability": "external",
            "summary": "The maximum size of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5965
          },
          "name": "maxSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-minsize"
            },
            "stability": "external",
            "summary": "The minimum size of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5972
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-recurrence"
            },
            "remarks": "This format consists of five fields separated by white spaces: [Minute] [Hour] [Day_of_Month] [Month_of_Year] [Day_of_Week]. The value must be in quotes (for example, `\"30 0 1 1,6,12 *\"` ). For more information about this format, see [Crontab](https://docs.aws.amazon.com/http://crontab.org) .\n\nWhen `StartTime` and `EndTime` are specified with `Recurrence` , they form the boundaries of when the recurring action starts and stops.\n\nCron expressions use Universal Coordinated Time (UTC) by default.",
            "stability": "external",
            "summary": "The recurring schedule for this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5983
          },
          "name": "recurrence",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-starttime"
            },
            "remarks": "If you specify `Recurrence` and `StartTime` , Amazon EC2 Auto Scaling performs the action at this time, and then performs the action based on the specified recurrence.",
            "stability": "external",
            "summary": "The date and time for this action to start, in YYYY-MM-DDThh:mm:ssZ format in UTC/GMT only and in quotes (for example, `\"2021-06-01T00:00:00Z\"` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 5992
          },
          "name": "startTime",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scheduledaction.html#cfn-autoscaling-scheduledaction-timezone"
            },
            "remarks": "If a time zone is not provided, UTC is used by default.\n\nValid values are the canonical names of the IANA time zones, derived from the IANA Time Zone Database (such as `Etc/GMT+9` or `Pacific/Tahiti` ). For more information, see [https://en.wikipedia.org/wiki/List_of_tz_database_time_zones](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) .",
            "stability": "external",
            "summary": "Specifies the time zone for a cron expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6001
          },
          "name": "timeZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnScheduledActionProps"
    },
    "@aws-cdk/aws-autoscaling.CfnWarmPool": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::AutoScaling::WarmPool",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::AutoScaling::WarmPool` resource creates a pool of pre-initialized EC2 instances that sits alongside the Auto Scaling group. Whenever your application needs to scale out, the Auto Scaling group can draw on the warm pool to meet its new desired capacity.\n\nWhen you create a warm pool, you can define a minimum size. When your Auto Scaling group scales out and the size of the warm pool shrinks, Amazon EC2 Auto Scaling launches new instances into the warm pool to maintain its minimum size.\n\nFor more information, see [Warm pools for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html) in the *Amazon EC2 Auto Scaling User Guide* .\n\n> CloudFormation supports the `UpdatePolicy` attribute for Auto Scaling groups. During an update, if `UpdatePolicy` is set to `AutoScalingRollingUpdate` , CloudFormation replaces `InService` instances only. Instances in the warm pool are not replaced. The difference in which instances are replaced can potentially result in different instance configurations after the stack update completes. If `UpdatePolicy` is set to `AutoScalingReplacingUpdate` , you do not encounter this issue because CloudFormation replaces both the Auto Scaling group and the warm pool.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::AutoScaling::WarmPool`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnWarmPool = new autoscaling.CfnWarmPool(this, 'MyCfnWarmPool', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  instanceReusePolicy: {\n    reuseOnScaleIn: false,\n  },\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: 'poolState',\n});"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPool",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::AutoScaling::WarmPool`."
        },
        "locationInModule": {
          "filename": "lib/autoscaling.generated.ts",
          "line": 6432
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPoolProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 6359
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6449
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6464
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnWarmPool",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6363
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6454
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "The name of the Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6389
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-instancereusepolicy"
            },
            "remarks": "The default is to terminate instances in the Auto Scaling group when the group scales in.",
            "stability": "external",
            "summary": "Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6396
          },
          "name": "instanceReusePolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPool.InstanceReusePolicyProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-maxgrouppreparedcapacity"
            },
            "remarks": "This is an optional property. Specify it only if you do not want the warm pool size to be determined by the difference between the group's maximum capacity and its desired capacity.\n\n> If a value for `MaxGroupPreparedCapacity` is not specified, Amazon EC2 Auto Scaling launches and maintains the difference between the group's maximum capacity and its desired capacity. If you specify a value for `MaxGroupPreparedCapacity` , Amazon EC2 Auto Scaling uses the difference between the `MaxGroupPreparedCapacity` and the desired capacity instead.\n>\n> The size of the warm pool is dynamic. Only when `MaxGroupPreparedCapacity` and `MinSize` are set to the same value does the warm pool have an absolute size.\n\nIf the desired capacity of the Auto Scaling group is higher than the `MaxGroupPreparedCapacity` , the capacity of the warm pool is 0, unless you specify a value for `MinSize` . To remove a value that you previously set, include the property but specify -1 for the value.",
            "stability": "external",
            "summary": "Specifies the maximum number of instances that are allowed to be in the warm pool or in any state except `Terminated` for the Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6409
          },
          "name": "maxGroupPreparedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-minsize"
            },
            "remarks": "This helps you to ensure that there is always a certain number of warmed instances available to handle traffic spikes. Defaults to 0 if not specified.",
            "stability": "external",
            "summary": "Specifies the minimum number of instances to maintain in the warm pool."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6416
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-poolstate"
            },
            "remarks": "Default is `Stopped` .",
            "stability": "external",
            "summary": "Sets the instance state to transition to after the lifecycle actions are complete."
          },
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6423
          },
          "name": "poolState",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnWarmPool"
    },
    "@aws-cdk/aws-autoscaling.CfnWarmPool.InstanceReusePolicyProperty": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-warmpool-instancereusepolicy.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Warm pools for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html) in the *Amazon EC2 Auto Scaling User Guide* .",
        "stability": "external",
        "summary": "A structure that specifies an instance reuse policy for the `InstanceReusePolicy` property of the [AWS::AutoScaling::WarmPool](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html) resource.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst instanceReusePolicyProperty: autoscaling.CfnWarmPool.InstanceReusePolicyProperty = {\n  reuseOnScaleIn: false,\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPool.InstanceReusePolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 6480
      },
      "name": "InstanceReusePolicyProperty",
      "namespace": "CfnWarmPool",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-warmpool-instancereusepolicy.html#cfn-autoscaling-warmpool-instancereusepolicy-reuseonscalein"
            },
            "stability": "external",
            "summary": "Specifies whether instances in the Auto Scaling group can be returned to the warm pool on scale in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6486
          },
          "name": "reuseOnScaleIn",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnWarmPool.InstanceReusePolicyProperty"
    },
    "@aws-cdk/aws-autoscaling.CfnWarmPoolProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnWarmPool`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnWarmPoolProps: autoscaling.CfnWarmPoolProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  instanceReusePolicy: {\n    reuseOnScaleIn: false,\n  },\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: 'poolState',\n};"
      },
      "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPoolProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/autoscaling.generated.ts",
        "line": 6241
      },
      "name": "CfnWarmPoolProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-autoscalinggroupname"
            },
            "stability": "external",
            "summary": "The name of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6248
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-instancereusepolicy"
            },
            "remarks": "The default is to terminate instances in the Auto Scaling group when the group scales in.",
            "stability": "external",
            "summary": "Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6255
          },
          "name": "instanceReusePolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPool.InstanceReusePolicyProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-maxgrouppreparedcapacity"
            },
            "remarks": "This is an optional property. Specify it only if you do not want the warm pool size to be determined by the difference between the group's maximum capacity and its desired capacity.\n\n> If a value for `MaxGroupPreparedCapacity` is not specified, Amazon EC2 Auto Scaling launches and maintains the difference between the group's maximum capacity and its desired capacity. If you specify a value for `MaxGroupPreparedCapacity` , Amazon EC2 Auto Scaling uses the difference between the `MaxGroupPreparedCapacity` and the desired capacity instead.\n>\n> The size of the warm pool is dynamic. Only when `MaxGroupPreparedCapacity` and `MinSize` are set to the same value does the warm pool have an absolute size.\n\nIf the desired capacity of the Auto Scaling group is higher than the `MaxGroupPreparedCapacity` , the capacity of the warm pool is 0, unless you specify a value for `MinSize` . To remove a value that you previously set, include the property but specify -1 for the value.",
            "stability": "external",
            "summary": "Specifies the maximum number of instances that are allowed to be in the warm pool or in any state except `Terminated` for the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6268
          },
          "name": "maxGroupPreparedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-minsize"
            },
            "remarks": "This helps you to ensure that there is always a certain number of warmed instances available to handle traffic spikes. Defaults to 0 if not specified.",
            "stability": "external",
            "summary": "Specifies the minimum number of instances to maintain in the warm pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6275
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-warmpool.html#cfn-autoscaling-warmpool-poolstate"
            },
            "remarks": "Default is `Stopped` .",
            "stability": "external",
            "summary": "Sets the instance state to transition to after the lifecycle actions are complete."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/autoscaling.generated.ts",
            "line": 6282
          },
          "name": "poolState",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/autoscaling.generated:CfnWarmPoolProps"
    },
    "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "Constructs that want to create AutoScalingGroups can inherit\nthis interface and specialize the essential parts in various ways.",
        "stability": "stable",
        "summary": "Basic properties of an AutoScalingGroup, except the exact machines to run and where they should run.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const blockDeviceVolume: autoscaling.BlockDeviceVolume;\ndeclare const groupMetrics: autoscaling.GroupMetrics;\ndeclare const healthCheck: autoscaling.HealthCheck;\ndeclare const scalingEvents: autoscaling.ScalingEvents;\ndeclare const signals: autoscaling.Signals;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const topic: sns.Topic;\ndeclare const updatePolicy: autoscaling.UpdatePolicy;\nconst commonAutoScalingGroupProps: autoscaling.CommonAutoScalingGroupProps = {\n  allowAllOutbound: false,\n  associatePublicIpAddress: false,\n  autoScalingGroupName: 'autoScalingGroupName',\n  blockDevices: [{\n    deviceName: 'deviceName',\n    volume: blockDeviceVolume,\n\n    // the properties below are optional\n    mappingEnabled: false,\n  }],\n  cooldown: cdk.Duration.minutes(30),\n  desiredCapacity: 123,\n  groupMetrics: [groupMetrics],\n  healthCheck: healthCheck,\n  ignoreUnmodifiedSizeProperties: false,\n  instanceMonitoring: autoscaling.Monitoring.BASIC,\n  keyName: 'keyName',\n  maxCapacity: 123,\n  maxInstanceLifetime: cdk.Duration.minutes(30),\n  minCapacity: 123,\n  newInstancesProtectedFromScaleIn: false,\n  notifications: [{\n    topic: topic,\n\n    // the properties below are optional\n    scalingEvents: scalingEvents,\n  }],\n  notificationsTopic: topic,\n  replacingUpdateMinSuccessfulInstancesPercent: 123,\n  resourceSignalCount: 123,\n  resourceSignalTimeout: cdk.Duration.minutes(30),\n  rollingUpdateConfiguration: {\n    maxBatchSize: 123,\n    minInstancesInService: 123,\n    minSuccessfulInstancesPercent: 123,\n    pauseTime: cdk.Duration.minutes(30),\n    suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n    waitOnResourceSignals: false,\n  },\n  signals: signals,\n  spotPrice: 'spotPrice',\n  terminationPolicies: [autoscaling.TerminationPolicy.ALLOCATION_STRATEGY],\n  updatePolicy: updatePolicy,\n  updateType: autoscaling.UpdateType.NONE,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 54
      },
      "name": "CommonAutoScalingGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether the instances can initiate connections to anywhere by default."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 114
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Use subnet setting.",
            "stability": "stable",
            "summary": "Whether instances in the Auto Scaling Group should have public IP addresses associated with them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 195
          },
          "name": "associatePublicIpAddress",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Auto generated by CloudFormation",
            "remarks": "This name must be unique per Region per account.",
            "stability": "stable",
            "summary": "The name of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 318
          },
          "name": "autoScalingGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Uses the block device mapping of the AMI",
            "remarks": "Each instance that is launched has an associated root device volume,\neither an Amazon EBS volume or an instance store volume.\nYou can use block device mappings to specify additional EBS volumes or\ninstance store volumes to attach to an instance when it is launched.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html",
            "stability": "stable",
            "summary": "Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 224
          },
          "name": "blockDevices",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.BlockDevice"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "stability": "stable",
            "summary": "Default scaling cooldown for this AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 187
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "minCapacity, and leave unchanged during deployment",
            "remarks": "If this is set to a number, every deployment will reset the amount of\ninstances to this number. It is recommended to leave this value blank.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity",
            "stability": "stable",
            "summary": "Initial amount of instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 78
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no group metrics will be reported",
            "remarks": "To report all group metrics use `GroupMetrics.all()`\nGroup metrics are reported in a granularity of 1 minute at no additional charge.",
            "stability": "stable",
            "summary": "Enable monitoring for group metrics, these metrics describe the group rather than any of its instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 259
          },
          "name": "groupMetrics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.GroupMetrics"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- HealthCheck.ec2 with no grace period",
            "stability": "stable",
            "summary": "Configuration for health checks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 210
          },
          "name": "healthCheck",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.HealthCheck"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "Only used if the ASG has scheduled actions (which may scale your ASG up\nor down regardless of cdk deployments). If true, the size of the group\nwill only be reset if it has been changed in the CDK app. If false, the\nsizes will always be changed back to what they were in the CDK app\non deployment.",
            "stability": "stable",
            "summary": "If the ASG has scheduled actions, don't reset unchanged group sizes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 162
          },
          "name": "ignoreUnmodifiedSizeProperties",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Monitoring.DETAILED",
            "remarks": "When detailed monitoring is enabled, Amazon CloudWatch generates metrics every minute and your account\nis charged a fee. When you disable detailed monitoring, CloudWatch generates metrics every 5 minutes.",
            "see": "https://docs.aws.amazon.com/autoscaling/latest/userguide/as-instance-monitoring.html#enable-as-instance-metrics",
            "stability": "stable",
            "summary": "Controls whether instances in this group are launched with detailed or basic monitoring."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 250
          },
          "name": "instanceMonitoring",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.Monitoring"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No SSH access will be possible.",
            "stability": "stable",
            "summary": "Name of SSH keypair to grant access to instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 85
          },
          "name": "keyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "desiredCapacity",
            "stability": "stable",
            "summary": "Maximum number of instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 67
          },
          "name": "maxCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "remarks": "The maximum duration applies\nto all current and future instances in the group. As an instance approaches its maximum duration,\nit is terminated and replaced, and cannot be used again.\n\nYou must specify a value of at least 604,800 seconds (7 days). To clear a previously set value,\nleave this property undefined.",
            "see": "https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html",
            "stability": "stable",
            "summary": "The maximum amount of time that an instance can be in service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 238
          },
          "name": "maxInstanceLifetime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "Minimum number of instances in the fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 60
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "By default, Auto Scaling can terminate an instance at any time after launch\nwhen scaling in an Auto Scaling Group, subject to the group's termination\npolicy. However, you may wish to protect newly-launched instances from\nbeing scaled in if they are going to run critical applications that should\nnot be prematurely terminated.\n\nThis flag must be enabled if the Auto Scaling Group will be associated with\nan ECS Capacity Provider with managed termination protection.",
            "stability": "stable",
            "summary": "Whether newly-launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 312
          },
          "name": "newInstancesProtectedFromScaleIn",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No fleet change notifications will be sent.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations",
            "stability": "stable",
            "summary": "Configure autoscaling group to send notifications about fleet changes to an SNS topic(s)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 107
          },
          "name": "notifications",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.NotificationConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No fleet change notifications will be sent.",
            "deprecated": "use `notifications`",
            "stability": "deprecated",
            "summary": "SNS topic to send notifications about fleet changes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 100
          },
          "name": "notificationsTopic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "minSuccessfulInstancesPercent",
            "deprecated": "Use `signals` instead",
            "remarks": "Only used if updateType == UpdateType.ReplacingUpdate. Specifies how\nmany instances must signal success for the update to succeed.",
            "stability": "deprecated",
            "summary": "Configuration for replacing updates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 149
          },
          "name": "replacingUpdateMinSuccessfulInstancesPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1 if resourceSignalTimeout is set, 0 otherwise",
            "deprecated": "Use `signals` instead.",
            "stability": "deprecated",
            "summary": "How many ResourceSignal calls CloudFormation expects before the resource is considered created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 170
          },
          "name": "resourceSignalCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5) if resourceSignalCount is set, N/A otherwise",
            "deprecated": "Use `signals` instead.",
            "remarks": "The maximum value is 43200 (12 hours).",
            "stability": "deprecated",
            "summary": "The length of time to wait for the resourceSignalCount."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 180
          },
          "name": "resourceSignalTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- RollingUpdateConfiguration with defaults.",
            "deprecated": "Use `updatePolicy` instead",
            "remarks": "Only used if updateType == UpdateType.RollingUpdate.",
            "stability": "deprecated",
            "summary": "Configuration for rolling updates."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 138
          },
          "name": "rollingUpdateConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.RollingUpdateConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not wait for signals",
            "remarks": "Use this to pause the CloudFormation deployment to wait for the instances\nin the AutoScalingGroup to report successful startup during\ncreation and updates. The UserData script needs to invoke `cfn-signal`\nwith a success or failure code after it is done setting up the instance.\n\nWithout waiting for signals, the CloudFormation deployment will proceed as\nsoon as the AutoScalingGroup has been created or updated but before the\ninstances in the group have been started.\n\nFor example, to have instances wait for an Elastic Load Balancing health check before\nthey signal success, add a health-check verification by using the\ncfn-init helper script. For an example, see the verify_instance_health\ncommand in the Auto Scaling rolling updates sample template:\n\nhttps://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml",
            "stability": "stable",
            "summary": "Configure waiting for signals during deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 282
          },
          "name": "signals",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.Signals"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "remarks": "Spot Instances are\nlaunched when the price you specify exceeds the current Spot market price.",
            "stability": "stable",
            "summary": "The maximum hourly price (in USD) to be paid for any Spot Instance launched to fulfill the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 203
          },
          "name": "spotPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- `TerminationPolicy.DEFAULT`",
            "remarks": "The policies are executed in the order that you list them.",
            "see": "https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html",
            "stability": "stable",
            "summary": "A policy or a list of policies that are used to select the instances to terminate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 328
          },
          "name": "terminationPolicies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.TerminationPolicy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- `UpdatePolicy.rollingUpdate()` if using `init`, `UpdatePolicy.none()` otherwise",
            "remarks": "This is applied when any of the settings on the ASG are changed that\naffect how the instances should be created (VPC, instance type, startup\nscripts, etc.). It indicates how the existing instances should be\nreplaced with new instances matching the new config. By default, nothing\nis done and only new instances are launched with the new config.",
            "stability": "stable",
            "summary": "What to do when an AutoScalingGroup's instance configuration is changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 295
          },
          "name": "updatePolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.UpdatePolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "UpdateType.None",
            "deprecated": "Use `updatePolicy` instead",
            "remarks": "This is applied when any of the settings on the ASG are changed that\naffect how the instances should be created (VPC, instance type, startup\nscripts, etc.). It indicates how the existing instances should be\nreplaced with new instances matching the new config. By default, nothing\nis done and only new instances are launched with the new config.",
            "stability": "deprecated",
            "summary": "What to do when an AutoScalingGroup's instance configuration is changed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 128
          },
          "name": "updateType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.UpdateType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All Private subnets.",
            "stability": "stable",
            "summary": "Where to place instances within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 92
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:CommonAutoScalingGroupProps"
    },
    "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for enabling scaling based on CPU utilization.",
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnCpuUtilization('KeepSpareCPU', {\n  targetUtilizationPercent: 50\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 2087
      },
      "name": "CpuUtilizationScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Target average CPU utilization across the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2091
          },
          "name": "targetUtilizationPercent",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:CpuUtilizationScalingProps"
    },
    "@aws-cdk/aws-autoscaling.CronOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "All fields are strings so you can use complex expressions. Absence of\na field implies '*' or '?', whichever one is appropriate.",
        "see": "http://crontab.org/",
        "stability": "stable",
        "summary": "Options to configure a cron expression.",
        "example": "import * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\nconst alias = fn.addAlias('prod');\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.CronOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/schedule.ts",
        "line": 65
      },
      "name": "CronOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Every day of the month",
            "stability": "stable",
            "summary": "The day of the month to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 85
          },
          "name": "day",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every hour",
            "stability": "stable",
            "summary": "The hour to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 78
          },
          "name": "hour",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every minute",
            "stability": "stable",
            "summary": "The minute to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 71
          },
          "name": "minute",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Every month",
            "stability": "stable",
            "summary": "The month to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 92
          },
          "name": "month",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Any day of the week",
            "stability": "stable",
            "summary": "The day of the week to run this rule at."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 99
          },
          "name": "weekDay",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/schedule:CronOptions"
    },
    "@aws-cdk/aws-autoscaling.DefaultResult": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-autoscaling.DefaultResult",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 153
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "CONTINUE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ABANDON"
        }
      ],
      "name": "DefaultResult",
      "symbolId": "lib/lifecycle-hook:DefaultResult"
    },
    "@aws-cdk/aws-autoscaling.EbsDeviceOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Block device options for an EBS volume.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst ebsDeviceOptions: autoscaling.EbsDeviceOptions = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceOptions",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.EbsDeviceOptionsBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 74
      },
      "name": "EbsDeviceOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Encrypted EBS volumes can only be attached to instances that support Amazon EBS encryption",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances",
            "stability": "stable",
            "summary": "Specifies whether the EBS volume is encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 83
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceOptions"
    },
    "@aws-cdk/aws-autoscaling.EbsDeviceOptionsBase": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Base block device options for an EBS volume.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst ebsDeviceOptionsBase: autoscaling.EbsDeviceOptionsBase = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceOptionsBase",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 40
      },
      "name": "EbsDeviceOptionsBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- true for Amazon EC2 Auto Scaling, false otherwise (e.g. EBS)",
            "stability": "stable",
            "summary": "Indicates whether to delete the volume when the instance is terminated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 46
          },
          "name": "deleteOnTermination",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- none, required for {@link EbsDeviceVolumeType.IO1}",
            "remarks": "Must only be set for {@link volumeType}: {@link EbsDeviceVolumeType.IO1}\n\nThe maximum ratio of IOPS to volume size (in GiB) is 50:1, so for 5,000 provisioned IOPS,\nyou need at least 100 GiB storage on the volume.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html",
            "stability": "stable",
            "summary": "The number of I/O operations per second (IOPS) to provision for the volume."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 60
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{@link EbsDeviceVolumeType.GP2}",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html",
            "stability": "stable",
            "summary": "The EBS volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 68
          },
          "name": "volumeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceOptionsBase"
    },
    "@aws-cdk/aws-autoscaling.EbsDeviceProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of an EBS block device.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst ebsDeviceProps: autoscaling.EbsDeviceProps = {\n  deleteOnTermination: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  volumeSize: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.EbsDeviceSnapshotOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 103
      },
      "name": "EbsDeviceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No snapshot will be used",
            "stability": "stable",
            "summary": "The snapshot ID of the volume to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 109
          },
          "name": "snapshotId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceProps"
    },
    "@aws-cdk/aws-autoscaling.EbsDeviceSnapshotOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Block device options for an EBS volume created from a snapshot.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst ebsDeviceSnapshotOptions: autoscaling.EbsDeviceSnapshotOptions = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeSize: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceSnapshotOptions",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.EbsDeviceOptionsBase"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 89
      },
      "name": "EbsDeviceSnapshotOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The snapshot size",
            "remarks": "If you specify volumeSize, it must be equal or greater than the size of the snapshot.",
            "stability": "stable",
            "summary": "The volume size, in Gibibytes (GiB)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/volume.ts",
            "line": 97
          },
          "name": "volumeSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/volume:EbsDeviceSnapshotOptions"
    },
    "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Supported EBS volume types for blockDevices."
      },
      "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/volume.ts",
        "line": 173
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Magnetic."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Provisioned IOPS SSD - IO1."
          },
          "name": "IO1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "General Purpose SSD - GP2."
          },
          "name": "GP2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "General Purpose SSD - GP3."
          },
          "name": "GP3"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Throughput Optimized HDD."
          },
          "name": "ST1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cold HDD."
          },
          "name": "SC1"
        }
      ],
      "name": "EbsDeviceVolumeType",
      "symbolId": "lib/volume:EbsDeviceVolumeType"
    },
    "@aws-cdk/aws-autoscaling.Ec2HealthCheckOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "EC2 Heath check options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst ec2HealthCheckOptions: autoscaling.Ec2HealthCheckOptions = {\n  grace: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.Ec2HealthCheckOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1940
      },
      "name": "Ec2HealthCheckOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(0)",
            "stability": "stable",
            "summary": "Specified the time Auto Scaling waits before checking the health status of an EC2 instance that has come into service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1946
          },
          "name": "grace",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:Ec2HealthCheckOptions"
    },
    "@aws-cdk/aws-autoscaling.ElbHealthCheckOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "ELB Heath check options.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst elbHealthCheckOptions: autoscaling.ElbHealthCheckOptions = {\n  grace: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ElbHealthCheckOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1952
      },
      "name": "ElbHealthCheckOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This option is required for ELB health checks.",
            "stability": "stable",
            "summary": "Specified the time Auto Scaling waits before checking the health status of an EC2 instance that has come into service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1958
          },
          "name": "grace",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:ElbHealthCheckOptions"
    },
    "@aws-cdk/aws-autoscaling.GroupMetric": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Group metrics that an Auto Scaling group sends to Amazon CloudWatch.",
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.GroupMetric",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/auto-scaling-group.ts",
          "line": 942
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 890
      },
      "name": "GroupMetric",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of instances that the Auto Scaling group attempts to maintain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 905
          },
          "name": "DESIRED_CAPACITY",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of instances that are running as part of the Auto Scaling group This metric does not include instances that are pending or terminating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 911
          },
          "name": "IN_SERVICE_INSTANCES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The maximum size of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 900
          },
          "name": "MAX_SIZE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The minimum size of the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 895
          },
          "name": "MIN_SIZE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of instances that are pending A pending instance is not yet in service, this metric does not include instances that are in service or terminating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 917
          },
          "name": "PENDING_INSTANCES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of instances that are in a Standby state Instances in this state are still running but are not actively in service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 923
          },
          "name": "STANDBY_INSTANCES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The number of instances that are in the process of terminating This metric does not include instances that are in service or pending."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 929
          },
          "name": "TERMINATING_INSTANCES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The total number of instances in the Auto Scaling group This metric identifies the number of instances that are in service, pending, and terminating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 935
          },
          "name": "TOTAL_INSTANCES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the group metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 940
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:GroupMetric"
    },
    "@aws-cdk/aws-autoscaling.GroupMetrics": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "A set of group metrics.",
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.GroupMetrics",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/auto-scaling-group.ts",
          "line": 882
        },
        "parameters": [
          {
            "name": "metrics",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 868
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Report all group metrics."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 873
          },
          "name": "all",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.GroupMetrics"
            }
          },
          "static": true
        }
      ],
      "name": "GroupMetrics",
      "symbolId": "lib/auto-scaling-group:GroupMetrics"
    },
    "@aws-cdk/aws-autoscaling.HealthCheck": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Health check settings.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst healthCheck = autoscaling.HealthCheck.ec2(/* all optional props */ {\n  grace: cdk.Duration.minutes(30),\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.HealthCheck",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1964
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Use EC2 for health checks."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1970
          },
          "name": "ec2",
          "parameters": [
            {
              "docs": {
                "summary": "EC2 health check options."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.Ec2HealthCheckOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.HealthCheck"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "It considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.",
            "stability": "stable",
            "summary": "Use ELB for health checks."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1980
          },
          "name": "elb",
          "parameters": [
            {
              "docs": {
                "summary": "ELB health check options."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.ElbHealthCheckOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.HealthCheck"
            }
          },
          "static": true
        }
      ],
      "name": "HealthCheck",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1984
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1984
          },
          "name": "gracePeriod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:HealthCheck"
    },
    "@aws-cdk/aws-autoscaling.IAutoScalingGroup": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "An AutoScalingGroup."
      },
      "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 2017
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Send a message to either an SQS queue or SNS topic when instances launch or terminate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2046
          },
          "name": "addLifecycleHook",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.LifecycleHook"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The command must be in the scripting language supported by the fleet's OS (i.e. Linux/Windows).\nDoes nothing for imported ASGs.",
            "stability": "stable",
            "summary": "Add command to the startup script of fleet instances."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2041
          },
          "name": "addUserData",
          "parameters": [
            {
              "name": "commands",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add a pool of pre-initialized EC2 instances that sits alongside an Auto Scaling group."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2051
          },
          "name": "addWarmPool",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.WarmPoolOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.WarmPool"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target CPU utilization."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2061
          },
          "name": "scaleOnCpuUtilization",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target network ingress rate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2066
          },
          "name": "scaleOnIncomingBytes",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in, in response to a metric."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2081
          },
          "name": "scaleOnMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicy"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in to achieve a target network egress rate."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2071
          },
          "name": "scaleOnOutgoingBytes",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in based on time."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2056
          },
          "name": "scaleOnSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BasicScheduledActionProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.ScheduledAction"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Scale out or in in order to keep a metric around a target value."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2076
          },
          "name": "scaleToTrackMetric",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.MetricTargetTrackingProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
            }
          }
        }
      ],
      "name": "IAutoScalingGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The arn of the AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2028
          },
          "name": "autoScalingGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the AutoScalingGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2022
          },
          "name": "autoScalingGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Is 'UNKNOWN' for imported ASGs.",
            "stability": "stable",
            "summary": "The operating system family that the instances in this auto-scaling group belong to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2034
          },
          "name": "osType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.OperatingSystemType"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:IAutoScalingGroup"
    },
    "@aws-cdk/aws-autoscaling.ILifecycleHook": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "A basic lifecycle hook object."
      },
      "fqn": "@aws-cdk/aws-autoscaling.ILifecycleHook",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 75
      },
      "name": "ILifecycleHook",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- A default role is created if 'notificationTarget' is specified.\nOtherwise, no role is created.",
            "stability": "stable",
            "summary": "The role for the lifecycle hook to execute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 82
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook:ILifecycleHook"
    },
    "@aws-cdk/aws-autoscaling.ILifecycleHookTarget": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Interface for autoscaling lifecycle hook targets."
      },
      "fqn": "@aws-cdk/aws-autoscaling.ILifecycleHookTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook-target.ts",
        "line": 44
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when this object is used as the target of a lifecycle hook."
          },
          "locationInModule": {
            "filename": "lib/lifecycle-hook-target.ts",
            "line": 49
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "[disable-awslint:ref-via-interface] The lifecycle hook to attach to and a role to use."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.BindHookTargetOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.LifecycleHookTargetConfig"
            }
          }
        }
      ],
      "name": "ILifecycleHookTarget",
      "symbolId": "lib/lifecycle-hook-target:ILifecycleHookTarget"
    },
    "@aws-cdk/aws-autoscaling.InstancesDistribution": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "The instances distribution specifies the distribution of On-Demand Instances\nand Spot Instances, the maximum price to pay for Spot Instances, and how the Auto Scaling group allocates\ninstance types to fulfill On-Demand and Spot capacities.\n\nFor more information and example configurations, see Auto Scaling groups with multiple instance types\nand purchase options in the Amazon EC2 Auto Scaling User Guide:\n\nhttps://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html",
        "stability": "stable",
        "summary": "InstancesDistribution is a subproperty of MixedInstancesPolicy that describes an instances distribution for an Auto Scaling group.",
        "example": "declare const vpc: ec2.Vpc;\ndeclare const launchTemplate1: ec2.LaunchTemplate;\ndeclare const launchTemplate2: ec2.LaunchTemplate;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  mixedInstancesPolicy: {\n    instancesDistribution: {\n      onDemandPercentageAboveBaseCapacity: 50, // Mix Spot and On-Demand instances\n    },\n    launchTemplate: launchTemplate1,\n    launchTemplateOverrides: [ // Mix multiple instance types\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: launchTemplate2 },\n    ],\n  }\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.InstancesDistribution",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 414
      },
      "name": "InstancesDistribution",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "OnDemandAllocationStrategy.PRIORITIZED",
            "remarks": "The only valid value is prioritized,\nwhich is also the default value.",
            "stability": "stable",
            "summary": "Indicates how to allocate instance types to fulfill On-Demand capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 421
          },
          "name": "onDemandAllocationStrategy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.OnDemandAllocationStrategy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "remarks": "This\nbase portion is provisioned first as your group scales. Defaults to 0 if not specified. If you specify weights\nfor the instance types in the overrides, set the value of OnDemandBaseCapacity in terms of the number of\ncapacity units, and not the number of instances.",
            "stability": "stable",
            "summary": "The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 431
          },
          "name": "onDemandBaseCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "100",
            "remarks": "Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances).\nDefaults to 100 if not specified. If set to 100, only On-Demand Instances are provisioned.",
            "stability": "stable",
            "summary": "Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond OnDemandBaseCapacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 440
          },
          "name": "onDemandPercentageAboveBaseCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SpotAllocationStrategy.LOWEST_PRICE",
            "remarks": "Defaults to\nlowest-price if not specified.\n\nIf the allocation strategy is capacity-optimized (recommended), the Auto Scaling group launches instances using Spot\npools that are optimally chosen based on the available Spot capacity. Alternatively, you can use capacity-optimized-prioritized\nand set the order of instance types in the list of launch template overrides from highest to lowest priority\n(from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best-effort basis but\noptimizes for capacity first.",
            "stability": "stable",
            "summary": "If the allocation strategy is lowest-price, the Auto Scaling group launches instances using the Spot pools with the lowest price, and evenly allocates your instances across the number of Spot pools that you specify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 455
          },
          "name": "spotAllocationStrategy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.SpotAllocationStrategy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "2",
            "remarks": "The Spot pools are determined from the different instance\ntypes in the overrides. Valid only when the Spot allocation strategy is lowest-price. Value must be in the range of 1 to 20.\nDefaults to 2 if not specified.",
            "stability": "stable",
            "summary": "The number of Spot Instance pools to use to allocate your Spot capacity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 464
          },
          "name": "spotInstancePools",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"\" - On-Demand price",
            "remarks": "If you leave the value at its default (empty),\nAmazon EC2 Auto Scaling uses the On-Demand price as the maximum Spot price. To remove a value that you previously set, include\nthe property but specify an empty string (\"\") for the value.",
            "stability": "stable",
            "summary": "The maximum price per unit hour that you are willing to pay for a Spot Instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 473
          },
          "name": "spotMaxPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:InstancesDistribution"
    },
    "@aws-cdk/aws-autoscaling.LaunchTemplateOverrides": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "LaunchTemplateOverrides is a subproperty of LaunchTemplate that describes an override for a launch template.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const instanceType: ec2.InstanceType;\ndeclare const launchTemplate: ec2.LaunchTemplate;\nconst launchTemplateOverrides: autoscaling.LaunchTemplateOverrides = {\n  instanceType: instanceType,\n\n  // the properties below are optional\n  launchTemplate: launchTemplate,\n  weightedCapacity: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.LaunchTemplateOverrides",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 479
      },
      "name": "LaunchTemplateOverrides",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Do not override instance type",
            "stability": "stable",
            "summary": "The instance type, such as m3.xlarge. You must use an instance type that is supported in your requested Region and Availability Zones."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 486
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not override launch template",
            "remarks": "For example, some instance types might\nrequire a launch template with a different AMI. If not provided, Amazon EC2 Auto Scaling uses the launch template\nthat's defined for your mixed instances policy.",
            "stability": "stable",
            "summary": "Provides the launch template to be used when launching the instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 495
          },
          "name": "launchTemplate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ILaunchTemplate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not provide weight",
            "remarks": "When a Spot or On-Demand Instance is provisioned, the\ncapacity units count toward the desired capacity. Amazon EC2 Auto Scaling provisions instances until the desired\ncapacity is totally fulfilled, even if this results in an overage. Value must be in the range of 1 to 999.\n\nFor example, If there are 2 units remaining to fulfill capacity, and Amazon EC2 Auto Scaling can only provision\nan instance with a WeightedCapacity of 5 units, the instance is provisioned, and the desired capacity is exceeded\nby 3 units.",
            "see": "https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-weighting.html",
            "stability": "stable",
            "summary": "The number of capacity units provided by the specified instance type in terms of virtual CPUs, memory, storage, throughput, or other relative performance characteristic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 511
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:LaunchTemplateOverrides"
    },
    "@aws-cdk/aws-autoscaling.LifecycleHook": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a life cycle hook.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\nconst lifecycleHook = new autoscaling.LifecycleHook(this, 'MyLifecycleHook', {\n  autoScalingGroup: autoScalingGroup,\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.LifecycleHook",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/lifecycle-hook.ts",
          "line": 111
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.LifecycleHookProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-autoscaling.ILifecycleHook"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 88
      },
      "name": "LifecycleHook",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of this lifecycle hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 109
          },
          "name": "lifecycleHookName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "default": "- A default role is created if 'notificationTarget' is specified.\nOtherwise, no role is created.",
            "stability": "stable",
            "summary": "The role that allows the ASG to publish to the notification target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 97
          },
          "name": "role",
          "overrides": "@aws-cdk/aws-autoscaling.ILifecycleHook",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook:LifecycleHook"
    },
    "@aws-cdk/aws-autoscaling.LifecycleHookProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a Lifecycle hook.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\nconst lifecycleHookProps: autoscaling.LifecycleHookProps = {\n  autoScalingGroup: autoScalingGroup,\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.LifecycleHookProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 65
      },
      "name": "LifecycleHookProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AutoScalingGroup to add the lifecycle hook to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook.ts",
            "line": 69
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook:LifecycleHookProps"
    },
    "@aws-cdk/aws-autoscaling.LifecycleHookTargetConfig": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Result of binding a lifecycle hook to a target.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\nconst lifecycleHookTargetConfig: autoscaling.LifecycleHookTargetConfig = {\n  createdRole: role,\n  notificationTargetArn: 'notificationTargetArn',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.LifecycleHookTargetConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle-hook-target.ts",
        "line": 30
      },
      "name": "LifecycleHookTargetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The IRole that was used to bind the lifecycle hook to the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook-target.ts",
            "line": 34
          },
          "name": "createdRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The targetArn that the lifecycle hook was bound to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle-hook-target.ts",
            "line": 38
          },
          "name": "notificationTargetArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lifecycle-hook-target:LifecycleHookTargetConfig"
    },
    "@aws-cdk/aws-autoscaling.LifecycleTransition": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "What instance transition to attach the hook to."
      },
      "fqn": "@aws-cdk/aws-autoscaling.LifecycleTransition",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/lifecycle-hook.ts",
        "line": 161
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Execute the hook when an instance is about to be added."
          },
          "name": "INSTANCE_LAUNCHING"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Execute the hook when an instance is about to be terminated."
          },
          "name": "INSTANCE_TERMINATING"
        }
      ],
      "name": "LifecycleTransition",
      "symbolId": "lib/lifecycle-hook:LifecycleTransition"
    },
    "@aws-cdk/aws-autoscaling.MetricAggregationType": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "How the scaling metric is going to be aggregated."
      },
      "fqn": "@aws-cdk/aws-autoscaling.MetricAggregationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 135
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Average."
          },
          "name": "AVERAGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Minimum."
          },
          "name": "MINIMUM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Maximum."
          },
          "name": "MAXIMUM"
        }
      ],
      "name": "MetricAggregationType",
      "symbolId": "lib/step-scaling-action:MetricAggregationType"
    },
    "@aws-cdk/aws-autoscaling.MetricTargetTrackingProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for enabling tracking of an arbitrary metric.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\nconst metricTargetTrackingProps: autoscaling.MetricTargetTrackingProps = {\n  metric: metric,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.MetricTargetTrackingProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 2126
      },
      "name": "MetricTargetTrackingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The metric must represent a utilization, so that if it's higher than the\ntarget value, your ASG should scale out, and if it's lower it should\nscale in.",
            "stability": "stable",
            "summary": "Metric to track."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2134
          },
          "name": "metric",
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.IMetric"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Value to keep the metric around."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2139
          },
          "name": "targetValue",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:MetricTargetTrackingProps"
    },
    "@aws-cdk/aws-autoscaling.MixedInstancesPolicy": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "For more information, see Auto Scaling groups with\nmultiple instance types and purchase options in the Amazon EC2 Auto Scaling User Guide:\n\nhttps://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html",
        "stability": "stable",
        "summary": "MixedInstancesPolicy allows you to configure a group that diversifies across On-Demand Instances and Spot Instances of multiple instance types.",
        "example": "declare const vpc: ec2.Vpc;\ndeclare const launchTemplate1: ec2.LaunchTemplate;\ndeclare const launchTemplate2: ec2.LaunchTemplate;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  mixedInstancesPolicy: {\n    instancesDistribution: {\n      onDemandPercentageAboveBaseCapacity: 50, // Mix Spot and On-Demand instances\n    },\n    launchTemplate: launchTemplate1,\n    launchTemplateOverrides: [ // Mix multiple instance types\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: launchTemplate2 },\n    ],\n  }\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.MixedInstancesPolicy",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 338
      },
      "name": "MixedInstancesPolicy",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Launch template to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 349
          },
          "name": "launchTemplate",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ILaunchTemplate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The value for each property in it uses a default value.",
            "stability": "stable",
            "summary": "InstancesDistribution to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 344
          },
          "name": "instancesDistribution",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.InstancesDistribution"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Do not provide any overrides",
            "remarks": "The maximum number of instance types that can be associated with an Auto Scaling group is 40.\n\nThe maximum number of distinct launch templates you can define for an Auto Scaling group is 20.",
            "stability": "stable",
            "summary": "Launch template overrides."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 360
          },
          "name": "launchTemplateOverrides",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.LaunchTemplateOverrides"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:MixedInstancesPolicy"
    },
    "@aws-cdk/aws-autoscaling.Monitoring": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "The monitoring mode for instances launched in an autoscaling group."
      },
      "fqn": "@aws-cdk/aws-autoscaling.Monitoring",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 36
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates metrics every 5 minutes."
          },
          "name": "BASIC"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Generates metrics every minute."
          },
          "name": "DETAILED"
        }
      ],
      "name": "Monitoring",
      "symbolId": "lib/auto-scaling-group:Monitoring"
    },
    "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for enabling scaling based on network utilization.",
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnIncomingBytes('LimitIngressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\nautoScalingGroup.scaleOnOutgoingBytes('LimitEgressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 2097
      },
      "name": "NetworkUtilizationScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Target average bytes/seconds on each instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2101
          },
          "name": "targetBytesPerSecond",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:NetworkUtilizationScalingProps"
    },
    "@aws-cdk/aws-autoscaling.NotificationConfiguration": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "You can configure AutoScaling to send an SNS notification whenever your Auto Scaling group scales.",
        "stability": "stable",
        "summary": "AutoScalingGroup fleet change notifications configurations.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as sns from '@aws-cdk/aws-sns';\n\ndeclare const scalingEvents: autoscaling.ScalingEvents;\ndeclare const topic: sns.Topic;\nconst notificationConfiguration: autoscaling.NotificationConfiguration = {\n  topic: topic,\n\n  // the properties below are optional\n  scalingEvents: scalingEvents,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.NotificationConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1763
      },
      "name": "NotificationConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "SNS topic to send notifications about fleet scaling events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1767
          },
          "name": "topic",
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ScalingEvents.ALL",
            "stability": "stable",
            "summary": "Which fleet scaling events triggers a notification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1773
          },
          "name": "scalingEvents",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:NotificationConfiguration"
    },
    "@aws-cdk/aws-autoscaling.OnDemandAllocationStrategy": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Indicates how to allocate instance types to fulfill On-Demand capacity."
      },
      "fqn": "@aws-cdk/aws-autoscaling.OnDemandAllocationStrategy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 366
      },
      "members": [
        {
          "docs": {
            "remarks": "The first instance type in the array is prioritized higher than the\nlast. If all your On-Demand capacity cannot be fulfilled using your highest priority instance, then\nthe Auto Scaling group launches the remaining capacity using the second priority instance type, and\nso on.",
            "stability": "stable",
            "summary": "This strategy uses the order of instance types in the LaunchTemplateOverrides to define the launch priority of each instance type."
          },
          "name": "PRIORITIZED"
        }
      ],
      "name": "OnDemandAllocationStrategy",
      "symbolId": "lib/auto-scaling-group:OnDemandAllocationStrategy"
    },
    "@aws-cdk/aws-autoscaling.PoolState": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "The instance state in the warm pool."
      },
      "fqn": "@aws-cdk/aws-autoscaling.PoolState",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/warm-pool.ts",
        "line": 86
      },
      "members": [
        {
          "docs": {
            "remarks": "To use this state, prerequisites must be in place.",
            "see": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-prerequisites.html",
            "stability": "stable",
            "summary": "Hibernated."
          },
          "name": "HIBERNATED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Running."
          },
          "name": "RUNNING"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Stopped."
          },
          "name": "STOPPED"
        }
      ],
      "name": "PoolState",
      "symbolId": "lib/warm-pool:PoolState"
    },
    "@aws-cdk/aws-autoscaling.PredefinedMetric": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "One of the predefined autoscaling metrics."
      },
      "fqn": "@aws-cdk/aws-autoscaling.PredefinedMetric",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 167
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Average CPU utilization of the Auto Scaling group."
          },
          "name": "ASG_AVERAGE_CPU_UTILIZATION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Average number of bytes received on all network interfaces by the Auto Scaling group."
          },
          "name": "ASG_AVERAGE_NETWORK_IN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Average number of bytes sent out on all network interfaces by the Auto Scaling group."
          },
          "name": "ASG_AVERAGE_NETWORK_OUT"
        },
        {
          "docs": {
            "remarks": "Specify the ALB to look at in the `resourceLabel` field.",
            "stability": "stable",
            "summary": "Number of requests completed per target in an Application Load Balancer target group."
          },
          "name": "ALB_REQUEST_COUNT_PER_TARGET"
        }
      ],
      "name": "PredefinedMetric",
      "symbolId": "lib/target-tracking-scaling-policy:PredefinedMetric"
    },
    "@aws-cdk/aws-autoscaling.RenderSignalsOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Input for Signals.renderCreationPolicy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst renderSignalsOptions: autoscaling.RenderSignalsOptions = {\n  desiredCapacity: 123,\n  minCapacity: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.RenderSignalsOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 711
      },
      "name": "RenderSignalsOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- desired capacity not configured",
            "stability": "stable",
            "summary": "The desiredCapacity of the ASG."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 717
          },
          "name": "desiredCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- minCapacity not configured",
            "stability": "stable",
            "summary": "The minSize of the ASG."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 724
          },
          "name": "minCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:RenderSignalsOptions"
    },
    "@aws-cdk/aws-autoscaling.RequestCountScalingProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for enabling scaling based on request/second.",
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnRequestCount('LimitRPS', {\n    targetRequestsPerSecond: 1000\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.RequestCountScalingProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 2107
      },
      "name": "RequestCountScalingProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Specify exactly one of 'targetRequestsPerMinute' and 'targetRequestsPerSecond'",
            "stability": "stable",
            "summary": "Target average requests/minute on each instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2120
          },
          "name": "targetRequestsPerMinute",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Specify exactly one of 'targetRequestsPerMinute' and 'targetRequestsPerSecond'",
            "deprecated": "Use 'targetRequestsPerMinute' instead",
            "stability": "deprecated",
            "summary": "Target average requests/seconds on each instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 2114
          },
          "name": "targetRequestsPerSecond",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:RequestCountScalingProps"
    },
    "@aws-cdk/aws-autoscaling.RollingUpdateConfiguration": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "deprecated": "use `UpdatePolicy.rollingUpdate()`",
        "stability": "deprecated",
        "summary": "Additional settings when a rolling update is selected.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst rollingUpdateConfiguration: autoscaling.RollingUpdateConfiguration = {\n  maxBatchSize: 123,\n  minInstancesInService: 123,\n  minSuccessfulInstancesPercent: 123,\n  pauseTime: cdk.Duration.minutes(30),\n  suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n  waitOnResourceSignals: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.RollingUpdateConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1810
      },
      "name": "RollingUpdateConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "deprecated",
            "summary": "The maximum number of instances that AWS CloudFormation updates at once."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1816
          },
          "name": "maxBatchSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "remarks": "This number affects the speed of the replacement.",
            "stability": "deprecated",
            "summary": "The minimum number of instances that must be in service before more instances are replaced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1825
          },
          "name": "minInstancesInService",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "100",
            "remarks": "If an instance doesn't send a signal within the time specified in the\npauseTime property, AWS CloudFormation assumes that the instance wasn't\nupdated.\n\nThis number affects the success of the replacement.\n\nIf you specify this property, you must also enable the\nwaitOnResourceSignals and pauseTime properties.",
            "stability": "deprecated",
            "summary": "The percentage of instances that must signal success for an update to succeed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1841
          },
          "name": "minSuccessfulInstancesPercent",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5) if the waitOnResourceSignals property is true, otherwise 0",
            "remarks": "This is intended to give those instances time to start software applications.\n\nSpecify PauseTime in the ISO8601 duration format (in the format\nPT#H#M#S, where each # is the number of hours, minutes, and seconds,\nrespectively). The maximum PauseTime is one hour (PT1H).",
            "stability": "deprecated",
            "summary": "The pause time after making a change to a batch of instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1854
          },
          "name": "pauseTime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions.",
            "remarks": "Suspending processes prevents Auto Scaling from interfering with a stack\nupdate.",
            "stability": "deprecated",
            "summary": "Specifies the Auto Scaling processes to suspend during a stack update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1879
          },
          "name": "suspendProcesses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.ScalingProcess"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true if you specified the minSuccessfulInstancesPercent property, false otherwise",
            "remarks": "AWS CloudFormation must receive a signal from each new instance within\nthe specified PauseTime before continuing the update.\n\nTo have instances wait for an Elastic Load Balancing health check before\nthey signal success, add a health-check verification by using the\ncfn-init helper script. For an example, see the verify_instance_health\ncommand in the Auto Scaling rolling updates sample template.",
            "stability": "deprecated",
            "summary": "Specifies whether the Auto Scaling group waits on signals from new instances during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1869
          },
          "name": "waitOnResourceSignals",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:RollingUpdateConfiguration"
    },
    "@aws-cdk/aws-autoscaling.RollingUpdateOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for customizing the rolling update.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst rollingUpdateOptions: autoscaling.RollingUpdateOptions = {\n  maxBatchSize: 123,\n  minInstancesInService: 123,\n  minSuccessPercentage: 123,\n  pauseTime: cdk.Duration.minutes(30),\n  suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n  waitOnResourceSignals: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.RollingUpdateOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 814
      },
      "name": "RollingUpdateOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "This number affects the speed of the replacement.",
            "stability": "stable",
            "summary": "The maximum number of instances that AWS CloudFormation updates at once."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 822
          },
          "name": "maxBatchSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "remarks": "This number affects the speed of the replacement.",
            "stability": "stable",
            "summary": "The minimum number of instances that must be in service before more instances are replaced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 831
          },
          "name": "minInstancesInService",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The `minSuccessPercentage` configured for `signals` on the AutoScalingGroup",
            "stability": "stable",
            "summary": "The percentage of instances that must signal success for the update to succeed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 862
          },
          "name": "minSuccessPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The `timeout` configured for `signals` on the AutoScalingGroup",
            "stability": "stable",
            "summary": "The pause time after making a change to a batch of instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 855
          },
          "name": "pauseTime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions.",
            "remarks": "Suspending processes prevents Auto Scaling from interfering with a stack\nupdate.",
            "stability": "stable",
            "summary": "Specifies the Auto Scaling processes to suspend during a stack update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 841
          },
          "name": "suspendProcesses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.ScalingProcess"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true if you configured `signals` on the AutoScalingGroup, false otherwise",
            "stability": "stable",
            "summary": "Specifies whether the Auto Scaling group waits on signals from new instances during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 848
          },
          "name": "waitOnResourceSignals",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:RollingUpdateOptions"
    },
    "@aws-cdk/aws-autoscaling.ScalingEvent": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Fleet scaling events."
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScalingEvent",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1779
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Notify when an instance was launched."
          },
          "name": "INSTANCE_LAUNCH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Notify when an instance was terminated."
          },
          "name": "INSTANCE_TERMINATE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Notify when an instance failed to terminate."
          },
          "name": "INSTANCE_TERMINATE_ERROR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Notify when an instance failed to launch."
          },
          "name": "INSTANCE_LAUNCH_ERROR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Send a test notification to the topic."
          },
          "name": "TEST_NOTIFICATION"
        }
      ],
      "name": "ScalingEvent",
      "symbolId": "lib/auto-scaling-group:ScalingEvent"
    },
    "@aws-cdk/aws-autoscaling.ScalingEvents": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "A list of ScalingEvents, you can use one of the predefined lists, such as ScalingEvents.ERRORS or create a custom group by instantiating a `NotificationTypes` object, e.g: `new NotificationTypes(`NotificationType.INSTANCE_LAUNCH`)`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst scalingEvents = autoscaling.ScalingEvents.ALL;",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/auto-scaling-group.ts",
          "line": 1916
        },
        "parameters": [
          {
            "name": "types",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.ScalingEvent"
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1886
      },
      "name": "ScalingEvents",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "All fleet scaling events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1895
          },
          "name": "ALL",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fleet scaling errors."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1890
          },
          "name": "ERRORS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fleet scaling launch events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1903
          },
          "name": "LAUNCH_EVENTS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Fleet termination launch events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 1908
          },
          "name": "TERMINATION_EVENTS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:ScalingEvents"
    },
    "@aws-cdk/aws-autoscaling.ScalingInterval": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A range of metric values in which to apply a certain scaling operation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst scalingInterval: autoscaling.ScalingInterval = {\n  change: 123,\n\n  // the properties below are optional\n  lower: 123,\n  upper: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScalingInterval",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 190
      },
      "name": "ScalingInterval",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "The number is interpreted differently based on AdjustmentType:\n\n- ChangeInCapacity: add the adjustment to the current capacity.\n  The number can be positive or negative.\n- PercentChangeInCapacity: add or remove the given percentage of the current\n   capacity to itself. The number can be in the range [-100..100].\n- ExactCapacity: set the capacity to this number. The number must\n   be positive.",
            "stability": "stable",
            "summary": "The capacity adjustment to apply in this interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 221
          },
          "name": "change",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Threshold automatically derived from neighbouring intervals",
            "remarks": "The scaling adjustment will be applied if the metric is higher than this value.",
            "stability": "stable",
            "summary": "The lower bound of the interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 198
          },
          "name": "lower",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Threshold automatically derived from neighbouring intervals",
            "remarks": "The scaling adjustment will be applied if the metric is lower than this value.",
            "stability": "stable",
            "summary": "The upper bound of the interval."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 207
          },
          "name": "upper",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:ScalingInterval"
    },
    "@aws-cdk/aws-autoscaling.ScalingProcess": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScalingProcess",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1921
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LAUNCH"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TERMINATE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "HEALTH_CHECK"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "REPLACE_UNHEALTHY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "AZ_REBALANCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ALARM_NOTIFICATION"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SCHEDULED_ACTIONS"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "ADD_TO_LOAD_BALANCER"
        }
      ],
      "name": "ScalingProcess",
      "symbolId": "lib/auto-scaling-group:ScalingProcess"
    },
    "@aws-cdk/aws-autoscaling.Schedule": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Schedule for scheduled scaling actions.",
        "example": "import * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\nconst alias = fn.addAlias('prod');\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.Schedule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/schedule.ts",
          "line": 48
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/schedule.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a schedule from a set of cron fields."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 21
          },
          "name": "cron",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.CronOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.Schedule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "see": "http://crontab.org/",
            "stability": "stable",
            "summary": "Construct a schedule from a literal schedule expression."
          },
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 14
          },
          "name": "expression",
          "parameters": [
            {
              "docs": {
                "remarks": "Must be in a format that AutoScaling will recognize",
                "summary": "The expression to use."
              },
              "name": "expression",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.Schedule"
            }
          },
          "static": true
        }
      ],
      "name": "Schedule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Retrieve the expression for this schedule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/schedule.ts",
            "line": 46
          },
          "name": "expressionString",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/schedule:Schedule"
    },
    "@aws-cdk/aws-autoscaling.ScheduledAction": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a scheduled scaling action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const schedule: autoscaling.Schedule;\nconst scheduledAction = new autoscaling.ScheduledAction(this, 'MyScheduledAction', {\n  autoScalingGroup: autoScalingGroup,\n  schedule: schedule,\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: new Date(),\n  maxCapacity: 123,\n  minCapacity: 123,\n  startTime: new Date(),\n  timeZone: 'timeZone',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScheduledAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/scheduled-action.ts",
          "line": 100
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.ScheduledActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/scheduled-action.ts",
        "line": 92
      },
      "name": "ScheduledAction",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the scheduled action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 98
          },
          "name": "scheduledActionName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/scheduled-action:ScheduledAction"
    },
    "@aws-cdk/aws-autoscaling.ScheduledActionProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a scheduled action on an AutoScalingGroup.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const schedule: autoscaling.Schedule;\nconst scheduledActionProps: autoscaling.ScheduledActionProps = {\n  autoScalingGroup: autoScalingGroup,\n  schedule: schedule,\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: new Date(),\n  maxCapacity: 123,\n  minCapacity: 123,\n  startTime: new Date(),\n  timeZone: 'timeZone',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.ScheduledActionProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BasicScheduledActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/scheduled-action.ts",
        "line": 82
      },
      "name": "ScheduledActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The AutoScalingGroup to apply the scheduled actions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/scheduled-action.ts",
            "line": 86
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        }
      ],
      "symbolId": "lib/scheduled-action:ScheduledActionProps"
    },
    "@aws-cdk/aws-autoscaling.Signals": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "remarks": "If you do configure waiting for signals, you should make sure the instances\ninvoke `cfn-signal` somewhere in their UserData to signal that they have\nstarted up (either successfully or unsuccessfully).\n\nSignals are used both during intial creation and subsequent updates.",
        "stability": "stable",
        "summary": "Configure whether the AutoScalingGroup waits for signals.",
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.Signals",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 636
      },
      "methods": [
        {
          "docs": {
            "remarks": "If no desiredCapacity has been configured, wait for minCapacity signals intead.\n\nThis number is used during initial creation and during replacing updates.\nDuring rolling updates, all updated instances must send a signal.",
            "stability": "stable",
            "summary": "Wait for the desiredCapacity of the AutoScalingGroup amount of signals to have been received."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 645
          },
          "name": "waitForAll",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.Signals"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "You should send one signal per instance, so this represents the number of\ninstances to wait for.\n\nThis number is used during initial creation and during replacing updates.\nDuring rolling updates, all updated instances must send a signal.",
            "stability": "stable",
            "summary": "Wait for a specific amount of signals to have been received."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 678
          },
          "name": "waitForCount",
          "parameters": [
            {
              "name": "count",
              "type": {
                "primitive": "number"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.Signals"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This number is used during initial creation and during replacing updates.\nDuring rolling updates, all updated instances must send a signal.",
            "stability": "stable",
            "summary": "Wait for the minCapacity of the AutoScalingGroup amount of signals to have been received."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 660
          },
          "name": "waitForMinCapacity",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.Signals"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Helper to render the actual creation policy, as the logic between them is quite similar."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 695
          },
          "name": "doRender",
          "parameters": [
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions"
              }
            },
            {
              "name": "count",
              "optional": true,
              "type": {
                "primitive": "number"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.CfnCreationPolicy"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Render the ASG's CreationPolicy."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 690
          },
          "name": "renderCreationPolicy",
          "parameters": [
            {
              "name": "renderOptions",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.RenderSignalsOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.CfnCreationPolicy"
            }
          }
        }
      ],
      "name": "Signals",
      "symbolId": "lib/auto-scaling-group:Signals"
    },
    "@aws-cdk/aws-autoscaling.SignalsOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Customization options for Signal handling.",
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 730
      },
      "name": "SignalsOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "100",
            "remarks": "If this number is less than 100, a percentage of signals may be failure\nsignals while still succeeding the creation or update in CloudFormation.",
            "stability": "stable",
            "summary": "The percentage of signals that need to be successful."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 739
          },
          "name": "minSuccessPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(5)",
            "remarks": "This should reflect how long it takes your instances to start up\n(including instance start time and instance initialization time).",
            "stability": "stable",
            "summary": "How long to wait for the signals to be sent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 749
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/auto-scaling-group:SignalsOptions"
    },
    "@aws-cdk/aws-autoscaling.SpotAllocationStrategy": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Indicates how to allocate instance types to fulfill Spot capacity."
      },
      "fqn": "@aws-cdk/aws-autoscaling.SpotAllocationStrategy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 380
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The Auto Scaling group launches instances using the Spot pools with the lowest price, and evenly allocates your instances across the number of Spot pools that you specify."
          },
          "name": "LOWEST_PRICE"
        },
        {
          "docs": {
            "remarks": "Recommended.",
            "stability": "stable",
            "summary": "The Auto Scaling group launches instances using Spot pools that are optimally chosen based on the available Spot capacity."
          },
          "name": "CAPACITY_OPTIMIZED"
        },
        {
          "docs": {
            "remarks": "Amazon EC2 Auto Scaling\nhonors the instance type priorities on a best-effort basis but optimizes for capacity first.",
            "stability": "stable",
            "summary": "When you use this strategy, you need to set the order of instance types in the list of launch template overrides from highest to lowest priority (from first to last in the list)."
          },
          "name": "CAPACITY_OPTIMIZED_PRIORITIZED"
        }
      ],
      "name": "SpotAllocationStrategy",
      "symbolId": "lib/auto-scaling-group:SpotAllocationStrategy"
    },
    "@aws-cdk/aws-autoscaling.StepScalingAction": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "This kind of scaling policy adjusts the target capacity in configurable\nsteps. The size of the step is configurable based on the metric's distance\nto its alarm threshold.\n\nThis Action must be used as the target of a CloudWatch alarm to take effect.",
        "stability": "stable",
        "summary": "Define a step scaling action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\nconst stepScalingAction = new autoscaling.StepScalingAction(this, 'MyStepScalingAction', {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.StepScalingAction",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/step-scaling-action.ts",
          "line": 75
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.StepScalingActionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 67
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add an adjusment interval to the ScalingAction."
          },
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 95
          },
          "name": "addAdjustment",
          "parameters": [
            {
              "name": "adjustment",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.AdjustmentTier"
              }
            }
          ]
        }
      ],
      "name": "StepScalingAction",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ARN of the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 71
          },
          "name": "scalingPolicyArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/step-scaling-action:StepScalingAction"
    },
    "@aws-cdk/aws-autoscaling.StepScalingActionProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a scaling policy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\nconst stepScalingActionProps: autoscaling.StepScalingActionProps = {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.StepScalingActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-action.ts",
        "line": 13
      },
      "name": "StepScalingActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The auto scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 17
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ChangeInCapacity",
            "stability": "stable",
            "summary": "How the adjustment numbers are interpreted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 38
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.AdjustmentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The default cooldown configured on the AutoScalingGroup",
            "stability": "stable",
            "summary": "Period after a scaling completes before another scaling activity can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 24
          },
          "name": "cooldown",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Same as the cooldown",
            "stability": "stable",
            "summary": "Estimated time until a newly launched instance can send metrics to CloudWatch."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 31
          },
          "name": "estimatedInstanceWarmup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Average",
            "stability": "stable",
            "summary": "The aggregation type for the CloudWatch metrics."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 55
          },
          "name": "metricAggregationType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.MetricAggregationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No minimum scaling effect",
            "remarks": "Only when using AdjustmentType = PercentChangeInCapacity, this number controls\nthe minimum absolute effect size.",
            "stability": "stable",
            "summary": "Minimum absolute number to adjust capacity with as result of percentage scaling."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-action.ts",
            "line": 48
          },
          "name": "minAdjustmentMagnitude",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/step-scaling-action:StepScalingActionProps"
    },
    "@aws-cdk/aws-autoscaling.StepScalingPolicy": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "You can specify the scaling behavior for various values of the metric.\n\nImplemented using one or more CloudWatch alarms and Step Scaling Policies.",
        "stability": "stable",
        "summary": "Define a acaling strategy which scales depending on absolute values of some metric.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\nconst stepScalingPolicy = new autoscaling.StepScalingPolicy(this, 'MyStepScalingPolicy', {\n  autoScalingGroup: autoScalingGroup,\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  evaluationPeriods: 123,\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/step-scaling-policy.ts",
          "line": 96
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 90
      },
      "name": "StepScalingPolicy",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 92
          },
          "name": "lowerAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.StepScalingAction"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 91
          },
          "name": "lowerAlarm",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 94
          },
          "name": "upperAction",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.StepScalingAction"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 93
          },
          "name": "upperAlarm",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudwatch.Alarm"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:StepScalingPolicy"
    },
    "@aws-cdk/aws-autoscaling.StepScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\nconst stepScalingPolicyProps: autoscaling.StepScalingPolicyProps = {\n  autoScalingGroup: autoScalingGroup,\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  evaluationPeriods: 123,\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/step-scaling-policy.ts",
        "line": 76
      },
      "name": "StepScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The auto scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/step-scaling-policy.ts",
            "line": 80
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        }
      ],
      "symbolId": "lib/step-scaling-policy:StepScalingPolicyProps"
    },
    "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\nconst targetTrackingScalingPolicy = new autoscaling.TargetTrackingScalingPolicy(this, 'MyTargetTrackingScalingPolicy', {\n  autoScalingGroup: autoScalingGroup,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/target-tracking-scaling-policy.ts",
          "line": 116
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 105
      },
      "name": "TargetTrackingScalingPolicy",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "ARN of the scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 109
          },
          "name": "scalingPolicyArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:TargetTrackingScalingPolicy"
    },
    "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicyProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "remarks": "Adds the scalingTarget.",
        "stability": "stable",
        "summary": "Properties for a concrete TargetTrackingPolicy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\nconst targetTrackingScalingPolicyProps: autoscaling.TargetTrackingScalingPolicyProps = {\n  autoScalingGroup: autoScalingGroup,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicyProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.BasicTargetTrackingScalingPolicyProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/target-tracking-scaling-policy.ts",
        "line": 98
      },
      "name": "TargetTrackingScalingPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/target-tracking-scaling-policy.ts",
            "line": 102
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        }
      ],
      "symbolId": "lib/target-tracking-scaling-policy:TargetTrackingScalingPolicyProps"
    },
    "@aws-cdk/aws-autoscaling.TerminationPolicy": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "Specifies the termination criteria to apply before Amazon EC2 Auto Scaling chooses an instance for termination.",
        "example": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  terminationPolicies: [\n    autoscaling.TerminationPolicy.OLDEST_INSTANCE,\n    autoscaling.TerminationPolicy.DEFAULT,\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.TerminationPolicy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/termination-policy.ts",
        "line": 5
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Terminate instances in the Auto Scaling group to align the remaining instances to the allocation strategy for the type of instance that is terminating (either a Spot Instance or an On-Demand Instance)."
          },
          "name": "ALLOCATION_STRATEGY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Terminate instances that are closest to the next billing hour."
          },
          "name": "CLOSEST_TO_NEXT_INSTANCE_HOUR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Terminate instances according to the default termination policy."
          },
          "name": "DEFAULT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Terminate the newest instance in the group."
          },
          "name": "NEWEST_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Terminate the oldest instance in the group."
          },
          "name": "OLDEST_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Terminate instances that have the oldest launch configuration."
          },
          "name": "OLDEST_LAUNCH_CONFIGURATION"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Terminate instances that have the oldest launch template."
          },
          "name": "OLDEST_LAUNCH_TEMPLATE"
        }
      ],
      "name": "TerminationPolicy",
      "symbolId": "lib/termination-policy:TerminationPolicy"
    },
    "@aws-cdk/aws-autoscaling.UpdatePolicy": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "stability": "stable",
        "summary": "How existing instances should be updated.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst updatePolicy = autoscaling.UpdatePolicy.replacingUpdate();",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.UpdatePolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 755
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new AutoScalingGroup and switch over to it."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 759
          },
          "name": "replacingUpdate",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.UpdatePolicy"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Replace the instances in the AutoScalingGroup one by one, or in batches."
          },
          "locationInModule": {
            "filename": "lib/auto-scaling-group.ts",
            "line": 772
          },
          "name": "rollingUpdate",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.RollingUpdateOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.UpdatePolicy"
            }
          },
          "static": true
        }
      ],
      "name": "UpdatePolicy",
      "symbolId": "lib/auto-scaling-group:UpdatePolicy"
    },
    "@aws-cdk/aws-autoscaling.UpdateType": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "docs": {
        "deprecated": "Use UpdatePolicy instead",
        "stability": "deprecated",
        "summary": "The type of update to perform on instances in this AutoScalingGroup."
      },
      "fqn": "@aws-cdk/aws-autoscaling.UpdateType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/auto-scaling-group.ts",
        "line": 1740
      },
      "members": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Don't do anything."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "remarks": "Builds a new AutoScalingGroup first, then delete the old one.",
            "stability": "deprecated",
            "summary": "Replace the entire AutoScalingGroup."
          },
          "name": "REPLACING_UPDATE"
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Replace the instances in the AutoScalingGroup."
          },
          "name": "ROLLING_UPDATE"
        }
      ],
      "name": "UpdateType",
      "symbolId": "lib/auto-scaling-group:UpdateType"
    },
    "@aws-cdk/aws-autoscaling.WarmPool": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Define a warm pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\nconst warmPool = new autoscaling.WarmPool(this, 'MyWarmPool', {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: autoscaling.PoolState.HIBERNATED,\n  reuseOnScaleIn: false,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.WarmPool",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/warm-pool.ts",
          "line": 58
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-autoscaling.WarmPoolProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/warm-pool.ts",
        "line": 57
      },
      "name": "WarmPool",
      "symbolId": "lib/warm-pool:WarmPool"
    },
    "@aws-cdk/aws-autoscaling.WarmPoolOptions": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a warm pool.",
        "example": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.addWarmPool({\n  minSize: 1,\n  reuseOnScaleIn: true,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.WarmPoolOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/warm-pool.ts",
        "line": 9
      },
      "name": "WarmPoolOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- max size of the Auto Scaling group",
            "remarks": "If the value is not specified, Amazon EC2 Auto Scaling launches and maintains\nthe difference between the group's maximum capacity and its desired capacity.",
            "stability": "stable",
            "summary": "The maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/warm-pool.ts",
            "line": 29
          },
          "name": "maxGroupPreparedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "stability": "stable",
            "summary": "The minimum number of instances to maintain in the warm pool."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/warm-pool.ts",
            "line": 35
          },
          "name": "minSize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PoolState.STOPPED",
            "stability": "stable",
            "summary": "The instance state to transition to after the lifecycle actions are complete."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/warm-pool.ts",
            "line": 41
          },
          "name": "poolState",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.PoolState"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If the value is not specified, instances in the Auto Scaling group will be terminated\nwhen the group scales in.",
            "stability": "stable",
            "summary": "Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/warm-pool.ts",
            "line": 18
          },
          "name": "reuseOnScaleIn",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/warm-pool:WarmPoolOptions"
    },
    "@aws-cdk/aws-autoscaling.WarmPoolProps": {
      "assembly": "@aws-cdk/aws-autoscaling",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for a warm pool.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\nconst warmPoolProps: autoscaling.WarmPoolProps = {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: autoscaling.PoolState.HIBERNATED,\n  reuseOnScaleIn: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-autoscaling.WarmPoolProps",
      "interfaces": [
        "@aws-cdk/aws-autoscaling.WarmPoolOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/warm-pool.ts",
        "line": 47
      },
      "name": "WarmPoolProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Auto Scaling group to add the warm pool to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/warm-pool.ts",
            "line": 51
          },
          "name": "autoScalingGroup",
          "type": {
            "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
          }
        }
      ],
      "symbolId": "lib/warm-pool:WarmPoolProps"
    }
  },
  "version": "1.193.0",
  "fingerprint": "**********"
}