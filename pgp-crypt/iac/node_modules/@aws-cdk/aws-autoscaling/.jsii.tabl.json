{
  "version": "2",
  "toolVersion": "1.74.0",
  "snippets": {
    "7576cf6db2954e7ed69d6826499818f0dac282fd656c4d2de60655b2588364bd": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n    machine_image=ec2.AmazonLinuxImage()\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.Of(InstanceClass.BURSTABLE2, InstanceSize.MICRO),\n    MachineImage = new AmazonLinuxImage()\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(InstanceType.of(InstanceClass.BURSTABLE2, InstanceSize.MICRO))\n        .machineImage(new AmazonLinuxImage())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: ec2.instanceType.of(ec2.instanceClass_BURSTABLE2, ec2.instanceSize_MICRO),\n\tmachineImage: ec2.NewAmazonLinuxImage(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage() // get the latest Amazon Linux image\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 22
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-ec2.AmazonLinuxImage",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceClass",
        "@aws-cdk/aws-ec2.InstanceClass#BURSTABLE2",
        "@aws-cdk/aws-ec2.InstanceSize",
        "@aws-cdk/aws-ec2.InstanceSize#MICRO",
        "@aws-cdk/aws-ec2.InstanceType",
        "@aws-cdk/aws-ec2.InstanceType#of",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage() // get the latest Amazon Linux image\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 19,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 8,
        "196": 1,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "1e413e363af94683edbc7a84414ade3e771c9e68e116936c82477375560cc563"
    },
    "15df7d95919fcecb82b127b0df79c11d29a1377d87821a924079f06f71d180c2": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\nmy_security_group = ec2.SecurityGroup(self, \"SecurityGroup\", vpc=vpc)\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n    machine_image=ec2.AmazonLinuxImage(),\n    security_group=my_security_group\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\nSecurityGroup mySecurityGroup = new SecurityGroup(this, \"SecurityGroup\", new SecurityGroupProps { Vpc = vpc });\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.Of(InstanceClass.BURSTABLE2, InstanceSize.MICRO),\n    MachineImage = new AmazonLinuxImage(),\n    SecurityGroup = mySecurityGroup\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\nSecurityGroup mySecurityGroup = SecurityGroup.Builder.create(this, \"SecurityGroup\").vpc(vpc).build();\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(InstanceType.of(InstanceClass.BURSTABLE2, InstanceSize.MICRO))\n        .machineImage(new AmazonLinuxImage())\n        .securityGroup(mySecurityGroup)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\nmySecurityGroup := ec2.NewSecurityGroup(this, jsii.String(\"SecurityGroup\"), &securityGroupProps{\n\tvpc: vpc,\n})\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: ec2.instanceType.of(ec2.instanceClass_BURSTABLE2, ec2.instanceSize_MICRO),\n\tmachineImage: ec2.NewAmazonLinuxImage(),\n\tsecurityGroup: mySecurityGroup,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 37
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-ec2.AmazonLinuxImage",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.ISecurityGroup",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceClass",
        "@aws-cdk/aws-ec2.InstanceClass#BURSTABLE2",
        "@aws-cdk/aws-ec2.InstanceSize",
        "@aws-cdk/aws-ec2.InstanceSize#MICRO",
        "@aws-cdk/aws-ec2.InstanceType",
        "@aws-cdk/aws-ec2.InstanceType#of",
        "@aws-cdk/aws-ec2.SecurityGroup",
        "@aws-cdk/aws-ec2.SecurityGroupProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 25,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 9,
        "196": 1,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 3,
        "282": 2,
        "290": 1
      },
      "fqnsFingerprint": "582f33f3abd07f863f698ac6f4656819d67ff89ac0fcd3ea0b702d11ea1a0911"
    },
    "e9462bc02e028840f4e56753afb437665875d46ea196bc5443e16571ba7d2b87": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# launch_template: ec2.LaunchTemplate\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    launch_template=launch_template\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nLaunchTemplate launchTemplate;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    LaunchTemplate = launchTemplate\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nLaunchTemplate launchTemplate;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .launchTemplate(launchTemplate)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar launchTemplate launchTemplate\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tlaunchTemplate: launchTemplate,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const launchTemplate: ec2.LaunchTemplate;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  launchTemplate: launchTemplate\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 51
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-ec2.ILaunchTemplate",
        "@aws-cdk/aws-ec2.IVpc",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const launchTemplate: ec2.LaunchTemplate;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  launchTemplate: launchTemplate\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 11,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 1,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "eb66f519a8cf3c0f2bf2fff6884b80125ae74a5937bbcd4a8bd673ed1daceb0d"
    },
    "dec65d409e39daa4b0037f447da4e50c855a32082a83e793f4f4d348c1257f37": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# launch_template1: ec2.LaunchTemplate\n# launch_template2: ec2.LaunchTemplate\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    mixed_instances_policy=autoscaling.MixedInstancesPolicy(\n        instances_distribution=autoscaling.InstancesDistribution(\n            on_demand_percentage_above_base_capacity=50\n        ),\n        launch_template=launch_template1,\n        launch_template_overrides=[autoscaling.LaunchTemplateOverrides(instance_type=ec2.InstanceType(\"t3.micro\")), autoscaling.LaunchTemplateOverrides(instance_type=ec2.InstanceType(\"t3a.micro\")), autoscaling.LaunchTemplateOverrides(instance_type=ec2.InstanceType(\"t4g.micro\"), launch_template=launch_template2)]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nLaunchTemplate launchTemplate1;\nLaunchTemplate launchTemplate2;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    MixedInstancesPolicy = new MixedInstancesPolicy {\n        InstancesDistribution = new InstancesDistribution {\n            OnDemandPercentageAboveBaseCapacity = 50\n        },\n        LaunchTemplate = launchTemplate1,\n        LaunchTemplateOverrides = new [] { new LaunchTemplateOverrides { InstanceType = new InstanceType(\"t3.micro\") }, new LaunchTemplateOverrides { InstanceType = new InstanceType(\"t3a.micro\") }, new LaunchTemplateOverrides { InstanceType = new InstanceType(\"t4g.micro\"), LaunchTemplate = launchTemplate2 } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nLaunchTemplate launchTemplate1;\nLaunchTemplate launchTemplate2;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .mixedInstancesPolicy(MixedInstancesPolicy.builder()\n                .instancesDistribution(InstancesDistribution.builder()\n                        .onDemandPercentageAboveBaseCapacity(50)\n                        .build())\n                .launchTemplate(launchTemplate1)\n                .launchTemplateOverrides(List.of(LaunchTemplateOverrides.builder().instanceType(new InstanceType(\"t3.micro\")).build(), LaunchTemplateOverrides.builder().instanceType(new InstanceType(\"t3a.micro\")).build(), LaunchTemplateOverrides.builder().instanceType(new InstanceType(\"t4g.micro\")).launchTemplate(launchTemplate2).build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar launchTemplate1 launchTemplate\nvar launchTemplate2 launchTemplate\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tmixedInstancesPolicy: &mixedInstancesPolicy{\n\t\tinstancesDistribution: &instancesDistribution{\n\t\t\tonDemandPercentageAboveBaseCapacity: jsii.Number(50),\n\t\t},\n\t\tlaunchTemplate: launchTemplate1,\n\t\tlaunchTemplateOverrides: []launchTemplateOverrides{\n\t\t\t&launchTemplateOverrides{\n\t\t\t\tinstanceType: ec2.NewInstanceType(jsii.String(\"t3.micro\")),\n\t\t\t},\n\t\t\t&launchTemplateOverrides{\n\t\t\t\tinstanceType: ec2.NewInstanceType(jsii.String(\"t3a.micro\")),\n\t\t\t},\n\t\t\t&launchTemplateOverrides{\n\t\t\t\tinstanceType: ec2.NewInstanceType(jsii.String(\"t4g.micro\")),\n\t\t\t\tlaunchTemplate: launchTemplate2,\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const launchTemplate1: ec2.LaunchTemplate;\ndeclare const launchTemplate2: ec2.LaunchTemplate;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  mixedInstancesPolicy: {\n    instancesDistribution: {\n      onDemandPercentageAboveBaseCapacity: 50, // Mix Spot and On-Demand instances\n    },\n    launchTemplate: launchTemplate1,\n    launchTemplateOverrides: [ // Mix multiple instance types\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: launchTemplate2 },\n    ],\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 63
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.InstancesDistribution",
        "@aws-cdk/aws-autoscaling.MixedInstancesPolicy",
        "@aws-cdk/aws-ec2.ILaunchTemplate",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const launchTemplate1: ec2.LaunchTemplate;\ndeclare const launchTemplate2: ec2.LaunchTemplate;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  mixedInstancesPolicy: {\n    instancesDistribution: {\n      onDemandPercentageAboveBaseCapacity: 50, // Mix Spot and On-Demand instances\n    },\n    launchTemplate: launchTemplate1,\n    launchTemplateOverrides: [ // Mix multiple instance types\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: launchTemplate2 },\n    ],\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 29,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 6,
        "194": 4,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 9,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "f8005d9c92407e748effb8a41421342c73d937ef5ad87afef2443d95bb15f03a"
    },
    "a75ef8447b3ae4828f03e804aca48584d50400c0151deb68daa7cfd14c1554d1": {
      "translations": {
        "python": {
          "source": "# Pick a Windows edition to use\nwindows = ec2.WindowsImage(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE)\n\n# Pick the right Amazon Linux edition. All arguments shown are optional\n# and will default to these values when omitted.\namzn_linux = ec2.AmazonLinuxImage(\n    generation=ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n    edition=ec2.AmazonLinuxEdition.STANDARD,\n    virtualization=ec2.AmazonLinuxVirt.HVM,\n    storage=ec2.AmazonLinuxStorage.GENERAL_PURPOSE\n)\n\n# For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n# a map giving the AMI to in for each region:\n\nlinux = ec2.GenericLinuxImage({\n    \"us-east-1\": \"ami-97785bed\",\n    \"eu-west-1\": \"ami-12345678\"\n})",
          "version": "2"
        },
        "csharp": {
          "source": "// Pick a Windows edition to use\nWindowsImage windows = new WindowsImage(WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nAmazonLinuxImage amznLinux = new AmazonLinuxImage(new AmazonLinuxImageProps {\n    Generation = AmazonLinuxGeneration.AMAZON_LINUX,\n    Edition = AmazonLinuxEdition.STANDARD,\n    Virtualization = AmazonLinuxVirt.HVM,\n    Storage = AmazonLinuxStorage.GENERAL_PURPOSE\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nGenericLinuxImage linux = new GenericLinuxImage(new Dictionary<string, string> {\n    { \"us-east-1\", \"ami-97785bed\" },\n    { \"eu-west-1\", \"ami-12345678\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Pick a Windows edition to use\nWindowsImage windows = new WindowsImage(WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nAmazonLinuxImage amznLinux = AmazonLinuxImage.Builder.create()\n        .generation(AmazonLinuxGeneration.AMAZON_LINUX)\n        .edition(AmazonLinuxEdition.STANDARD)\n        .virtualization(AmazonLinuxVirt.HVM)\n        .storage(AmazonLinuxStorage.GENERAL_PURPOSE)\n        .build();\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nGenericLinuxImage linux = new GenericLinuxImage(Map.of(\n        \"us-east-1\", \"ami-97785bed\",\n        \"eu-west-1\", \"ami-12345678\"));",
          "version": "1"
        },
        "go": {
          "source": "// Pick a Windows edition to use\nwindows := ec2.NewWindowsImage(ec2.windowsVersion_WINDOWS_SERVER_2019_ENGLISH_FULL_BASE)\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\namznLinux := ec2.NewAmazonLinuxImage(&amazonLinuxImageProps{\n\tgeneration: ec2.amazonLinuxGeneration_AMAZON_LINUX,\n\tedition: ec2.amazonLinuxEdition_STANDARD,\n\tvirtualization: ec2.amazonLinuxVirt_HVM,\n\tstorage: ec2.amazonLinuxStorage_GENERAL_PURPOSE,\n})\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nlinux := ec2.NewGenericLinuxImage(map[string]*string{\n\t\"us-east-1\": jsii.String(\"ami-97785bed\"),\n\t\"eu-west-1\": jsii.String(\"ami-12345678\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// Pick a Windows edition to use\nconst windows = new ec2.WindowsImage(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = new ec2.AmazonLinuxImage({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nconst linux = new ec2.GenericLinuxImage({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 94
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.AmazonLinuxEdition",
        "@aws-cdk/aws-ec2.AmazonLinuxEdition#STANDARD",
        "@aws-cdk/aws-ec2.AmazonLinuxGeneration",
        "@aws-cdk/aws-ec2.AmazonLinuxGeneration#AMAZON_LINUX",
        "@aws-cdk/aws-ec2.AmazonLinuxImage",
        "@aws-cdk/aws-ec2.AmazonLinuxImageProps",
        "@aws-cdk/aws-ec2.AmazonLinuxStorage",
        "@aws-cdk/aws-ec2.AmazonLinuxStorage#GENERAL_PURPOSE",
        "@aws-cdk/aws-ec2.AmazonLinuxVirt",
        "@aws-cdk/aws-ec2.AmazonLinuxVirt#HVM",
        "@aws-cdk/aws-ec2.GenericLinuxImage",
        "@aws-cdk/aws-ec2.WindowsImage",
        "@aws-cdk/aws-ec2.WindowsVersion",
        "@aws-cdk/aws-ec2.WindowsVersion#WINDOWS_SERVER_2019_ENGLISH_FULL_BASE"
      ],
      "fullSource": "import * as ec2 from '@aws-cdk/aws-ec2';\n\n/// !show\n// Pick a Windows edition to use\nconst windows = new ec2.WindowsImage(ec2.WindowsVersion.WINDOWS_SERVER_2019_ENGLISH_FULL_BASE);\n\n// Pick the right Amazon Linux edition. All arguments shown are optional\n// and will default to these values when omitted.\nconst amznLinux = new ec2.AmazonLinuxImage({\n  generation: ec2.AmazonLinuxGeneration.AMAZON_LINUX,\n  edition: ec2.AmazonLinuxEdition.STANDARD,\n  virtualization: ec2.AmazonLinuxVirt.HVM,\n  storage: ec2.AmazonLinuxStorage.GENERAL_PURPOSE,\n});\n\n// For other custom (Linux) images, instantiate a `GenericLinuxImage` with\n// a map giving the AMI to in for each region:\n\nconst linux = new ec2.GenericLinuxImage({\n  'us-east-1': 'ami-97785bed',\n  'eu-west-1': 'ami-12345678',\n  // ...\n});\n/// !hide\n\nArray.isArray(windows);\nArray.isArray(amznLinux);\nArray.isArray(linux);\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 28,
        "193": 2,
        "194": 13,
        "197": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "281": 6
      },
      "fqnsFingerprint": "fc89f9a3ce577ee297d47e4d1f8476e73b5bd07bd61b3fa7c667cbae5eb3112e"
    },
    "66e093282ca74963dd17d35a5ccaaa4c646fe73c56034556a556c24c78b4e942": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\nauto_scaling_group = autoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    min_capacity=5,\n    max_capacity=100\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nAutoScalingGroup autoScalingGroup = new AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    MinCapacity = 5,\n    MaxCapacity = 100\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nAutoScalingGroup autoScalingGroup = AutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        .minCapacity(5)\n        .maxCapacity(100)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\nautoScalingGroup := autoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\tminCapacity: jsii.Number(5),\n\tmaxCapacity: jsii.Number(100),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nconst autoScalingGroup = new autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  minCapacity: 5,\n  maxCapacity: 100\n  // ...\n});\n\n// Then call one of the scaling methods (explained below)\n//\n// autoScalingGroup.scaleOnMetric(...);\n//\n// autoScalingGroup.scaleOnCpuUtilization(...);\n// autoScalingGroup.scaleOnIncomingBytes(...);\n// autoScalingGroup.scaleOnOutgoingBytes(...);\n// autoScalingGroup.scaleOnRequestCount(...);\n// autoScalingGroup.scaleToTrackMetric(...);\n//\n// autoScalingGroup.scaleOnSchedule(...);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 148
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst autoScalingGroup = new autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  minCapacity: 5,\n  maxCapacity: 100\n  // ...\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 17,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 2,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "200b0660030e70f29ed0958d8748ece12de93cdacf1e6595a8a9463e0054e295"
    },
    "653122b050aebce752403b92b99bfc2088b9564d7199e8a0fe4ac97c427029c3": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nworker_utilization_metric = cloudwatch.Metric(\n    namespace=\"MyService\",\n    metric_name=\"WorkerUtilization\"\n)\n\nauto_scaling_group.scale_on_metric(\"ScaleToCPU\",\n    metric=worker_utilization_metric,\n    scaling_steps=[autoscaling.ScalingInterval(upper=10, change=-1), autoscaling.ScalingInterval(lower=50, change=+1), autoscaling.ScalingInterval(lower=70, change=+3)\n    ],\n\n    # Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n    # 'change' numbers before as percentages instead of capacity counts.\n    adjustment_type=autoscaling.AdjustmentType.CHANGE_IN_CAPACITY\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nMetric workerUtilizationMetric = new Metric(new MetricProps {\n    Namespace = \"MyService\",\n    MetricName = \"WorkerUtilization\"\n});\n\nautoScalingGroup.ScaleOnMetric(\"ScaleToCPU\", new BasicStepScalingPolicyProps {\n    Metric = workerUtilizationMetric,\n    ScalingSteps = new [] { new ScalingInterval { Upper = 10, Change = -1 }, new ScalingInterval { Lower = 50, Change = +1 }, new ScalingInterval { Lower = 70, Change = +3 } },\n\n    // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n    // 'change' numbers before as percentages instead of capacity counts.\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nMetric workerUtilizationMetric = Metric.Builder.create()\n        .namespace(\"MyService\")\n        .metricName(\"WorkerUtilization\")\n        .build();\n\nautoScalingGroup.scaleOnMetric(\"ScaleToCPU\", BasicStepScalingPolicyProps.builder()\n        .metric(workerUtilizationMetric)\n        .scalingSteps(List.of(ScalingInterval.builder().upper(10).change(-1).build(), ScalingInterval.builder().lower(50).change(+1).build(), ScalingInterval.builder().lower(70).change(+3).build()))\n\n        // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n        // 'change' numbers before as percentages instead of capacity counts.\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nworkerUtilizationMetric := cloudwatch.NewMetric(&metricProps{\n\tnamespace: jsii.String(\"MyService\"),\n\tmetricName: jsii.String(\"WorkerUtilization\"),\n})\n\nautoScalingGroup.scaleOnMetric(jsii.String(\"ScaleToCPU\"), &basicStepScalingPolicyProps{\n\tmetric: workerUtilizationMetric,\n\tscalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tupper: jsii.Number(10),\n\t\t\tchange: -jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tlower: jsii.Number(50),\n\t\t\tchange: +jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tlower: jsii.Number(70),\n\t\t\tchange: +jsii.Number(3),\n\t\t},\n\t},\n\n\t// Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n\t// 'change' numbers before as percentages instead of capacity counts.\n\tadjustmentType: autoscaling.adjustmentType_CHANGE_IN_CAPACITY,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 198
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AdjustmentType",
        "@aws-cdk/aws-autoscaling.AdjustmentType#CHANGE_IN_CAPACITY",
        "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps",
        "@aws-cdk/aws-cloudwatch.IMetric",
        "@aws-cdk/aws-cloudwatch.Metric",
        "@aws-cdk/aws-cloudwatch.MetricProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 6,
        "10": 3,
        "75": 23,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 5,
        "194": 4,
        "196": 1,
        "197": 1,
        "207": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "9abc85d593c01583c31aa95da6b53c5a50e45135cd879d0b396eb94dbefad548"
    },
    "f5b2caf68c49d2f110d2a48d48f4864b0a252dbba749e2d4dabd55f6b910ecf2": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.scale_on_cpu_utilization(\"KeepSpareCPU\",\n    target_utilization_percent=50\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.ScaleOnCpuUtilization(\"KeepSpareCPU\", new CpuUtilizationScalingProps {\n    TargetUtilizationPercent = 50\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.scaleOnCpuUtilization(\"KeepSpareCPU\", CpuUtilizationScalingProps.builder()\n        .targetUtilizationPercent(50)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.scaleOnCpuUtilization(jsii.String(\"KeepSpareCPU\"), &cpuUtilizationScalingProps{\n\ttargetUtilizationPercent: jsii.Number(50),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnCpuUtilization('KeepSpareCPU', {\n  targetUtilizationPercent: 50\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 238
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.scaleOnCpuUtilization('KeepSpareCPU', {\n  targetUtilizationPercent: 50\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "32d9b0a4fd1e2099a4f92fbd343d041d4c78ca4be3e1074e5fd08c122d3222a0"
    },
    "2c93b45aeffbf2fa4116c6fb5adc42be870ebaab037d25296ee5e5d930dd783b": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.scale_on_incoming_bytes(\"LimitIngressPerInstance\",\n    target_bytes_per_second=10 * 1024 * 1024\n)\nauto_scaling_group.scale_on_outgoing_bytes(\"LimitEgressPerInstance\",\n    target_bytes_per_second=10 * 1024 * 1024\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.ScaleOnIncomingBytes(\"LimitIngressPerInstance\", new NetworkUtilizationScalingProps {\n    TargetBytesPerSecond = 10 * 1024 * 1024\n});\nautoScalingGroup.ScaleOnOutgoingBytes(\"LimitEgressPerInstance\", new NetworkUtilizationScalingProps {\n    TargetBytesPerSecond = 10 * 1024 * 1024\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.scaleOnIncomingBytes(\"LimitIngressPerInstance\", NetworkUtilizationScalingProps.builder()\n        .targetBytesPerSecond(10 * 1024 * 1024)\n        .build());\nautoScalingGroup.scaleOnOutgoingBytes(\"LimitEgressPerInstance\", NetworkUtilizationScalingProps.builder()\n        .targetBytesPerSecond(10 * 1024 * 1024)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.scaleOnIncomingBytes(jsii.String(\"LimitIngressPerInstance\"), &networkUtilizationScalingProps{\n\ttargetBytesPerSecond: jsii.Number(10 * 1024 * 1024),\n})\nautoScalingGroup.scaleOnOutgoingBytes(jsii.String(\"LimitEgressPerInstance\"), &networkUtilizationScalingProps{\n\ttargetBytesPerSecond: jsii.Number(10 * 1024 * 1024),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnIncomingBytes('LimitIngressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\nautoScalingGroup.scaleOnOutgoingBytes('LimitEgressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 248
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.scaleOnIncomingBytes('LimitIngressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\nautoScalingGroup.scaleOnOutgoingBytes('LimitEgressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 6,
        "10": 2,
        "41": 4,
        "75": 9,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 2,
        "196": 2,
        "209": 4,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d37ae9d93577e661d44e93218d19e0bed5ee5c4694b4040c98be4389418e25ed"
    },
    "6e5fbe6a934dd523634471248064942038ecb3aa9b252189130b65752ac7d750": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.scale_on_request_count(\"LimitRPS\",\n    target_requests_per_second=1000\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.ScaleOnRequestCount(\"LimitRPS\", new RequestCountScalingProps {\n    TargetRequestsPerSecond = 1000\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.scaleOnRequestCount(\"LimitRPS\", RequestCountScalingProps.builder()\n        .targetRequestsPerSecond(1000)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.scaleOnRequestCount(jsii.String(\"LimitRPS\"), &requestCountScalingProps{\n\ttargetRequestsPerSecond: jsii.Number(1000),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnRequestCount('LimitRPS', {\n    targetRequestsPerSecond: 1000\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 263
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.RequestCountScalingProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.scaleOnRequestCount('LimitRPS', {\n    targetRequestsPerSecond: 1000\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "32f5ca61395d25ef805734ff50c15bca3ed30bff28bad6ff111a7d0c2bad5f42"
    },
    "ec3294294145b787a64638410310ece199ee57ddcb472055df4bad07b3f0e251": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.scale_on_schedule(\"PrescaleInTheMorning\",\n    schedule=autoscaling.Schedule.cron(hour=\"8\", minute=\"0\"),\n    min_capacity=20\n)\n\nauto_scaling_group.scale_on_schedule(\"AllowDownscalingAtNight\",\n    schedule=autoscaling.Schedule.cron(hour=\"20\", minute=\"0\"),\n    min_capacity=1\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.ScaleOnSchedule(\"PrescaleInTheMorning\", new BasicScheduledActionProps {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"8\", Minute = \"0\" }),\n    MinCapacity = 20\n});\n\nautoScalingGroup.ScaleOnSchedule(\"AllowDownscalingAtNight\", new BasicScheduledActionProps {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"20\", Minute = \"0\" }),\n    MinCapacity = 1\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.scaleOnSchedule(\"PrescaleInTheMorning\", BasicScheduledActionProps.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"8\").minute(\"0\").build()))\n        .minCapacity(20)\n        .build());\n\nautoScalingGroup.scaleOnSchedule(\"AllowDownscalingAtNight\", BasicScheduledActionProps.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"20\").minute(\"0\").build()))\n        .minCapacity(1)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.scaleOnSchedule(jsii.String(\"PrescaleInTheMorning\"), &basicScheduledActionProps{\n\tschedule: autoscaling.schedule.cron(&cronOptions{\n\t\thour: jsii.String(\"8\"),\n\t\tminute: jsii.String(\"0\"),\n\t}),\n\tminCapacity: jsii.Number(20),\n})\n\nautoScalingGroup.scaleOnSchedule(jsii.String(\"AllowDownscalingAtNight\"), &basicScheduledActionProps{\n\tschedule: autoscaling.*schedule.cron(&cronOptions{\n\t\thour: jsii.String(\"20\"),\n\t\tminute: jsii.String(\"0\"),\n\t}),\n\tminCapacity: jsii.Number(1),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nautoScalingGroup.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: autoscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 288
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.BasicScheduledActionProps",
        "@aws-cdk/aws-autoscaling.CronOptions",
        "@aws-cdk/aws-autoscaling.Schedule",
        "@aws-cdk/aws-autoscaling.Schedule#cron"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nautoScalingGroup.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: autoscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 6,
        "75": 21,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "194": 6,
        "196": 4,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "743295ef28e5e27a3ee68b97a83abdd7b4c9f9b56f3b5e92b80f454c8c9a0807"
    },
    "19a2fc9c8f3b9a4786c4766e96f88b20d8015d8ecb86a6a86f8d2d37e91fdd7d": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    init=ec2.CloudFormationInit.from_elements(\n        ec2.InitFile.from_string(\"/etc/my_instance\", \"This got written during instance startup\")),\n    signals=autoscaling.Signals.wait_for_all(\n        timeout=Duration.minutes(10)\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    Init = CloudFormationInit.FromElements(InitFile.FromString(\"/etc/my_instance\", \"This got written during instance startup\")),\n    Signals = Signals.WaitForAll(new SignalsOptions {\n        Timeout = Duration.Minutes(10)\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .init(CloudFormationInit.fromElements(InitFile.fromString(\"/etc/my_instance\", \"This got written during instance startup\")))\n        .signals(Signals.waitForAll(SignalsOptions.builder()\n                .timeout(Duration.minutes(10))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tinit: ec2.cloudFormationInit.fromElements(ec2.initFile.fromString(jsii.String(\"/etc/my_instance\"), jsii.String(\"This got written during instance startup\"))),\n\tsignals: autoscaling.signals.waitForAll(&signalsOptions{\n\t\ttimeout: *awscdkcore.Duration.minutes(jsii.Number(10)),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 322
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.Signals",
        "@aws-cdk/aws-autoscaling.Signals#waitForAll",
        "@aws-cdk/aws-autoscaling.SignalsOptions",
        "@aws-cdk/aws-ec2.CloudFormationInit",
        "@aws-cdk/aws-ec2.CloudFormationInit#fromElements",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InitElement",
        "@aws-cdk/aws-ec2.InitFile",
        "@aws-cdk/aws-ec2.InitFile#fromString",
        "@aws-cdk/aws-ec2.InstanceType",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 28,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "193": 2,
        "194": 8,
        "196": 4,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 3,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "84d50ae55a91b5b9828c5b71ef9d300fd97e60982e5bda838e575143a4821c62"
    },
    "652ceae555af355fdda334b6e8c690c9d81aaf96ca1ab0fb220538c3a9354224": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\n# Enable monitoring of all group metrics\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    group_metrics=[autoscaling.GroupMetrics.all()]\n)\n\n# Enable monitoring for a subset of group metrics\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    group_metrics=[autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\n// Enable monitoring of all group metrics\n// Enable monitoring of all group metrics\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    GroupMetrics = new [] { GroupMetrics.All() }\n});\n\n// Enable monitoring for a subset of group metrics\n// Enable monitoring for a subset of group metrics\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    GroupMetrics = new [] { new GroupMetrics(GroupMetric.MIN_SIZE, GroupMetric.MAX_SIZE) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\n// Enable monitoring of all group metrics\n// Enable monitoring of all group metrics\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .groupMetrics(List.of(GroupMetrics.all()))\n        .build();\n\n// Enable monitoring for a subset of group metrics\n// Enable monitoring for a subset of group metrics\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .groupMetrics(List.of(new GroupMetrics(GroupMetric.MIN_SIZE, GroupMetric.MAX_SIZE)))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\n// Enable monitoring of all group metrics\n// Enable monitoring of all group metrics\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tgroupMetrics: []groupMetrics{\n\t\tautoscaling.*groupMetrics.all(),\n\t},\n})\n\n// Enable monitoring for a subset of group metrics\n// Enable monitoring for a subset of group metrics\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tgroupMetrics: []*groupMetrics{\n\t\tautoscaling.NewGroupMetrics(autoscaling.groupMetric_MIN_SIZE(), autoscaling.*groupMetric_MAX_SIZE()),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 431
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.GroupMetric",
        "@aws-cdk/aws-autoscaling.GroupMetric#MAX_SIZE",
        "@aws-cdk/aws-autoscaling.GroupMetric#MIN_SIZE",
        "@aws-cdk/aws-autoscaling.GroupMetrics",
        "@aws-cdk/aws-autoscaling.GroupMetrics#all",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 32,
        "104": 2,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 2,
        "193": 2,
        "194": 9,
        "196": 1,
        "197": 3,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "281": 2,
        "282": 6,
        "290": 1
      },
      "fqnsFingerprint": "8737b0bddd30369df71f8e483ed05608d8ff2ee08be1b72999f5c462491dd1c9"
    },
    "17605457cadfdec2a9b8cb4841cae0a27a6329de27de836ecf33e9d3d7f1a341": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    termination_policies=[autoscaling.TerminationPolicy.OLDEST_INSTANCE, autoscaling.TerminationPolicy.DEFAULT\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    TerminationPolicies = new [] { TerminationPolicy.OLDEST_INSTANCE, TerminationPolicy.DEFAULT }\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .terminationPolicies(List.of(TerminationPolicy.OLDEST_INSTANCE, TerminationPolicy.DEFAULT))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tterminationPolicies: []terminationPolicy{\n\t\tautoscaling.*terminationPolicy_OLDEST_INSTANCE,\n\t\tautoscaling.*terminationPolicy_DEFAULT,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  terminationPolicies: [\n    autoscaling.TerminationPolicy.OLDEST_INSTANCE,\n    autoscaling.TerminationPolicy.DEFAULT,\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 466
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.TerminationPolicy",
        "@aws-cdk/aws-autoscaling.TerminationPolicy#DEFAULT",
        "@aws-cdk/aws-autoscaling.TerminationPolicy#OLDEST_INSTANCE",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  terminationPolicies: [\n    autoscaling.TerminationPolicy.OLDEST_INSTANCE,\n    autoscaling.TerminationPolicy.DEFAULT,\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 21,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 1,
        "194": 5,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 1,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "bdf8f53fadf8f952710b60fef26ddbd31b09925e614e36809913bb2f689b78b3"
    },
    "311335bec2d4fad4404ee852c0cf7984bf9588e4606e3bdfb9afe51fc9c77bfa": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    new_instances_protected_from_scale_in=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    NewInstancesProtectedFromScaleIn = true\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .newInstancesProtectedFromScaleIn(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tnewInstancesProtectedFromScaleIn: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  newInstancesProtectedFromScaleIn: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 496
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  newInstancesProtectedFromScaleIn: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 15,
        "104": 1,
        "106": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 1,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "200b0660030e70f29ed0958d8748ece12de93cdacf1e6595a8a9463e0054e295"
    },
    "40481614c209632fa767760cee7a382d3a9bce2dcf502051be63984228b7d804": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    require_imdsv2=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    RequireImdsv2 = true\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .requireImdsv2(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\trequireImdsv2: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  requireImdsv2: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 522
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  requireImdsv2: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 15,
        "104": 1,
        "106": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 1,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "200b0660030e70f29ed0958d8748ece12de93cdacf1e6595a8a9463e0054e295"
    },
    "9bc853528c0aa9b037a65a9f898bac7689ee28e3ffd276e96b88655c95e7ba91": {
      "translations": {
        "python": {
          "source": "aspect = autoscaling.AutoScalingGroupRequireImdsv2Aspect()\n\nAspects.of(self).add(aspect)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroupRequireImdsv2Aspect aspect = new AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.Of(this).Add(aspect);",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroupRequireImdsv2Aspect aspect = new AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.of(this).add(aspect);",
          "version": "1"
        },
        "go": {
          "source": "aspect := autoscaling.NewAutoScalingGroupRequireImdsv2Aspect()\n\nawscdkcore.Aspects.of(this).add(aspect)",
          "version": "1"
        },
        "$": {
          "source": "const aspect = new autoscaling.AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.of(this).add(aspect);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 541
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroupRequireImdsv2Aspect",
        "@aws-cdk/core.Aspects#add",
        "@aws-cdk/core.Aspects#of",
        "@aws-cdk/core.IAspect",
        "@aws-cdk/core.IConstruct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst aspect = new autoscaling.AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.of(this).add(aspect);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "75": 7,
        "104": 1,
        "194": 3,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "2852375e04945c38ce10a480415c902044dc46450e3eafdb60f7a56014c27966"
    },
    "34b880ca2aa16b42be3915506217f798deb55a595b5e2467d9649b845ee8bd5f": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.add_warm_pool()",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.AddWarmPool();",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.addWarmPool();",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.addWarmPool()",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.addWarmPool();",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 551
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.addWarmPool();\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "75": 5,
        "130": 1,
        "153": 1,
        "169": 1,
        "194": 1,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "4c7dfb4a561fced8070b4d9a0b9fa6e350b55f467863b124ff54301cb535d6f9": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.add_warm_pool(\n    min_size=1,\n    reuse_on_scale_in=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.AddWarmPool(new WarmPoolOptions {\n    MinSize = 1,\n    ReuseOnScaleIn = true\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.addWarmPool(WarmPoolOptions.builder()\n        .minSize(1)\n        .reuseOnScaleIn(true)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.addWarmPool(&warmPoolOptions{\n\tminSize: jsii.Number(1),\n\treuseOnScaleIn: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.addWarmPool({\n  minSize: 1,\n  reuseOnScaleIn: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-autoscaling"
        },
        "field": {
          "field": "markdown",
          "line": 559
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.WarmPoolOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.addWarmPool({\n  minSize: 1,\n  reuseOnScaleIn: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "75": 7,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "68c6d143caa6650a04d8981796c1fd9e642b14bbeb9f9f8bea0761e3e14a132e"
    },
    "0c6ee85b7c2dc833c0b128581103bb53139762b2152784b93b160e3838813a6b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nadjustment_tier = autoscaling.AdjustmentTier(\n    adjustment=123,\n\n    # the properties below are optional\n    lower_bound=123,\n    upper_bound=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nAdjustmentTier adjustmentTier = new AdjustmentTier {\n    Adjustment = 123,\n\n    // the properties below are optional\n    LowerBound = 123,\n    UpperBound = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nAdjustmentTier adjustmentTier = AdjustmentTier.builder()\n        .adjustment(123)\n\n        // the properties below are optional\n        .lowerBound(123)\n        .upperBound(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nadjustmentTier := &adjustmentTier{\n\tadjustment: jsii.Number(123),\n\n\t// the properties below are optional\n\tlowerBound: jsii.Number(123),\n\tupperBound: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst adjustmentTier: autoscaling.AdjustmentTier = {\n  adjustment: 123,\n\n  // the properties below are optional\n  lowerBound: 123,\n  upperBound: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.AdjustmentTier"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AdjustmentTier"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst adjustmentTier: autoscaling.AdjustmentTier = {\n  adjustment: 123,\n\n  // the properties below are optional\n  lowerBound: 123,\n  upperBound: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 1,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "bd8acbd9b069f894a4dec19c51cfd71e973c05d590690ab2bef70afb24cb0c32"
    },
    "ad22e947e96c070e1ec5f52bcd39c08c9124922cb9bcc15590d24b5080d01f33": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nworker_utilization_metric = cloudwatch.Metric(\n    namespace=\"MyService\",\n    metric_name=\"WorkerUtilization\"\n)\n\nauto_scaling_group.scale_on_metric(\"ScaleToCPU\",\n    metric=worker_utilization_metric,\n    scaling_steps=[autoscaling.ScalingInterval(upper=10, change=-1), autoscaling.ScalingInterval(lower=50, change=+1), autoscaling.ScalingInterval(lower=70, change=+3)\n    ],\n\n    # Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n    # 'change' numbers before as percentages instead of capacity counts.\n    adjustment_type=autoscaling.AdjustmentType.CHANGE_IN_CAPACITY\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nMetric workerUtilizationMetric = new Metric(new MetricProps {\n    Namespace = \"MyService\",\n    MetricName = \"WorkerUtilization\"\n});\n\nautoScalingGroup.ScaleOnMetric(\"ScaleToCPU\", new BasicStepScalingPolicyProps {\n    Metric = workerUtilizationMetric,\n    ScalingSteps = new [] { new ScalingInterval { Upper = 10, Change = -1 }, new ScalingInterval { Lower = 50, Change = +1 }, new ScalingInterval { Lower = 70, Change = +3 } },\n\n    // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n    // 'change' numbers before as percentages instead of capacity counts.\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nMetric workerUtilizationMetric = Metric.Builder.create()\n        .namespace(\"MyService\")\n        .metricName(\"WorkerUtilization\")\n        .build();\n\nautoScalingGroup.scaleOnMetric(\"ScaleToCPU\", BasicStepScalingPolicyProps.builder()\n        .metric(workerUtilizationMetric)\n        .scalingSteps(List.of(ScalingInterval.builder().upper(10).change(-1).build(), ScalingInterval.builder().lower(50).change(+1).build(), ScalingInterval.builder().lower(70).change(+3).build()))\n\n        // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n        // 'change' numbers before as percentages instead of capacity counts.\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nworkerUtilizationMetric := cloudwatch.NewMetric(&metricProps{\n\tnamespace: jsii.String(\"MyService\"),\n\tmetricName: jsii.String(\"WorkerUtilization\"),\n})\n\nautoScalingGroup.scaleOnMetric(jsii.String(\"ScaleToCPU\"), &basicStepScalingPolicyProps{\n\tmetric: workerUtilizationMetric,\n\tscalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tupper: jsii.Number(10),\n\t\t\tchange: -jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tlower: jsii.Number(50),\n\t\t\tchange: +jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tlower: jsii.Number(70),\n\t\t\tchange: +jsii.Number(3),\n\t\t},\n\t},\n\n\t// Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n\t// 'change' numbers before as percentages instead of capacity counts.\n\tadjustmentType: autoscaling.adjustmentType_CHANGE_IN_CAPACITY,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.AdjustmentType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AdjustmentType",
        "@aws-cdk/aws-autoscaling.AdjustmentType#CHANGE_IN_CAPACITY",
        "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps",
        "@aws-cdk/aws-cloudwatch.IMetric",
        "@aws-cdk/aws-cloudwatch.Metric",
        "@aws-cdk/aws-cloudwatch.MetricProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 6,
        "10": 3,
        "75": 23,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 5,
        "194": 4,
        "196": 1,
        "197": 1,
        "207": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "9abc85d593c01583c31aa95da6b53c5a50e45135cd879d0b396eb94dbefad548"
    },
    "ebaf514235b1b30a8a2b8a732f9ea10fd7ab0e84dc808f5752e7eab59ba460c7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\napply_cloud_formation_init_options = autoscaling.ApplyCloudFormationInitOptions(\n    config_sets=[\"configSets\"],\n    embed_fingerprint=False,\n    ignore_failures=False,\n    include_role=False,\n    include_url=False,\n    print_log=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nApplyCloudFormationInitOptions applyCloudFormationInitOptions = new ApplyCloudFormationInitOptions {\n    ConfigSets = new [] { \"configSets\" },\n    EmbedFingerprint = false,\n    IgnoreFailures = false,\n    IncludeRole = false,\n    IncludeUrl = false,\n    PrintLog = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nApplyCloudFormationInitOptions applyCloudFormationInitOptions = ApplyCloudFormationInitOptions.builder()\n        .configSets(List.of(\"configSets\"))\n        .embedFingerprint(false)\n        .ignoreFailures(false)\n        .includeRole(false)\n        .includeUrl(false)\n        .printLog(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\napplyCloudFormationInitOptions := &applyCloudFormationInitOptions{\n\tconfigSets: []*string{\n\t\tjsii.String(\"configSets\"),\n\t},\n\tembedFingerprint: jsii.Boolean(false),\n\tignoreFailures: jsii.Boolean(false),\n\tincludeRole: jsii.Boolean(false),\n\tincludeUrl: jsii.Boolean(false),\n\tprintLog: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst applyCloudFormationInitOptions: autoscaling.ApplyCloudFormationInitOptions = {\n  configSets: ['configSets'],\n  embedFingerprint: false,\n  ignoreFailures: false,\n  includeRole: false,\n  includeUrl: false,\n  printLog: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.ApplyCloudFormationInitOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.ApplyCloudFormationInitOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applyCloudFormationInitOptions: autoscaling.ApplyCloudFormationInitOptions = {\n  configSets: ['configSets'],\n  embedFingerprint: false,\n  ignoreFailures: false,\n  includeRole: false,\n  includeUrl: false,\n  printLog: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 10,
        "91": 5,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "de63f8353dd7f47529377061fbcb8db939acbfd7df6f38dcdb27d6a1eecb548f"
    },
    "70c2e753c1c7c377fc37768a249073090e2ed02dcad158a605e94f237631428b": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\nmy_security_group = ec2.SecurityGroup(self, \"SecurityGroup\", vpc=vpc)\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n    machine_image=ec2.AmazonLinuxImage(),\n    security_group=my_security_group\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\nSecurityGroup mySecurityGroup = new SecurityGroup(this, \"SecurityGroup\", new SecurityGroupProps { Vpc = vpc });\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.Of(InstanceClass.BURSTABLE2, InstanceSize.MICRO),\n    MachineImage = new AmazonLinuxImage(),\n    SecurityGroup = mySecurityGroup\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\nSecurityGroup mySecurityGroup = SecurityGroup.Builder.create(this, \"SecurityGroup\").vpc(vpc).build();\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(InstanceType.of(InstanceClass.BURSTABLE2, InstanceSize.MICRO))\n        .machineImage(new AmazonLinuxImage())\n        .securityGroup(mySecurityGroup)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\nmySecurityGroup := ec2.NewSecurityGroup(this, jsii.String(\"SecurityGroup\"), &securityGroupProps{\n\tvpc: vpc,\n})\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: ec2.instanceType.of(ec2.instanceClass_BURSTABLE2, ec2.instanceSize_MICRO),\n\tmachineImage: ec2.NewAmazonLinuxImage(),\n\tsecurityGroup: mySecurityGroup,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-ec2.AmazonLinuxImage",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.ISecurityGroup",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceClass",
        "@aws-cdk/aws-ec2.InstanceClass#BURSTABLE2",
        "@aws-cdk/aws-ec2.InstanceSize",
        "@aws-cdk/aws-ec2.InstanceSize#MICRO",
        "@aws-cdk/aws-ec2.InstanceType",
        "@aws-cdk/aws-ec2.InstanceType#of",
        "@aws-cdk/aws-ec2.SecurityGroup",
        "@aws-cdk/aws-ec2.SecurityGroupProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 25,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 9,
        "196": 1,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 3,
        "282": 2,
        "290": 1
      },
      "fqnsFingerprint": "582f33f3abd07f863f698ac6f4656819d67ff89ac0fcd3ea0b702d11ea1a0911"
    },
    "6d8b9cee2adc901bdac63b49b02ab0c1ab6e22263f477b611d48cee70ed0c8a6": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n\n\nmy_security_group = ec2.SecurityGroup(self, \"SecurityGroup\", vpc=vpc)\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n    machine_image=ec2.AmazonLinuxImage(),\n    security_group=my_security_group\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\n\n\nSecurityGroup mySecurityGroup = new SecurityGroup(this, \"SecurityGroup\", new SecurityGroupProps { Vpc = vpc });\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = InstanceType.Of(InstanceClass.BURSTABLE2, InstanceSize.MICRO),\n    MachineImage = new AmazonLinuxImage(),\n    SecurityGroup = mySecurityGroup\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\n\n\nSecurityGroup mySecurityGroup = SecurityGroup.Builder.create(this, \"SecurityGroup\").vpc(vpc).build();\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(InstanceType.of(InstanceClass.BURSTABLE2, InstanceSize.MICRO))\n        .machineImage(new AmazonLinuxImage())\n        .securityGroup(mySecurityGroup)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\n\n\nmySecurityGroup := ec2.NewSecurityGroup(this, jsii.String(\"SecurityGroup\"), &securityGroupProps{\n\tvpc: vpc,\n})\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: ec2.instanceType.of(ec2.instanceClass_BURSTABLE2, ec2.instanceSize_MICRO),\n\tmachineImage: ec2.NewAmazonLinuxImage(),\n\tsecurityGroup: mySecurityGroup,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-ec2.AmazonLinuxImage",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.ISecurityGroup",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceClass",
        "@aws-cdk/aws-ec2.InstanceClass#BURSTABLE2",
        "@aws-cdk/aws-ec2.InstanceSize",
        "@aws-cdk/aws-ec2.InstanceSize#MICRO",
        "@aws-cdk/aws-ec2.InstanceType",
        "@aws-cdk/aws-ec2.InstanceType#of",
        "@aws-cdk/aws-ec2.SecurityGroup",
        "@aws-cdk/aws-ec2.SecurityGroupProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst mySecurityGroup = new ec2.SecurityGroup(this, 'SecurityGroup', { vpc });\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.BURSTABLE2, ec2.InstanceSize.MICRO),\n  machineImage: new ec2.AmazonLinuxImage(),\n  securityGroup: mySecurityGroup,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 25,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 9,
        "196": 1,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 3,
        "282": 2,
        "290": 1
      },
      "fqnsFingerprint": "582f33f3abd07f863f698ac6f4656819d67ff89ac0fcd3ea0b702d11ea1a0911"
    },
    "28ae5b05845d46b2e8189cb3397a5565e8c4594ad255bd27587ab88259a1e97f": {
      "translations": {
        "python": {
          "source": "role = iam.Role(self, \"MyRole\",\n    assumed_by=iam.ServicePrincipal(\"ec2.amazonaws.com\")\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Role role = new Role(this, \"MyRole\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"ec2.amazonaws.com\")\n});",
          "version": "1"
        },
        "java": {
          "source": "Role role = Role.Builder.create(this, \"MyRole\")\n        .assumedBy(new ServicePrincipal(\"ec2.amazonaws.com\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "role := iam.NewRole(this, jsii.String(\"MyRole\"), &roleProps{\n\tassumedBy: iam.NewServicePrincipal(jsii.String(\"ec2.amazonaws.com\")),\n})",
          "version": "1"
        },
        "$": {
          "source": "   const role = new iam.Role(this, 'MyRole', {\n     assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com')\n   });",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "member",
          "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
          "memberName": "role"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-iam.ServicePrincipal",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n   const role = new iam.Role(this, 'MyRole', {\n     assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com')\n   });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "104": 1,
        "193": 1,
        "194": 2,
        "197": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "5d5a5213a303bc12c8bad18eb89e3f66569eee6f3f4c6d2c824ab2184953b1eb"
    },
    "dea925ebb274e65be14ec78ac461418fadc1b9611546a14b6ec6598fd87d5a92": {
      "translations": {
        "python": {
          "source": "aspect = autoscaling.AutoScalingGroupRequireImdsv2Aspect()\n\nAspects.of(self).add(aspect)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroupRequireImdsv2Aspect aspect = new AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.Of(this).Add(aspect);",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroupRequireImdsv2Aspect aspect = new AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.of(this).add(aspect);",
          "version": "1"
        },
        "go": {
          "source": "aspect := autoscaling.NewAutoScalingGroupRequireImdsv2Aspect()\n\nawscdkcore.Aspects.of(this).add(aspect)",
          "version": "1"
        },
        "$": {
          "source": "const aspect = new autoscaling.AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.of(this).add(aspect);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroupRequireImdsv2Aspect"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroupRequireImdsv2Aspect",
        "@aws-cdk/core.Aspects#add",
        "@aws-cdk/core.Aspects#of",
        "@aws-cdk/core.IAspect",
        "@aws-cdk/core.IConstruct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst aspect = new autoscaling.AutoScalingGroupRequireImdsv2Aspect();\n\nAspects.of(this).add(aspect);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "75": 7,
        "104": 1,
        "194": 3,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "2852375e04945c38ce10a480415c902044dc46450e3eafdb60f7a56014c27966"
    },
    "69bb7dd62235a0b5f3b7d7528ff56c7a64109841e6d89dda2a240373dced2395": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.core as cdk\n\nbase_target_tracking_props = autoscaling.BaseTargetTrackingProps(\n    cooldown=cdk.Duration.minutes(30),\n    disable_scale_in=False,\n    estimated_instance_warmup=cdk.Duration.minutes(30)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK;\nBaseTargetTrackingProps baseTargetTrackingProps = new BaseTargetTrackingProps {\n    Cooldown = Duration.Minutes(30),\n    DisableScaleIn = false,\n    EstimatedInstanceWarmup = Duration.Minutes(30)\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nBaseTargetTrackingProps baseTargetTrackingProps = BaseTargetTrackingProps.builder()\n        .cooldown(Duration.minutes(30))\n        .disableScaleIn(false)\n        .estimatedInstanceWarmup(Duration.minutes(30))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nbaseTargetTrackingProps := &baseTargetTrackingProps{\n\tcooldown: cdk.duration.minutes(jsii.Number(30)),\n\tdisableScaleIn: jsii.Boolean(false),\n\testimatedInstanceWarmup: cdk.*duration.minutes(jsii.Number(30)),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst baseTargetTrackingProps: autoscaling.BaseTargetTrackingProps = {\n  cooldown: cdk.Duration.minutes(30),\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.BaseTargetTrackingProps",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baseTargetTrackingProps: autoscaling.BaseTargetTrackingProps = {\n  cooldown: cdk.Duration.minutes(30),\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 14,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 4,
        "196": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "b279309037b46edc4dbadbf19a0f2c3c368e189ef67c6038f43112ac58b66194"
    },
    "bcfe0e24db12d1d0128d2a794a95860572c53d0d697ebf5a1cf1ee7ce763ab8f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.core as cdk\n\n# lifecycle_hook_target: autoscaling.ILifecycleHookTarget\n# role: iam.Role\n\nbasic_lifecycle_hook_props = autoscaling.BasicLifecycleHookProps(\n    lifecycle_transition=autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n    # the properties below are optional\n    default_result=autoscaling.DefaultResult.CONTINUE,\n    heartbeat_timeout=cdk.Duration.minutes(30),\n    lifecycle_hook_name=\"lifecycleHookName\",\n    notification_metadata=\"notificationMetadata\",\n    notification_target=lifecycle_hook_target,\n    role=role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK;\n\nILifecycleHookTarget lifecycleHookTarget;\nRole role;\nBasicLifecycleHookProps basicLifecycleHookProps = new BasicLifecycleHookProps {\n    LifecycleTransition = LifecycleTransition.INSTANCE_LAUNCHING,\n\n    // the properties below are optional\n    DefaultResult = DefaultResult.CONTINUE,\n    HeartbeatTimeout = Duration.Minutes(30),\n    LifecycleHookName = \"lifecycleHookName\",\n    NotificationMetadata = \"notificationMetadata\",\n    NotificationTarget = lifecycleHookTarget,\n    Role = role\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.core.*;\n\nILifecycleHookTarget lifecycleHookTarget;\nRole role;\n\nBasicLifecycleHookProps basicLifecycleHookProps = BasicLifecycleHookProps.builder()\n        .lifecycleTransition(LifecycleTransition.INSTANCE_LAUNCHING)\n\n        // the properties below are optional\n        .defaultResult(DefaultResult.CONTINUE)\n        .heartbeatTimeout(Duration.minutes(30))\n        .lifecycleHookName(\"lifecycleHookName\")\n        .notificationMetadata(\"notificationMetadata\")\n        .notificationTarget(lifecycleHookTarget)\n        .role(role)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar lifecycleHookTarget iLifecycleHookTarget\nvar role role\n\nbasicLifecycleHookProps := &basicLifecycleHookProps{\n\tlifecycleTransition: autoscaling.lifecycleTransition_INSTANCE_LAUNCHING,\n\n\t// the properties below are optional\n\tdefaultResult: autoscaling.defaultResult_CONTINUE,\n\theartbeatTimeout: cdk.duration.minutes(jsii.Number(30)),\n\tlifecycleHookName: jsii.String(\"lifecycleHookName\"),\n\tnotificationMetadata: jsii.String(\"notificationMetadata\"),\n\tnotificationTarget: lifecycleHookTarget,\n\trole: role,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\nconst basicLifecycleHookProps: autoscaling.BasicLifecycleHookProps = {\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.BasicLifecycleHookProps",
        "@aws-cdk/aws-autoscaling.DefaultResult",
        "@aws-cdk/aws-autoscaling.DefaultResult#CONTINUE",
        "@aws-cdk/aws-autoscaling.ILifecycleHookTarget",
        "@aws-cdk/aws-autoscaling.LifecycleTransition",
        "@aws-cdk/aws-autoscaling.LifecycleTransition#INSTANCE_LAUNCHING",
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst basicLifecycleHookProps: autoscaling.BasicLifecycleHookProps = {\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 30,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "194": 6,
        "196": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "72a3b1723bf23caa72bc21b69f78f2c8b2f69a93f8951d31c3c79809dce37d82"
    },
    "e17eac75536bbac681c339a227125a1ad18b1b7a6295eba0cd2d2e3a482026df": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.scale_on_schedule(\"PrescaleInTheMorning\",\n    schedule=autoscaling.Schedule.cron(hour=\"8\", minute=\"0\"),\n    min_capacity=20\n)\n\nauto_scaling_group.scale_on_schedule(\"AllowDownscalingAtNight\",\n    schedule=autoscaling.Schedule.cron(hour=\"20\", minute=\"0\"),\n    min_capacity=1\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.ScaleOnSchedule(\"PrescaleInTheMorning\", new BasicScheduledActionProps {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"8\", Minute = \"0\" }),\n    MinCapacity = 20\n});\n\nautoScalingGroup.ScaleOnSchedule(\"AllowDownscalingAtNight\", new BasicScheduledActionProps {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"20\", Minute = \"0\" }),\n    MinCapacity = 1\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.scaleOnSchedule(\"PrescaleInTheMorning\", BasicScheduledActionProps.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"8\").minute(\"0\").build()))\n        .minCapacity(20)\n        .build());\n\nautoScalingGroup.scaleOnSchedule(\"AllowDownscalingAtNight\", BasicScheduledActionProps.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"20\").minute(\"0\").build()))\n        .minCapacity(1)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.scaleOnSchedule(jsii.String(\"PrescaleInTheMorning\"), &basicScheduledActionProps{\n\tschedule: autoscaling.schedule.cron(&cronOptions{\n\t\thour: jsii.String(\"8\"),\n\t\tminute: jsii.String(\"0\"),\n\t}),\n\tminCapacity: jsii.Number(20),\n})\n\nautoScalingGroup.scaleOnSchedule(jsii.String(\"AllowDownscalingAtNight\"), &basicScheduledActionProps{\n\tschedule: autoscaling.*schedule.cron(&cronOptions{\n\t\thour: jsii.String(\"20\"),\n\t\tminute: jsii.String(\"0\"),\n\t}),\n\tminCapacity: jsii.Number(1),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nautoScalingGroup.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: autoscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.BasicScheduledActionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.BasicScheduledActionProps",
        "@aws-cdk/aws-autoscaling.CronOptions",
        "@aws-cdk/aws-autoscaling.Schedule",
        "@aws-cdk/aws-autoscaling.Schedule#cron"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.scaleOnSchedule('PrescaleInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0' }),\n  minCapacity: 20,\n});\n\nautoScalingGroup.scaleOnSchedule('AllowDownscalingAtNight', {\n  schedule: autoscaling.Schedule.cron({ hour: '20', minute: '0' }),\n  minCapacity: 1\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 6,
        "75": 21,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "194": 6,
        "196": 4,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "743295ef28e5e27a3ee68b97a83abdd7b4c9f9b56f3b5e92b80f454c8c9a0807"
    },
    "03ab1ad048626d98bdec2acf8fc2d1b791a63446d9105fa20422876717eebd94": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nworker_utilization_metric = cloudwatch.Metric(\n    namespace=\"MyService\",\n    metric_name=\"WorkerUtilization\"\n)\n\nauto_scaling_group.scale_on_metric(\"ScaleToCPU\",\n    metric=worker_utilization_metric,\n    scaling_steps=[autoscaling.ScalingInterval(upper=10, change=-1), autoscaling.ScalingInterval(lower=50, change=+1), autoscaling.ScalingInterval(lower=70, change=+3)\n    ],\n\n    # Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n    # 'change' numbers before as percentages instead of capacity counts.\n    adjustment_type=autoscaling.AdjustmentType.CHANGE_IN_CAPACITY\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nMetric workerUtilizationMetric = new Metric(new MetricProps {\n    Namespace = \"MyService\",\n    MetricName = \"WorkerUtilization\"\n});\n\nautoScalingGroup.ScaleOnMetric(\"ScaleToCPU\", new BasicStepScalingPolicyProps {\n    Metric = workerUtilizationMetric,\n    ScalingSteps = new [] { new ScalingInterval { Upper = 10, Change = -1 }, new ScalingInterval { Lower = 50, Change = +1 }, new ScalingInterval { Lower = 70, Change = +3 } },\n\n    // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n    // 'change' numbers before as percentages instead of capacity counts.\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nMetric workerUtilizationMetric = Metric.Builder.create()\n        .namespace(\"MyService\")\n        .metricName(\"WorkerUtilization\")\n        .build();\n\nautoScalingGroup.scaleOnMetric(\"ScaleToCPU\", BasicStepScalingPolicyProps.builder()\n        .metric(workerUtilizationMetric)\n        .scalingSteps(List.of(ScalingInterval.builder().upper(10).change(-1).build(), ScalingInterval.builder().lower(50).change(+1).build(), ScalingInterval.builder().lower(70).change(+3).build()))\n\n        // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n        // 'change' numbers before as percentages instead of capacity counts.\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nworkerUtilizationMetric := cloudwatch.NewMetric(&metricProps{\n\tnamespace: jsii.String(\"MyService\"),\n\tmetricName: jsii.String(\"WorkerUtilization\"),\n})\n\nautoScalingGroup.scaleOnMetric(jsii.String(\"ScaleToCPU\"), &basicStepScalingPolicyProps{\n\tmetric: workerUtilizationMetric,\n\tscalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tupper: jsii.Number(10),\n\t\t\tchange: -jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tlower: jsii.Number(50),\n\t\t\tchange: +jsii.Number(1),\n\t\t},\n\t\t&scalingInterval{\n\t\t\tlower: jsii.Number(70),\n\t\t\tchange: +jsii.Number(3),\n\t\t},\n\t},\n\n\t// Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n\t// 'change' numbers before as percentages instead of capacity counts.\n\tadjustmentType: autoscaling.adjustmentType_CHANGE_IN_CAPACITY,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AdjustmentType",
        "@aws-cdk/aws-autoscaling.AdjustmentType#CHANGE_IN_CAPACITY",
        "@aws-cdk/aws-autoscaling.BasicStepScalingPolicyProps",
        "@aws-cdk/aws-cloudwatch.IMetric",
        "@aws-cdk/aws-cloudwatch.Metric",
        "@aws-cdk/aws-cloudwatch.MetricProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst workerUtilizationMetric = new cloudwatch.Metric({\n    namespace: 'MyService',\n    metricName: 'WorkerUtilization'\n});\n\nautoScalingGroup.scaleOnMetric('ScaleToCPU', {\n  metric: workerUtilizationMetric,\n  scalingSteps: [\n    { upper: 10, change: -1 },\n    { lower: 50, change: +1 },\n    { lower: 70, change: +3 },\n  ],\n\n  // Change this to AdjustmentType.PERCENT_CHANGE_IN_CAPACITY to interpret the\n  // 'change' numbers before as percentages instead of capacity counts.\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 6,
        "10": 3,
        "75": 23,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 5,
        "194": 4,
        "196": 1,
        "197": 1,
        "207": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "9abc85d593c01583c31aa95da6b53c5a50e45135cd879d0b396eb94dbefad548"
    },
    "9462b40e07833f62a5ec92def3291ed1f2011378f133525125e179bf475172f3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.core as cdk\n\n# metric: cloudwatch.Metric\n\nbasic_target_tracking_scaling_policy_props = autoscaling.BasicTargetTrackingScalingPolicyProps(\n    target_value=123,\n\n    # the properties below are optional\n    cooldown=cdk.Duration.minutes(30),\n    custom_metric=metric,\n    disable_scale_in=False,\n    estimated_instance_warmup=cdk.Duration.minutes(30),\n    predefined_metric=autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n    resource_label=\"resourceLabel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK;\n\nMetric metric;\nBasicTargetTrackingScalingPolicyProps basicTargetTrackingScalingPolicyProps = new BasicTargetTrackingScalingPolicyProps {\n    TargetValue = 123,\n\n    // the properties below are optional\n    Cooldown = Duration.Minutes(30),\n    CustomMetric = metric,\n    DisableScaleIn = false,\n    EstimatedInstanceWarmup = Duration.Minutes(30),\n    PredefinedMetric = PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n    ResourceLabel = \"resourceLabel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.core.*;\n\nMetric metric;\n\nBasicTargetTrackingScalingPolicyProps basicTargetTrackingScalingPolicyProps = BasicTargetTrackingScalingPolicyProps.builder()\n        .targetValue(123)\n\n        // the properties below are optional\n        .cooldown(Duration.minutes(30))\n        .customMetric(metric)\n        .disableScaleIn(false)\n        .estimatedInstanceWarmup(Duration.minutes(30))\n        .predefinedMetric(PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION)\n        .resourceLabel(\"resourceLabel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar metric metric\n\nbasicTargetTrackingScalingPolicyProps := &basicTargetTrackingScalingPolicyProps{\n\ttargetValue: jsii.Number(123),\n\n\t// the properties below are optional\n\tcooldown: cdk.duration.minutes(jsii.Number(30)),\n\tcustomMetric: metric,\n\tdisableScaleIn: jsii.Boolean(false),\n\testimatedInstanceWarmup: cdk.*duration.minutes(jsii.Number(30)),\n\tpredefinedMetric: autoscaling.predefinedMetric_ASG_AVERAGE_CPU_UTILIZATION,\n\tresourceLabel: jsii.String(\"resourceLabel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\nconst basicTargetTrackingScalingPolicyProps: autoscaling.BasicTargetTrackingScalingPolicyProps = {\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.BasicTargetTrackingScalingPolicyProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.BasicTargetTrackingScalingPolicyProps",
        "@aws-cdk/aws-autoscaling.PredefinedMetric",
        "@aws-cdk/aws-autoscaling.PredefinedMetric#ASG_AVERAGE_CPU_UTILIZATION",
        "@aws-cdk/aws-cloudwatch.IMetric",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst basicTargetTrackingScalingPolicyProps: autoscaling.BasicTargetTrackingScalingPolicyProps = {\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 4,
        "75": 26,
        "91": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 6,
        "196": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "a6c9a0b9e90bff7087973922c09533314959b98986f120fd900f2a16246ab7cd"
    },
    "593b68047adf931a7f5d20c7bb1f6bfd6af19e99131ecb40e8e7d4bb2ae86565": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_iam as iam\n\n# lifecycle_hook: autoscaling.LifecycleHook\n# role: iam.Role\n\nbind_hook_target_options = autoscaling.BindHookTargetOptions(\n    lifecycle_hook=lifecycle_hook,\n\n    # the properties below are optional\n    role=role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.IAM;\n\nLifecycleHook lifecycleHook;\nRole role;\n\nBindHookTargetOptions bindHookTargetOptions = new BindHookTargetOptions {\n    LifecycleHook = lifecycleHook,\n\n    // the properties below are optional\n    Role = role\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.iam.*;\n\nLifecycleHook lifecycleHook;\nRole role;\n\nBindHookTargetOptions bindHookTargetOptions = BindHookTargetOptions.builder()\n        .lifecycleHook(lifecycleHook)\n\n        // the properties below are optional\n        .role(role)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar lifecycleHook lifecycleHook\nvar role role\n\nbindHookTargetOptions := &bindHookTargetOptions{\n\tlifecycleHook: lifecycleHook,\n\n\t// the properties below are optional\n\trole: role,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const lifecycleHook: autoscaling.LifecycleHook;\ndeclare const role: iam.Role;\nconst bindHookTargetOptions: autoscaling.BindHookTargetOptions = {\n  lifecycleHook: lifecycleHook,\n\n  // the properties below are optional\n  role: role,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.BindHookTargetOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.BindHookTargetOptions",
        "@aws-cdk/aws-autoscaling.LifecycleHook",
        "@aws-cdk/aws-iam.IRole"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const lifecycleHook: autoscaling.LifecycleHook;\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bindHookTargetOptions: autoscaling.BindHookTargetOptions = {\n  lifecycleHook: lifecycleHook,\n\n  // the properties below are optional\n  role: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 15,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "232dc84d8162bda3275dba0ca7fb7a6b85d1964b0ccb5258146fb869560bb2d1"
    },
    "8527fcf843fe28054d6600c48c8f1073aae2df20cc37c437c209b9cf576769d6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\n# block_device_volume: autoscaling.BlockDeviceVolume\n\nblock_device = autoscaling.BlockDevice(\n    device_name=\"deviceName\",\n    volume=block_device_volume,\n\n    # the properties below are optional\n    mapping_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nBlockDeviceVolume blockDeviceVolume;\n\nBlockDevice blockDevice = new BlockDevice {\n    DeviceName = \"deviceName\",\n    Volume = blockDeviceVolume,\n\n    // the properties below are optional\n    MappingEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nBlockDeviceVolume blockDeviceVolume;\n\nBlockDevice blockDevice = BlockDevice.builder()\n        .deviceName(\"deviceName\")\n        .volume(blockDeviceVolume)\n\n        // the properties below are optional\n        .mappingEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nvar blockDeviceVolume blockDeviceVolume\n\nblockDevice := &blockDevice{\n\tdeviceName: jsii.String(\"deviceName\"),\n\tvolume: blockDeviceVolume,\n\n\t// the properties below are optional\n\tmappingEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const blockDeviceVolume: autoscaling.BlockDeviceVolume;\nconst blockDevice: autoscaling.BlockDevice = {\n  deviceName: 'deviceName',\n  volume: blockDeviceVolume,\n\n  // the properties below are optional\n  mappingEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.BlockDevice"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.BlockDevice",
        "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const blockDeviceVolume: autoscaling.BlockDeviceVolume;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst blockDevice: autoscaling.BlockDevice = {\n  deviceName: 'deviceName',\n  volume: blockDeviceVolume,\n\n  // the properties below are optional\n  mappingEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 11,
        "91": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "41b4031fac0c6efc78a00274b054a70f8c367dc3270a5a60806c1b04fcdf8af4"
    },
    "1a02ce7893c668837815840849a458eb1256500ca0c469b80f9e03ccc5f9d21b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nblock_device_volume = autoscaling.BlockDeviceVolume.ebs(123,\n    delete_on_termination=False,\n    encrypted=False,\n    iops=123,\n    volume_type=autoscaling.EbsDeviceVolumeType.STANDARD\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nBlockDeviceVolume blockDeviceVolume = BlockDeviceVolume.Ebs(123, new EbsDeviceOptions {\n    DeleteOnTermination = false,\n    Encrypted = false,\n    Iops = 123,\n    VolumeType = EbsDeviceVolumeType.STANDARD\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nBlockDeviceVolume blockDeviceVolume = BlockDeviceVolume.ebs(123, EbsDeviceOptions.builder()\n        .deleteOnTermination(false)\n        .encrypted(false)\n        .iops(123)\n        .volumeType(EbsDeviceVolumeType.STANDARD)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nblockDeviceVolume := autoscaling.blockDeviceVolume.ebs(jsii.Number(123), &ebsDeviceOptions{\n\tdeleteOnTermination: jsii.Boolean(false),\n\tencrypted: jsii.Boolean(false),\n\tiops: jsii.Number(123),\n\tvolumeType: autoscaling.ebsDeviceVolumeType_STANDARD,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst blockDeviceVolume = autoscaling.BlockDeviceVolume.ebs(123, /* all optional props */ {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.BlockDeviceVolume"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.BlockDeviceVolume",
        "@aws-cdk/aws-autoscaling.BlockDeviceVolume#ebs",
        "@aws-cdk/aws-autoscaling.EbsDeviceOptions",
        "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType",
        "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType#STANDARD"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst blockDeviceVolume = autoscaling.BlockDeviceVolume.ebs(123, /* all optional props */ {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 12,
        "91": 2,
        "193": 1,
        "194": 4,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "2a01773179131c34f01cd05e607a2625a385eabbecb35e168622c22a93a70b36"
    },
    "ddf12c8ed4733d49aadcbbb0216a375b8605495e87a36d308abd99af9de26f2d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_auto_scaling_group = autoscaling.CfnAutoScalingGroup(self, \"MyCfnAutoScalingGroup\",\n    max_size=\"maxSize\",\n    min_size=\"minSize\",\n\n    # the properties below are optional\n    auto_scaling_group_name=\"autoScalingGroupName\",\n    availability_zones=[\"availabilityZones\"],\n    capacity_rebalance=False,\n    context=\"context\",\n    cooldown=\"cooldown\",\n    default_instance_warmup=123,\n    desired_capacity=\"desiredCapacity\",\n    desired_capacity_type=\"desiredCapacityType\",\n    health_check_grace_period=123,\n    health_check_type=\"healthCheckType\",\n    instance_id=\"instanceId\",\n    launch_configuration_name=\"launchConfigurationName\",\n    launch_template=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n        version=\"version\",\n\n        # the properties below are optional\n        launch_template_id=\"launchTemplateId\",\n        launch_template_name=\"launchTemplateName\"\n    ),\n    lifecycle_hook_specification_list=[autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty(\n        lifecycle_hook_name=\"lifecycleHookName\",\n        lifecycle_transition=\"lifecycleTransition\",\n\n        # the properties below are optional\n        default_result=\"defaultResult\",\n        heartbeat_timeout=123,\n        notification_metadata=\"notificationMetadata\",\n        notification_target_arn=\"notificationTargetArn\",\n        role_arn=\"roleArn\"\n    )],\n    load_balancer_names=[\"loadBalancerNames\"],\n    max_instance_lifetime=123,\n    metrics_collection=[autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty(\n        granularity=\"granularity\",\n\n        # the properties below are optional\n        metrics=[\"metrics\"]\n    )],\n    mixed_instances_policy=autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty(\n        launch_template=autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty(\n            launch_template_specification=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n                version=\"version\",\n\n                # the properties below are optional\n                launch_template_id=\"launchTemplateId\",\n                launch_template_name=\"launchTemplateName\"\n            ),\n\n            # the properties below are optional\n            overrides=[autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty(\n                instance_requirements=autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty(\n                    accelerator_count=autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    accelerator_manufacturers=[\"acceleratorManufacturers\"],\n                    accelerator_names=[\"acceleratorNames\"],\n                    accelerator_total_memory_mi_b=autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    accelerator_types=[\"acceleratorTypes\"],\n                    allowed_instance_types=[\"allowedInstanceTypes\"],\n                    bare_metal=\"bareMetal\",\n                    baseline_ebs_bandwidth_mbps=autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    burstable_performance=\"burstablePerformance\",\n                    cpu_manufacturers=[\"cpuManufacturers\"],\n                    excluded_instance_types=[\"excludedInstanceTypes\"],\n                    instance_generations=[\"instanceGenerations\"],\n                    local_storage=\"localStorage\",\n                    local_storage_types=[\"localStorageTypes\"],\n                    memory_gi_bPer_vCpu=autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    memory_mi_b=autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    network_bandwidth_gbps=autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    network_interface_count=autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    on_demand_max_price_percentage_over_lowest_price=123,\n                    require_hibernate_support=False,\n                    spot_max_price_percentage_over_lowest_price=123,\n                    total_local_storage_gb=autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    v_cpu_count=autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty(\n                        max=123,\n                        min=123\n                    )\n                ),\n                instance_type=\"instanceType\",\n                launch_template_specification=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n                    version=\"version\",\n\n                    # the properties below are optional\n                    launch_template_id=\"launchTemplateId\",\n                    launch_template_name=\"launchTemplateName\"\n                ),\n                weighted_capacity=\"weightedCapacity\"\n            )]\n        ),\n\n        # the properties below are optional\n        instances_distribution=autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty(\n            on_demand_allocation_strategy=\"onDemandAllocationStrategy\",\n            on_demand_base_capacity=123,\n            on_demand_percentage_above_base_capacity=123,\n            spot_allocation_strategy=\"spotAllocationStrategy\",\n            spot_instance_pools=123,\n            spot_max_price=\"spotMaxPrice\"\n        )\n    ),\n    new_instances_protected_from_scale_in=False,\n    notification_configurations=[autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty(\n        topic_arn=\"topicArn\",\n\n        # the properties below are optional\n        notification_types=[\"notificationTypes\"]\n    )],\n    placement_group=\"placementGroup\",\n    service_linked_role_arn=\"serviceLinkedRoleArn\",\n    tags=[autoscaling.CfnAutoScalingGroup.TagPropertyProperty(\n        key=\"key\",\n        propagate_at_launch=False,\n        value=\"value\"\n    )],\n    target_group_arns=[\"targetGroupArns\"],\n    termination_policies=[\"terminationPolicies\"],\n    vpc_zone_identifier=[\"vpcZoneIdentifier\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnAutoScalingGroup cfnAutoScalingGroup = new CfnAutoScalingGroup(this, \"MyCfnAutoScalingGroup\", new CfnAutoScalingGroupProps {\n    MaxSize = \"maxSize\",\n    MinSize = \"minSize\",\n\n    // the properties below are optional\n    AutoScalingGroupName = \"autoScalingGroupName\",\n    AvailabilityZones = new [] { \"availabilityZones\" },\n    CapacityRebalance = false,\n    Context = \"context\",\n    Cooldown = \"cooldown\",\n    DefaultInstanceWarmup = 123,\n    DesiredCapacity = \"desiredCapacity\",\n    DesiredCapacityType = \"desiredCapacityType\",\n    HealthCheckGracePeriod = 123,\n    HealthCheckType = \"healthCheckType\",\n    InstanceId = \"instanceId\",\n    LaunchConfigurationName = \"launchConfigurationName\",\n    LaunchTemplate = new LaunchTemplateSpecificationProperty {\n        Version = \"version\",\n\n        // the properties below are optional\n        LaunchTemplateId = \"launchTemplateId\",\n        LaunchTemplateName = \"launchTemplateName\"\n    },\n    LifecycleHookSpecificationList = new [] { new LifecycleHookSpecificationProperty {\n        LifecycleHookName = \"lifecycleHookName\",\n        LifecycleTransition = \"lifecycleTransition\",\n\n        // the properties below are optional\n        DefaultResult = \"defaultResult\",\n        HeartbeatTimeout = 123,\n        NotificationMetadata = \"notificationMetadata\",\n        NotificationTargetArn = \"notificationTargetArn\",\n        RoleArn = \"roleArn\"\n    } },\n    LoadBalancerNames = new [] { \"loadBalancerNames\" },\n    MaxInstanceLifetime = 123,\n    MetricsCollection = new [] { new MetricsCollectionProperty {\n        Granularity = \"granularity\",\n\n        // the properties below are optional\n        Metrics = new [] { \"metrics\" }\n    } },\n    MixedInstancesPolicy = new MixedInstancesPolicyProperty {\n        LaunchTemplate = new LaunchTemplateProperty {\n            LaunchTemplateSpecification = new LaunchTemplateSpecificationProperty {\n                Version = \"version\",\n\n                // the properties below are optional\n                LaunchTemplateId = \"launchTemplateId\",\n                LaunchTemplateName = \"launchTemplateName\"\n            },\n\n            // the properties below are optional\n            Overrides = new [] { new LaunchTemplateOverridesProperty {\n                InstanceRequirements = new InstanceRequirementsProperty {\n                    AcceleratorCount = new AcceleratorCountRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    AcceleratorManufacturers = new [] { \"acceleratorManufacturers\" },\n                    AcceleratorNames = new [] { \"acceleratorNames\" },\n                    AcceleratorTotalMemoryMiB = new AcceleratorTotalMemoryMiBRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    AcceleratorTypes = new [] { \"acceleratorTypes\" },\n                    AllowedInstanceTypes = new [] { \"allowedInstanceTypes\" },\n                    BareMetal = \"bareMetal\",\n                    BaselineEbsBandwidthMbps = new BaselineEbsBandwidthMbpsRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    BurstablePerformance = \"burstablePerformance\",\n                    CpuManufacturers = new [] { \"cpuManufacturers\" },\n                    ExcludedInstanceTypes = new [] { \"excludedInstanceTypes\" },\n                    InstanceGenerations = new [] { \"instanceGenerations\" },\n                    LocalStorage = \"localStorage\",\n                    LocalStorageTypes = new [] { \"localStorageTypes\" },\n                    MemoryGiBPerVCpu = new MemoryGiBPerVCpuRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    MemoryMiB = new MemoryMiBRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    NetworkBandwidthGbps = new NetworkBandwidthGbpsRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    NetworkInterfaceCount = new NetworkInterfaceCountRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    OnDemandMaxPricePercentageOverLowestPrice = 123,\n                    RequireHibernateSupport = false,\n                    SpotMaxPricePercentageOverLowestPrice = 123,\n                    TotalLocalStorageGb = new TotalLocalStorageGBRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    VCpuCount = new VCpuCountRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    }\n                },\n                InstanceType = \"instanceType\",\n                LaunchTemplateSpecification = new LaunchTemplateSpecificationProperty {\n                    Version = \"version\",\n\n                    // the properties below are optional\n                    LaunchTemplateId = \"launchTemplateId\",\n                    LaunchTemplateName = \"launchTemplateName\"\n                },\n                WeightedCapacity = \"weightedCapacity\"\n            } }\n        },\n\n        // the properties below are optional\n        InstancesDistribution = new InstancesDistributionProperty {\n            OnDemandAllocationStrategy = \"onDemandAllocationStrategy\",\n            OnDemandBaseCapacity = 123,\n            OnDemandPercentageAboveBaseCapacity = 123,\n            SpotAllocationStrategy = \"spotAllocationStrategy\",\n            SpotInstancePools = 123,\n            SpotMaxPrice = \"spotMaxPrice\"\n        }\n    },\n    NewInstancesProtectedFromScaleIn = false,\n    NotificationConfigurations = new [] { new NotificationConfigurationProperty {\n        TopicArn = \"topicArn\",\n\n        // the properties below are optional\n        NotificationTypes = new [] { \"notificationTypes\" }\n    } },\n    PlacementGroup = \"placementGroup\",\n    ServiceLinkedRoleArn = \"serviceLinkedRoleArn\",\n    Tags = new [] { new TagPropertyProperty {\n        Key = \"key\",\n        PropagateAtLaunch = false,\n        Value = \"value\"\n    } },\n    TargetGroupArns = new [] { \"targetGroupArns\" },\n    TerminationPolicies = new [] { \"terminationPolicies\" },\n    VpcZoneIdentifier = new [] { \"vpcZoneIdentifier\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnAutoScalingGroup cfnAutoScalingGroup = CfnAutoScalingGroup.Builder.create(this, \"MyCfnAutoScalingGroup\")\n        .maxSize(\"maxSize\")\n        .minSize(\"minSize\")\n\n        // the properties below are optional\n        .autoScalingGroupName(\"autoScalingGroupName\")\n        .availabilityZones(List.of(\"availabilityZones\"))\n        .capacityRebalance(false)\n        .context(\"context\")\n        .cooldown(\"cooldown\")\n        .defaultInstanceWarmup(123)\n        .desiredCapacity(\"desiredCapacity\")\n        .desiredCapacityType(\"desiredCapacityType\")\n        .healthCheckGracePeriod(123)\n        .healthCheckType(\"healthCheckType\")\n        .instanceId(\"instanceId\")\n        .launchConfigurationName(\"launchConfigurationName\")\n        .launchTemplate(LaunchTemplateSpecificationProperty.builder()\n                .version(\"version\")\n\n                // the properties below are optional\n                .launchTemplateId(\"launchTemplateId\")\n                .launchTemplateName(\"launchTemplateName\")\n                .build())\n        .lifecycleHookSpecificationList(List.of(LifecycleHookSpecificationProperty.builder()\n                .lifecycleHookName(\"lifecycleHookName\")\n                .lifecycleTransition(\"lifecycleTransition\")\n\n                // the properties below are optional\n                .defaultResult(\"defaultResult\")\n                .heartbeatTimeout(123)\n                .notificationMetadata(\"notificationMetadata\")\n                .notificationTargetArn(\"notificationTargetArn\")\n                .roleArn(\"roleArn\")\n                .build()))\n        .loadBalancerNames(List.of(\"loadBalancerNames\"))\n        .maxInstanceLifetime(123)\n        .metricsCollection(List.of(MetricsCollectionProperty.builder()\n                .granularity(\"granularity\")\n\n                // the properties below are optional\n                .metrics(List.of(\"metrics\"))\n                .build()))\n        .mixedInstancesPolicy(MixedInstancesPolicyProperty.builder()\n                .launchTemplate(LaunchTemplateProperty.builder()\n                        .launchTemplateSpecification(LaunchTemplateSpecificationProperty.builder()\n                                .version(\"version\")\n\n                                // the properties below are optional\n                                .launchTemplateId(\"launchTemplateId\")\n                                .launchTemplateName(\"launchTemplateName\")\n                                .build())\n\n                        // the properties below are optional\n                        .overrides(List.of(LaunchTemplateOverridesProperty.builder()\n                                .instanceRequirements(InstanceRequirementsProperty.builder()\n                                        .acceleratorCount(AcceleratorCountRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .acceleratorManufacturers(List.of(\"acceleratorManufacturers\"))\n                                        .acceleratorNames(List.of(\"acceleratorNames\"))\n                                        .acceleratorTotalMemoryMiB(AcceleratorTotalMemoryMiBRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .acceleratorTypes(List.of(\"acceleratorTypes\"))\n                                        .allowedInstanceTypes(List.of(\"allowedInstanceTypes\"))\n                                        .bareMetal(\"bareMetal\")\n                                        .baselineEbsBandwidthMbps(BaselineEbsBandwidthMbpsRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .burstablePerformance(\"burstablePerformance\")\n                                        .cpuManufacturers(List.of(\"cpuManufacturers\"))\n                                        .excludedInstanceTypes(List.of(\"excludedInstanceTypes\"))\n                                        .instanceGenerations(List.of(\"instanceGenerations\"))\n                                        .localStorage(\"localStorage\")\n                                        .localStorageTypes(List.of(\"localStorageTypes\"))\n                                        .memoryGiBPerVCpu(MemoryGiBPerVCpuRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .memoryMiB(MemoryMiBRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .networkBandwidthGbps(NetworkBandwidthGbpsRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .networkInterfaceCount(NetworkInterfaceCountRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .onDemandMaxPricePercentageOverLowestPrice(123)\n                                        .requireHibernateSupport(false)\n                                        .spotMaxPricePercentageOverLowestPrice(123)\n                                        .totalLocalStorageGb(TotalLocalStorageGBRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .vCpuCount(VCpuCountRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .build())\n                                .instanceType(\"instanceType\")\n                                .launchTemplateSpecification(LaunchTemplateSpecificationProperty.builder()\n                                        .version(\"version\")\n\n                                        // the properties below are optional\n                                        .launchTemplateId(\"launchTemplateId\")\n                                        .launchTemplateName(\"launchTemplateName\")\n                                        .build())\n                                .weightedCapacity(\"weightedCapacity\")\n                                .build()))\n                        .build())\n\n                // the properties below are optional\n                .instancesDistribution(InstancesDistributionProperty.builder()\n                        .onDemandAllocationStrategy(\"onDemandAllocationStrategy\")\n                        .onDemandBaseCapacity(123)\n                        .onDemandPercentageAboveBaseCapacity(123)\n                        .spotAllocationStrategy(\"spotAllocationStrategy\")\n                        .spotInstancePools(123)\n                        .spotMaxPrice(\"spotMaxPrice\")\n                        .build())\n                .build())\n        .newInstancesProtectedFromScaleIn(false)\n        .notificationConfigurations(List.of(NotificationConfigurationProperty.builder()\n                .topicArn(\"topicArn\")\n\n                // the properties below are optional\n                .notificationTypes(List.of(\"notificationTypes\"))\n                .build()))\n        .placementGroup(\"placementGroup\")\n        .serviceLinkedRoleArn(\"serviceLinkedRoleArn\")\n        .tags(List.of(TagPropertyProperty.builder()\n                .key(\"key\")\n                .propagateAtLaunch(false)\n                .value(\"value\")\n                .build()))\n        .targetGroupArns(List.of(\"targetGroupArns\"))\n        .terminationPolicies(List.of(\"terminationPolicies\"))\n        .vpcZoneIdentifier(List.of(\"vpcZoneIdentifier\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnAutoScalingGroup := autoscaling.NewCfnAutoScalingGroup(this, jsii.String(\"MyCfnAutoScalingGroup\"), &cfnAutoScalingGroupProps{\n\tmaxSize: jsii.String(\"maxSize\"),\n\tminSize: jsii.String(\"minSize\"),\n\n\t// the properties below are optional\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\tavailabilityZones: []*string{\n\t\tjsii.String(\"availabilityZones\"),\n\t},\n\tcapacityRebalance: jsii.Boolean(false),\n\tcontext: jsii.String(\"context\"),\n\tcooldown: jsii.String(\"cooldown\"),\n\tdefaultInstanceWarmup: jsii.Number(123),\n\tdesiredCapacity: jsii.String(\"desiredCapacity\"),\n\tdesiredCapacityType: jsii.String(\"desiredCapacityType\"),\n\thealthCheckGracePeriod: jsii.Number(123),\n\thealthCheckType: jsii.String(\"healthCheckType\"),\n\tinstanceId: jsii.String(\"instanceId\"),\n\tlaunchConfigurationName: jsii.String(\"launchConfigurationName\"),\n\tlaunchTemplate: &launchTemplateSpecificationProperty{\n\t\tversion: jsii.String(\"version\"),\n\n\t\t// the properties below are optional\n\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t},\n\tlifecycleHookSpecificationList: []interface{}{\n\t\t&lifecycleHookSpecificationProperty{\n\t\t\tlifecycleHookName: jsii.String(\"lifecycleHookName\"),\n\t\t\tlifecycleTransition: jsii.String(\"lifecycleTransition\"),\n\n\t\t\t// the properties below are optional\n\t\t\tdefaultResult: jsii.String(\"defaultResult\"),\n\t\t\theartbeatTimeout: jsii.Number(123),\n\t\t\tnotificationMetadata: jsii.String(\"notificationMetadata\"),\n\t\t\tnotificationTargetArn: jsii.String(\"notificationTargetArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t},\n\tloadBalancerNames: []*string{\n\t\tjsii.String(\"loadBalancerNames\"),\n\t},\n\tmaxInstanceLifetime: jsii.Number(123),\n\tmetricsCollection: []interface{}{\n\t\t&metricsCollectionProperty{\n\t\t\tgranularity: jsii.String(\"granularity\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmetrics: []*string{\n\t\t\t\tjsii.String(\"metrics\"),\n\t\t\t},\n\t\t},\n\t},\n\tmixedInstancesPolicy: &mixedInstancesPolicyProperty{\n\t\tlaunchTemplate: &launchTemplateProperty{\n\t\t\tlaunchTemplateSpecification: &launchTemplateSpecificationProperty{\n\t\t\t\tversion: jsii.String(\"version\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\t\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\toverrides: []interface{}{\n\t\t\t\t&launchTemplateOverridesProperty{\n\t\t\t\t\tinstanceRequirements: &instanceRequirementsProperty{\n\t\t\t\t\t\tacceleratorCount: &acceleratorCountRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tacceleratorManufacturers: []*string{\n\t\t\t\t\t\t\tjsii.String(\"acceleratorManufacturers\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tacceleratorNames: []*string{\n\t\t\t\t\t\t\tjsii.String(\"acceleratorNames\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tacceleratorTotalMemoryMiB: &acceleratorTotalMemoryMiBRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tacceleratorTypes: []*string{\n\t\t\t\t\t\t\tjsii.String(\"acceleratorTypes\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tallowedInstanceTypes: []*string{\n\t\t\t\t\t\t\tjsii.String(\"allowedInstanceTypes\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbareMetal: jsii.String(\"bareMetal\"),\n\t\t\t\t\t\tbaselineEbsBandwidthMbps: &baselineEbsBandwidthMbpsRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tburstablePerformance: jsii.String(\"burstablePerformance\"),\n\t\t\t\t\t\tcpuManufacturers: []*string{\n\t\t\t\t\t\t\tjsii.String(\"cpuManufacturers\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\texcludedInstanceTypes: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedInstanceTypes\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinstanceGenerations: []*string{\n\t\t\t\t\t\t\tjsii.String(\"instanceGenerations\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlocalStorage: jsii.String(\"localStorage\"),\n\t\t\t\t\t\tlocalStorageTypes: []*string{\n\t\t\t\t\t\t\tjsii.String(\"localStorageTypes\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmemoryGiBPerVCpu: &memoryGiBPerVCpuRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmemoryMiB: &memoryMiBRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnetworkBandwidthGbps: &networkBandwidthGbpsRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnetworkInterfaceCount: &networkInterfaceCountRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonDemandMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\t\t\t\t\t\trequireHibernateSupport: jsii.Boolean(false),\n\t\t\t\t\t\tspotMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\t\t\t\t\t\ttotalLocalStorageGb: &totalLocalStorageGBRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvCpuCount: &vCpuCountRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\t\tlaunchTemplateSpecification: &launchTemplateSpecificationProperty{\n\t\t\t\t\t\tversion: jsii.String(\"version\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\t\t\t\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t\t\t\t\t},\n\t\t\t\t\tweightedCapacity: jsii.String(\"weightedCapacity\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tinstancesDistribution: &instancesDistributionProperty{\n\t\t\tonDemandAllocationStrategy: jsii.String(\"onDemandAllocationStrategy\"),\n\t\t\tonDemandBaseCapacity: jsii.Number(123),\n\t\t\tonDemandPercentageAboveBaseCapacity: jsii.Number(123),\n\t\t\tspotAllocationStrategy: jsii.String(\"spotAllocationStrategy\"),\n\t\t\tspotInstancePools: jsii.Number(123),\n\t\t\tspotMaxPrice: jsii.String(\"spotMaxPrice\"),\n\t\t},\n\t},\n\tnewInstancesProtectedFromScaleIn: jsii.Boolean(false),\n\tnotificationConfigurations: []interface{}{\n\t\t&notificationConfigurationProperty{\n\t\t\ttopicArn: jsii.String(\"topicArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tnotificationTypes: []*string{\n\t\t\t\tjsii.String(\"notificationTypes\"),\n\t\t\t},\n\t\t},\n\t},\n\tplacementGroup: jsii.String(\"placementGroup\"),\n\tserviceLinkedRoleArn: jsii.String(\"serviceLinkedRoleArn\"),\n\ttags: []tagPropertyProperty{\n\t\t&tagPropertyProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tpropagateAtLaunch: jsii.Boolean(false),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttargetGroupArns: []*string{\n\t\tjsii.String(\"targetGroupArns\"),\n\t},\n\tterminationPolicies: []*string{\n\t\tjsii.String(\"terminationPolicies\"),\n\t},\n\tvpcZoneIdentifier: []*string{\n\t\tjsii.String(\"vpcZoneIdentifier\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnAutoScalingGroup = new autoscaling.CfnAutoScalingGroup(this, 'MyCfnAutoScalingGroup', {\n  maxSize: 'maxSize',\n  minSize: 'minSize',\n\n  // the properties below are optional\n  autoScalingGroupName: 'autoScalingGroupName',\n  availabilityZones: ['availabilityZones'],\n  capacityRebalance: false,\n  context: 'context',\n  cooldown: 'cooldown',\n  defaultInstanceWarmup: 123,\n  desiredCapacity: 'desiredCapacity',\n  desiredCapacityType: 'desiredCapacityType',\n  healthCheckGracePeriod: 123,\n  healthCheckType: 'healthCheckType',\n  instanceId: 'instanceId',\n  launchConfigurationName: 'launchConfigurationName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  lifecycleHookSpecificationList: [{\n    lifecycleHookName: 'lifecycleHookName',\n    lifecycleTransition: 'lifecycleTransition',\n\n    // the properties below are optional\n    defaultResult: 'defaultResult',\n    heartbeatTimeout: 123,\n    notificationMetadata: 'notificationMetadata',\n    notificationTargetArn: 'notificationTargetArn',\n    roleArn: 'roleArn',\n  }],\n  loadBalancerNames: ['loadBalancerNames'],\n  maxInstanceLifetime: 123,\n  metricsCollection: [{\n    granularity: 'granularity',\n\n    // the properties below are optional\n    metrics: ['metrics'],\n  }],\n  mixedInstancesPolicy: {\n    launchTemplate: {\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n\n      // the properties below are optional\n      overrides: [{\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          allowedInstanceTypes: ['allowedInstanceTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkBandwidthGbps: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        launchTemplateSpecification: {\n          version: 'version',\n\n          // the properties below are optional\n          launchTemplateId: 'launchTemplateId',\n          launchTemplateName: 'launchTemplateName',\n        },\n        weightedCapacity: 'weightedCapacity',\n      }],\n    },\n\n    // the properties below are optional\n    instancesDistribution: {\n      onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n      onDemandBaseCapacity: 123,\n      onDemandPercentageAboveBaseCapacity: 123,\n      spotAllocationStrategy: 'spotAllocationStrategy',\n      spotInstancePools: 123,\n      spotMaxPrice: 'spotMaxPrice',\n    },\n  },\n  newInstancesProtectedFromScaleIn: false,\n  notificationConfigurations: [{\n    topicArn: 'topicArn',\n\n    // the properties below are optional\n    notificationTypes: ['notificationTypes'],\n  }],\n  placementGroup: 'placementGroup',\n  serviceLinkedRoleArn: 'serviceLinkedRoleArn',\n  tags: [{\n    key: 'key',\n    propagateAtLaunch: false,\n    value: 'value',\n  }],\n  targetGroupArns: ['targetGroupArns'],\n  terminationPolicies: ['terminationPolicies'],\n  vpcZoneIdentifier: ['vpcZoneIdentifier'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroupProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAutoScalingGroup = new autoscaling.CfnAutoScalingGroup(this, 'MyCfnAutoScalingGroup', {\n  maxSize: 'maxSize',\n  minSize: 'minSize',\n\n  // the properties below are optional\n  autoScalingGroupName: 'autoScalingGroupName',\n  availabilityZones: ['availabilityZones'],\n  capacityRebalance: false,\n  context: 'context',\n  cooldown: 'cooldown',\n  defaultInstanceWarmup: 123,\n  desiredCapacity: 'desiredCapacity',\n  desiredCapacityType: 'desiredCapacityType',\n  healthCheckGracePeriod: 123,\n  healthCheckType: 'healthCheckType',\n  instanceId: 'instanceId',\n  launchConfigurationName: 'launchConfigurationName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  lifecycleHookSpecificationList: [{\n    lifecycleHookName: 'lifecycleHookName',\n    lifecycleTransition: 'lifecycleTransition',\n\n    // the properties below are optional\n    defaultResult: 'defaultResult',\n    heartbeatTimeout: 123,\n    notificationMetadata: 'notificationMetadata',\n    notificationTargetArn: 'notificationTargetArn',\n    roleArn: 'roleArn',\n  }],\n  loadBalancerNames: ['loadBalancerNames'],\n  maxInstanceLifetime: 123,\n  metricsCollection: [{\n    granularity: 'granularity',\n\n    // the properties below are optional\n    metrics: ['metrics'],\n  }],\n  mixedInstancesPolicy: {\n    launchTemplate: {\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n\n      // the properties below are optional\n      overrides: [{\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          allowedInstanceTypes: ['allowedInstanceTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkBandwidthGbps: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        launchTemplateSpecification: {\n          version: 'version',\n\n          // the properties below are optional\n          launchTemplateId: 'launchTemplateId',\n          launchTemplateName: 'launchTemplateName',\n        },\n        weightedCapacity: 'weightedCapacity',\n      }],\n    },\n\n    // the properties below are optional\n    instancesDistribution: {\n      onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n      onDemandBaseCapacity: 123,\n      onDemandPercentageAboveBaseCapacity: 123,\n      spotAllocationStrategy: 'spotAllocationStrategy',\n      spotInstancePools: 123,\n      spotMaxPrice: 'spotMaxPrice',\n    },\n  },\n  newInstancesProtectedFromScaleIn: false,\n  notificationConfigurations: [{\n    topicArn: 'topicArn',\n\n    // the properties below are optional\n    notificationTypes: ['notificationTypes'],\n  }],\n  placementGroup: 'placementGroup',\n  serviceLinkedRoleArn: 'serviceLinkedRoleArn',\n  tags: [{\n    key: 'key',\n    propagateAtLaunch: false,\n    value: 'value',\n  }],\n  targetGroupArns: ['targetGroupArns'],\n  terminationPolicies: ['terminationPolicies'],\n  vpcZoneIdentifier: ['vpcZoneIdentifier'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 27,
        "10": 56,
        "75": 110,
        "91": 4,
        "104": 1,
        "192": 20,
        "193": 22,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 106,
        "290": 1
      },
      "fqnsFingerprint": "b454f25f7bda81540e2f3636c4f30fd11cb0c11129fface037a2b176dcd1e841"
    },
    "21177fbb110bbee46f66e823dedfa2cf4f03e189f19c2534464f76d2762c8dad": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\naccelerator_count_request_property = autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty(\n    max=123,\n    min=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nAcceleratorCountRequestProperty acceleratorCountRequestProperty = new AcceleratorCountRequestProperty {\n    Max = 123,\n    Min = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nAcceleratorCountRequestProperty acceleratorCountRequestProperty = AcceleratorCountRequestProperty.builder()\n        .max(123)\n        .min(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nacceleratorCountRequestProperty := &acceleratorCountRequestProperty{\n\tmax: jsii.Number(123),\n\tmin: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst acceleratorCountRequestProperty: autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty = {\n  max: 123,\n  min: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst acceleratorCountRequestProperty: autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "2c592232939a767715624280df76392de6ce3862e0a190978467ce39aaf6cc3c"
    },
    "02f6edef44736db59c93b5d9edbdbb60fac40336c513268e84fdd23b0d8d7725": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\naccelerator_total_memory_mi_bRequest_property = autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty(\n    max=123,\n    min=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nAcceleratorTotalMemoryMiBRequestProperty acceleratorTotalMemoryMiBRequestProperty = new AcceleratorTotalMemoryMiBRequestProperty {\n    Max = 123,\n    Min = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nAcceleratorTotalMemoryMiBRequestProperty acceleratorTotalMemoryMiBRequestProperty = AcceleratorTotalMemoryMiBRequestProperty.builder()\n        .max(123)\n        .min(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nacceleratorTotalMemoryMiBRequestProperty := &acceleratorTotalMemoryMiBRequestProperty{\n\tmax: jsii.Number(123),\n\tmin: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst acceleratorTotalMemoryMiBRequestProperty: autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst acceleratorTotalMemoryMiBRequestProperty: autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "dc567cd18620f737e77ad0027d28d0351bd2a6d0c6af469cadd145710c17f326"
    },
    "e0972b153dd1fd254bd99de80edd65ad01d67b6f42549c8412ec110907284a9d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nbaseline_ebs_bandwidth_mbps_request_property = autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty(\n    max=123,\n    min=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nBaselineEbsBandwidthMbpsRequestProperty baselineEbsBandwidthMbpsRequestProperty = new BaselineEbsBandwidthMbpsRequestProperty {\n    Max = 123,\n    Min = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nBaselineEbsBandwidthMbpsRequestProperty baselineEbsBandwidthMbpsRequestProperty = BaselineEbsBandwidthMbpsRequestProperty.builder()\n        .max(123)\n        .min(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nbaselineEbsBandwidthMbpsRequestProperty := &baselineEbsBandwidthMbpsRequestProperty{\n\tmax: jsii.Number(123),\n\tmin: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst baselineEbsBandwidthMbpsRequestProperty: autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst baselineEbsBandwidthMbpsRequestProperty: autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ed8d6578db3edb2ee7122802e86a6a356ee4c356a7a3162780ae8072b31683a9"
    },
    "616c917d0d3362849b09b5fce3c2d286a1c461ed3a2f3219fb4ace41021379fa": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ninstance_requirements_property = autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty(\n    accelerator_count=autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty(\n        max=123,\n        min=123\n    ),\n    accelerator_manufacturers=[\"acceleratorManufacturers\"],\n    accelerator_names=[\"acceleratorNames\"],\n    accelerator_total_memory_mi_b=autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty(\n        max=123,\n        min=123\n    ),\n    accelerator_types=[\"acceleratorTypes\"],\n    allowed_instance_types=[\"allowedInstanceTypes\"],\n    bare_metal=\"bareMetal\",\n    baseline_ebs_bandwidth_mbps=autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty(\n        max=123,\n        min=123\n    ),\n    burstable_performance=\"burstablePerformance\",\n    cpu_manufacturers=[\"cpuManufacturers\"],\n    excluded_instance_types=[\"excludedInstanceTypes\"],\n    instance_generations=[\"instanceGenerations\"],\n    local_storage=\"localStorage\",\n    local_storage_types=[\"localStorageTypes\"],\n    memory_gi_bPer_vCpu=autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty(\n        max=123,\n        min=123\n    ),\n    memory_mi_b=autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty(\n        max=123,\n        min=123\n    ),\n    network_bandwidth_gbps=autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty(\n        max=123,\n        min=123\n    ),\n    network_interface_count=autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty(\n        max=123,\n        min=123\n    ),\n    on_demand_max_price_percentage_over_lowest_price=123,\n    require_hibernate_support=False,\n    spot_max_price_percentage_over_lowest_price=123,\n    total_local_storage_gb=autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty(\n        max=123,\n        min=123\n    ),\n    v_cpu_count=autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty(\n        max=123,\n        min=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nInstanceRequirementsProperty instanceRequirementsProperty = new InstanceRequirementsProperty {\n    AcceleratorCount = new AcceleratorCountRequestProperty {\n        Max = 123,\n        Min = 123\n    },\n    AcceleratorManufacturers = new [] { \"acceleratorManufacturers\" },\n    AcceleratorNames = new [] { \"acceleratorNames\" },\n    AcceleratorTotalMemoryMiB = new AcceleratorTotalMemoryMiBRequestProperty {\n        Max = 123,\n        Min = 123\n    },\n    AcceleratorTypes = new [] { \"acceleratorTypes\" },\n    AllowedInstanceTypes = new [] { \"allowedInstanceTypes\" },\n    BareMetal = \"bareMetal\",\n    BaselineEbsBandwidthMbps = new BaselineEbsBandwidthMbpsRequestProperty {\n        Max = 123,\n        Min = 123\n    },\n    BurstablePerformance = \"burstablePerformance\",\n    CpuManufacturers = new [] { \"cpuManufacturers\" },\n    ExcludedInstanceTypes = new [] { \"excludedInstanceTypes\" },\n    InstanceGenerations = new [] { \"instanceGenerations\" },\n    LocalStorage = \"localStorage\",\n    LocalStorageTypes = new [] { \"localStorageTypes\" },\n    MemoryGiBPerVCpu = new MemoryGiBPerVCpuRequestProperty {\n        Max = 123,\n        Min = 123\n    },\n    MemoryMiB = new MemoryMiBRequestProperty {\n        Max = 123,\n        Min = 123\n    },\n    NetworkBandwidthGbps = new NetworkBandwidthGbpsRequestProperty {\n        Max = 123,\n        Min = 123\n    },\n    NetworkInterfaceCount = new NetworkInterfaceCountRequestProperty {\n        Max = 123,\n        Min = 123\n    },\n    OnDemandMaxPricePercentageOverLowestPrice = 123,\n    RequireHibernateSupport = false,\n    SpotMaxPricePercentageOverLowestPrice = 123,\n    TotalLocalStorageGb = new TotalLocalStorageGBRequestProperty {\n        Max = 123,\n        Min = 123\n    },\n    VCpuCount = new VCpuCountRequestProperty {\n        Max = 123,\n        Min = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nInstanceRequirementsProperty instanceRequirementsProperty = InstanceRequirementsProperty.builder()\n        .acceleratorCount(AcceleratorCountRequestProperty.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .acceleratorManufacturers(List.of(\"acceleratorManufacturers\"))\n        .acceleratorNames(List.of(\"acceleratorNames\"))\n        .acceleratorTotalMemoryMiB(AcceleratorTotalMemoryMiBRequestProperty.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .acceleratorTypes(List.of(\"acceleratorTypes\"))\n        .allowedInstanceTypes(List.of(\"allowedInstanceTypes\"))\n        .bareMetal(\"bareMetal\")\n        .baselineEbsBandwidthMbps(BaselineEbsBandwidthMbpsRequestProperty.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .burstablePerformance(\"burstablePerformance\")\n        .cpuManufacturers(List.of(\"cpuManufacturers\"))\n        .excludedInstanceTypes(List.of(\"excludedInstanceTypes\"))\n        .instanceGenerations(List.of(\"instanceGenerations\"))\n        .localStorage(\"localStorage\")\n        .localStorageTypes(List.of(\"localStorageTypes\"))\n        .memoryGiBPerVCpu(MemoryGiBPerVCpuRequestProperty.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .memoryMiB(MemoryMiBRequestProperty.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .networkBandwidthGbps(NetworkBandwidthGbpsRequestProperty.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .networkInterfaceCount(NetworkInterfaceCountRequestProperty.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .onDemandMaxPricePercentageOverLowestPrice(123)\n        .requireHibernateSupport(false)\n        .spotMaxPricePercentageOverLowestPrice(123)\n        .totalLocalStorageGb(TotalLocalStorageGBRequestProperty.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .vCpuCount(VCpuCountRequestProperty.builder()\n                .max(123)\n                .min(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ninstanceRequirementsProperty := &instanceRequirementsProperty{\n\tacceleratorCount: &acceleratorCountRequestProperty{\n\t\tmax: jsii.Number(123),\n\t\tmin: jsii.Number(123),\n\t},\n\tacceleratorManufacturers: []*string{\n\t\tjsii.String(\"acceleratorManufacturers\"),\n\t},\n\tacceleratorNames: []*string{\n\t\tjsii.String(\"acceleratorNames\"),\n\t},\n\tacceleratorTotalMemoryMiB: &acceleratorTotalMemoryMiBRequestProperty{\n\t\tmax: jsii.Number(123),\n\t\tmin: jsii.Number(123),\n\t},\n\tacceleratorTypes: []*string{\n\t\tjsii.String(\"acceleratorTypes\"),\n\t},\n\tallowedInstanceTypes: []*string{\n\t\tjsii.String(\"allowedInstanceTypes\"),\n\t},\n\tbareMetal: jsii.String(\"bareMetal\"),\n\tbaselineEbsBandwidthMbps: &baselineEbsBandwidthMbpsRequestProperty{\n\t\tmax: jsii.Number(123),\n\t\tmin: jsii.Number(123),\n\t},\n\tburstablePerformance: jsii.String(\"burstablePerformance\"),\n\tcpuManufacturers: []*string{\n\t\tjsii.String(\"cpuManufacturers\"),\n\t},\n\texcludedInstanceTypes: []*string{\n\t\tjsii.String(\"excludedInstanceTypes\"),\n\t},\n\tinstanceGenerations: []*string{\n\t\tjsii.String(\"instanceGenerations\"),\n\t},\n\tlocalStorage: jsii.String(\"localStorage\"),\n\tlocalStorageTypes: []*string{\n\t\tjsii.String(\"localStorageTypes\"),\n\t},\n\tmemoryGiBPerVCpu: &memoryGiBPerVCpuRequestProperty{\n\t\tmax: jsii.Number(123),\n\t\tmin: jsii.Number(123),\n\t},\n\tmemoryMiB: &memoryMiBRequestProperty{\n\t\tmax: jsii.Number(123),\n\t\tmin: jsii.Number(123),\n\t},\n\tnetworkBandwidthGbps: &networkBandwidthGbpsRequestProperty{\n\t\tmax: jsii.Number(123),\n\t\tmin: jsii.Number(123),\n\t},\n\tnetworkInterfaceCount: &networkInterfaceCountRequestProperty{\n\t\tmax: jsii.Number(123),\n\t\tmin: jsii.Number(123),\n\t},\n\tonDemandMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\trequireHibernateSupport: jsii.Boolean(false),\n\tspotMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\ttotalLocalStorageGb: &totalLocalStorageGBRequestProperty{\n\t\tmax: jsii.Number(123),\n\t\tmin: jsii.Number(123),\n\t},\n\tvCpuCount: &vCpuCountRequestProperty{\n\t\tmax: jsii.Number(123),\n\t\tmin: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst instanceRequirementsProperty: autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty = {\n  acceleratorCount: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorManufacturers: ['acceleratorManufacturers'],\n  acceleratorNames: ['acceleratorNames'],\n  acceleratorTotalMemoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorTypes: ['acceleratorTypes'],\n  allowedInstanceTypes: ['allowedInstanceTypes'],\n  bareMetal: 'bareMetal',\n  baselineEbsBandwidthMbps: {\n    max: 123,\n    min: 123,\n  },\n  burstablePerformance: 'burstablePerformance',\n  cpuManufacturers: ['cpuManufacturers'],\n  excludedInstanceTypes: ['excludedInstanceTypes'],\n  instanceGenerations: ['instanceGenerations'],\n  localStorage: 'localStorage',\n  localStorageTypes: ['localStorageTypes'],\n  memoryGiBPerVCpu: {\n    max: 123,\n    min: 123,\n  },\n  memoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  networkBandwidthGbps: {\n    max: 123,\n    min: 123,\n  },\n  networkInterfaceCount: {\n    max: 123,\n    min: 123,\n  },\n  onDemandMaxPricePercentageOverLowestPrice: 123,\n  requireHibernateSupport: false,\n  spotMaxPricePercentageOverLowestPrice: 123,\n  totalLocalStorageGb: {\n    max: 123,\n    min: 123,\n  },\n  vCpuCount: {\n    max: 123,\n    min: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst instanceRequirementsProperty: autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty = {\n  acceleratorCount: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorManufacturers: ['acceleratorManufacturers'],\n  acceleratorNames: ['acceleratorNames'],\n  acceleratorTotalMemoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  acceleratorTypes: ['acceleratorTypes'],\n  allowedInstanceTypes: ['allowedInstanceTypes'],\n  bareMetal: 'bareMetal',\n  baselineEbsBandwidthMbps: {\n    max: 123,\n    min: 123,\n  },\n  burstablePerformance: 'burstablePerformance',\n  cpuManufacturers: ['cpuManufacturers'],\n  excludedInstanceTypes: ['excludedInstanceTypes'],\n  instanceGenerations: ['instanceGenerations'],\n  localStorage: 'localStorage',\n  localStorageTypes: ['localStorageTypes'],\n  memoryGiBPerVCpu: {\n    max: 123,\n    min: 123,\n  },\n  memoryMiB: {\n    max: 123,\n    min: 123,\n  },\n  networkBandwidthGbps: {\n    max: 123,\n    min: 123,\n  },\n  networkInterfaceCount: {\n    max: 123,\n    min: 123,\n  },\n  onDemandMaxPricePercentageOverLowestPrice: 123,\n  requireHibernateSupport: false,\n  spotMaxPricePercentageOverLowestPrice: 123,\n  totalLocalStorageGb: {\n    max: 123,\n    min: 123,\n  },\n  vCpuCount: {\n    max: 123,\n    min: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 20,
        "10": 12,
        "75": 46,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 8,
        "193": 10,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 41,
        "290": 1
      },
      "fqnsFingerprint": "822cd2d433144c5b4a5995f05221491c5d686ca17157f36dc53e9a046678641a"
    },
    "d2de7a7baec2251ed65c22ad934bb22020904ea0f36d6f1bfdfcc2b2892359d4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ninstances_distribution_property = autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty(\n    on_demand_allocation_strategy=\"onDemandAllocationStrategy\",\n    on_demand_base_capacity=123,\n    on_demand_percentage_above_base_capacity=123,\n    spot_allocation_strategy=\"spotAllocationStrategy\",\n    spot_instance_pools=123,\n    spot_max_price=\"spotMaxPrice\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nInstancesDistributionProperty instancesDistributionProperty = new InstancesDistributionProperty {\n    OnDemandAllocationStrategy = \"onDemandAllocationStrategy\",\n    OnDemandBaseCapacity = 123,\n    OnDemandPercentageAboveBaseCapacity = 123,\n    SpotAllocationStrategy = \"spotAllocationStrategy\",\n    SpotInstancePools = 123,\n    SpotMaxPrice = \"spotMaxPrice\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nInstancesDistributionProperty instancesDistributionProperty = InstancesDistributionProperty.builder()\n        .onDemandAllocationStrategy(\"onDemandAllocationStrategy\")\n        .onDemandBaseCapacity(123)\n        .onDemandPercentageAboveBaseCapacity(123)\n        .spotAllocationStrategy(\"spotAllocationStrategy\")\n        .spotInstancePools(123)\n        .spotMaxPrice(\"spotMaxPrice\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ninstancesDistributionProperty := &instancesDistributionProperty{\n\tonDemandAllocationStrategy: jsii.String(\"onDemandAllocationStrategy\"),\n\tonDemandBaseCapacity: jsii.Number(123),\n\tonDemandPercentageAboveBaseCapacity: jsii.Number(123),\n\tspotAllocationStrategy: jsii.String(\"spotAllocationStrategy\"),\n\tspotInstancePools: jsii.Number(123),\n\tspotMaxPrice: jsii.String(\"spotMaxPrice\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst instancesDistributionProperty: autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty = {\n  onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n  onDemandBaseCapacity: 123,\n  onDemandPercentageAboveBaseCapacity: 123,\n  spotAllocationStrategy: 'spotAllocationStrategy',\n  spotInstancePools: 123,\n  spotMaxPrice: 'spotMaxPrice',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst instancesDistributionProperty: autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty = {\n  onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n  onDemandBaseCapacity: 123,\n  onDemandPercentageAboveBaseCapacity: 123,\n  spotAllocationStrategy: 'spotAllocationStrategy',\n  spotInstancePools: 123,\n  spotMaxPrice: 'spotMaxPrice',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 4,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "f8fc884eaef0f2576df058046270ec66636d56f9c5bdc42025add58ff5646912"
    },
    "760d4526bdd434a6d072161959a6595c743efb7217580e2c65a92eb57ca39c1d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nlaunch_template_overrides_property = autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty(\n    instance_requirements=autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty(\n        accelerator_count=autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty(\n            max=123,\n            min=123\n        ),\n        accelerator_manufacturers=[\"acceleratorManufacturers\"],\n        accelerator_names=[\"acceleratorNames\"],\n        accelerator_total_memory_mi_b=autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty(\n            max=123,\n            min=123\n        ),\n        accelerator_types=[\"acceleratorTypes\"],\n        allowed_instance_types=[\"allowedInstanceTypes\"],\n        bare_metal=\"bareMetal\",\n        baseline_ebs_bandwidth_mbps=autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty(\n            max=123,\n            min=123\n        ),\n        burstable_performance=\"burstablePerformance\",\n        cpu_manufacturers=[\"cpuManufacturers\"],\n        excluded_instance_types=[\"excludedInstanceTypes\"],\n        instance_generations=[\"instanceGenerations\"],\n        local_storage=\"localStorage\",\n        local_storage_types=[\"localStorageTypes\"],\n        memory_gi_bPer_vCpu=autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty(\n            max=123,\n            min=123\n        ),\n        memory_mi_b=autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty(\n            max=123,\n            min=123\n        ),\n        network_bandwidth_gbps=autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty(\n            max=123,\n            min=123\n        ),\n        network_interface_count=autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty(\n            max=123,\n            min=123\n        ),\n        on_demand_max_price_percentage_over_lowest_price=123,\n        require_hibernate_support=False,\n        spot_max_price_percentage_over_lowest_price=123,\n        total_local_storage_gb=autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty(\n            max=123,\n            min=123\n        ),\n        v_cpu_count=autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty(\n            max=123,\n            min=123\n        )\n    ),\n    instance_type=\"instanceType\",\n    launch_template_specification=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n        version=\"version\",\n\n        # the properties below are optional\n        launch_template_id=\"launchTemplateId\",\n        launch_template_name=\"launchTemplateName\"\n    ),\n    weighted_capacity=\"weightedCapacity\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nLaunchTemplateOverridesProperty launchTemplateOverridesProperty = new LaunchTemplateOverridesProperty {\n    InstanceRequirements = new InstanceRequirementsProperty {\n        AcceleratorCount = new AcceleratorCountRequestProperty {\n            Max = 123,\n            Min = 123\n        },\n        AcceleratorManufacturers = new [] { \"acceleratorManufacturers\" },\n        AcceleratorNames = new [] { \"acceleratorNames\" },\n        AcceleratorTotalMemoryMiB = new AcceleratorTotalMemoryMiBRequestProperty {\n            Max = 123,\n            Min = 123\n        },\n        AcceleratorTypes = new [] { \"acceleratorTypes\" },\n        AllowedInstanceTypes = new [] { \"allowedInstanceTypes\" },\n        BareMetal = \"bareMetal\",\n        BaselineEbsBandwidthMbps = new BaselineEbsBandwidthMbpsRequestProperty {\n            Max = 123,\n            Min = 123\n        },\n        BurstablePerformance = \"burstablePerformance\",\n        CpuManufacturers = new [] { \"cpuManufacturers\" },\n        ExcludedInstanceTypes = new [] { \"excludedInstanceTypes\" },\n        InstanceGenerations = new [] { \"instanceGenerations\" },\n        LocalStorage = \"localStorage\",\n        LocalStorageTypes = new [] { \"localStorageTypes\" },\n        MemoryGiBPerVCpu = new MemoryGiBPerVCpuRequestProperty {\n            Max = 123,\n            Min = 123\n        },\n        MemoryMiB = new MemoryMiBRequestProperty {\n            Max = 123,\n            Min = 123\n        },\n        NetworkBandwidthGbps = new NetworkBandwidthGbpsRequestProperty {\n            Max = 123,\n            Min = 123\n        },\n        NetworkInterfaceCount = new NetworkInterfaceCountRequestProperty {\n            Max = 123,\n            Min = 123\n        },\n        OnDemandMaxPricePercentageOverLowestPrice = 123,\n        RequireHibernateSupport = false,\n        SpotMaxPricePercentageOverLowestPrice = 123,\n        TotalLocalStorageGb = new TotalLocalStorageGBRequestProperty {\n            Max = 123,\n            Min = 123\n        },\n        VCpuCount = new VCpuCountRequestProperty {\n            Max = 123,\n            Min = 123\n        }\n    },\n    InstanceType = \"instanceType\",\n    LaunchTemplateSpecification = new LaunchTemplateSpecificationProperty {\n        Version = \"version\",\n\n        // the properties below are optional\n        LaunchTemplateId = \"launchTemplateId\",\n        LaunchTemplateName = \"launchTemplateName\"\n    },\n    WeightedCapacity = \"weightedCapacity\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nLaunchTemplateOverridesProperty launchTemplateOverridesProperty = LaunchTemplateOverridesProperty.builder()\n        .instanceRequirements(InstanceRequirementsProperty.builder()\n                .acceleratorCount(AcceleratorCountRequestProperty.builder()\n                        .max(123)\n                        .min(123)\n                        .build())\n                .acceleratorManufacturers(List.of(\"acceleratorManufacturers\"))\n                .acceleratorNames(List.of(\"acceleratorNames\"))\n                .acceleratorTotalMemoryMiB(AcceleratorTotalMemoryMiBRequestProperty.builder()\n                        .max(123)\n                        .min(123)\n                        .build())\n                .acceleratorTypes(List.of(\"acceleratorTypes\"))\n                .allowedInstanceTypes(List.of(\"allowedInstanceTypes\"))\n                .bareMetal(\"bareMetal\")\n                .baselineEbsBandwidthMbps(BaselineEbsBandwidthMbpsRequestProperty.builder()\n                        .max(123)\n                        .min(123)\n                        .build())\n                .burstablePerformance(\"burstablePerformance\")\n                .cpuManufacturers(List.of(\"cpuManufacturers\"))\n                .excludedInstanceTypes(List.of(\"excludedInstanceTypes\"))\n                .instanceGenerations(List.of(\"instanceGenerations\"))\n                .localStorage(\"localStorage\")\n                .localStorageTypes(List.of(\"localStorageTypes\"))\n                .memoryGiBPerVCpu(MemoryGiBPerVCpuRequestProperty.builder()\n                        .max(123)\n                        .min(123)\n                        .build())\n                .memoryMiB(MemoryMiBRequestProperty.builder()\n                        .max(123)\n                        .min(123)\n                        .build())\n                .networkBandwidthGbps(NetworkBandwidthGbpsRequestProperty.builder()\n                        .max(123)\n                        .min(123)\n                        .build())\n                .networkInterfaceCount(NetworkInterfaceCountRequestProperty.builder()\n                        .max(123)\n                        .min(123)\n                        .build())\n                .onDemandMaxPricePercentageOverLowestPrice(123)\n                .requireHibernateSupport(false)\n                .spotMaxPricePercentageOverLowestPrice(123)\n                .totalLocalStorageGb(TotalLocalStorageGBRequestProperty.builder()\n                        .max(123)\n                        .min(123)\n                        .build())\n                .vCpuCount(VCpuCountRequestProperty.builder()\n                        .max(123)\n                        .min(123)\n                        .build())\n                .build())\n        .instanceType(\"instanceType\")\n        .launchTemplateSpecification(LaunchTemplateSpecificationProperty.builder()\n                .version(\"version\")\n\n                // the properties below are optional\n                .launchTemplateId(\"launchTemplateId\")\n                .launchTemplateName(\"launchTemplateName\")\n                .build())\n        .weightedCapacity(\"weightedCapacity\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nlaunchTemplateOverridesProperty := &launchTemplateOverridesProperty{\n\tinstanceRequirements: &instanceRequirementsProperty{\n\t\tacceleratorCount: &acceleratorCountRequestProperty{\n\t\t\tmax: jsii.Number(123),\n\t\t\tmin: jsii.Number(123),\n\t\t},\n\t\tacceleratorManufacturers: []*string{\n\t\t\tjsii.String(\"acceleratorManufacturers\"),\n\t\t},\n\t\tacceleratorNames: []*string{\n\t\t\tjsii.String(\"acceleratorNames\"),\n\t\t},\n\t\tacceleratorTotalMemoryMiB: &acceleratorTotalMemoryMiBRequestProperty{\n\t\t\tmax: jsii.Number(123),\n\t\t\tmin: jsii.Number(123),\n\t\t},\n\t\tacceleratorTypes: []*string{\n\t\t\tjsii.String(\"acceleratorTypes\"),\n\t\t},\n\t\tallowedInstanceTypes: []*string{\n\t\t\tjsii.String(\"allowedInstanceTypes\"),\n\t\t},\n\t\tbareMetal: jsii.String(\"bareMetal\"),\n\t\tbaselineEbsBandwidthMbps: &baselineEbsBandwidthMbpsRequestProperty{\n\t\t\tmax: jsii.Number(123),\n\t\t\tmin: jsii.Number(123),\n\t\t},\n\t\tburstablePerformance: jsii.String(\"burstablePerformance\"),\n\t\tcpuManufacturers: []*string{\n\t\t\tjsii.String(\"cpuManufacturers\"),\n\t\t},\n\t\texcludedInstanceTypes: []*string{\n\t\t\tjsii.String(\"excludedInstanceTypes\"),\n\t\t},\n\t\tinstanceGenerations: []*string{\n\t\t\tjsii.String(\"instanceGenerations\"),\n\t\t},\n\t\tlocalStorage: jsii.String(\"localStorage\"),\n\t\tlocalStorageTypes: []*string{\n\t\t\tjsii.String(\"localStorageTypes\"),\n\t\t},\n\t\tmemoryGiBPerVCpu: &memoryGiBPerVCpuRequestProperty{\n\t\t\tmax: jsii.Number(123),\n\t\t\tmin: jsii.Number(123),\n\t\t},\n\t\tmemoryMiB: &memoryMiBRequestProperty{\n\t\t\tmax: jsii.Number(123),\n\t\t\tmin: jsii.Number(123),\n\t\t},\n\t\tnetworkBandwidthGbps: &networkBandwidthGbpsRequestProperty{\n\t\t\tmax: jsii.Number(123),\n\t\t\tmin: jsii.Number(123),\n\t\t},\n\t\tnetworkInterfaceCount: &networkInterfaceCountRequestProperty{\n\t\t\tmax: jsii.Number(123),\n\t\t\tmin: jsii.Number(123),\n\t\t},\n\t\tonDemandMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\t\trequireHibernateSupport: jsii.Boolean(false),\n\t\tspotMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\t\ttotalLocalStorageGb: &totalLocalStorageGBRequestProperty{\n\t\t\tmax: jsii.Number(123),\n\t\t\tmin: jsii.Number(123),\n\t\t},\n\t\tvCpuCount: &vCpuCountRequestProperty{\n\t\t\tmax: jsii.Number(123),\n\t\t\tmin: jsii.Number(123),\n\t\t},\n\t},\n\tinstanceType: jsii.String(\"instanceType\"),\n\tlaunchTemplateSpecification: &launchTemplateSpecificationProperty{\n\t\tversion: jsii.String(\"version\"),\n\n\t\t// the properties below are optional\n\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t},\n\tweightedCapacity: jsii.String(\"weightedCapacity\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst launchTemplateOverridesProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty = {\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    allowedInstanceTypes: ['allowedInstanceTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkBandwidthGbps: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  launchTemplateSpecification: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  weightedCapacity: 'weightedCapacity',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst launchTemplateOverridesProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty = {\n  instanceRequirements: {\n    acceleratorCount: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorManufacturers: ['acceleratorManufacturers'],\n    acceleratorNames: ['acceleratorNames'],\n    acceleratorTotalMemoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    acceleratorTypes: ['acceleratorTypes'],\n    allowedInstanceTypes: ['allowedInstanceTypes'],\n    bareMetal: 'bareMetal',\n    baselineEbsBandwidthMbps: {\n      max: 123,\n      min: 123,\n    },\n    burstablePerformance: 'burstablePerformance',\n    cpuManufacturers: ['cpuManufacturers'],\n    excludedInstanceTypes: ['excludedInstanceTypes'],\n    instanceGenerations: ['instanceGenerations'],\n    localStorage: 'localStorage',\n    localStorageTypes: ['localStorageTypes'],\n    memoryGiBPerVCpu: {\n      max: 123,\n      min: 123,\n    },\n    memoryMiB: {\n      max: 123,\n      min: 123,\n    },\n    networkBandwidthGbps: {\n      max: 123,\n      min: 123,\n    },\n    networkInterfaceCount: {\n      max: 123,\n      min: 123,\n    },\n    onDemandMaxPricePercentageOverLowestPrice: 123,\n    requireHibernateSupport: false,\n    spotMaxPricePercentageOverLowestPrice: 123,\n    totalLocalStorageGb: {\n      max: 123,\n      min: 123,\n    },\n    vCpuCount: {\n      max: 123,\n      min: 123,\n    },\n  },\n  instanceType: 'instanceType',\n  launchTemplateSpecification: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  weightedCapacity: 'weightedCapacity',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 20,
        "10": 17,
        "75": 53,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 8,
        "193": 12,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 48,
        "290": 1
      },
      "fqnsFingerprint": "437b67d846c9832ebf19279ce99a9cc569b17c9ea672b3b6bd9bad8712e292d3"
    },
    "beddbe00808fe4e9eac9cc359f0c0b7da77e2db2366a32a782ae362ddfdb61f4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nlaunch_template_property = autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty(\n    launch_template_specification=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n        version=\"version\",\n\n        # the properties below are optional\n        launch_template_id=\"launchTemplateId\",\n        launch_template_name=\"launchTemplateName\"\n    ),\n\n    # the properties below are optional\n    overrides=[autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty(\n        instance_requirements=autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty(\n            accelerator_count=autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty(\n                max=123,\n                min=123\n            ),\n            accelerator_manufacturers=[\"acceleratorManufacturers\"],\n            accelerator_names=[\"acceleratorNames\"],\n            accelerator_total_memory_mi_b=autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty(\n                max=123,\n                min=123\n            ),\n            accelerator_types=[\"acceleratorTypes\"],\n            allowed_instance_types=[\"allowedInstanceTypes\"],\n            bare_metal=\"bareMetal\",\n            baseline_ebs_bandwidth_mbps=autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty(\n                max=123,\n                min=123\n            ),\n            burstable_performance=\"burstablePerformance\",\n            cpu_manufacturers=[\"cpuManufacturers\"],\n            excluded_instance_types=[\"excludedInstanceTypes\"],\n            instance_generations=[\"instanceGenerations\"],\n            local_storage=\"localStorage\",\n            local_storage_types=[\"localStorageTypes\"],\n            memory_gi_bPer_vCpu=autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty(\n                max=123,\n                min=123\n            ),\n            memory_mi_b=autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty(\n                max=123,\n                min=123\n            ),\n            network_bandwidth_gbps=autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty(\n                max=123,\n                min=123\n            ),\n            network_interface_count=autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty(\n                max=123,\n                min=123\n            ),\n            on_demand_max_price_percentage_over_lowest_price=123,\n            require_hibernate_support=False,\n            spot_max_price_percentage_over_lowest_price=123,\n            total_local_storage_gb=autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty(\n                max=123,\n                min=123\n            ),\n            v_cpu_count=autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty(\n                max=123,\n                min=123\n            )\n        ),\n        instance_type=\"instanceType\",\n        launch_template_specification=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n            version=\"version\",\n\n            # the properties below are optional\n            launch_template_id=\"launchTemplateId\",\n            launch_template_name=\"launchTemplateName\"\n        ),\n        weighted_capacity=\"weightedCapacity\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nLaunchTemplateProperty launchTemplateProperty = new LaunchTemplateProperty {\n    LaunchTemplateSpecification = new LaunchTemplateSpecificationProperty {\n        Version = \"version\",\n\n        // the properties below are optional\n        LaunchTemplateId = \"launchTemplateId\",\n        LaunchTemplateName = \"launchTemplateName\"\n    },\n\n    // the properties below are optional\n    Overrides = new [] { new LaunchTemplateOverridesProperty {\n        InstanceRequirements = new InstanceRequirementsProperty {\n            AcceleratorCount = new AcceleratorCountRequestProperty {\n                Max = 123,\n                Min = 123\n            },\n            AcceleratorManufacturers = new [] { \"acceleratorManufacturers\" },\n            AcceleratorNames = new [] { \"acceleratorNames\" },\n            AcceleratorTotalMemoryMiB = new AcceleratorTotalMemoryMiBRequestProperty {\n                Max = 123,\n                Min = 123\n            },\n            AcceleratorTypes = new [] { \"acceleratorTypes\" },\n            AllowedInstanceTypes = new [] { \"allowedInstanceTypes\" },\n            BareMetal = \"bareMetal\",\n            BaselineEbsBandwidthMbps = new BaselineEbsBandwidthMbpsRequestProperty {\n                Max = 123,\n                Min = 123\n            },\n            BurstablePerformance = \"burstablePerformance\",\n            CpuManufacturers = new [] { \"cpuManufacturers\" },\n            ExcludedInstanceTypes = new [] { \"excludedInstanceTypes\" },\n            InstanceGenerations = new [] { \"instanceGenerations\" },\n            LocalStorage = \"localStorage\",\n            LocalStorageTypes = new [] { \"localStorageTypes\" },\n            MemoryGiBPerVCpu = new MemoryGiBPerVCpuRequestProperty {\n                Max = 123,\n                Min = 123\n            },\n            MemoryMiB = new MemoryMiBRequestProperty {\n                Max = 123,\n                Min = 123\n            },\n            NetworkBandwidthGbps = new NetworkBandwidthGbpsRequestProperty {\n                Max = 123,\n                Min = 123\n            },\n            NetworkInterfaceCount = new NetworkInterfaceCountRequestProperty {\n                Max = 123,\n                Min = 123\n            },\n            OnDemandMaxPricePercentageOverLowestPrice = 123,\n            RequireHibernateSupport = false,\n            SpotMaxPricePercentageOverLowestPrice = 123,\n            TotalLocalStorageGb = new TotalLocalStorageGBRequestProperty {\n                Max = 123,\n                Min = 123\n            },\n            VCpuCount = new VCpuCountRequestProperty {\n                Max = 123,\n                Min = 123\n            }\n        },\n        InstanceType = \"instanceType\",\n        LaunchTemplateSpecification = new LaunchTemplateSpecificationProperty {\n            Version = \"version\",\n\n            // the properties below are optional\n            LaunchTemplateId = \"launchTemplateId\",\n            LaunchTemplateName = \"launchTemplateName\"\n        },\n        WeightedCapacity = \"weightedCapacity\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nLaunchTemplateProperty launchTemplateProperty = LaunchTemplateProperty.builder()\n        .launchTemplateSpecification(LaunchTemplateSpecificationProperty.builder()\n                .version(\"version\")\n\n                // the properties below are optional\n                .launchTemplateId(\"launchTemplateId\")\n                .launchTemplateName(\"launchTemplateName\")\n                .build())\n\n        // the properties below are optional\n        .overrides(List.of(LaunchTemplateOverridesProperty.builder()\n                .instanceRequirements(InstanceRequirementsProperty.builder()\n                        .acceleratorCount(AcceleratorCountRequestProperty.builder()\n                                .max(123)\n                                .min(123)\n                                .build())\n                        .acceleratorManufacturers(List.of(\"acceleratorManufacturers\"))\n                        .acceleratorNames(List.of(\"acceleratorNames\"))\n                        .acceleratorTotalMemoryMiB(AcceleratorTotalMemoryMiBRequestProperty.builder()\n                                .max(123)\n                                .min(123)\n                                .build())\n                        .acceleratorTypes(List.of(\"acceleratorTypes\"))\n                        .allowedInstanceTypes(List.of(\"allowedInstanceTypes\"))\n                        .bareMetal(\"bareMetal\")\n                        .baselineEbsBandwidthMbps(BaselineEbsBandwidthMbpsRequestProperty.builder()\n                                .max(123)\n                                .min(123)\n                                .build())\n                        .burstablePerformance(\"burstablePerformance\")\n                        .cpuManufacturers(List.of(\"cpuManufacturers\"))\n                        .excludedInstanceTypes(List.of(\"excludedInstanceTypes\"))\n                        .instanceGenerations(List.of(\"instanceGenerations\"))\n                        .localStorage(\"localStorage\")\n                        .localStorageTypes(List.of(\"localStorageTypes\"))\n                        .memoryGiBPerVCpu(MemoryGiBPerVCpuRequestProperty.builder()\n                                .max(123)\n                                .min(123)\n                                .build())\n                        .memoryMiB(MemoryMiBRequestProperty.builder()\n                                .max(123)\n                                .min(123)\n                                .build())\n                        .networkBandwidthGbps(NetworkBandwidthGbpsRequestProperty.builder()\n                                .max(123)\n                                .min(123)\n                                .build())\n                        .networkInterfaceCount(NetworkInterfaceCountRequestProperty.builder()\n                                .max(123)\n                                .min(123)\n                                .build())\n                        .onDemandMaxPricePercentageOverLowestPrice(123)\n                        .requireHibernateSupport(false)\n                        .spotMaxPricePercentageOverLowestPrice(123)\n                        .totalLocalStorageGb(TotalLocalStorageGBRequestProperty.builder()\n                                .max(123)\n                                .min(123)\n                                .build())\n                        .vCpuCount(VCpuCountRequestProperty.builder()\n                                .max(123)\n                                .min(123)\n                                .build())\n                        .build())\n                .instanceType(\"instanceType\")\n                .launchTemplateSpecification(LaunchTemplateSpecificationProperty.builder()\n                        .version(\"version\")\n\n                        // the properties below are optional\n                        .launchTemplateId(\"launchTemplateId\")\n                        .launchTemplateName(\"launchTemplateName\")\n                        .build())\n                .weightedCapacity(\"weightedCapacity\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nlaunchTemplateProperty := &launchTemplateProperty{\n\tlaunchTemplateSpecification: &launchTemplateSpecificationProperty{\n\t\tversion: jsii.String(\"version\"),\n\n\t\t// the properties below are optional\n\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t},\n\n\t// the properties below are optional\n\toverrides: []interface{}{\n\t\t&launchTemplateOverridesProperty{\n\t\t\tinstanceRequirements: &instanceRequirementsProperty{\n\t\t\t\tacceleratorCount: &acceleratorCountRequestProperty{\n\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tacceleratorManufacturers: []*string{\n\t\t\t\t\tjsii.String(\"acceleratorManufacturers\"),\n\t\t\t\t},\n\t\t\t\tacceleratorNames: []*string{\n\t\t\t\t\tjsii.String(\"acceleratorNames\"),\n\t\t\t\t},\n\t\t\t\tacceleratorTotalMemoryMiB: &acceleratorTotalMemoryMiBRequestProperty{\n\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tacceleratorTypes: []*string{\n\t\t\t\t\tjsii.String(\"acceleratorTypes\"),\n\t\t\t\t},\n\t\t\t\tallowedInstanceTypes: []*string{\n\t\t\t\t\tjsii.String(\"allowedInstanceTypes\"),\n\t\t\t\t},\n\t\t\t\tbareMetal: jsii.String(\"bareMetal\"),\n\t\t\t\tbaselineEbsBandwidthMbps: &baselineEbsBandwidthMbpsRequestProperty{\n\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tburstablePerformance: jsii.String(\"burstablePerformance\"),\n\t\t\t\tcpuManufacturers: []*string{\n\t\t\t\t\tjsii.String(\"cpuManufacturers\"),\n\t\t\t\t},\n\t\t\t\texcludedInstanceTypes: []*string{\n\t\t\t\t\tjsii.String(\"excludedInstanceTypes\"),\n\t\t\t\t},\n\t\t\t\tinstanceGenerations: []*string{\n\t\t\t\t\tjsii.String(\"instanceGenerations\"),\n\t\t\t\t},\n\t\t\t\tlocalStorage: jsii.String(\"localStorage\"),\n\t\t\t\tlocalStorageTypes: []*string{\n\t\t\t\t\tjsii.String(\"localStorageTypes\"),\n\t\t\t\t},\n\t\t\t\tmemoryGiBPerVCpu: &memoryGiBPerVCpuRequestProperty{\n\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tmemoryMiB: &memoryMiBRequestProperty{\n\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tnetworkBandwidthGbps: &networkBandwidthGbpsRequestProperty{\n\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tnetworkInterfaceCount: &networkInterfaceCountRequestProperty{\n\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tonDemandMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\t\t\t\trequireHibernateSupport: jsii.Boolean(false),\n\t\t\t\tspotMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\t\t\t\ttotalLocalStorageGb: &totalLocalStorageGBRequestProperty{\n\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tvCpuCount: &vCpuCountRequestProperty{\n\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\tlaunchTemplateSpecification: &launchTemplateSpecificationProperty{\n\t\t\t\tversion: jsii.String(\"version\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\t\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t\t\t},\n\t\t\tweightedCapacity: jsii.String(\"weightedCapacity\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst launchTemplateProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty = {\n  launchTemplateSpecification: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n\n  // the properties below are optional\n  overrides: [{\n    instanceRequirements: {\n      acceleratorCount: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorManufacturers: ['acceleratorManufacturers'],\n      acceleratorNames: ['acceleratorNames'],\n      acceleratorTotalMemoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorTypes: ['acceleratorTypes'],\n      allowedInstanceTypes: ['allowedInstanceTypes'],\n      bareMetal: 'bareMetal',\n      baselineEbsBandwidthMbps: {\n        max: 123,\n        min: 123,\n      },\n      burstablePerformance: 'burstablePerformance',\n      cpuManufacturers: ['cpuManufacturers'],\n      excludedInstanceTypes: ['excludedInstanceTypes'],\n      instanceGenerations: ['instanceGenerations'],\n      localStorage: 'localStorage',\n      localStorageTypes: ['localStorageTypes'],\n      memoryGiBPerVCpu: {\n        max: 123,\n        min: 123,\n      },\n      memoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      networkBandwidthGbps: {\n        max: 123,\n        min: 123,\n      },\n      networkInterfaceCount: {\n        max: 123,\n        min: 123,\n      },\n      onDemandMaxPricePercentageOverLowestPrice: 123,\n      requireHibernateSupport: false,\n      spotMaxPricePercentageOverLowestPrice: 123,\n      totalLocalStorageGb: {\n        max: 123,\n        min: 123,\n      },\n      vCpuCount: {\n        max: 123,\n        min: 123,\n      },\n    },\n    instanceType: 'instanceType',\n    launchTemplateSpecification: {\n      version: 'version',\n\n      // the properties below are optional\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n    },\n    weightedCapacity: 'weightedCapacity',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst launchTemplateProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty = {\n  launchTemplateSpecification: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n\n  // the properties below are optional\n  overrides: [{\n    instanceRequirements: {\n      acceleratorCount: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorManufacturers: ['acceleratorManufacturers'],\n      acceleratorNames: ['acceleratorNames'],\n      acceleratorTotalMemoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      acceleratorTypes: ['acceleratorTypes'],\n      allowedInstanceTypes: ['allowedInstanceTypes'],\n      bareMetal: 'bareMetal',\n      baselineEbsBandwidthMbps: {\n        max: 123,\n        min: 123,\n      },\n      burstablePerformance: 'burstablePerformance',\n      cpuManufacturers: ['cpuManufacturers'],\n      excludedInstanceTypes: ['excludedInstanceTypes'],\n      instanceGenerations: ['instanceGenerations'],\n      localStorage: 'localStorage',\n      localStorageTypes: ['localStorageTypes'],\n      memoryGiBPerVCpu: {\n        max: 123,\n        min: 123,\n      },\n      memoryMiB: {\n        max: 123,\n        min: 123,\n      },\n      networkBandwidthGbps: {\n        max: 123,\n        min: 123,\n      },\n      networkInterfaceCount: {\n        max: 123,\n        min: 123,\n      },\n      onDemandMaxPricePercentageOverLowestPrice: 123,\n      requireHibernateSupport: false,\n      spotMaxPricePercentageOverLowestPrice: 123,\n      totalLocalStorageGb: {\n        max: 123,\n        min: 123,\n      },\n      vCpuCount: {\n        max: 123,\n        min: 123,\n      },\n    },\n    instanceType: 'instanceType',\n    launchTemplateSpecification: {\n      version: 'version',\n\n      // the properties below are optional\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n    },\n    weightedCapacity: 'weightedCapacity',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 20,
        "10": 20,
        "75": 58,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 9,
        "193": 14,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 53,
        "290": 1
      },
      "fqnsFingerprint": "c10049696a6e24d7d81798a623ee39d20ec06d910f547ff56405f1a0f6625d35"
    },
    "ff2bbf2c53a587e8eb350865f181d5680b388acb556bcde3cc68d28b410be9d6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nlaunch_template_specification_property = autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n    version=\"version\",\n\n    # the properties below are optional\n    launch_template_id=\"launchTemplateId\",\n    launch_template_name=\"launchTemplateName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nLaunchTemplateSpecificationProperty launchTemplateSpecificationProperty = new LaunchTemplateSpecificationProperty {\n    Version = \"version\",\n\n    // the properties below are optional\n    LaunchTemplateId = \"launchTemplateId\",\n    LaunchTemplateName = \"launchTemplateName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nLaunchTemplateSpecificationProperty launchTemplateSpecificationProperty = LaunchTemplateSpecificationProperty.builder()\n        .version(\"version\")\n\n        // the properties below are optional\n        .launchTemplateId(\"launchTemplateId\")\n        .launchTemplateName(\"launchTemplateName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nlaunchTemplateSpecificationProperty := &launchTemplateSpecificationProperty{\n\tversion: jsii.String(\"version\"),\n\n\t// the properties below are optional\n\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst launchTemplateSpecificationProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty = {\n  version: 'version',\n\n  // the properties below are optional\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst launchTemplateSpecificationProperty: autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty = {\n  version: 'version',\n\n  // the properties below are optional\n  launchTemplateId: 'launchTemplateId',\n  launchTemplateName: 'launchTemplateName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "bc8422a87f5052803f37cb6f9dbc0e90f0909b5361a5114fa7e0d0377e5e05c9"
    },
    "f88fe669092dce116ccba40026a09ee9b568d872676a72ecd932d1ed281fbcb8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nlifecycle_hook_specification_property = autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty(\n    lifecycle_hook_name=\"lifecycleHookName\",\n    lifecycle_transition=\"lifecycleTransition\",\n\n    # the properties below are optional\n    default_result=\"defaultResult\",\n    heartbeat_timeout=123,\n    notification_metadata=\"notificationMetadata\",\n    notification_target_arn=\"notificationTargetArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nLifecycleHookSpecificationProperty lifecycleHookSpecificationProperty = new LifecycleHookSpecificationProperty {\n    LifecycleHookName = \"lifecycleHookName\",\n    LifecycleTransition = \"lifecycleTransition\",\n\n    // the properties below are optional\n    DefaultResult = \"defaultResult\",\n    HeartbeatTimeout = 123,\n    NotificationMetadata = \"notificationMetadata\",\n    NotificationTargetArn = \"notificationTargetArn\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nLifecycleHookSpecificationProperty lifecycleHookSpecificationProperty = LifecycleHookSpecificationProperty.builder()\n        .lifecycleHookName(\"lifecycleHookName\")\n        .lifecycleTransition(\"lifecycleTransition\")\n\n        // the properties below are optional\n        .defaultResult(\"defaultResult\")\n        .heartbeatTimeout(123)\n        .notificationMetadata(\"notificationMetadata\")\n        .notificationTargetArn(\"notificationTargetArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nlifecycleHookSpecificationProperty := &lifecycleHookSpecificationProperty{\n\tlifecycleHookName: jsii.String(\"lifecycleHookName\"),\n\tlifecycleTransition: jsii.String(\"lifecycleTransition\"),\n\n\t// the properties below are optional\n\tdefaultResult: jsii.String(\"defaultResult\"),\n\theartbeatTimeout: jsii.Number(123),\n\tnotificationMetadata: jsii.String(\"notificationMetadata\"),\n\tnotificationTargetArn: jsii.String(\"notificationTargetArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst lifecycleHookSpecificationProperty: autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty = {\n  lifecycleHookName: 'lifecycleHookName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lifecycleHookSpecificationProperty: autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty = {\n  lifecycleHookName: 'lifecycleHookName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 7,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "b9fe35f957916af302a48ac06086408ac49c1995210945b0a168e166e8ee32e8"
    },
    "c1ba643c46181bdc93feb999942af3683ff8d2e8b3e86265f3afdeb4f1be8c48": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nmemory_gi_bPer_vCpu_request_property = autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty(\n    max=123,\n    min=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nMemoryGiBPerVCpuRequestProperty memoryGiBPerVCpuRequestProperty = new MemoryGiBPerVCpuRequestProperty {\n    Max = 123,\n    Min = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nMemoryGiBPerVCpuRequestProperty memoryGiBPerVCpuRequestProperty = MemoryGiBPerVCpuRequestProperty.builder()\n        .max(123)\n        .min(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nmemoryGiBPerVCpuRequestProperty := &memoryGiBPerVCpuRequestProperty{\n\tmax: jsii.Number(123),\n\tmin: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst memoryGiBPerVCpuRequestProperty: autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty = {\n  max: 123,\n  min: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst memoryGiBPerVCpuRequestProperty: autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "6f11dc0730d6ec63caf3667c61b9adc4858db665ccdffd4b81badb6bed32a9a7"
    },
    "ffbdebf535142a4ff3d5b852df79099135e2e094681ea5865c447d296dd75879": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nmemory_mi_bRequest_property = autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty(\n    max=123,\n    min=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nMemoryMiBRequestProperty memoryMiBRequestProperty = new MemoryMiBRequestProperty {\n    Max = 123,\n    Min = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nMemoryMiBRequestProperty memoryMiBRequestProperty = MemoryMiBRequestProperty.builder()\n        .max(123)\n        .min(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nmemoryMiBRequestProperty := &memoryMiBRequestProperty{\n\tmax: jsii.Number(123),\n\tmin: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst memoryMiBRequestProperty: autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst memoryMiBRequestProperty: autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "7c7f083f54f07cd00305e43b6bd1c65e039f92d7950e0027ea4fe35a521ae08a"
    },
    "feae483c5ac5a79114c0d15553a66bc701cc3090079527faf15b29352ee5bffe": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nmetrics_collection_property = autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty(\n    granularity=\"granularity\",\n\n    # the properties below are optional\n    metrics=[\"metrics\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nMetricsCollectionProperty metricsCollectionProperty = new MetricsCollectionProperty {\n    Granularity = \"granularity\",\n\n    // the properties below are optional\n    Metrics = new [] { \"metrics\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nMetricsCollectionProperty metricsCollectionProperty = MetricsCollectionProperty.builder()\n        .granularity(\"granularity\")\n\n        // the properties below are optional\n        .metrics(List.of(\"metrics\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nmetricsCollectionProperty := &metricsCollectionProperty{\n\tgranularity: jsii.String(\"granularity\"),\n\n\t// the properties below are optional\n\tmetrics: []*string{\n\t\tjsii.String(\"metrics\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metricsCollectionProperty: autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty = {\n  granularity: 'granularity',\n\n  // the properties below are optional\n  metrics: ['metrics'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricsCollectionProperty: autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty = {\n  granularity: 'granularity',\n\n  // the properties below are optional\n  metrics: ['metrics'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ba3c16f94f61b1eb787e9a4cdaf2e2a490ff859f7a146e54e588ad3797128a32"
    },
    "99ab95c650929716fd7e976929b56af31524d67944f7587e93698d7874422d11": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nmixed_instances_policy_property = autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty(\n    launch_template=autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty(\n        launch_template_specification=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n            version=\"version\",\n\n            # the properties below are optional\n            launch_template_id=\"launchTemplateId\",\n            launch_template_name=\"launchTemplateName\"\n        ),\n\n        # the properties below are optional\n        overrides=[autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty(\n            instance_requirements=autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty(\n                accelerator_count=autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty(\n                    max=123,\n                    min=123\n                ),\n                accelerator_manufacturers=[\"acceleratorManufacturers\"],\n                accelerator_names=[\"acceleratorNames\"],\n                accelerator_total_memory_mi_b=autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty(\n                    max=123,\n                    min=123\n                ),\n                accelerator_types=[\"acceleratorTypes\"],\n                allowed_instance_types=[\"allowedInstanceTypes\"],\n                bare_metal=\"bareMetal\",\n                baseline_ebs_bandwidth_mbps=autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty(\n                    max=123,\n                    min=123\n                ),\n                burstable_performance=\"burstablePerformance\",\n                cpu_manufacturers=[\"cpuManufacturers\"],\n                excluded_instance_types=[\"excludedInstanceTypes\"],\n                instance_generations=[\"instanceGenerations\"],\n                local_storage=\"localStorage\",\n                local_storage_types=[\"localStorageTypes\"],\n                memory_gi_bPer_vCpu=autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty(\n                    max=123,\n                    min=123\n                ),\n                memory_mi_b=autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty(\n                    max=123,\n                    min=123\n                ),\n                network_bandwidth_gbps=autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty(\n                    max=123,\n                    min=123\n                ),\n                network_interface_count=autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty(\n                    max=123,\n                    min=123\n                ),\n                on_demand_max_price_percentage_over_lowest_price=123,\n                require_hibernate_support=False,\n                spot_max_price_percentage_over_lowest_price=123,\n                total_local_storage_gb=autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty(\n                    max=123,\n                    min=123\n                ),\n                v_cpu_count=autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty(\n                    max=123,\n                    min=123\n                )\n            ),\n            instance_type=\"instanceType\",\n            launch_template_specification=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n                version=\"version\",\n\n                # the properties below are optional\n                launch_template_id=\"launchTemplateId\",\n                launch_template_name=\"launchTemplateName\"\n            ),\n            weighted_capacity=\"weightedCapacity\"\n        )]\n    ),\n\n    # the properties below are optional\n    instances_distribution=autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty(\n        on_demand_allocation_strategy=\"onDemandAllocationStrategy\",\n        on_demand_base_capacity=123,\n        on_demand_percentage_above_base_capacity=123,\n        spot_allocation_strategy=\"spotAllocationStrategy\",\n        spot_instance_pools=123,\n        spot_max_price=\"spotMaxPrice\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nMixedInstancesPolicyProperty mixedInstancesPolicyProperty = new MixedInstancesPolicyProperty {\n    LaunchTemplate = new LaunchTemplateProperty {\n        LaunchTemplateSpecification = new LaunchTemplateSpecificationProperty {\n            Version = \"version\",\n\n            // the properties below are optional\n            LaunchTemplateId = \"launchTemplateId\",\n            LaunchTemplateName = \"launchTemplateName\"\n        },\n\n        // the properties below are optional\n        Overrides = new [] { new LaunchTemplateOverridesProperty {\n            InstanceRequirements = new InstanceRequirementsProperty {\n                AcceleratorCount = new AcceleratorCountRequestProperty {\n                    Max = 123,\n                    Min = 123\n                },\n                AcceleratorManufacturers = new [] { \"acceleratorManufacturers\" },\n                AcceleratorNames = new [] { \"acceleratorNames\" },\n                AcceleratorTotalMemoryMiB = new AcceleratorTotalMemoryMiBRequestProperty {\n                    Max = 123,\n                    Min = 123\n                },\n                AcceleratorTypes = new [] { \"acceleratorTypes\" },\n                AllowedInstanceTypes = new [] { \"allowedInstanceTypes\" },\n                BareMetal = \"bareMetal\",\n                BaselineEbsBandwidthMbps = new BaselineEbsBandwidthMbpsRequestProperty {\n                    Max = 123,\n                    Min = 123\n                },\n                BurstablePerformance = \"burstablePerformance\",\n                CpuManufacturers = new [] { \"cpuManufacturers\" },\n                ExcludedInstanceTypes = new [] { \"excludedInstanceTypes\" },\n                InstanceGenerations = new [] { \"instanceGenerations\" },\n                LocalStorage = \"localStorage\",\n                LocalStorageTypes = new [] { \"localStorageTypes\" },\n                MemoryGiBPerVCpu = new MemoryGiBPerVCpuRequestProperty {\n                    Max = 123,\n                    Min = 123\n                },\n                MemoryMiB = new MemoryMiBRequestProperty {\n                    Max = 123,\n                    Min = 123\n                },\n                NetworkBandwidthGbps = new NetworkBandwidthGbpsRequestProperty {\n                    Max = 123,\n                    Min = 123\n                },\n                NetworkInterfaceCount = new NetworkInterfaceCountRequestProperty {\n                    Max = 123,\n                    Min = 123\n                },\n                OnDemandMaxPricePercentageOverLowestPrice = 123,\n                RequireHibernateSupport = false,\n                SpotMaxPricePercentageOverLowestPrice = 123,\n                TotalLocalStorageGb = new TotalLocalStorageGBRequestProperty {\n                    Max = 123,\n                    Min = 123\n                },\n                VCpuCount = new VCpuCountRequestProperty {\n                    Max = 123,\n                    Min = 123\n                }\n            },\n            InstanceType = \"instanceType\",\n            LaunchTemplateSpecification = new LaunchTemplateSpecificationProperty {\n                Version = \"version\",\n\n                // the properties below are optional\n                LaunchTemplateId = \"launchTemplateId\",\n                LaunchTemplateName = \"launchTemplateName\"\n            },\n            WeightedCapacity = \"weightedCapacity\"\n        } }\n    },\n\n    // the properties below are optional\n    InstancesDistribution = new InstancesDistributionProperty {\n        OnDemandAllocationStrategy = \"onDemandAllocationStrategy\",\n        OnDemandBaseCapacity = 123,\n        OnDemandPercentageAboveBaseCapacity = 123,\n        SpotAllocationStrategy = \"spotAllocationStrategy\",\n        SpotInstancePools = 123,\n        SpotMaxPrice = \"spotMaxPrice\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nMixedInstancesPolicyProperty mixedInstancesPolicyProperty = MixedInstancesPolicyProperty.builder()\n        .launchTemplate(LaunchTemplateProperty.builder()\n                .launchTemplateSpecification(LaunchTemplateSpecificationProperty.builder()\n                        .version(\"version\")\n\n                        // the properties below are optional\n                        .launchTemplateId(\"launchTemplateId\")\n                        .launchTemplateName(\"launchTemplateName\")\n                        .build())\n\n                // the properties below are optional\n                .overrides(List.of(LaunchTemplateOverridesProperty.builder()\n                        .instanceRequirements(InstanceRequirementsProperty.builder()\n                                .acceleratorCount(AcceleratorCountRequestProperty.builder()\n                                        .max(123)\n                                        .min(123)\n                                        .build())\n                                .acceleratorManufacturers(List.of(\"acceleratorManufacturers\"))\n                                .acceleratorNames(List.of(\"acceleratorNames\"))\n                                .acceleratorTotalMemoryMiB(AcceleratorTotalMemoryMiBRequestProperty.builder()\n                                        .max(123)\n                                        .min(123)\n                                        .build())\n                                .acceleratorTypes(List.of(\"acceleratorTypes\"))\n                                .allowedInstanceTypes(List.of(\"allowedInstanceTypes\"))\n                                .bareMetal(\"bareMetal\")\n                                .baselineEbsBandwidthMbps(BaselineEbsBandwidthMbpsRequestProperty.builder()\n                                        .max(123)\n                                        .min(123)\n                                        .build())\n                                .burstablePerformance(\"burstablePerformance\")\n                                .cpuManufacturers(List.of(\"cpuManufacturers\"))\n                                .excludedInstanceTypes(List.of(\"excludedInstanceTypes\"))\n                                .instanceGenerations(List.of(\"instanceGenerations\"))\n                                .localStorage(\"localStorage\")\n                                .localStorageTypes(List.of(\"localStorageTypes\"))\n                                .memoryGiBPerVCpu(MemoryGiBPerVCpuRequestProperty.builder()\n                                        .max(123)\n                                        .min(123)\n                                        .build())\n                                .memoryMiB(MemoryMiBRequestProperty.builder()\n                                        .max(123)\n                                        .min(123)\n                                        .build())\n                                .networkBandwidthGbps(NetworkBandwidthGbpsRequestProperty.builder()\n                                        .max(123)\n                                        .min(123)\n                                        .build())\n                                .networkInterfaceCount(NetworkInterfaceCountRequestProperty.builder()\n                                        .max(123)\n                                        .min(123)\n                                        .build())\n                                .onDemandMaxPricePercentageOverLowestPrice(123)\n                                .requireHibernateSupport(false)\n                                .spotMaxPricePercentageOverLowestPrice(123)\n                                .totalLocalStorageGb(TotalLocalStorageGBRequestProperty.builder()\n                                        .max(123)\n                                        .min(123)\n                                        .build())\n                                .vCpuCount(VCpuCountRequestProperty.builder()\n                                        .max(123)\n                                        .min(123)\n                                        .build())\n                                .build())\n                        .instanceType(\"instanceType\")\n                        .launchTemplateSpecification(LaunchTemplateSpecificationProperty.builder()\n                                .version(\"version\")\n\n                                // the properties below are optional\n                                .launchTemplateId(\"launchTemplateId\")\n                                .launchTemplateName(\"launchTemplateName\")\n                                .build())\n                        .weightedCapacity(\"weightedCapacity\")\n                        .build()))\n                .build())\n\n        // the properties below are optional\n        .instancesDistribution(InstancesDistributionProperty.builder()\n                .onDemandAllocationStrategy(\"onDemandAllocationStrategy\")\n                .onDemandBaseCapacity(123)\n                .onDemandPercentageAboveBaseCapacity(123)\n                .spotAllocationStrategy(\"spotAllocationStrategy\")\n                .spotInstancePools(123)\n                .spotMaxPrice(\"spotMaxPrice\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nmixedInstancesPolicyProperty := &mixedInstancesPolicyProperty{\n\tlaunchTemplate: &launchTemplateProperty{\n\t\tlaunchTemplateSpecification: &launchTemplateSpecificationProperty{\n\t\t\tversion: jsii.String(\"version\"),\n\n\t\t\t// the properties below are optional\n\t\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\toverrides: []interface{}{\n\t\t\t&launchTemplateOverridesProperty{\n\t\t\t\tinstanceRequirements: &instanceRequirementsProperty{\n\t\t\t\t\tacceleratorCount: &acceleratorCountRequestProperty{\n\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tacceleratorManufacturers: []*string{\n\t\t\t\t\t\tjsii.String(\"acceleratorManufacturers\"),\n\t\t\t\t\t},\n\t\t\t\t\tacceleratorNames: []*string{\n\t\t\t\t\t\tjsii.String(\"acceleratorNames\"),\n\t\t\t\t\t},\n\t\t\t\t\tacceleratorTotalMemoryMiB: &acceleratorTotalMemoryMiBRequestProperty{\n\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tacceleratorTypes: []*string{\n\t\t\t\t\t\tjsii.String(\"acceleratorTypes\"),\n\t\t\t\t\t},\n\t\t\t\t\tallowedInstanceTypes: []*string{\n\t\t\t\t\t\tjsii.String(\"allowedInstanceTypes\"),\n\t\t\t\t\t},\n\t\t\t\t\tbareMetal: jsii.String(\"bareMetal\"),\n\t\t\t\t\tbaselineEbsBandwidthMbps: &baselineEbsBandwidthMbpsRequestProperty{\n\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tburstablePerformance: jsii.String(\"burstablePerformance\"),\n\t\t\t\t\tcpuManufacturers: []*string{\n\t\t\t\t\t\tjsii.String(\"cpuManufacturers\"),\n\t\t\t\t\t},\n\t\t\t\t\texcludedInstanceTypes: []*string{\n\t\t\t\t\t\tjsii.String(\"excludedInstanceTypes\"),\n\t\t\t\t\t},\n\t\t\t\t\tinstanceGenerations: []*string{\n\t\t\t\t\t\tjsii.String(\"instanceGenerations\"),\n\t\t\t\t\t},\n\t\t\t\t\tlocalStorage: jsii.String(\"localStorage\"),\n\t\t\t\t\tlocalStorageTypes: []*string{\n\t\t\t\t\t\tjsii.String(\"localStorageTypes\"),\n\t\t\t\t\t},\n\t\t\t\t\tmemoryGiBPerVCpu: &memoryGiBPerVCpuRequestProperty{\n\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tmemoryMiB: &memoryMiBRequestProperty{\n\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tnetworkBandwidthGbps: &networkBandwidthGbpsRequestProperty{\n\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tnetworkInterfaceCount: &networkInterfaceCountRequestProperty{\n\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tonDemandMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\t\t\t\t\trequireHibernateSupport: jsii.Boolean(false),\n\t\t\t\t\tspotMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\t\t\t\t\ttotalLocalStorageGb: &totalLocalStorageGBRequestProperty{\n\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tvCpuCount: &vCpuCountRequestProperty{\n\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\tlaunchTemplateSpecification: &launchTemplateSpecificationProperty{\n\t\t\t\t\tversion: jsii.String(\"version\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\t\t\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t\t\t\t},\n\t\t\t\tweightedCapacity: jsii.String(\"weightedCapacity\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tinstancesDistribution: &instancesDistributionProperty{\n\t\tonDemandAllocationStrategy: jsii.String(\"onDemandAllocationStrategy\"),\n\t\tonDemandBaseCapacity: jsii.Number(123),\n\t\tonDemandPercentageAboveBaseCapacity: jsii.Number(123),\n\t\tspotAllocationStrategy: jsii.String(\"spotAllocationStrategy\"),\n\t\tspotInstancePools: jsii.Number(123),\n\t\tspotMaxPrice: jsii.String(\"spotMaxPrice\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst mixedInstancesPolicyProperty: autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty = {\n  launchTemplate: {\n    launchTemplateSpecification: {\n      version: 'version',\n\n      // the properties below are optional\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n    },\n\n    // the properties below are optional\n    overrides: [{\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        allowedInstanceTypes: ['allowedInstanceTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkBandwidthGbps: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n      weightedCapacity: 'weightedCapacity',\n    }],\n  },\n\n  // the properties below are optional\n  instancesDistribution: {\n    onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n    onDemandBaseCapacity: 123,\n    onDemandPercentageAboveBaseCapacity: 123,\n    spotAllocationStrategy: 'spotAllocationStrategy',\n    spotInstancePools: 123,\n    spotMaxPrice: 'spotMaxPrice',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mixedInstancesPolicyProperty: autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty = {\n  launchTemplate: {\n    launchTemplateSpecification: {\n      version: 'version',\n\n      // the properties below are optional\n      launchTemplateId: 'launchTemplateId',\n      launchTemplateName: 'launchTemplateName',\n    },\n\n    // the properties below are optional\n    overrides: [{\n      instanceRequirements: {\n        acceleratorCount: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorManufacturers: ['acceleratorManufacturers'],\n        acceleratorNames: ['acceleratorNames'],\n        acceleratorTotalMemoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        acceleratorTypes: ['acceleratorTypes'],\n        allowedInstanceTypes: ['allowedInstanceTypes'],\n        bareMetal: 'bareMetal',\n        baselineEbsBandwidthMbps: {\n          max: 123,\n          min: 123,\n        },\n        burstablePerformance: 'burstablePerformance',\n        cpuManufacturers: ['cpuManufacturers'],\n        excludedInstanceTypes: ['excludedInstanceTypes'],\n        instanceGenerations: ['instanceGenerations'],\n        localStorage: 'localStorage',\n        localStorageTypes: ['localStorageTypes'],\n        memoryGiBPerVCpu: {\n          max: 123,\n          min: 123,\n        },\n        memoryMiB: {\n          max: 123,\n          min: 123,\n        },\n        networkBandwidthGbps: {\n          max: 123,\n          min: 123,\n        },\n        networkInterfaceCount: {\n          max: 123,\n          min: 123,\n        },\n        onDemandMaxPricePercentageOverLowestPrice: 123,\n        requireHibernateSupport: false,\n        spotMaxPricePercentageOverLowestPrice: 123,\n        totalLocalStorageGb: {\n          max: 123,\n          min: 123,\n        },\n        vCpuCount: {\n          max: 123,\n          min: 123,\n        },\n      },\n      instanceType: 'instanceType',\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n      weightedCapacity: 'weightedCapacity',\n    }],\n  },\n\n  // the properties below are optional\n  instancesDistribution: {\n    onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n    onDemandBaseCapacity: 123,\n    onDemandPercentageAboveBaseCapacity: 123,\n    spotAllocationStrategy: 'spotAllocationStrategy',\n    spotInstancePools: 123,\n    spotMaxPrice: 'spotMaxPrice',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 23,
        "10": 23,
        "75": 66,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 9,
        "193": 16,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 61,
        "290": 1
      },
      "fqnsFingerprint": "77a7ca2ddcff5056c7759eaccc1341dd8a95df5ada168afe64e7de87551f5c77"
    },
    "5d4009a4b783cda35577b8a5f6f0ede4a24dc450b12dbc2c00a0f625b3eee460": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nnetwork_bandwidth_gbps_request_property = autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty(\n    max=123,\n    min=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nNetworkBandwidthGbpsRequestProperty networkBandwidthGbpsRequestProperty = new NetworkBandwidthGbpsRequestProperty {\n    Max = 123,\n    Min = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nNetworkBandwidthGbpsRequestProperty networkBandwidthGbpsRequestProperty = NetworkBandwidthGbpsRequestProperty.builder()\n        .max(123)\n        .min(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nnetworkBandwidthGbpsRequestProperty := &networkBandwidthGbpsRequestProperty{\n\tmax: jsii.Number(123),\n\tmin: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst networkBandwidthGbpsRequestProperty: autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkBandwidthGbpsRequestProperty: autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "bbaef84887194a06a78fa5fe907b3d0750936fee375c7e08604359dc865ad479"
    },
    "1a75a633ea92b9ee8f5204cc5bb3591225433640ab91a28a92d931c028966fcc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nnetwork_interface_count_request_property = autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty(\n    max=123,\n    min=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nNetworkInterfaceCountRequestProperty networkInterfaceCountRequestProperty = new NetworkInterfaceCountRequestProperty {\n    Max = 123,\n    Min = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nNetworkInterfaceCountRequestProperty networkInterfaceCountRequestProperty = NetworkInterfaceCountRequestProperty.builder()\n        .max(123)\n        .min(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nnetworkInterfaceCountRequestProperty := &networkInterfaceCountRequestProperty{\n\tmax: jsii.Number(123),\n\tmin: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst networkInterfaceCountRequestProperty: autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty = {\n  max: 123,\n  min: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst networkInterfaceCountRequestProperty: autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "3e854fb1628505b8c065fa658dd5fc89741e1908162e4411b3de0687694a44f1"
    },
    "ac22ff6c7168b4232abf1c6c56281e92bf6fc5252d1f5b9596d77ba39b07ed86": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nnotification_configuration_property = autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty(\n    topic_arn=\"topicArn\",\n\n    # the properties below are optional\n    notification_types=[\"notificationTypes\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nNotificationConfigurationProperty notificationConfigurationProperty = new NotificationConfigurationProperty {\n    TopicArn = \"topicArn\",\n\n    // the properties below are optional\n    NotificationTypes = new [] { \"notificationTypes\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nNotificationConfigurationProperty notificationConfigurationProperty = NotificationConfigurationProperty.builder()\n        .topicArn(\"topicArn\")\n\n        // the properties below are optional\n        .notificationTypes(List.of(\"notificationTypes\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nnotificationConfigurationProperty := &notificationConfigurationProperty{\n\ttopicArn: jsii.String(\"topicArn\"),\n\n\t// the properties below are optional\n\tnotificationTypes: []*string{\n\t\tjsii.String(\"notificationTypes\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst notificationConfigurationProperty: autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty = {\n  topicArn: 'topicArn',\n\n  // the properties below are optional\n  notificationTypes: ['notificationTypes'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notificationConfigurationProperty: autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty = {\n  topicArn: 'topicArn',\n\n  // the properties below are optional\n  notificationTypes: ['notificationTypes'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "757583dd40967d0d712fcfb2afa94e74a422460c6b558d1c7ae758ba7b5d3d8c"
    },
    "f1bfa6eeebfadd1ab6ff66666a8b1897df72e7086bbefd8523496a956c11fbf6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ntag_property_property = autoscaling.CfnAutoScalingGroup.TagPropertyProperty(\n    key=\"key\",\n    propagate_at_launch=False,\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nTagPropertyProperty tagPropertyProperty = new TagPropertyProperty {\n    Key = \"key\",\n    PropagateAtLaunch = false,\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nTagPropertyProperty tagPropertyProperty = TagPropertyProperty.builder()\n        .key(\"key\")\n        .propagateAtLaunch(false)\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ntagPropertyProperty := &tagPropertyProperty{\n\tkey: jsii.String(\"key\"),\n\tpropagateAtLaunch: jsii.Boolean(false),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst tagPropertyProperty: autoscaling.CfnAutoScalingGroup.TagPropertyProperty = {\n  key: 'key',\n  propagateAtLaunch: false,\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TagPropertyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TagPropertyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tagPropertyProperty: autoscaling.CfnAutoScalingGroup.TagPropertyProperty = {\n  key: 'key',\n  propagateAtLaunch: false,\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "4b436866d69c9f579dc54e90a84ce992b66d1b0fb0a8edda365970fe89bebe0b"
    },
    "5b192ee70d902e7026ea001858ec128ec54da788fb8d7f6430033041ce96dbc0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ntotal_local_storage_gBRequest_property = autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty(\n    max=123,\n    min=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nTotalLocalStorageGBRequestProperty totalLocalStorageGBRequestProperty = new TotalLocalStorageGBRequestProperty {\n    Max = 123,\n    Min = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nTotalLocalStorageGBRequestProperty totalLocalStorageGBRequestProperty = TotalLocalStorageGBRequestProperty.builder()\n        .max(123)\n        .min(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ntotalLocalStorageGBRequestProperty := &totalLocalStorageGBRequestProperty{\n\tmax: jsii.Number(123),\n\tmin: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst totalLocalStorageGBRequestProperty: autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty = {\n  max: 123,\n  min: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst totalLocalStorageGBRequestProperty: autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "a15542503f6ee82ce3cd437b18442617eefd2beab67cf71192004bbadf37ce1e"
    },
    "6666712047d9d002085de7c524296a0f910fe0b1a94d500c8bcc4806b980ed3d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nv_cpu_count_request_property = autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty(\n    max=123,\n    min=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nVCpuCountRequestProperty vCpuCountRequestProperty = new VCpuCountRequestProperty {\n    Max = 123,\n    Min = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nVCpuCountRequestProperty vCpuCountRequestProperty = VCpuCountRequestProperty.builder()\n        .max(123)\n        .min(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nvCpuCountRequestProperty := &vCpuCountRequestProperty{\n\tmax: jsii.Number(123),\n\tmin: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst vCpuCountRequestProperty: autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty = {\n  max: 123,\n  min: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vCpuCountRequestProperty: autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty = {\n  max: 123,\n  min: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1558ea97f066836c32be73b00f91b9482bcc2243a99a2b02e7bd13c7ba513619"
    },
    "86c81dbf37b980160718f11275386f4925341fe71611ab141df551bf8e26af63": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_auto_scaling_group_props = autoscaling.CfnAutoScalingGroupProps(\n    max_size=\"maxSize\",\n    min_size=\"minSize\",\n\n    # the properties below are optional\n    auto_scaling_group_name=\"autoScalingGroupName\",\n    availability_zones=[\"availabilityZones\"],\n    capacity_rebalance=False,\n    context=\"context\",\n    cooldown=\"cooldown\",\n    default_instance_warmup=123,\n    desired_capacity=\"desiredCapacity\",\n    desired_capacity_type=\"desiredCapacityType\",\n    health_check_grace_period=123,\n    health_check_type=\"healthCheckType\",\n    instance_id=\"instanceId\",\n    launch_configuration_name=\"launchConfigurationName\",\n    launch_template=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n        version=\"version\",\n\n        # the properties below are optional\n        launch_template_id=\"launchTemplateId\",\n        launch_template_name=\"launchTemplateName\"\n    ),\n    lifecycle_hook_specification_list=[autoscaling.CfnAutoScalingGroup.LifecycleHookSpecificationProperty(\n        lifecycle_hook_name=\"lifecycleHookName\",\n        lifecycle_transition=\"lifecycleTransition\",\n\n        # the properties below are optional\n        default_result=\"defaultResult\",\n        heartbeat_timeout=123,\n        notification_metadata=\"notificationMetadata\",\n        notification_target_arn=\"notificationTargetArn\",\n        role_arn=\"roleArn\"\n    )],\n    load_balancer_names=[\"loadBalancerNames\"],\n    max_instance_lifetime=123,\n    metrics_collection=[autoscaling.CfnAutoScalingGroup.MetricsCollectionProperty(\n        granularity=\"granularity\",\n\n        # the properties below are optional\n        metrics=[\"metrics\"]\n    )],\n    mixed_instances_policy=autoscaling.CfnAutoScalingGroup.MixedInstancesPolicyProperty(\n        launch_template=autoscaling.CfnAutoScalingGroup.LaunchTemplateProperty(\n            launch_template_specification=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n                version=\"version\",\n\n                # the properties below are optional\n                launch_template_id=\"launchTemplateId\",\n                launch_template_name=\"launchTemplateName\"\n            ),\n\n            # the properties below are optional\n            overrides=[autoscaling.CfnAutoScalingGroup.LaunchTemplateOverridesProperty(\n                instance_requirements=autoscaling.CfnAutoScalingGroup.InstanceRequirementsProperty(\n                    accelerator_count=autoscaling.CfnAutoScalingGroup.AcceleratorCountRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    accelerator_manufacturers=[\"acceleratorManufacturers\"],\n                    accelerator_names=[\"acceleratorNames\"],\n                    accelerator_total_memory_mi_b=autoscaling.CfnAutoScalingGroup.AcceleratorTotalMemoryMiBRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    accelerator_types=[\"acceleratorTypes\"],\n                    allowed_instance_types=[\"allowedInstanceTypes\"],\n                    bare_metal=\"bareMetal\",\n                    baseline_ebs_bandwidth_mbps=autoscaling.CfnAutoScalingGroup.BaselineEbsBandwidthMbpsRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    burstable_performance=\"burstablePerformance\",\n                    cpu_manufacturers=[\"cpuManufacturers\"],\n                    excluded_instance_types=[\"excludedInstanceTypes\"],\n                    instance_generations=[\"instanceGenerations\"],\n                    local_storage=\"localStorage\",\n                    local_storage_types=[\"localStorageTypes\"],\n                    memory_gi_bPer_vCpu=autoscaling.CfnAutoScalingGroup.MemoryGiBPerVCpuRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    memory_mi_b=autoscaling.CfnAutoScalingGroup.MemoryMiBRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    network_bandwidth_gbps=autoscaling.CfnAutoScalingGroup.NetworkBandwidthGbpsRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    network_interface_count=autoscaling.CfnAutoScalingGroup.NetworkInterfaceCountRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    on_demand_max_price_percentage_over_lowest_price=123,\n                    require_hibernate_support=False,\n                    spot_max_price_percentage_over_lowest_price=123,\n                    total_local_storage_gb=autoscaling.CfnAutoScalingGroup.TotalLocalStorageGBRequestProperty(\n                        max=123,\n                        min=123\n                    ),\n                    v_cpu_count=autoscaling.CfnAutoScalingGroup.VCpuCountRequestProperty(\n                        max=123,\n                        min=123\n                    )\n                ),\n                instance_type=\"instanceType\",\n                launch_template_specification=autoscaling.CfnAutoScalingGroup.LaunchTemplateSpecificationProperty(\n                    version=\"version\",\n\n                    # the properties below are optional\n                    launch_template_id=\"launchTemplateId\",\n                    launch_template_name=\"launchTemplateName\"\n                ),\n                weighted_capacity=\"weightedCapacity\"\n            )]\n        ),\n\n        # the properties below are optional\n        instances_distribution=autoscaling.CfnAutoScalingGroup.InstancesDistributionProperty(\n            on_demand_allocation_strategy=\"onDemandAllocationStrategy\",\n            on_demand_base_capacity=123,\n            on_demand_percentage_above_base_capacity=123,\n            spot_allocation_strategy=\"spotAllocationStrategy\",\n            spot_instance_pools=123,\n            spot_max_price=\"spotMaxPrice\"\n        )\n    ),\n    new_instances_protected_from_scale_in=False,\n    notification_configurations=[autoscaling.CfnAutoScalingGroup.NotificationConfigurationProperty(\n        topic_arn=\"topicArn\",\n\n        # the properties below are optional\n        notification_types=[\"notificationTypes\"]\n    )],\n    placement_group=\"placementGroup\",\n    service_linked_role_arn=\"serviceLinkedRoleArn\",\n    tags=[autoscaling.CfnAutoScalingGroup.TagPropertyProperty(\n        key=\"key\",\n        propagate_at_launch=False,\n        value=\"value\"\n    )],\n    target_group_arns=[\"targetGroupArns\"],\n    termination_policies=[\"terminationPolicies\"],\n    vpc_zone_identifier=[\"vpcZoneIdentifier\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnAutoScalingGroupProps cfnAutoScalingGroupProps = new CfnAutoScalingGroupProps {\n    MaxSize = \"maxSize\",\n    MinSize = \"minSize\",\n\n    // the properties below are optional\n    AutoScalingGroupName = \"autoScalingGroupName\",\n    AvailabilityZones = new [] { \"availabilityZones\" },\n    CapacityRebalance = false,\n    Context = \"context\",\n    Cooldown = \"cooldown\",\n    DefaultInstanceWarmup = 123,\n    DesiredCapacity = \"desiredCapacity\",\n    DesiredCapacityType = \"desiredCapacityType\",\n    HealthCheckGracePeriod = 123,\n    HealthCheckType = \"healthCheckType\",\n    InstanceId = \"instanceId\",\n    LaunchConfigurationName = \"launchConfigurationName\",\n    LaunchTemplate = new LaunchTemplateSpecificationProperty {\n        Version = \"version\",\n\n        // the properties below are optional\n        LaunchTemplateId = \"launchTemplateId\",\n        LaunchTemplateName = \"launchTemplateName\"\n    },\n    LifecycleHookSpecificationList = new [] { new LifecycleHookSpecificationProperty {\n        LifecycleHookName = \"lifecycleHookName\",\n        LifecycleTransition = \"lifecycleTransition\",\n\n        // the properties below are optional\n        DefaultResult = \"defaultResult\",\n        HeartbeatTimeout = 123,\n        NotificationMetadata = \"notificationMetadata\",\n        NotificationTargetArn = \"notificationTargetArn\",\n        RoleArn = \"roleArn\"\n    } },\n    LoadBalancerNames = new [] { \"loadBalancerNames\" },\n    MaxInstanceLifetime = 123,\n    MetricsCollection = new [] { new MetricsCollectionProperty {\n        Granularity = \"granularity\",\n\n        // the properties below are optional\n        Metrics = new [] { \"metrics\" }\n    } },\n    MixedInstancesPolicy = new MixedInstancesPolicyProperty {\n        LaunchTemplate = new LaunchTemplateProperty {\n            LaunchTemplateSpecification = new LaunchTemplateSpecificationProperty {\n                Version = \"version\",\n\n                // the properties below are optional\n                LaunchTemplateId = \"launchTemplateId\",\n                LaunchTemplateName = \"launchTemplateName\"\n            },\n\n            // the properties below are optional\n            Overrides = new [] { new LaunchTemplateOverridesProperty {\n                InstanceRequirements = new InstanceRequirementsProperty {\n                    AcceleratorCount = new AcceleratorCountRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    AcceleratorManufacturers = new [] { \"acceleratorManufacturers\" },\n                    AcceleratorNames = new [] { \"acceleratorNames\" },\n                    AcceleratorTotalMemoryMiB = new AcceleratorTotalMemoryMiBRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    AcceleratorTypes = new [] { \"acceleratorTypes\" },\n                    AllowedInstanceTypes = new [] { \"allowedInstanceTypes\" },\n                    BareMetal = \"bareMetal\",\n                    BaselineEbsBandwidthMbps = new BaselineEbsBandwidthMbpsRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    BurstablePerformance = \"burstablePerformance\",\n                    CpuManufacturers = new [] { \"cpuManufacturers\" },\n                    ExcludedInstanceTypes = new [] { \"excludedInstanceTypes\" },\n                    InstanceGenerations = new [] { \"instanceGenerations\" },\n                    LocalStorage = \"localStorage\",\n                    LocalStorageTypes = new [] { \"localStorageTypes\" },\n                    MemoryGiBPerVCpu = new MemoryGiBPerVCpuRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    MemoryMiB = new MemoryMiBRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    NetworkBandwidthGbps = new NetworkBandwidthGbpsRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    NetworkInterfaceCount = new NetworkInterfaceCountRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    OnDemandMaxPricePercentageOverLowestPrice = 123,\n                    RequireHibernateSupport = false,\n                    SpotMaxPricePercentageOverLowestPrice = 123,\n                    TotalLocalStorageGb = new TotalLocalStorageGBRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    },\n                    VCpuCount = new VCpuCountRequestProperty {\n                        Max = 123,\n                        Min = 123\n                    }\n                },\n                InstanceType = \"instanceType\",\n                LaunchTemplateSpecification = new LaunchTemplateSpecificationProperty {\n                    Version = \"version\",\n\n                    // the properties below are optional\n                    LaunchTemplateId = \"launchTemplateId\",\n                    LaunchTemplateName = \"launchTemplateName\"\n                },\n                WeightedCapacity = \"weightedCapacity\"\n            } }\n        },\n\n        // the properties below are optional\n        InstancesDistribution = new InstancesDistributionProperty {\n            OnDemandAllocationStrategy = \"onDemandAllocationStrategy\",\n            OnDemandBaseCapacity = 123,\n            OnDemandPercentageAboveBaseCapacity = 123,\n            SpotAllocationStrategy = \"spotAllocationStrategy\",\n            SpotInstancePools = 123,\n            SpotMaxPrice = \"spotMaxPrice\"\n        }\n    },\n    NewInstancesProtectedFromScaleIn = false,\n    NotificationConfigurations = new [] { new NotificationConfigurationProperty {\n        TopicArn = \"topicArn\",\n\n        // the properties below are optional\n        NotificationTypes = new [] { \"notificationTypes\" }\n    } },\n    PlacementGroup = \"placementGroup\",\n    ServiceLinkedRoleArn = \"serviceLinkedRoleArn\",\n    Tags = new [] { new TagPropertyProperty {\n        Key = \"key\",\n        PropagateAtLaunch = false,\n        Value = \"value\"\n    } },\n    TargetGroupArns = new [] { \"targetGroupArns\" },\n    TerminationPolicies = new [] { \"terminationPolicies\" },\n    VpcZoneIdentifier = new [] { \"vpcZoneIdentifier\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnAutoScalingGroupProps cfnAutoScalingGroupProps = CfnAutoScalingGroupProps.builder()\n        .maxSize(\"maxSize\")\n        .minSize(\"minSize\")\n\n        // the properties below are optional\n        .autoScalingGroupName(\"autoScalingGroupName\")\n        .availabilityZones(List.of(\"availabilityZones\"))\n        .capacityRebalance(false)\n        .context(\"context\")\n        .cooldown(\"cooldown\")\n        .defaultInstanceWarmup(123)\n        .desiredCapacity(\"desiredCapacity\")\n        .desiredCapacityType(\"desiredCapacityType\")\n        .healthCheckGracePeriod(123)\n        .healthCheckType(\"healthCheckType\")\n        .instanceId(\"instanceId\")\n        .launchConfigurationName(\"launchConfigurationName\")\n        .launchTemplate(LaunchTemplateSpecificationProperty.builder()\n                .version(\"version\")\n\n                // the properties below are optional\n                .launchTemplateId(\"launchTemplateId\")\n                .launchTemplateName(\"launchTemplateName\")\n                .build())\n        .lifecycleHookSpecificationList(List.of(LifecycleHookSpecificationProperty.builder()\n                .lifecycleHookName(\"lifecycleHookName\")\n                .lifecycleTransition(\"lifecycleTransition\")\n\n                // the properties below are optional\n                .defaultResult(\"defaultResult\")\n                .heartbeatTimeout(123)\n                .notificationMetadata(\"notificationMetadata\")\n                .notificationTargetArn(\"notificationTargetArn\")\n                .roleArn(\"roleArn\")\n                .build()))\n        .loadBalancerNames(List.of(\"loadBalancerNames\"))\n        .maxInstanceLifetime(123)\n        .metricsCollection(List.of(MetricsCollectionProperty.builder()\n                .granularity(\"granularity\")\n\n                // the properties below are optional\n                .metrics(List.of(\"metrics\"))\n                .build()))\n        .mixedInstancesPolicy(MixedInstancesPolicyProperty.builder()\n                .launchTemplate(LaunchTemplateProperty.builder()\n                        .launchTemplateSpecification(LaunchTemplateSpecificationProperty.builder()\n                                .version(\"version\")\n\n                                // the properties below are optional\n                                .launchTemplateId(\"launchTemplateId\")\n                                .launchTemplateName(\"launchTemplateName\")\n                                .build())\n\n                        // the properties below are optional\n                        .overrides(List.of(LaunchTemplateOverridesProperty.builder()\n                                .instanceRequirements(InstanceRequirementsProperty.builder()\n                                        .acceleratorCount(AcceleratorCountRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .acceleratorManufacturers(List.of(\"acceleratorManufacturers\"))\n                                        .acceleratorNames(List.of(\"acceleratorNames\"))\n                                        .acceleratorTotalMemoryMiB(AcceleratorTotalMemoryMiBRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .acceleratorTypes(List.of(\"acceleratorTypes\"))\n                                        .allowedInstanceTypes(List.of(\"allowedInstanceTypes\"))\n                                        .bareMetal(\"bareMetal\")\n                                        .baselineEbsBandwidthMbps(BaselineEbsBandwidthMbpsRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .burstablePerformance(\"burstablePerformance\")\n                                        .cpuManufacturers(List.of(\"cpuManufacturers\"))\n                                        .excludedInstanceTypes(List.of(\"excludedInstanceTypes\"))\n                                        .instanceGenerations(List.of(\"instanceGenerations\"))\n                                        .localStorage(\"localStorage\")\n                                        .localStorageTypes(List.of(\"localStorageTypes\"))\n                                        .memoryGiBPerVCpu(MemoryGiBPerVCpuRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .memoryMiB(MemoryMiBRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .networkBandwidthGbps(NetworkBandwidthGbpsRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .networkInterfaceCount(NetworkInterfaceCountRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .onDemandMaxPricePercentageOverLowestPrice(123)\n                                        .requireHibernateSupport(false)\n                                        .spotMaxPricePercentageOverLowestPrice(123)\n                                        .totalLocalStorageGb(TotalLocalStorageGBRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .vCpuCount(VCpuCountRequestProperty.builder()\n                                                .max(123)\n                                                .min(123)\n                                                .build())\n                                        .build())\n                                .instanceType(\"instanceType\")\n                                .launchTemplateSpecification(LaunchTemplateSpecificationProperty.builder()\n                                        .version(\"version\")\n\n                                        // the properties below are optional\n                                        .launchTemplateId(\"launchTemplateId\")\n                                        .launchTemplateName(\"launchTemplateName\")\n                                        .build())\n                                .weightedCapacity(\"weightedCapacity\")\n                                .build()))\n                        .build())\n\n                // the properties below are optional\n                .instancesDistribution(InstancesDistributionProperty.builder()\n                        .onDemandAllocationStrategy(\"onDemandAllocationStrategy\")\n                        .onDemandBaseCapacity(123)\n                        .onDemandPercentageAboveBaseCapacity(123)\n                        .spotAllocationStrategy(\"spotAllocationStrategy\")\n                        .spotInstancePools(123)\n                        .spotMaxPrice(\"spotMaxPrice\")\n                        .build())\n                .build())\n        .newInstancesProtectedFromScaleIn(false)\n        .notificationConfigurations(List.of(NotificationConfigurationProperty.builder()\n                .topicArn(\"topicArn\")\n\n                // the properties below are optional\n                .notificationTypes(List.of(\"notificationTypes\"))\n                .build()))\n        .placementGroup(\"placementGroup\")\n        .serviceLinkedRoleArn(\"serviceLinkedRoleArn\")\n        .tags(List.of(TagPropertyProperty.builder()\n                .key(\"key\")\n                .propagateAtLaunch(false)\n                .value(\"value\")\n                .build()))\n        .targetGroupArns(List.of(\"targetGroupArns\"))\n        .terminationPolicies(List.of(\"terminationPolicies\"))\n        .vpcZoneIdentifier(List.of(\"vpcZoneIdentifier\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnAutoScalingGroupProps := &cfnAutoScalingGroupProps{\n\tmaxSize: jsii.String(\"maxSize\"),\n\tminSize: jsii.String(\"minSize\"),\n\n\t// the properties below are optional\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\tavailabilityZones: []*string{\n\t\tjsii.String(\"availabilityZones\"),\n\t},\n\tcapacityRebalance: jsii.Boolean(false),\n\tcontext: jsii.String(\"context\"),\n\tcooldown: jsii.String(\"cooldown\"),\n\tdefaultInstanceWarmup: jsii.Number(123),\n\tdesiredCapacity: jsii.String(\"desiredCapacity\"),\n\tdesiredCapacityType: jsii.String(\"desiredCapacityType\"),\n\thealthCheckGracePeriod: jsii.Number(123),\n\thealthCheckType: jsii.String(\"healthCheckType\"),\n\tinstanceId: jsii.String(\"instanceId\"),\n\tlaunchConfigurationName: jsii.String(\"launchConfigurationName\"),\n\tlaunchTemplate: &launchTemplateSpecificationProperty{\n\t\tversion: jsii.String(\"version\"),\n\n\t\t// the properties below are optional\n\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t},\n\tlifecycleHookSpecificationList: []interface{}{\n\t\t&lifecycleHookSpecificationProperty{\n\t\t\tlifecycleHookName: jsii.String(\"lifecycleHookName\"),\n\t\t\tlifecycleTransition: jsii.String(\"lifecycleTransition\"),\n\n\t\t\t// the properties below are optional\n\t\t\tdefaultResult: jsii.String(\"defaultResult\"),\n\t\t\theartbeatTimeout: jsii.Number(123),\n\t\t\tnotificationMetadata: jsii.String(\"notificationMetadata\"),\n\t\t\tnotificationTargetArn: jsii.String(\"notificationTargetArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t},\n\t},\n\tloadBalancerNames: []*string{\n\t\tjsii.String(\"loadBalancerNames\"),\n\t},\n\tmaxInstanceLifetime: jsii.Number(123),\n\tmetricsCollection: []interface{}{\n\t\t&metricsCollectionProperty{\n\t\t\tgranularity: jsii.String(\"granularity\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmetrics: []*string{\n\t\t\t\tjsii.String(\"metrics\"),\n\t\t\t},\n\t\t},\n\t},\n\tmixedInstancesPolicy: &mixedInstancesPolicyProperty{\n\t\tlaunchTemplate: &launchTemplateProperty{\n\t\t\tlaunchTemplateSpecification: &launchTemplateSpecificationProperty{\n\t\t\t\tversion: jsii.String(\"version\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\t\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t\t\t},\n\n\t\t\t// the properties below are optional\n\t\t\toverrides: []interface{}{\n\t\t\t\t&launchTemplateOverridesProperty{\n\t\t\t\t\tinstanceRequirements: &instanceRequirementsProperty{\n\t\t\t\t\t\tacceleratorCount: &acceleratorCountRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tacceleratorManufacturers: []*string{\n\t\t\t\t\t\t\tjsii.String(\"acceleratorManufacturers\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tacceleratorNames: []*string{\n\t\t\t\t\t\t\tjsii.String(\"acceleratorNames\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tacceleratorTotalMemoryMiB: &acceleratorTotalMemoryMiBRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tacceleratorTypes: []*string{\n\t\t\t\t\t\t\tjsii.String(\"acceleratorTypes\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tallowedInstanceTypes: []*string{\n\t\t\t\t\t\t\tjsii.String(\"allowedInstanceTypes\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbareMetal: jsii.String(\"bareMetal\"),\n\t\t\t\t\t\tbaselineEbsBandwidthMbps: &baselineEbsBandwidthMbpsRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tburstablePerformance: jsii.String(\"burstablePerformance\"),\n\t\t\t\t\t\tcpuManufacturers: []*string{\n\t\t\t\t\t\t\tjsii.String(\"cpuManufacturers\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\texcludedInstanceTypes: []*string{\n\t\t\t\t\t\t\tjsii.String(\"excludedInstanceTypes\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinstanceGenerations: []*string{\n\t\t\t\t\t\t\tjsii.String(\"instanceGenerations\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlocalStorage: jsii.String(\"localStorage\"),\n\t\t\t\t\t\tlocalStorageTypes: []*string{\n\t\t\t\t\t\t\tjsii.String(\"localStorageTypes\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmemoryGiBPerVCpu: &memoryGiBPerVCpuRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmemoryMiB: &memoryMiBRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnetworkBandwidthGbps: &networkBandwidthGbpsRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnetworkInterfaceCount: &networkInterfaceCountRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonDemandMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\t\t\t\t\t\trequireHibernateSupport: jsii.Boolean(false),\n\t\t\t\t\t\tspotMaxPricePercentageOverLowestPrice: jsii.Number(123),\n\t\t\t\t\t\ttotalLocalStorageGb: &totalLocalStorageGBRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvCpuCount: &vCpuCountRequestProperty{\n\t\t\t\t\t\t\tmax: jsii.Number(123),\n\t\t\t\t\t\t\tmin: jsii.Number(123),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tinstanceType: jsii.String(\"instanceType\"),\n\t\t\t\t\tlaunchTemplateSpecification: &launchTemplateSpecificationProperty{\n\t\t\t\t\t\tversion: jsii.String(\"version\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tlaunchTemplateId: jsii.String(\"launchTemplateId\"),\n\t\t\t\t\t\tlaunchTemplateName: jsii.String(\"launchTemplateName\"),\n\t\t\t\t\t},\n\t\t\t\t\tweightedCapacity: jsii.String(\"weightedCapacity\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tinstancesDistribution: &instancesDistributionProperty{\n\t\t\tonDemandAllocationStrategy: jsii.String(\"onDemandAllocationStrategy\"),\n\t\t\tonDemandBaseCapacity: jsii.Number(123),\n\t\t\tonDemandPercentageAboveBaseCapacity: jsii.Number(123),\n\t\t\tspotAllocationStrategy: jsii.String(\"spotAllocationStrategy\"),\n\t\t\tspotInstancePools: jsii.Number(123),\n\t\t\tspotMaxPrice: jsii.String(\"spotMaxPrice\"),\n\t\t},\n\t},\n\tnewInstancesProtectedFromScaleIn: jsii.Boolean(false),\n\tnotificationConfigurations: []interface{}{\n\t\t&notificationConfigurationProperty{\n\t\t\ttopicArn: jsii.String(\"topicArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tnotificationTypes: []*string{\n\t\t\t\tjsii.String(\"notificationTypes\"),\n\t\t\t},\n\t\t},\n\t},\n\tplacementGroup: jsii.String(\"placementGroup\"),\n\tserviceLinkedRoleArn: jsii.String(\"serviceLinkedRoleArn\"),\n\ttags: []tagPropertyProperty{\n\t\t&tagPropertyProperty{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tpropagateAtLaunch: jsii.Boolean(false),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\ttargetGroupArns: []*string{\n\t\tjsii.String(\"targetGroupArns\"),\n\t},\n\tterminationPolicies: []*string{\n\t\tjsii.String(\"terminationPolicies\"),\n\t},\n\tvpcZoneIdentifier: []*string{\n\t\tjsii.String(\"vpcZoneIdentifier\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnAutoScalingGroupProps: autoscaling.CfnAutoScalingGroupProps = {\n  maxSize: 'maxSize',\n  minSize: 'minSize',\n\n  // the properties below are optional\n  autoScalingGroupName: 'autoScalingGroupName',\n  availabilityZones: ['availabilityZones'],\n  capacityRebalance: false,\n  context: 'context',\n  cooldown: 'cooldown',\n  defaultInstanceWarmup: 123,\n  desiredCapacity: 'desiredCapacity',\n  desiredCapacityType: 'desiredCapacityType',\n  healthCheckGracePeriod: 123,\n  healthCheckType: 'healthCheckType',\n  instanceId: 'instanceId',\n  launchConfigurationName: 'launchConfigurationName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  lifecycleHookSpecificationList: [{\n    lifecycleHookName: 'lifecycleHookName',\n    lifecycleTransition: 'lifecycleTransition',\n\n    // the properties below are optional\n    defaultResult: 'defaultResult',\n    heartbeatTimeout: 123,\n    notificationMetadata: 'notificationMetadata',\n    notificationTargetArn: 'notificationTargetArn',\n    roleArn: 'roleArn',\n  }],\n  loadBalancerNames: ['loadBalancerNames'],\n  maxInstanceLifetime: 123,\n  metricsCollection: [{\n    granularity: 'granularity',\n\n    // the properties below are optional\n    metrics: ['metrics'],\n  }],\n  mixedInstancesPolicy: {\n    launchTemplate: {\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n\n      // the properties below are optional\n      overrides: [{\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          allowedInstanceTypes: ['allowedInstanceTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkBandwidthGbps: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        launchTemplateSpecification: {\n          version: 'version',\n\n          // the properties below are optional\n          launchTemplateId: 'launchTemplateId',\n          launchTemplateName: 'launchTemplateName',\n        },\n        weightedCapacity: 'weightedCapacity',\n      }],\n    },\n\n    // the properties below are optional\n    instancesDistribution: {\n      onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n      onDemandBaseCapacity: 123,\n      onDemandPercentageAboveBaseCapacity: 123,\n      spotAllocationStrategy: 'spotAllocationStrategy',\n      spotInstancePools: 123,\n      spotMaxPrice: 'spotMaxPrice',\n    },\n  },\n  newInstancesProtectedFromScaleIn: false,\n  notificationConfigurations: [{\n    topicArn: 'topicArn',\n\n    // the properties below are optional\n    notificationTypes: ['notificationTypes'],\n  }],\n  placementGroup: 'placementGroup',\n  serviceLinkedRoleArn: 'serviceLinkedRoleArn',\n  tags: [{\n    key: 'key',\n    propagateAtLaunch: false,\n    value: 'value',\n  }],\n  targetGroupArns: ['targetGroupArns'],\n  terminationPolicies: ['terminationPolicies'],\n  vpcZoneIdentifier: ['vpcZoneIdentifier'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnAutoScalingGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnAutoScalingGroupProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAutoScalingGroupProps: autoscaling.CfnAutoScalingGroupProps = {\n  maxSize: 'maxSize',\n  minSize: 'minSize',\n\n  // the properties below are optional\n  autoScalingGroupName: 'autoScalingGroupName',\n  availabilityZones: ['availabilityZones'],\n  capacityRebalance: false,\n  context: 'context',\n  cooldown: 'cooldown',\n  defaultInstanceWarmup: 123,\n  desiredCapacity: 'desiredCapacity',\n  desiredCapacityType: 'desiredCapacityType',\n  healthCheckGracePeriod: 123,\n  healthCheckType: 'healthCheckType',\n  instanceId: 'instanceId',\n  launchConfigurationName: 'launchConfigurationName',\n  launchTemplate: {\n    version: 'version',\n\n    // the properties below are optional\n    launchTemplateId: 'launchTemplateId',\n    launchTemplateName: 'launchTemplateName',\n  },\n  lifecycleHookSpecificationList: [{\n    lifecycleHookName: 'lifecycleHookName',\n    lifecycleTransition: 'lifecycleTransition',\n\n    // the properties below are optional\n    defaultResult: 'defaultResult',\n    heartbeatTimeout: 123,\n    notificationMetadata: 'notificationMetadata',\n    notificationTargetArn: 'notificationTargetArn',\n    roleArn: 'roleArn',\n  }],\n  loadBalancerNames: ['loadBalancerNames'],\n  maxInstanceLifetime: 123,\n  metricsCollection: [{\n    granularity: 'granularity',\n\n    // the properties below are optional\n    metrics: ['metrics'],\n  }],\n  mixedInstancesPolicy: {\n    launchTemplate: {\n      launchTemplateSpecification: {\n        version: 'version',\n\n        // the properties below are optional\n        launchTemplateId: 'launchTemplateId',\n        launchTemplateName: 'launchTemplateName',\n      },\n\n      // the properties below are optional\n      overrides: [{\n        instanceRequirements: {\n          acceleratorCount: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorManufacturers: ['acceleratorManufacturers'],\n          acceleratorNames: ['acceleratorNames'],\n          acceleratorTotalMemoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          acceleratorTypes: ['acceleratorTypes'],\n          allowedInstanceTypes: ['allowedInstanceTypes'],\n          bareMetal: 'bareMetal',\n          baselineEbsBandwidthMbps: {\n            max: 123,\n            min: 123,\n          },\n          burstablePerformance: 'burstablePerformance',\n          cpuManufacturers: ['cpuManufacturers'],\n          excludedInstanceTypes: ['excludedInstanceTypes'],\n          instanceGenerations: ['instanceGenerations'],\n          localStorage: 'localStorage',\n          localStorageTypes: ['localStorageTypes'],\n          memoryGiBPerVCpu: {\n            max: 123,\n            min: 123,\n          },\n          memoryMiB: {\n            max: 123,\n            min: 123,\n          },\n          networkBandwidthGbps: {\n            max: 123,\n            min: 123,\n          },\n          networkInterfaceCount: {\n            max: 123,\n            min: 123,\n          },\n          onDemandMaxPricePercentageOverLowestPrice: 123,\n          requireHibernateSupport: false,\n          spotMaxPricePercentageOverLowestPrice: 123,\n          totalLocalStorageGb: {\n            max: 123,\n            min: 123,\n          },\n          vCpuCount: {\n            max: 123,\n            min: 123,\n          },\n        },\n        instanceType: 'instanceType',\n        launchTemplateSpecification: {\n          version: 'version',\n\n          // the properties below are optional\n          launchTemplateId: 'launchTemplateId',\n          launchTemplateName: 'launchTemplateName',\n        },\n        weightedCapacity: 'weightedCapacity',\n      }],\n    },\n\n    // the properties below are optional\n    instancesDistribution: {\n      onDemandAllocationStrategy: 'onDemandAllocationStrategy',\n      onDemandBaseCapacity: 123,\n      onDemandPercentageAboveBaseCapacity: 123,\n      spotAllocationStrategy: 'spotAllocationStrategy',\n      spotInstancePools: 123,\n      spotMaxPrice: 'spotMaxPrice',\n    },\n  },\n  newInstancesProtectedFromScaleIn: false,\n  notificationConfigurations: [{\n    topicArn: 'topicArn',\n\n    // the properties below are optional\n    notificationTypes: ['notificationTypes'],\n  }],\n  placementGroup: 'placementGroup',\n  serviceLinkedRoleArn: 'serviceLinkedRoleArn',\n  tags: [{\n    key: 'key',\n    propagateAtLaunch: false,\n    value: 'value',\n  }],\n  targetGroupArns: ['targetGroupArns'],\n  terminationPolicies: ['terminationPolicies'],\n  vpcZoneIdentifier: ['vpcZoneIdentifier'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 27,
        "10": 55,
        "75": 110,
        "91": 4,
        "153": 1,
        "169": 1,
        "192": 20,
        "193": 22,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 106,
        "290": 1
      },
      "fqnsFingerprint": "785e69936870ba06eb63019ebb104a95b025a7092fa12bf3d13128899e1e2efd"
    },
    "03a3178876679e25e9ef5d38ecc9493cf307da4a2d5e06aa229990e2fb048485": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_launch_configuration = autoscaling.CfnLaunchConfiguration(self, \"MyCfnLaunchConfiguration\",\n    image_id=\"imageId\",\n    instance_type=\"instanceType\",\n\n    # the properties below are optional\n    associate_public_ip_address=False,\n    block_device_mappings=[autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty(\n        device_name=\"deviceName\",\n\n        # the properties below are optional\n        ebs=autoscaling.CfnLaunchConfiguration.BlockDeviceProperty(\n            delete_on_termination=False,\n            encrypted=False,\n            iops=123,\n            snapshot_id=\"snapshotId\",\n            throughput=123,\n            volume_size=123,\n            volume_type=\"volumeType\"\n        ),\n        no_device=False,\n        virtual_name=\"virtualName\"\n    )],\n    classic_link_vpc_id=\"classicLinkVpcId\",\n    classic_link_vpc_security_groups=[\"classicLinkVpcSecurityGroups\"],\n    ebs_optimized=False,\n    iam_instance_profile=\"iamInstanceProfile\",\n    instance_id=\"instanceId\",\n    instance_monitoring=False,\n    kernel_id=\"kernelId\",\n    key_name=\"keyName\",\n    launch_configuration_name=\"launchConfigurationName\",\n    metadata_options=autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty(\n        http_endpoint=\"httpEndpoint\",\n        http_put_response_hop_limit=123,\n        http_tokens=\"httpTokens\"\n    ),\n    placement_tenancy=\"placementTenancy\",\n    ram_disk_id=\"ramDiskId\",\n    security_groups=[\"securityGroups\"],\n    spot_price=\"spotPrice\",\n    user_data=\"userData\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnLaunchConfiguration cfnLaunchConfiguration = new CfnLaunchConfiguration(this, \"MyCfnLaunchConfiguration\", new CfnLaunchConfigurationProps {\n    ImageId = \"imageId\",\n    InstanceType = \"instanceType\",\n\n    // the properties below are optional\n    AssociatePublicIpAddress = false,\n    BlockDeviceMappings = new [] { new BlockDeviceMappingProperty {\n        DeviceName = \"deviceName\",\n\n        // the properties below are optional\n        Ebs = new BlockDeviceProperty {\n            DeleteOnTermination = false,\n            Encrypted = false,\n            Iops = 123,\n            SnapshotId = \"snapshotId\",\n            Throughput = 123,\n            VolumeSize = 123,\n            VolumeType = \"volumeType\"\n        },\n        NoDevice = false,\n        VirtualName = \"virtualName\"\n    } },\n    ClassicLinkVpcId = \"classicLinkVpcId\",\n    ClassicLinkVpcSecurityGroups = new [] { \"classicLinkVpcSecurityGroups\" },\n    EbsOptimized = false,\n    IamInstanceProfile = \"iamInstanceProfile\",\n    InstanceId = \"instanceId\",\n    InstanceMonitoring = false,\n    KernelId = \"kernelId\",\n    KeyName = \"keyName\",\n    LaunchConfigurationName = \"launchConfigurationName\",\n    MetadataOptions = new MetadataOptionsProperty {\n        HttpEndpoint = \"httpEndpoint\",\n        HttpPutResponseHopLimit = 123,\n        HttpTokens = \"httpTokens\"\n    },\n    PlacementTenancy = \"placementTenancy\",\n    RamDiskId = \"ramDiskId\",\n    SecurityGroups = new [] { \"securityGroups\" },\n    SpotPrice = \"spotPrice\",\n    UserData = \"userData\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnLaunchConfiguration cfnLaunchConfiguration = CfnLaunchConfiguration.Builder.create(this, \"MyCfnLaunchConfiguration\")\n        .imageId(\"imageId\")\n        .instanceType(\"instanceType\")\n\n        // the properties below are optional\n        .associatePublicIpAddress(false)\n        .blockDeviceMappings(List.of(BlockDeviceMappingProperty.builder()\n                .deviceName(\"deviceName\")\n\n                // the properties below are optional\n                .ebs(BlockDeviceProperty.builder()\n                        .deleteOnTermination(false)\n                        .encrypted(false)\n                        .iops(123)\n                        .snapshotId(\"snapshotId\")\n                        .throughput(123)\n                        .volumeSize(123)\n                        .volumeType(\"volumeType\")\n                        .build())\n                .noDevice(false)\n                .virtualName(\"virtualName\")\n                .build()))\n        .classicLinkVpcId(\"classicLinkVpcId\")\n        .classicLinkVpcSecurityGroups(List.of(\"classicLinkVpcSecurityGroups\"))\n        .ebsOptimized(false)\n        .iamInstanceProfile(\"iamInstanceProfile\")\n        .instanceId(\"instanceId\")\n        .instanceMonitoring(false)\n        .kernelId(\"kernelId\")\n        .keyName(\"keyName\")\n        .launchConfigurationName(\"launchConfigurationName\")\n        .metadataOptions(MetadataOptionsProperty.builder()\n                .httpEndpoint(\"httpEndpoint\")\n                .httpPutResponseHopLimit(123)\n                .httpTokens(\"httpTokens\")\n                .build())\n        .placementTenancy(\"placementTenancy\")\n        .ramDiskId(\"ramDiskId\")\n        .securityGroups(List.of(\"securityGroups\"))\n        .spotPrice(\"spotPrice\")\n        .userData(\"userData\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnLaunchConfiguration := autoscaling.NewCfnLaunchConfiguration(this, jsii.String(\"MyCfnLaunchConfiguration\"), &cfnLaunchConfigurationProps{\n\timageId: jsii.String(\"imageId\"),\n\tinstanceType: jsii.String(\"instanceType\"),\n\n\t// the properties below are optional\n\tassociatePublicIpAddress: jsii.Boolean(false),\n\tblockDeviceMappings: []interface{}{\n\t\t&blockDeviceMappingProperty{\n\t\t\tdeviceName: jsii.String(\"deviceName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tebs: &blockDeviceProperty{\n\t\t\t\tdeleteOnTermination: jsii.Boolean(false),\n\t\t\t\tencrypted: jsii.Boolean(false),\n\t\t\t\tiops: jsii.Number(123),\n\t\t\t\tsnapshotId: jsii.String(\"snapshotId\"),\n\t\t\t\tthroughput: jsii.Number(123),\n\t\t\t\tvolumeSize: jsii.Number(123),\n\t\t\t\tvolumeType: jsii.String(\"volumeType\"),\n\t\t\t},\n\t\t\tnoDevice: jsii.Boolean(false),\n\t\t\tvirtualName: jsii.String(\"virtualName\"),\n\t\t},\n\t},\n\tclassicLinkVpcId: jsii.String(\"classicLinkVpcId\"),\n\tclassicLinkVpcSecurityGroups: []*string{\n\t\tjsii.String(\"classicLinkVpcSecurityGroups\"),\n\t},\n\tebsOptimized: jsii.Boolean(false),\n\tiamInstanceProfile: jsii.String(\"iamInstanceProfile\"),\n\tinstanceId: jsii.String(\"instanceId\"),\n\tinstanceMonitoring: jsii.Boolean(false),\n\tkernelId: jsii.String(\"kernelId\"),\n\tkeyName: jsii.String(\"keyName\"),\n\tlaunchConfigurationName: jsii.String(\"launchConfigurationName\"),\n\tmetadataOptions: &metadataOptionsProperty{\n\t\thttpEndpoint: jsii.String(\"httpEndpoint\"),\n\t\thttpPutResponseHopLimit: jsii.Number(123),\n\t\thttpTokens: jsii.String(\"httpTokens\"),\n\t},\n\tplacementTenancy: jsii.String(\"placementTenancy\"),\n\tramDiskId: jsii.String(\"ramDiskId\"),\n\tsecurityGroups: []*string{\n\t\tjsii.String(\"securityGroups\"),\n\t},\n\tspotPrice: jsii.String(\"spotPrice\"),\n\tuserData: jsii.String(\"userData\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnLaunchConfiguration = new autoscaling.CfnLaunchConfiguration(this, 'MyCfnLaunchConfiguration', {\n  imageId: 'imageId',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  associatePublicIpAddress: false,\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      snapshotId: 'snapshotId',\n      throughput: 123,\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: false,\n    virtualName: 'virtualName',\n  }],\n  classicLinkVpcId: 'classicLinkVpcId',\n  classicLinkVpcSecurityGroups: ['classicLinkVpcSecurityGroups'],\n  ebsOptimized: false,\n  iamInstanceProfile: 'iamInstanceProfile',\n  instanceId: 'instanceId',\n  instanceMonitoring: false,\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchConfigurationName: 'launchConfigurationName',\n  metadataOptions: {\n    httpEndpoint: 'httpEndpoint',\n    httpPutResponseHopLimit: 123,\n    httpTokens: 'httpTokens',\n  },\n  placementTenancy: 'placementTenancy',\n  ramDiskId: 'ramDiskId',\n  securityGroups: ['securityGroups'],\n  spotPrice: 'spotPrice',\n  userData: 'userData',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration",
        "@aws-cdk/aws-autoscaling.CfnLaunchConfigurationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLaunchConfiguration = new autoscaling.CfnLaunchConfiguration(this, 'MyCfnLaunchConfiguration', {\n  imageId: 'imageId',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  associatePublicIpAddress: false,\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      snapshotId: 'snapshotId',\n      throughput: 123,\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: false,\n    virtualName: 'virtualName',\n  }],\n  classicLinkVpcId: 'classicLinkVpcId',\n  classicLinkVpcSecurityGroups: ['classicLinkVpcSecurityGroups'],\n  ebsOptimized: false,\n  iamInstanceProfile: 'iamInstanceProfile',\n  instanceId: 'instanceId',\n  instanceMonitoring: false,\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchConfigurationName: 'launchConfigurationName',\n  metadataOptions: {\n    httpEndpoint: 'httpEndpoint',\n    httpPutResponseHopLimit: 123,\n    httpTokens: 'httpTokens',\n  },\n  placementTenancy: 'placementTenancy',\n  ramDiskId: 'ramDiskId',\n  securityGroups: ['securityGroups'],\n  spotPrice: 'spotPrice',\n  userData: 'userData',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 22,
        "75": 37,
        "91": 6,
        "104": 1,
        "192": 3,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 33,
        "290": 1
      },
      "fqnsFingerprint": "876c64e7b421317eb976a6903f1a8074b3d0257e49a820c4e2698178b55011dc"
    },
    "e0ac026452ad76324525696c454f4975ceeceadefb8e65b300dc395138f7a387": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nblock_device_mapping_property = autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty(\n    device_name=\"deviceName\",\n\n    # the properties below are optional\n    ebs=autoscaling.CfnLaunchConfiguration.BlockDeviceProperty(\n        delete_on_termination=False,\n        encrypted=False,\n        iops=123,\n        snapshot_id=\"snapshotId\",\n        throughput=123,\n        volume_size=123,\n        volume_type=\"volumeType\"\n    ),\n    no_device=False,\n    virtual_name=\"virtualName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nBlockDeviceMappingProperty blockDeviceMappingProperty = new BlockDeviceMappingProperty {\n    DeviceName = \"deviceName\",\n\n    // the properties below are optional\n    Ebs = new BlockDeviceProperty {\n        DeleteOnTermination = false,\n        Encrypted = false,\n        Iops = 123,\n        SnapshotId = \"snapshotId\",\n        Throughput = 123,\n        VolumeSize = 123,\n        VolumeType = \"volumeType\"\n    },\n    NoDevice = false,\n    VirtualName = \"virtualName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nBlockDeviceMappingProperty blockDeviceMappingProperty = BlockDeviceMappingProperty.builder()\n        .deviceName(\"deviceName\")\n\n        // the properties below are optional\n        .ebs(BlockDeviceProperty.builder()\n                .deleteOnTermination(false)\n                .encrypted(false)\n                .iops(123)\n                .snapshotId(\"snapshotId\")\n                .throughput(123)\n                .volumeSize(123)\n                .volumeType(\"volumeType\")\n                .build())\n        .noDevice(false)\n        .virtualName(\"virtualName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nblockDeviceMappingProperty := &blockDeviceMappingProperty{\n\tdeviceName: jsii.String(\"deviceName\"),\n\n\t// the properties below are optional\n\tebs: &blockDeviceProperty{\n\t\tdeleteOnTermination: jsii.Boolean(false),\n\t\tencrypted: jsii.Boolean(false),\n\t\tiops: jsii.Number(123),\n\t\tsnapshotId: jsii.String(\"snapshotId\"),\n\t\tthroughput: jsii.Number(123),\n\t\tvolumeSize: jsii.Number(123),\n\t\tvolumeType: jsii.String(\"volumeType\"),\n\t},\n\tnoDevice: jsii.Boolean(false),\n\tvirtualName: jsii.String(\"virtualName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst blockDeviceMappingProperty: autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty = {\n  deviceName: 'deviceName',\n\n  // the properties below are optional\n  ebs: {\n    deleteOnTermination: false,\n    encrypted: false,\n    iops: 123,\n    snapshotId: 'snapshotId',\n    throughput: 123,\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  noDevice: false,\n  virtualName: 'virtualName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst blockDeviceMappingProperty: autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty = {\n  deviceName: 'deviceName',\n\n  // the properties below are optional\n  ebs: {\n    deleteOnTermination: false,\n    encrypted: false,\n    iops: 123,\n    snapshotId: 'snapshotId',\n    throughput: 123,\n    volumeSize: 123,\n    volumeType: 'volumeType',\n  },\n  noDevice: false,\n  virtualName: 'virtualName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 5,
        "75": 16,
        "91": 3,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "deff7c529cea1ad835f350bfcada1db1928538c33f1c2956d5e6423abb3a4c48"
    },
    "15c7e72b496c3eb34817b1ebe6ff0445b28d57cf507f9909026c3cc0b508e349": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nblock_device_property = autoscaling.CfnLaunchConfiguration.BlockDeviceProperty(\n    delete_on_termination=False,\n    encrypted=False,\n    iops=123,\n    snapshot_id=\"snapshotId\",\n    throughput=123,\n    volume_size=123,\n    volume_type=\"volumeType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nBlockDeviceProperty blockDeviceProperty = new BlockDeviceProperty {\n    DeleteOnTermination = false,\n    Encrypted = false,\n    Iops = 123,\n    SnapshotId = \"snapshotId\",\n    Throughput = 123,\n    VolumeSize = 123,\n    VolumeType = \"volumeType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nBlockDeviceProperty blockDeviceProperty = BlockDeviceProperty.builder()\n        .deleteOnTermination(false)\n        .encrypted(false)\n        .iops(123)\n        .snapshotId(\"snapshotId\")\n        .throughput(123)\n        .volumeSize(123)\n        .volumeType(\"volumeType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nblockDeviceProperty := &blockDeviceProperty{\n\tdeleteOnTermination: jsii.Boolean(false),\n\tencrypted: jsii.Boolean(false),\n\tiops: jsii.Number(123),\n\tsnapshotId: jsii.String(\"snapshotId\"),\n\tthroughput: jsii.Number(123),\n\tvolumeSize: jsii.Number(123),\n\tvolumeType: jsii.String(\"volumeType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst blockDeviceProperty: autoscaling.CfnLaunchConfiguration.BlockDeviceProperty = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  throughput: 123,\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.BlockDeviceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst blockDeviceProperty: autoscaling.CfnLaunchConfiguration.BlockDeviceProperty = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  throughput: 123,\n  volumeSize: 123,\n  volumeType: 'volumeType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 3,
        "75": 12,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "65c40ef8ad39b757e57b41fd4bea09cc5dd763bd154b126943a3b9226f144ba8"
    },
    "b394ea34ab7ba998091b71f400267691d0c9d2fb266b16863db1c279fb3a58f4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nmetadata_options_property = autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty(\n    http_endpoint=\"httpEndpoint\",\n    http_put_response_hop_limit=123,\n    http_tokens=\"httpTokens\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nMetadataOptionsProperty metadataOptionsProperty = new MetadataOptionsProperty {\n    HttpEndpoint = \"httpEndpoint\",\n    HttpPutResponseHopLimit = 123,\n    HttpTokens = \"httpTokens\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nMetadataOptionsProperty metadataOptionsProperty = MetadataOptionsProperty.builder()\n        .httpEndpoint(\"httpEndpoint\")\n        .httpPutResponseHopLimit(123)\n        .httpTokens(\"httpTokens\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nmetadataOptionsProperty := &metadataOptionsProperty{\n\thttpEndpoint: jsii.String(\"httpEndpoint\"),\n\thttpPutResponseHopLimit: jsii.Number(123),\n\thttpTokens: jsii.String(\"httpTokens\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metadataOptionsProperty: autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty = {\n  httpEndpoint: 'httpEndpoint',\n  httpPutResponseHopLimit: 123,\n  httpTokens: 'httpTokens',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metadataOptionsProperty: autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty = {\n  httpEndpoint: 'httpEndpoint',\n  httpPutResponseHopLimit: 123,\n  httpTokens: 'httpTokens',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "380bae0fe71d300ba4ea38daa4a883f9a1d27151723bdf59bc7c81a5ecf0d8b8"
    },
    "1aa7127db91cff98287ae48e9a1b5b12d57a2a3a3719139423a02b7877f6a245": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_launch_configuration_props = autoscaling.CfnLaunchConfigurationProps(\n    image_id=\"imageId\",\n    instance_type=\"instanceType\",\n\n    # the properties below are optional\n    associate_public_ip_address=False,\n    block_device_mappings=[autoscaling.CfnLaunchConfiguration.BlockDeviceMappingProperty(\n        device_name=\"deviceName\",\n\n        # the properties below are optional\n        ebs=autoscaling.CfnLaunchConfiguration.BlockDeviceProperty(\n            delete_on_termination=False,\n            encrypted=False,\n            iops=123,\n            snapshot_id=\"snapshotId\",\n            throughput=123,\n            volume_size=123,\n            volume_type=\"volumeType\"\n        ),\n        no_device=False,\n        virtual_name=\"virtualName\"\n    )],\n    classic_link_vpc_id=\"classicLinkVpcId\",\n    classic_link_vpc_security_groups=[\"classicLinkVpcSecurityGroups\"],\n    ebs_optimized=False,\n    iam_instance_profile=\"iamInstanceProfile\",\n    instance_id=\"instanceId\",\n    instance_monitoring=False,\n    kernel_id=\"kernelId\",\n    key_name=\"keyName\",\n    launch_configuration_name=\"launchConfigurationName\",\n    metadata_options=autoscaling.CfnLaunchConfiguration.MetadataOptionsProperty(\n        http_endpoint=\"httpEndpoint\",\n        http_put_response_hop_limit=123,\n        http_tokens=\"httpTokens\"\n    ),\n    placement_tenancy=\"placementTenancy\",\n    ram_disk_id=\"ramDiskId\",\n    security_groups=[\"securityGroups\"],\n    spot_price=\"spotPrice\",\n    user_data=\"userData\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnLaunchConfigurationProps cfnLaunchConfigurationProps = new CfnLaunchConfigurationProps {\n    ImageId = \"imageId\",\n    InstanceType = \"instanceType\",\n\n    // the properties below are optional\n    AssociatePublicIpAddress = false,\n    BlockDeviceMappings = new [] { new BlockDeviceMappingProperty {\n        DeviceName = \"deviceName\",\n\n        // the properties below are optional\n        Ebs = new BlockDeviceProperty {\n            DeleteOnTermination = false,\n            Encrypted = false,\n            Iops = 123,\n            SnapshotId = \"snapshotId\",\n            Throughput = 123,\n            VolumeSize = 123,\n            VolumeType = \"volumeType\"\n        },\n        NoDevice = false,\n        VirtualName = \"virtualName\"\n    } },\n    ClassicLinkVpcId = \"classicLinkVpcId\",\n    ClassicLinkVpcSecurityGroups = new [] { \"classicLinkVpcSecurityGroups\" },\n    EbsOptimized = false,\n    IamInstanceProfile = \"iamInstanceProfile\",\n    InstanceId = \"instanceId\",\n    InstanceMonitoring = false,\n    KernelId = \"kernelId\",\n    KeyName = \"keyName\",\n    LaunchConfigurationName = \"launchConfigurationName\",\n    MetadataOptions = new MetadataOptionsProperty {\n        HttpEndpoint = \"httpEndpoint\",\n        HttpPutResponseHopLimit = 123,\n        HttpTokens = \"httpTokens\"\n    },\n    PlacementTenancy = \"placementTenancy\",\n    RamDiskId = \"ramDiskId\",\n    SecurityGroups = new [] { \"securityGroups\" },\n    SpotPrice = \"spotPrice\",\n    UserData = \"userData\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnLaunchConfigurationProps cfnLaunchConfigurationProps = CfnLaunchConfigurationProps.builder()\n        .imageId(\"imageId\")\n        .instanceType(\"instanceType\")\n\n        // the properties below are optional\n        .associatePublicIpAddress(false)\n        .blockDeviceMappings(List.of(BlockDeviceMappingProperty.builder()\n                .deviceName(\"deviceName\")\n\n                // the properties below are optional\n                .ebs(BlockDeviceProperty.builder()\n                        .deleteOnTermination(false)\n                        .encrypted(false)\n                        .iops(123)\n                        .snapshotId(\"snapshotId\")\n                        .throughput(123)\n                        .volumeSize(123)\n                        .volumeType(\"volumeType\")\n                        .build())\n                .noDevice(false)\n                .virtualName(\"virtualName\")\n                .build()))\n        .classicLinkVpcId(\"classicLinkVpcId\")\n        .classicLinkVpcSecurityGroups(List.of(\"classicLinkVpcSecurityGroups\"))\n        .ebsOptimized(false)\n        .iamInstanceProfile(\"iamInstanceProfile\")\n        .instanceId(\"instanceId\")\n        .instanceMonitoring(false)\n        .kernelId(\"kernelId\")\n        .keyName(\"keyName\")\n        .launchConfigurationName(\"launchConfigurationName\")\n        .metadataOptions(MetadataOptionsProperty.builder()\n                .httpEndpoint(\"httpEndpoint\")\n                .httpPutResponseHopLimit(123)\n                .httpTokens(\"httpTokens\")\n                .build())\n        .placementTenancy(\"placementTenancy\")\n        .ramDiskId(\"ramDiskId\")\n        .securityGroups(List.of(\"securityGroups\"))\n        .spotPrice(\"spotPrice\")\n        .userData(\"userData\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnLaunchConfigurationProps := &cfnLaunchConfigurationProps{\n\timageId: jsii.String(\"imageId\"),\n\tinstanceType: jsii.String(\"instanceType\"),\n\n\t// the properties below are optional\n\tassociatePublicIpAddress: jsii.Boolean(false),\n\tblockDeviceMappings: []interface{}{\n\t\t&blockDeviceMappingProperty{\n\t\t\tdeviceName: jsii.String(\"deviceName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tebs: &blockDeviceProperty{\n\t\t\t\tdeleteOnTermination: jsii.Boolean(false),\n\t\t\t\tencrypted: jsii.Boolean(false),\n\t\t\t\tiops: jsii.Number(123),\n\t\t\t\tsnapshotId: jsii.String(\"snapshotId\"),\n\t\t\t\tthroughput: jsii.Number(123),\n\t\t\t\tvolumeSize: jsii.Number(123),\n\t\t\t\tvolumeType: jsii.String(\"volumeType\"),\n\t\t\t},\n\t\t\tnoDevice: jsii.Boolean(false),\n\t\t\tvirtualName: jsii.String(\"virtualName\"),\n\t\t},\n\t},\n\tclassicLinkVpcId: jsii.String(\"classicLinkVpcId\"),\n\tclassicLinkVpcSecurityGroups: []*string{\n\t\tjsii.String(\"classicLinkVpcSecurityGroups\"),\n\t},\n\tebsOptimized: jsii.Boolean(false),\n\tiamInstanceProfile: jsii.String(\"iamInstanceProfile\"),\n\tinstanceId: jsii.String(\"instanceId\"),\n\tinstanceMonitoring: jsii.Boolean(false),\n\tkernelId: jsii.String(\"kernelId\"),\n\tkeyName: jsii.String(\"keyName\"),\n\tlaunchConfigurationName: jsii.String(\"launchConfigurationName\"),\n\tmetadataOptions: &metadataOptionsProperty{\n\t\thttpEndpoint: jsii.String(\"httpEndpoint\"),\n\t\thttpPutResponseHopLimit: jsii.Number(123),\n\t\thttpTokens: jsii.String(\"httpTokens\"),\n\t},\n\tplacementTenancy: jsii.String(\"placementTenancy\"),\n\tramDiskId: jsii.String(\"ramDiskId\"),\n\tsecurityGroups: []*string{\n\t\tjsii.String(\"securityGroups\"),\n\t},\n\tspotPrice: jsii.String(\"spotPrice\"),\n\tuserData: jsii.String(\"userData\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnLaunchConfigurationProps: autoscaling.CfnLaunchConfigurationProps = {\n  imageId: 'imageId',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  associatePublicIpAddress: false,\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      snapshotId: 'snapshotId',\n      throughput: 123,\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: false,\n    virtualName: 'virtualName',\n  }],\n  classicLinkVpcId: 'classicLinkVpcId',\n  classicLinkVpcSecurityGroups: ['classicLinkVpcSecurityGroups'],\n  ebsOptimized: false,\n  iamInstanceProfile: 'iamInstanceProfile',\n  instanceId: 'instanceId',\n  instanceMonitoring: false,\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchConfigurationName: 'launchConfigurationName',\n  metadataOptions: {\n    httpEndpoint: 'httpEndpoint',\n    httpPutResponseHopLimit: 123,\n    httpTokens: 'httpTokens',\n  },\n  placementTenancy: 'placementTenancy',\n  ramDiskId: 'ramDiskId',\n  securityGroups: ['securityGroups'],\n  spotPrice: 'spotPrice',\n  userData: 'userData',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnLaunchConfigurationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnLaunchConfigurationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLaunchConfigurationProps: autoscaling.CfnLaunchConfigurationProps = {\n  imageId: 'imageId',\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  associatePublicIpAddress: false,\n  blockDeviceMappings: [{\n    deviceName: 'deviceName',\n\n    // the properties below are optional\n    ebs: {\n      deleteOnTermination: false,\n      encrypted: false,\n      iops: 123,\n      snapshotId: 'snapshotId',\n      throughput: 123,\n      volumeSize: 123,\n      volumeType: 'volumeType',\n    },\n    noDevice: false,\n    virtualName: 'virtualName',\n  }],\n  classicLinkVpcId: 'classicLinkVpcId',\n  classicLinkVpcSecurityGroups: ['classicLinkVpcSecurityGroups'],\n  ebsOptimized: false,\n  iamInstanceProfile: 'iamInstanceProfile',\n  instanceId: 'instanceId',\n  instanceMonitoring: false,\n  kernelId: 'kernelId',\n  keyName: 'keyName',\n  launchConfigurationName: 'launchConfigurationName',\n  metadataOptions: {\n    httpEndpoint: 'httpEndpoint',\n    httpPutResponseHopLimit: 123,\n    httpTokens: 'httpTokens',\n  },\n  placementTenancy: 'placementTenancy',\n  ramDiskId: 'ramDiskId',\n  securityGroups: ['securityGroups'],\n  spotPrice: 'spotPrice',\n  userData: 'userData',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 21,
        "75": 37,
        "91": 6,
        "153": 1,
        "169": 1,
        "192": 3,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 33,
        "290": 1
      },
      "fqnsFingerprint": "231035cbb92818cace9ecfd0f8c15fc7ee60a6be04bf94f464a3d1e74eacdb16"
    },
    "863d62eec67563d22b07de2aab52f965b886974a9d2e3a1ddd8c3654a0d9a922": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_lifecycle_hook = autoscaling.CfnLifecycleHook(self, \"MyCfnLifecycleHook\",\n    auto_scaling_group_name=\"autoScalingGroupName\",\n    lifecycle_transition=\"lifecycleTransition\",\n\n    # the properties below are optional\n    default_result=\"defaultResult\",\n    heartbeat_timeout=123,\n    lifecycle_hook_name=\"lifecycleHookName\",\n    notification_metadata=\"notificationMetadata\",\n    notification_target_arn=\"notificationTargetArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnLifecycleHook cfnLifecycleHook = new CfnLifecycleHook(this, \"MyCfnLifecycleHook\", new CfnLifecycleHookProps {\n    AutoScalingGroupName = \"autoScalingGroupName\",\n    LifecycleTransition = \"lifecycleTransition\",\n\n    // the properties below are optional\n    DefaultResult = \"defaultResult\",\n    HeartbeatTimeout = 123,\n    LifecycleHookName = \"lifecycleHookName\",\n    NotificationMetadata = \"notificationMetadata\",\n    NotificationTargetArn = \"notificationTargetArn\",\n    RoleArn = \"roleArn\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnLifecycleHook cfnLifecycleHook = CfnLifecycleHook.Builder.create(this, \"MyCfnLifecycleHook\")\n        .autoScalingGroupName(\"autoScalingGroupName\")\n        .lifecycleTransition(\"lifecycleTransition\")\n\n        // the properties below are optional\n        .defaultResult(\"defaultResult\")\n        .heartbeatTimeout(123)\n        .lifecycleHookName(\"lifecycleHookName\")\n        .notificationMetadata(\"notificationMetadata\")\n        .notificationTargetArn(\"notificationTargetArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnLifecycleHook := autoscaling.NewCfnLifecycleHook(this, jsii.String(\"MyCfnLifecycleHook\"), &cfnLifecycleHookProps{\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\tlifecycleTransition: jsii.String(\"lifecycleTransition\"),\n\n\t// the properties below are optional\n\tdefaultResult: jsii.String(\"defaultResult\"),\n\theartbeatTimeout: jsii.Number(123),\n\tlifecycleHookName: jsii.String(\"lifecycleHookName\"),\n\tnotificationMetadata: jsii.String(\"notificationMetadata\"),\n\tnotificationTargetArn: jsii.String(\"notificationTargetArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnLifecycleHook = new autoscaling.CfnLifecycleHook(this, 'MyCfnLifecycleHook', {\n  autoScalingGroupName: 'autoScalingGroupName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnLifecycleHook"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnLifecycleHook",
        "@aws-cdk/aws-autoscaling.CfnLifecycleHookProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLifecycleHook = new autoscaling.CfnLifecycleHook(this, 'MyCfnLifecycleHook', {\n  autoScalingGroupName: 'autoScalingGroupName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 9,
        "75": 12,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "f44937a01e6710e605adca1e6a7ea129d964bf1f4f3619249a59b9285d3c0667"
    },
    "ad862028e9ee3ae2edb28fae869fa5bca7cec6499f3068c37f2f8a525f197aeb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_lifecycle_hook_props = autoscaling.CfnLifecycleHookProps(\n    auto_scaling_group_name=\"autoScalingGroupName\",\n    lifecycle_transition=\"lifecycleTransition\",\n\n    # the properties below are optional\n    default_result=\"defaultResult\",\n    heartbeat_timeout=123,\n    lifecycle_hook_name=\"lifecycleHookName\",\n    notification_metadata=\"notificationMetadata\",\n    notification_target_arn=\"notificationTargetArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnLifecycleHookProps cfnLifecycleHookProps = new CfnLifecycleHookProps {\n    AutoScalingGroupName = \"autoScalingGroupName\",\n    LifecycleTransition = \"lifecycleTransition\",\n\n    // the properties below are optional\n    DefaultResult = \"defaultResult\",\n    HeartbeatTimeout = 123,\n    LifecycleHookName = \"lifecycleHookName\",\n    NotificationMetadata = \"notificationMetadata\",\n    NotificationTargetArn = \"notificationTargetArn\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnLifecycleHookProps cfnLifecycleHookProps = CfnLifecycleHookProps.builder()\n        .autoScalingGroupName(\"autoScalingGroupName\")\n        .lifecycleTransition(\"lifecycleTransition\")\n\n        // the properties below are optional\n        .defaultResult(\"defaultResult\")\n        .heartbeatTimeout(123)\n        .lifecycleHookName(\"lifecycleHookName\")\n        .notificationMetadata(\"notificationMetadata\")\n        .notificationTargetArn(\"notificationTargetArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnLifecycleHookProps := &cfnLifecycleHookProps{\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\tlifecycleTransition: jsii.String(\"lifecycleTransition\"),\n\n\t// the properties below are optional\n\tdefaultResult: jsii.String(\"defaultResult\"),\n\theartbeatTimeout: jsii.Number(123),\n\tlifecycleHookName: jsii.String(\"lifecycleHookName\"),\n\tnotificationMetadata: jsii.String(\"notificationMetadata\"),\n\tnotificationTargetArn: jsii.String(\"notificationTargetArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnLifecycleHookProps: autoscaling.CfnLifecycleHookProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnLifecycleHookProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnLifecycleHookProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnLifecycleHookProps: autoscaling.CfnLifecycleHookProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n  lifecycleTransition: 'lifecycleTransition',\n\n  // the properties below are optional\n  defaultResult: 'defaultResult',\n  heartbeatTimeout: 123,\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTargetArn: 'notificationTargetArn',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 8,
        "75": 12,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "b451dfe8a4022f268f8d5ce170ba0c6fa579fd27429179a99a878e327c506fad"
    },
    "5ef3a28d701242fb8e93a531061808c4b809bed2a1dba3fa28626513737f3d5f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_scaling_policy = autoscaling.CfnScalingPolicy(self, \"MyCfnScalingPolicy\",\n    auto_scaling_group_name=\"autoScalingGroupName\",\n\n    # the properties below are optional\n    adjustment_type=\"adjustmentType\",\n    cooldown=\"cooldown\",\n    estimated_instance_warmup=123,\n    metric_aggregation_type=\"metricAggregationType\",\n    min_adjustment_magnitude=123,\n    policy_type=\"policyType\",\n    predictive_scaling_configuration=autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty(\n        metric_specifications=[autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty(\n            target_value=123,\n\n            # the properties below are optional\n            customized_capacity_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty(\n                metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n                    id=\"id\",\n\n                    # the properties below are optional\n                    expression=\"expression\",\n                    label=\"label\",\n                    metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                        metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                            metric_name=\"metricName\",\n                            namespace=\"namespace\",\n\n                            # the properties below are optional\n                            dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                                name=\"name\",\n                                value=\"value\"\n                            )]\n                        ),\n                        stat=\"stat\",\n\n                        # the properties below are optional\n                        unit=\"unit\"\n                    ),\n                    return_data=False\n                )]\n            ),\n            customized_load_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty(\n                metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n                    id=\"id\",\n\n                    # the properties below are optional\n                    expression=\"expression\",\n                    label=\"label\",\n                    metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                        metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                            metric_name=\"metricName\",\n                            namespace=\"namespace\",\n\n                            # the properties below are optional\n                            dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                                name=\"name\",\n                                value=\"value\"\n                            )]\n                        ),\n                        stat=\"stat\",\n\n                        # the properties below are optional\n                        unit=\"unit\"\n                    ),\n                    return_data=False\n                )]\n            ),\n            customized_scaling_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty(\n                metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n                    id=\"id\",\n\n                    # the properties below are optional\n                    expression=\"expression\",\n                    label=\"label\",\n                    metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                        metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                            metric_name=\"metricName\",\n                            namespace=\"namespace\",\n\n                            # the properties below are optional\n                            dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                                name=\"name\",\n                                value=\"value\"\n                            )]\n                        ),\n                        stat=\"stat\",\n\n                        # the properties below are optional\n                        unit=\"unit\"\n                    ),\n                    return_data=False\n                )]\n            ),\n            predefined_load_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty(\n                predefined_metric_type=\"predefinedMetricType\",\n\n                # the properties below are optional\n                resource_label=\"resourceLabel\"\n            ),\n            predefined_metric_pair_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty(\n                predefined_metric_type=\"predefinedMetricType\",\n\n                # the properties below are optional\n                resource_label=\"resourceLabel\"\n            ),\n            predefined_scaling_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty(\n                predefined_metric_type=\"predefinedMetricType\",\n\n                # the properties below are optional\n                resource_label=\"resourceLabel\"\n            )\n        )],\n\n        # the properties below are optional\n        max_capacity_breach_behavior=\"maxCapacityBreachBehavior\",\n        max_capacity_buffer=123,\n        mode=\"mode\",\n        scheduling_buffer_time=123\n    ),\n    scaling_adjustment=123,\n    step_adjustments=[autoscaling.CfnScalingPolicy.StepAdjustmentProperty(\n        scaling_adjustment=123,\n\n        # the properties below are optional\n        metric_interval_lower_bound=123,\n        metric_interval_upper_bound=123\n    )],\n    target_tracking_configuration=autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty(\n        target_value=123,\n\n        # the properties below are optional\n        customized_metric_specification=autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty(\n            metric_name=\"metricName\",\n            namespace=\"namespace\",\n            statistic=\"statistic\",\n\n            # the properties below are optional\n            dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                name=\"name\",\n                value=\"value\"\n            )],\n            unit=\"unit\"\n        ),\n        disable_scale_in=False,\n        predefined_metric_specification=autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty(\n            predefined_metric_type=\"predefinedMetricType\",\n\n            # the properties below are optional\n            resource_label=\"resourceLabel\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnScalingPolicy cfnScalingPolicy = new CfnScalingPolicy(this, \"MyCfnScalingPolicy\", new CfnScalingPolicyProps {\n    AutoScalingGroupName = \"autoScalingGroupName\",\n\n    // the properties below are optional\n    AdjustmentType = \"adjustmentType\",\n    Cooldown = \"cooldown\",\n    EstimatedInstanceWarmup = 123,\n    MetricAggregationType = \"metricAggregationType\",\n    MinAdjustmentMagnitude = 123,\n    PolicyType = \"policyType\",\n    PredictiveScalingConfiguration = new PredictiveScalingConfigurationProperty {\n        MetricSpecifications = new [] { new PredictiveScalingMetricSpecificationProperty {\n            TargetValue = 123,\n\n            // the properties below are optional\n            CustomizedCapacityMetricSpecification = new PredictiveScalingCustomizedCapacityMetricProperty {\n                MetricDataQueries = new [] { new MetricDataQueryProperty {\n                    Id = \"id\",\n\n                    // the properties below are optional\n                    Expression = \"expression\",\n                    Label = \"label\",\n                    MetricStat = new MetricStatProperty {\n                        Metric = new MetricProperty {\n                            MetricName = \"metricName\",\n                            Namespace = \"namespace\",\n\n                            // the properties below are optional\n                            Dimensions = new [] { new MetricDimensionProperty {\n                                Name = \"name\",\n                                Value = \"value\"\n                            } }\n                        },\n                        Stat = \"stat\",\n\n                        // the properties below are optional\n                        Unit = \"unit\"\n                    },\n                    ReturnData = false\n                } }\n            },\n            CustomizedLoadMetricSpecification = new PredictiveScalingCustomizedLoadMetricProperty {\n                MetricDataQueries = new [] { new MetricDataQueryProperty {\n                    Id = \"id\",\n\n                    // the properties below are optional\n                    Expression = \"expression\",\n                    Label = \"label\",\n                    MetricStat = new MetricStatProperty {\n                        Metric = new MetricProperty {\n                            MetricName = \"metricName\",\n                            Namespace = \"namespace\",\n\n                            // the properties below are optional\n                            Dimensions = new [] { new MetricDimensionProperty {\n                                Name = \"name\",\n                                Value = \"value\"\n                            } }\n                        },\n                        Stat = \"stat\",\n\n                        // the properties below are optional\n                        Unit = \"unit\"\n                    },\n                    ReturnData = false\n                } }\n            },\n            CustomizedScalingMetricSpecification = new PredictiveScalingCustomizedScalingMetricProperty {\n                MetricDataQueries = new [] { new MetricDataQueryProperty {\n                    Id = \"id\",\n\n                    // the properties below are optional\n                    Expression = \"expression\",\n                    Label = \"label\",\n                    MetricStat = new MetricStatProperty {\n                        Metric = new MetricProperty {\n                            MetricName = \"metricName\",\n                            Namespace = \"namespace\",\n\n                            // the properties below are optional\n                            Dimensions = new [] { new MetricDimensionProperty {\n                                Name = \"name\",\n                                Value = \"value\"\n                            } }\n                        },\n                        Stat = \"stat\",\n\n                        // the properties below are optional\n                        Unit = \"unit\"\n                    },\n                    ReturnData = false\n                } }\n            },\n            PredefinedLoadMetricSpecification = new PredictiveScalingPredefinedLoadMetricProperty {\n                PredefinedMetricType = \"predefinedMetricType\",\n\n                // the properties below are optional\n                ResourceLabel = \"resourceLabel\"\n            },\n            PredefinedMetricPairSpecification = new PredictiveScalingPredefinedMetricPairProperty {\n                PredefinedMetricType = \"predefinedMetricType\",\n\n                // the properties below are optional\n                ResourceLabel = \"resourceLabel\"\n            },\n            PredefinedScalingMetricSpecification = new PredictiveScalingPredefinedScalingMetricProperty {\n                PredefinedMetricType = \"predefinedMetricType\",\n\n                // the properties below are optional\n                ResourceLabel = \"resourceLabel\"\n            }\n        } },\n\n        // the properties below are optional\n        MaxCapacityBreachBehavior = \"maxCapacityBreachBehavior\",\n        MaxCapacityBuffer = 123,\n        Mode = \"mode\",\n        SchedulingBufferTime = 123\n    },\n    ScalingAdjustment = 123,\n    StepAdjustments = new [] { new StepAdjustmentProperty {\n        ScalingAdjustment = 123,\n\n        // the properties below are optional\n        MetricIntervalLowerBound = 123,\n        MetricIntervalUpperBound = 123\n    } },\n    TargetTrackingConfiguration = new TargetTrackingConfigurationProperty {\n        TargetValue = 123,\n\n        // the properties below are optional\n        CustomizedMetricSpecification = new CustomizedMetricSpecificationProperty {\n            MetricName = \"metricName\",\n            Namespace = \"namespace\",\n            Statistic = \"statistic\",\n\n            // the properties below are optional\n            Dimensions = new [] { new MetricDimensionProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } },\n            Unit = \"unit\"\n        },\n        DisableScaleIn = false,\n        PredefinedMetricSpecification = new PredefinedMetricSpecificationProperty {\n            PredefinedMetricType = \"predefinedMetricType\",\n\n            // the properties below are optional\n            ResourceLabel = \"resourceLabel\"\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnScalingPolicy cfnScalingPolicy = CfnScalingPolicy.Builder.create(this, \"MyCfnScalingPolicy\")\n        .autoScalingGroupName(\"autoScalingGroupName\")\n\n        // the properties below are optional\n        .adjustmentType(\"adjustmentType\")\n        .cooldown(\"cooldown\")\n        .estimatedInstanceWarmup(123)\n        .metricAggregationType(\"metricAggregationType\")\n        .minAdjustmentMagnitude(123)\n        .policyType(\"policyType\")\n        .predictiveScalingConfiguration(PredictiveScalingConfigurationProperty.builder()\n                .metricSpecifications(List.of(PredictiveScalingMetricSpecificationProperty.builder()\n                        .targetValue(123)\n\n                        // the properties below are optional\n                        .customizedCapacityMetricSpecification(PredictiveScalingCustomizedCapacityMetricProperty.builder()\n                                .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                                        .id(\"id\")\n\n                                        // the properties below are optional\n                                        .expression(\"expression\")\n                                        .label(\"label\")\n                                        .metricStat(MetricStatProperty.builder()\n                                                .metric(MetricProperty.builder()\n                                                        .metricName(\"metricName\")\n                                                        .namespace(\"namespace\")\n\n                                                        // the properties below are optional\n                                                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                                                .name(\"name\")\n                                                                .value(\"value\")\n                                                                .build()))\n                                                        .build())\n                                                .stat(\"stat\")\n\n                                                // the properties below are optional\n                                                .unit(\"unit\")\n                                                .build())\n                                        .returnData(false)\n                                        .build()))\n                                .build())\n                        .customizedLoadMetricSpecification(PredictiveScalingCustomizedLoadMetricProperty.builder()\n                                .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                                        .id(\"id\")\n\n                                        // the properties below are optional\n                                        .expression(\"expression\")\n                                        .label(\"label\")\n                                        .metricStat(MetricStatProperty.builder()\n                                                .metric(MetricProperty.builder()\n                                                        .metricName(\"metricName\")\n                                                        .namespace(\"namespace\")\n\n                                                        // the properties below are optional\n                                                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                                                .name(\"name\")\n                                                                .value(\"value\")\n                                                                .build()))\n                                                        .build())\n                                                .stat(\"stat\")\n\n                                                // the properties below are optional\n                                                .unit(\"unit\")\n                                                .build())\n                                        .returnData(false)\n                                        .build()))\n                                .build())\n                        .customizedScalingMetricSpecification(PredictiveScalingCustomizedScalingMetricProperty.builder()\n                                .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                                        .id(\"id\")\n\n                                        // the properties below are optional\n                                        .expression(\"expression\")\n                                        .label(\"label\")\n                                        .metricStat(MetricStatProperty.builder()\n                                                .metric(MetricProperty.builder()\n                                                        .metricName(\"metricName\")\n                                                        .namespace(\"namespace\")\n\n                                                        // the properties below are optional\n                                                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                                                .name(\"name\")\n                                                                .value(\"value\")\n                                                                .build()))\n                                                        .build())\n                                                .stat(\"stat\")\n\n                                                // the properties below are optional\n                                                .unit(\"unit\")\n                                                .build())\n                                        .returnData(false)\n                                        .build()))\n                                .build())\n                        .predefinedLoadMetricSpecification(PredictiveScalingPredefinedLoadMetricProperty.builder()\n                                .predefinedMetricType(\"predefinedMetricType\")\n\n                                // the properties below are optional\n                                .resourceLabel(\"resourceLabel\")\n                                .build())\n                        .predefinedMetricPairSpecification(PredictiveScalingPredefinedMetricPairProperty.builder()\n                                .predefinedMetricType(\"predefinedMetricType\")\n\n                                // the properties below are optional\n                                .resourceLabel(\"resourceLabel\")\n                                .build())\n                        .predefinedScalingMetricSpecification(PredictiveScalingPredefinedScalingMetricProperty.builder()\n                                .predefinedMetricType(\"predefinedMetricType\")\n\n                                // the properties below are optional\n                                .resourceLabel(\"resourceLabel\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .maxCapacityBreachBehavior(\"maxCapacityBreachBehavior\")\n                .maxCapacityBuffer(123)\n                .mode(\"mode\")\n                .schedulingBufferTime(123)\n                .build())\n        .scalingAdjustment(123)\n        .stepAdjustments(List.of(StepAdjustmentProperty.builder()\n                .scalingAdjustment(123)\n\n                // the properties below are optional\n                .metricIntervalLowerBound(123)\n                .metricIntervalUpperBound(123)\n                .build()))\n        .targetTrackingConfiguration(TargetTrackingConfigurationProperty.builder()\n                .targetValue(123)\n\n                // the properties below are optional\n                .customizedMetricSpecification(CustomizedMetricSpecificationProperty.builder()\n                        .metricName(\"metricName\")\n                        .namespace(\"namespace\")\n                        .statistic(\"statistic\")\n\n                        // the properties below are optional\n                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .unit(\"unit\")\n                        .build())\n                .disableScaleIn(false)\n                .predefinedMetricSpecification(PredefinedMetricSpecificationProperty.builder()\n                        .predefinedMetricType(\"predefinedMetricType\")\n\n                        // the properties below are optional\n                        .resourceLabel(\"resourceLabel\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnScalingPolicy := autoscaling.NewCfnScalingPolicy(this, jsii.String(\"MyCfnScalingPolicy\"), &cfnScalingPolicyProps{\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\n\t// the properties below are optional\n\tadjustmentType: jsii.String(\"adjustmentType\"),\n\tcooldown: jsii.String(\"cooldown\"),\n\testimatedInstanceWarmup: jsii.Number(123),\n\tmetricAggregationType: jsii.String(\"metricAggregationType\"),\n\tminAdjustmentMagnitude: jsii.Number(123),\n\tpolicyType: jsii.String(\"policyType\"),\n\tpredictiveScalingConfiguration: &predictiveScalingConfigurationProperty{\n\t\tmetricSpecifications: []interface{}{\n\t\t\t&predictiveScalingMetricSpecificationProperty{\n\t\t\t\ttargetValue: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcustomizedCapacityMetricSpecification: &predictiveScalingCustomizedCapacityMetricProperty{\n\t\t\t\t\tmetricDataQueries: []interface{}{\n\t\t\t\t\t\t&metricDataQueryProperty{\n\t\t\t\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcustomizedLoadMetricSpecification: &predictiveScalingCustomizedLoadMetricProperty{\n\t\t\t\t\tmetricDataQueries: []interface{}{\n\t\t\t\t\t\t&metricDataQueryProperty{\n\t\t\t\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcustomizedScalingMetricSpecification: &predictiveScalingCustomizedScalingMetricProperty{\n\t\t\t\t\tmetricDataQueries: []interface{}{\n\t\t\t\t\t\t&metricDataQueryProperty{\n\t\t\t\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpredefinedLoadMetricSpecification: &predictiveScalingPredefinedLoadMetricProperty{\n\t\t\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t\t\t},\n\t\t\t\tpredefinedMetricPairSpecification: &predictiveScalingPredefinedMetricPairProperty{\n\t\t\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t\t\t},\n\t\t\t\tpredefinedScalingMetricSpecification: &predictiveScalingPredefinedScalingMetricProperty{\n\t\t\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tmaxCapacityBreachBehavior: jsii.String(\"maxCapacityBreachBehavior\"),\n\t\tmaxCapacityBuffer: jsii.Number(123),\n\t\tmode: jsii.String(\"mode\"),\n\t\tschedulingBufferTime: jsii.Number(123),\n\t},\n\tscalingAdjustment: jsii.Number(123),\n\tstepAdjustments: []interface{}{\n\t\t&stepAdjustmentProperty{\n\t\t\tscalingAdjustment: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tmetricIntervalLowerBound: jsii.Number(123),\n\t\t\tmetricIntervalUpperBound: jsii.Number(123),\n\t\t},\n\t},\n\ttargetTrackingConfiguration: &targetTrackingConfigurationProperty{\n\t\ttargetValue: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tcustomizedMetricSpecification: &customizedMetricSpecificationProperty{\n\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\tnamespace: jsii.String(\"namespace\"),\n\t\t\tstatistic: jsii.String(\"statistic\"),\n\n\t\t\t// the properties below are optional\n\t\t\tdimensions: []interface{}{\n\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tunit: jsii.String(\"unit\"),\n\t\t},\n\t\tdisableScaleIn: jsii.Boolean(false),\n\t\tpredefinedMetricSpecification: &predefinedMetricSpecificationProperty{\n\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnScalingPolicy = new autoscaling.CfnScalingPolicy(this, 'MyCfnScalingPolicy', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  adjustmentType: 'adjustmentType',\n  cooldown: 'cooldown',\n  estimatedInstanceWarmup: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  policyType: 'policyType',\n  predictiveScalingConfiguration: {\n    metricSpecifications: [{\n      targetValue: 123,\n\n      // the properties below are optional\n      customizedCapacityMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedLoadMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedScalingMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      predefinedLoadMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedMetricPairSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedScalingMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n    }],\n\n    // the properties below are optional\n    maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n    maxCapacityBuffer: 123,\n    mode: 'mode',\n    schedulingBufferTime: 123,\n  },\n  scalingAdjustment: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n  targetTrackingConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy",
        "@aws-cdk/aws-autoscaling.CfnScalingPolicyProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnScalingPolicy = new autoscaling.CfnScalingPolicy(this, 'MyCfnScalingPolicy', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  adjustmentType: 'adjustmentType',\n  cooldown: 'cooldown',\n  estimatedInstanceWarmup: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  policyType: 'policyType',\n  predictiveScalingConfiguration: {\n    metricSpecifications: [{\n      targetValue: 123,\n\n      // the properties below are optional\n      customizedCapacityMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedLoadMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedScalingMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      predefinedLoadMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedMetricPairSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedScalingMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n    }],\n\n    // the properties below are optional\n    maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n    maxCapacityBuffer: 123,\n    mode: 'mode',\n    schedulingBufferTime: 123,\n  },\n  scalingAdjustment: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n  targetTrackingConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 10,
        "10": 50,
        "75": 91,
        "91": 4,
        "104": 1,
        "192": 9,
        "193": 26,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 87,
        "290": 1
      },
      "fqnsFingerprint": "5941d88b507f03d641641caeaf3dc1ea4afaa139f7b64b8ebee8faddc7b53ab6"
    },
    "53e59737f9eeae64c9337131956e70624706449759f25b3d668588d9eb43dec1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncustomized_metric_specification_property = autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty(\n    metric_name=\"metricName\",\n    namespace=\"namespace\",\n    statistic=\"statistic\",\n\n    # the properties below are optional\n    dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n        name=\"name\",\n        value=\"value\"\n    )],\n    unit=\"unit\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCustomizedMetricSpecificationProperty customizedMetricSpecificationProperty = new CustomizedMetricSpecificationProperty {\n    MetricName = \"metricName\",\n    Namespace = \"namespace\",\n    Statistic = \"statistic\",\n\n    // the properties below are optional\n    Dimensions = new [] { new MetricDimensionProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } },\n    Unit = \"unit\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCustomizedMetricSpecificationProperty customizedMetricSpecificationProperty = CustomizedMetricSpecificationProperty.builder()\n        .metricName(\"metricName\")\n        .namespace(\"namespace\")\n        .statistic(\"statistic\")\n\n        // the properties below are optional\n        .dimensions(List.of(MetricDimensionProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .unit(\"unit\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncustomizedMetricSpecificationProperty := &customizedMetricSpecificationProperty{\n\tmetricName: jsii.String(\"metricName\"),\n\tnamespace: jsii.String(\"namespace\"),\n\tstatistic: jsii.String(\"statistic\"),\n\n\t// the properties below are optional\n\tdimensions: []interface{}{\n\t\t&metricDimensionProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n\tunit: jsii.String(\"unit\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst customizedMetricSpecificationProperty: autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty = {\n  metricName: 'metricName',\n  namespace: 'namespace',\n  statistic: 'statistic',\n\n  // the properties below are optional\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n  unit: 'unit',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customizedMetricSpecificationProperty: autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty = {\n  metricName: 'metricName',\n  namespace: 'namespace',\n  statistic: 'statistic',\n\n  // the properties below are optional\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n  unit: 'unit',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 12,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "c5c536ef81d8e4c839c186e6d2200926ac9152b0204a40c75a84ee6541e39e4a"
    },
    "c6fc1886ed8931156d10f3459763179e27de8831ea5aaa04808803a0d6a13e7d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nmetric_data_query_property = autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n    id=\"id\",\n\n    # the properties below are optional\n    expression=\"expression\",\n    label=\"label\",\n    metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n        metric=autoscaling.CfnScalingPolicy.MetricProperty(\n            metric_name=\"metricName\",\n            namespace=\"namespace\",\n\n            # the properties below are optional\n            dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                name=\"name\",\n                value=\"value\"\n            )]\n        ),\n        stat=\"stat\",\n\n        # the properties below are optional\n        unit=\"unit\"\n    ),\n    return_data=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nMetricDataQueryProperty metricDataQueryProperty = new MetricDataQueryProperty {\n    Id = \"id\",\n\n    // the properties below are optional\n    Expression = \"expression\",\n    Label = \"label\",\n    MetricStat = new MetricStatProperty {\n        Metric = new MetricProperty {\n            MetricName = \"metricName\",\n            Namespace = \"namespace\",\n\n            // the properties below are optional\n            Dimensions = new [] { new MetricDimensionProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } }\n        },\n        Stat = \"stat\",\n\n        // the properties below are optional\n        Unit = \"unit\"\n    },\n    ReturnData = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nMetricDataQueryProperty metricDataQueryProperty = MetricDataQueryProperty.builder()\n        .id(\"id\")\n\n        // the properties below are optional\n        .expression(\"expression\")\n        .label(\"label\")\n        .metricStat(MetricStatProperty.builder()\n                .metric(MetricProperty.builder()\n                        .metricName(\"metricName\")\n                        .namespace(\"namespace\")\n\n                        // the properties below are optional\n                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .build())\n                .stat(\"stat\")\n\n                // the properties below are optional\n                .unit(\"unit\")\n                .build())\n        .returnData(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nmetricDataQueryProperty := &metricDataQueryProperty{\n\tid: jsii.String(\"id\"),\n\n\t// the properties below are optional\n\texpression: jsii.String(\"expression\"),\n\tlabel: jsii.String(\"label\"),\n\tmetricStat: &metricStatProperty{\n\t\tmetric: &metricProperty{\n\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t// the properties below are optional\n\t\t\tdimensions: []interface{}{\n\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tstat: jsii.String(\"stat\"),\n\n\t\t// the properties below are optional\n\t\tunit: jsii.String(\"unit\"),\n\t},\n\treturnData: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metricDataQueryProperty: autoscaling.CfnScalingPolicy.MetricDataQueryProperty = {\n  id: 'id',\n\n  // the properties below are optional\n  expression: 'expression',\n  label: 'label',\n  metricStat: {\n    metric: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n    stat: 'stat',\n\n    // the properties below are optional\n    unit: 'unit',\n  },\n  returnData: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDataQueryProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDataQueryProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricDataQueryProperty: autoscaling.CfnScalingPolicy.MetricDataQueryProperty = {\n  id: 'id',\n\n  // the properties below are optional\n  expression: 'expression',\n  label: 'label',\n  metricStat: {\n    metric: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n    },\n    stat: 'stat',\n\n    // the properties below are optional\n    unit: 'unit',\n  },\n  returnData: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 18,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "d5374e2e293179f6b6fc854b418eeaf1e6c68083cd1e20f128658ef5c7a5706d"
    },
    "a3bb95beb7d2db772e4b7e7db602bc77c29590e53670c5f44d06333b46212985": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nmetric_dimension_property = autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n    name=\"name\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nMetricDimensionProperty metricDimensionProperty = new MetricDimensionProperty {\n    Name = \"name\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nMetricDimensionProperty metricDimensionProperty = MetricDimensionProperty.builder()\n        .name(\"name\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nmetricDimensionProperty := &metricDimensionProperty{\n\tname: jsii.String(\"name\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metricDimensionProperty: autoscaling.CfnScalingPolicy.MetricDimensionProperty = {\n  name: 'name',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDimensionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricDimensionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricDimensionProperty: autoscaling.CfnScalingPolicy.MetricDimensionProperty = {\n  name: 'name',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "727229aa32b1670c6766063d43ac95fe625442d72d6adb6d9d38075458e4685e"
    },
    "463a91936645ee4cdd9d8dbe777523780d698f383e6a2ca0abd74d127493c204": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nmetric_property = autoscaling.CfnScalingPolicy.MetricProperty(\n    metric_name=\"metricName\",\n    namespace=\"namespace\",\n\n    # the properties below are optional\n    dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n        name=\"name\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nMetricProperty metricProperty = new MetricProperty {\n    MetricName = \"metricName\",\n    Namespace = \"namespace\",\n\n    // the properties below are optional\n    Dimensions = new [] { new MetricDimensionProperty {\n        Name = \"name\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nMetricProperty metricProperty = MetricProperty.builder()\n        .metricName(\"metricName\")\n        .namespace(\"namespace\")\n\n        // the properties below are optional\n        .dimensions(List.of(MetricDimensionProperty.builder()\n                .name(\"name\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nmetricProperty := &metricProperty{\n\tmetricName: jsii.String(\"metricName\"),\n\tnamespace: jsii.String(\"namespace\"),\n\n\t// the properties below are optional\n\tdimensions: []interface{}{\n\t\t&metricDimensionProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metricProperty: autoscaling.CfnScalingPolicy.MetricProperty = {\n  metricName: 'metricName',\n  namespace: 'namespace',\n\n  // the properties below are optional\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricProperty: autoscaling.CfnScalingPolicy.MetricProperty = {\n  metricName: 'metricName',\n  namespace: 'namespace',\n\n  // the properties below are optional\n  dimensions: [{\n    name: 'name',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "066d42f5b2d1d56c57284375be278de3335367006617acdf5600df226a22a912"
    },
    "81b7b596b5cfcb8f6b8a1e210e5d23c223b0d993bd961cf456f4c4a1f4bf0acf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nmetric_stat_property = autoscaling.CfnScalingPolicy.MetricStatProperty(\n    metric=autoscaling.CfnScalingPolicy.MetricProperty(\n        metric_name=\"metricName\",\n        namespace=\"namespace\",\n\n        # the properties below are optional\n        dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n            name=\"name\",\n            value=\"value\"\n        )]\n    ),\n    stat=\"stat\",\n\n    # the properties below are optional\n    unit=\"unit\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nMetricStatProperty metricStatProperty = new MetricStatProperty {\n    Metric = new MetricProperty {\n        MetricName = \"metricName\",\n        Namespace = \"namespace\",\n\n        // the properties below are optional\n        Dimensions = new [] { new MetricDimensionProperty {\n            Name = \"name\",\n            Value = \"value\"\n        } }\n    },\n    Stat = \"stat\",\n\n    // the properties below are optional\n    Unit = \"unit\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nMetricStatProperty metricStatProperty = MetricStatProperty.builder()\n        .metric(MetricProperty.builder()\n                .metricName(\"metricName\")\n                .namespace(\"namespace\")\n\n                // the properties below are optional\n                .dimensions(List.of(MetricDimensionProperty.builder()\n                        .name(\"name\")\n                        .value(\"value\")\n                        .build()))\n                .build())\n        .stat(\"stat\")\n\n        // the properties below are optional\n        .unit(\"unit\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nmetricStatProperty := &metricStatProperty{\n\tmetric: &metricProperty{\n\t\tmetricName: jsii.String(\"metricName\"),\n\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t// the properties below are optional\n\t\tdimensions: []interface{}{\n\t\t\t&metricDimensionProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t},\n\tstat: jsii.String(\"stat\"),\n\n\t// the properties below are optional\n\tunit: jsii.String(\"unit\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst metricStatProperty: autoscaling.CfnScalingPolicy.MetricStatProperty = {\n  metric: {\n    metricName: 'metricName',\n    namespace: 'namespace',\n\n    // the properties below are optional\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n  stat: 'stat',\n\n  // the properties below are optional\n  unit: 'unit',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricStatProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.MetricStatProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricStatProperty: autoscaling.CfnScalingPolicy.MetricStatProperty = {\n  metric: {\n    metricName: 'metricName',\n    namespace: 'namespace',\n\n    // the properties below are optional\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n  },\n  stat: 'stat',\n\n  // the properties below are optional\n  unit: 'unit',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 13,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "9c6848f65f9caf3073a48041424492a1121a7fe21d9efa7a78a6fe13be1fc096"
    },
    "4eeec2f94125dfa089352693ac80d423b562554be6004ced0a0fd7a62c818162": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\npredefined_metric_specification_property = autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty(\n    predefined_metric_type=\"predefinedMetricType\",\n\n    # the properties below are optional\n    resource_label=\"resourceLabel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nPredefinedMetricSpecificationProperty predefinedMetricSpecificationProperty = new PredefinedMetricSpecificationProperty {\n    PredefinedMetricType = \"predefinedMetricType\",\n\n    // the properties below are optional\n    ResourceLabel = \"resourceLabel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nPredefinedMetricSpecificationProperty predefinedMetricSpecificationProperty = PredefinedMetricSpecificationProperty.builder()\n        .predefinedMetricType(\"predefinedMetricType\")\n\n        // the properties below are optional\n        .resourceLabel(\"resourceLabel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\npredefinedMetricSpecificationProperty := &predefinedMetricSpecificationProperty{\n\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t// the properties below are optional\n\tresourceLabel: jsii.String(\"resourceLabel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predefinedMetricSpecificationProperty: autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predefinedMetricSpecificationProperty: autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "119edaf93e2caafb5a0af4de5537b8bef369b5acde3b6fb6cbb3e677e8a8e4c1"
    },
    "33c73e84c043160e7dcca7ffe1323bd681356630fe3bbf54605ebaaf4b2c51c0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\npredictive_scaling_configuration_property = autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty(\n    metric_specifications=[autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty(\n        target_value=123,\n\n        # the properties below are optional\n        customized_capacity_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty(\n            metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n                id=\"id\",\n\n                # the properties below are optional\n                expression=\"expression\",\n                label=\"label\",\n                metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                    metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                        metric_name=\"metricName\",\n                        namespace=\"namespace\",\n\n                        # the properties below are optional\n                        dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                            name=\"name\",\n                            value=\"value\"\n                        )]\n                    ),\n                    stat=\"stat\",\n\n                    # the properties below are optional\n                    unit=\"unit\"\n                ),\n                return_data=False\n            )]\n        ),\n        customized_load_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty(\n            metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n                id=\"id\",\n\n                # the properties below are optional\n                expression=\"expression\",\n                label=\"label\",\n                metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                    metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                        metric_name=\"metricName\",\n                        namespace=\"namespace\",\n\n                        # the properties below are optional\n                        dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                            name=\"name\",\n                            value=\"value\"\n                        )]\n                    ),\n                    stat=\"stat\",\n\n                    # the properties below are optional\n                    unit=\"unit\"\n                ),\n                return_data=False\n            )]\n        ),\n        customized_scaling_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty(\n            metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n                id=\"id\",\n\n                # the properties below are optional\n                expression=\"expression\",\n                label=\"label\",\n                metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                    metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                        metric_name=\"metricName\",\n                        namespace=\"namespace\",\n\n                        # the properties below are optional\n                        dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                            name=\"name\",\n                            value=\"value\"\n                        )]\n                    ),\n                    stat=\"stat\",\n\n                    # the properties below are optional\n                    unit=\"unit\"\n                ),\n                return_data=False\n            )]\n        ),\n        predefined_load_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty(\n            predefined_metric_type=\"predefinedMetricType\",\n\n            # the properties below are optional\n            resource_label=\"resourceLabel\"\n        ),\n        predefined_metric_pair_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty(\n            predefined_metric_type=\"predefinedMetricType\",\n\n            # the properties below are optional\n            resource_label=\"resourceLabel\"\n        ),\n        predefined_scaling_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty(\n            predefined_metric_type=\"predefinedMetricType\",\n\n            # the properties below are optional\n            resource_label=\"resourceLabel\"\n        )\n    )],\n\n    # the properties below are optional\n    max_capacity_breach_behavior=\"maxCapacityBreachBehavior\",\n    max_capacity_buffer=123,\n    mode=\"mode\",\n    scheduling_buffer_time=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nPredictiveScalingConfigurationProperty predictiveScalingConfigurationProperty = new PredictiveScalingConfigurationProperty {\n    MetricSpecifications = new [] { new PredictiveScalingMetricSpecificationProperty {\n        TargetValue = 123,\n\n        // the properties below are optional\n        CustomizedCapacityMetricSpecification = new PredictiveScalingCustomizedCapacityMetricProperty {\n            MetricDataQueries = new [] { new MetricDataQueryProperty {\n                Id = \"id\",\n\n                // the properties below are optional\n                Expression = \"expression\",\n                Label = \"label\",\n                MetricStat = new MetricStatProperty {\n                    Metric = new MetricProperty {\n                        MetricName = \"metricName\",\n                        Namespace = \"namespace\",\n\n                        // the properties below are optional\n                        Dimensions = new [] { new MetricDimensionProperty {\n                            Name = \"name\",\n                            Value = \"value\"\n                        } }\n                    },\n                    Stat = \"stat\",\n\n                    // the properties below are optional\n                    Unit = \"unit\"\n                },\n                ReturnData = false\n            } }\n        },\n        CustomizedLoadMetricSpecification = new PredictiveScalingCustomizedLoadMetricProperty {\n            MetricDataQueries = new [] { new MetricDataQueryProperty {\n                Id = \"id\",\n\n                // the properties below are optional\n                Expression = \"expression\",\n                Label = \"label\",\n                MetricStat = new MetricStatProperty {\n                    Metric = new MetricProperty {\n                        MetricName = \"metricName\",\n                        Namespace = \"namespace\",\n\n                        // the properties below are optional\n                        Dimensions = new [] { new MetricDimensionProperty {\n                            Name = \"name\",\n                            Value = \"value\"\n                        } }\n                    },\n                    Stat = \"stat\",\n\n                    // the properties below are optional\n                    Unit = \"unit\"\n                },\n                ReturnData = false\n            } }\n        },\n        CustomizedScalingMetricSpecification = new PredictiveScalingCustomizedScalingMetricProperty {\n            MetricDataQueries = new [] { new MetricDataQueryProperty {\n                Id = \"id\",\n\n                // the properties below are optional\n                Expression = \"expression\",\n                Label = \"label\",\n                MetricStat = new MetricStatProperty {\n                    Metric = new MetricProperty {\n                        MetricName = \"metricName\",\n                        Namespace = \"namespace\",\n\n                        // the properties below are optional\n                        Dimensions = new [] { new MetricDimensionProperty {\n                            Name = \"name\",\n                            Value = \"value\"\n                        } }\n                    },\n                    Stat = \"stat\",\n\n                    // the properties below are optional\n                    Unit = \"unit\"\n                },\n                ReturnData = false\n            } }\n        },\n        PredefinedLoadMetricSpecification = new PredictiveScalingPredefinedLoadMetricProperty {\n            PredefinedMetricType = \"predefinedMetricType\",\n\n            // the properties below are optional\n            ResourceLabel = \"resourceLabel\"\n        },\n        PredefinedMetricPairSpecification = new PredictiveScalingPredefinedMetricPairProperty {\n            PredefinedMetricType = \"predefinedMetricType\",\n\n            // the properties below are optional\n            ResourceLabel = \"resourceLabel\"\n        },\n        PredefinedScalingMetricSpecification = new PredictiveScalingPredefinedScalingMetricProperty {\n            PredefinedMetricType = \"predefinedMetricType\",\n\n            // the properties below are optional\n            ResourceLabel = \"resourceLabel\"\n        }\n    } },\n\n    // the properties below are optional\n    MaxCapacityBreachBehavior = \"maxCapacityBreachBehavior\",\n    MaxCapacityBuffer = 123,\n    Mode = \"mode\",\n    SchedulingBufferTime = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nPredictiveScalingConfigurationProperty predictiveScalingConfigurationProperty = PredictiveScalingConfigurationProperty.builder()\n        .metricSpecifications(List.of(PredictiveScalingMetricSpecificationProperty.builder()\n                .targetValue(123)\n\n                // the properties below are optional\n                .customizedCapacityMetricSpecification(PredictiveScalingCustomizedCapacityMetricProperty.builder()\n                        .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                                .id(\"id\")\n\n                                // the properties below are optional\n                                .expression(\"expression\")\n                                .label(\"label\")\n                                .metricStat(MetricStatProperty.builder()\n                                        .metric(MetricProperty.builder()\n                                                .metricName(\"metricName\")\n                                                .namespace(\"namespace\")\n\n                                                // the properties below are optional\n                                                .dimensions(List.of(MetricDimensionProperty.builder()\n                                                        .name(\"name\")\n                                                        .value(\"value\")\n                                                        .build()))\n                                                .build())\n                                        .stat(\"stat\")\n\n                                        // the properties below are optional\n                                        .unit(\"unit\")\n                                        .build())\n                                .returnData(false)\n                                .build()))\n                        .build())\n                .customizedLoadMetricSpecification(PredictiveScalingCustomizedLoadMetricProperty.builder()\n                        .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                                .id(\"id\")\n\n                                // the properties below are optional\n                                .expression(\"expression\")\n                                .label(\"label\")\n                                .metricStat(MetricStatProperty.builder()\n                                        .metric(MetricProperty.builder()\n                                                .metricName(\"metricName\")\n                                                .namespace(\"namespace\")\n\n                                                // the properties below are optional\n                                                .dimensions(List.of(MetricDimensionProperty.builder()\n                                                        .name(\"name\")\n                                                        .value(\"value\")\n                                                        .build()))\n                                                .build())\n                                        .stat(\"stat\")\n\n                                        // the properties below are optional\n                                        .unit(\"unit\")\n                                        .build())\n                                .returnData(false)\n                                .build()))\n                        .build())\n                .customizedScalingMetricSpecification(PredictiveScalingCustomizedScalingMetricProperty.builder()\n                        .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                                .id(\"id\")\n\n                                // the properties below are optional\n                                .expression(\"expression\")\n                                .label(\"label\")\n                                .metricStat(MetricStatProperty.builder()\n                                        .metric(MetricProperty.builder()\n                                                .metricName(\"metricName\")\n                                                .namespace(\"namespace\")\n\n                                                // the properties below are optional\n                                                .dimensions(List.of(MetricDimensionProperty.builder()\n                                                        .name(\"name\")\n                                                        .value(\"value\")\n                                                        .build()))\n                                                .build())\n                                        .stat(\"stat\")\n\n                                        // the properties below are optional\n                                        .unit(\"unit\")\n                                        .build())\n                                .returnData(false)\n                                .build()))\n                        .build())\n                .predefinedLoadMetricSpecification(PredictiveScalingPredefinedLoadMetricProperty.builder()\n                        .predefinedMetricType(\"predefinedMetricType\")\n\n                        // the properties below are optional\n                        .resourceLabel(\"resourceLabel\")\n                        .build())\n                .predefinedMetricPairSpecification(PredictiveScalingPredefinedMetricPairProperty.builder()\n                        .predefinedMetricType(\"predefinedMetricType\")\n\n                        // the properties below are optional\n                        .resourceLabel(\"resourceLabel\")\n                        .build())\n                .predefinedScalingMetricSpecification(PredictiveScalingPredefinedScalingMetricProperty.builder()\n                        .predefinedMetricType(\"predefinedMetricType\")\n\n                        // the properties below are optional\n                        .resourceLabel(\"resourceLabel\")\n                        .build())\n                .build()))\n\n        // the properties below are optional\n        .maxCapacityBreachBehavior(\"maxCapacityBreachBehavior\")\n        .maxCapacityBuffer(123)\n        .mode(\"mode\")\n        .schedulingBufferTime(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\npredictiveScalingConfigurationProperty := &predictiveScalingConfigurationProperty{\n\tmetricSpecifications: []interface{}{\n\t\t&predictiveScalingMetricSpecificationProperty{\n\t\t\ttargetValue: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tcustomizedCapacityMetricSpecification: &predictiveScalingCustomizedCapacityMetricProperty{\n\t\t\t\tmetricDataQueries: []interface{}{\n\t\t\t\t\t&metricDataQueryProperty{\n\t\t\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tcustomizedLoadMetricSpecification: &predictiveScalingCustomizedLoadMetricProperty{\n\t\t\t\tmetricDataQueries: []interface{}{\n\t\t\t\t\t&metricDataQueryProperty{\n\t\t\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tcustomizedScalingMetricSpecification: &predictiveScalingCustomizedScalingMetricProperty{\n\t\t\t\tmetricDataQueries: []interface{}{\n\t\t\t\t\t&metricDataQueryProperty{\n\t\t\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tpredefinedLoadMetricSpecification: &predictiveScalingPredefinedLoadMetricProperty{\n\t\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t\t},\n\t\t\tpredefinedMetricPairSpecification: &predictiveScalingPredefinedMetricPairProperty{\n\t\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t\t},\n\t\t\tpredefinedScalingMetricSpecification: &predictiveScalingPredefinedScalingMetricProperty{\n\t\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tmaxCapacityBreachBehavior: jsii.String(\"maxCapacityBreachBehavior\"),\n\tmaxCapacityBuffer: jsii.Number(123),\n\tmode: jsii.String(\"mode\"),\n\tschedulingBufferTime: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingConfigurationProperty: autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty = {\n  metricSpecifications: [{\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedCapacityMetricSpecification: {\n      metricDataQueries: [{\n        id: 'id',\n\n        // the properties below are optional\n        expression: 'expression',\n        label: 'label',\n        metricStat: {\n          metric: {\n            metricName: 'metricName',\n            namespace: 'namespace',\n\n            // the properties below are optional\n            dimensions: [{\n              name: 'name',\n              value: 'value',\n            }],\n          },\n          stat: 'stat',\n\n          // the properties below are optional\n          unit: 'unit',\n        },\n        returnData: false,\n      }],\n    },\n    customizedLoadMetricSpecification: {\n      metricDataQueries: [{\n        id: 'id',\n\n        // the properties below are optional\n        expression: 'expression',\n        label: 'label',\n        metricStat: {\n          metric: {\n            metricName: 'metricName',\n            namespace: 'namespace',\n\n            // the properties below are optional\n            dimensions: [{\n              name: 'name',\n              value: 'value',\n            }],\n          },\n          stat: 'stat',\n\n          // the properties below are optional\n          unit: 'unit',\n        },\n        returnData: false,\n      }],\n    },\n    customizedScalingMetricSpecification: {\n      metricDataQueries: [{\n        id: 'id',\n\n        // the properties below are optional\n        expression: 'expression',\n        label: 'label',\n        metricStat: {\n          metric: {\n            metricName: 'metricName',\n            namespace: 'namespace',\n\n            // the properties below are optional\n            dimensions: [{\n              name: 'name',\n              value: 'value',\n            }],\n          },\n          stat: 'stat',\n\n          // the properties below are optional\n          unit: 'unit',\n        },\n        returnData: false,\n      }],\n    },\n    predefinedLoadMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    predefinedMetricPairSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    predefinedScalingMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  }],\n\n  // the properties below are optional\n  maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n  maxCapacityBuffer: 123,\n  mode: 'mode',\n  schedulingBufferTime: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predictiveScalingConfigurationProperty: autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty = {\n  metricSpecifications: [{\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedCapacityMetricSpecification: {\n      metricDataQueries: [{\n        id: 'id',\n\n        // the properties below are optional\n        expression: 'expression',\n        label: 'label',\n        metricStat: {\n          metric: {\n            metricName: 'metricName',\n            namespace: 'namespace',\n\n            // the properties below are optional\n            dimensions: [{\n              name: 'name',\n              value: 'value',\n            }],\n          },\n          stat: 'stat',\n\n          // the properties below are optional\n          unit: 'unit',\n        },\n        returnData: false,\n      }],\n    },\n    customizedLoadMetricSpecification: {\n      metricDataQueries: [{\n        id: 'id',\n\n        // the properties below are optional\n        expression: 'expression',\n        label: 'label',\n        metricStat: {\n          metric: {\n            metricName: 'metricName',\n            namespace: 'namespace',\n\n            // the properties below are optional\n            dimensions: [{\n              name: 'name',\n              value: 'value',\n            }],\n          },\n          stat: 'stat',\n\n          // the properties below are optional\n          unit: 'unit',\n        },\n        returnData: false,\n      }],\n    },\n    customizedScalingMetricSpecification: {\n      metricDataQueries: [{\n        id: 'id',\n\n        // the properties below are optional\n        expression: 'expression',\n        label: 'label',\n        metricStat: {\n          metric: {\n            metricName: 'metricName',\n            namespace: 'namespace',\n\n            // the properties below are optional\n            dimensions: [{\n              name: 'name',\n              value: 'value',\n            }],\n          },\n          stat: 'stat',\n\n          // the properties below are optional\n          unit: 'unit',\n        },\n        returnData: false,\n      }],\n    },\n    predefinedLoadMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    predefinedMetricPairSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n    predefinedScalingMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  }],\n\n  // the properties below are optional\n  maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n  maxCapacityBuffer: 123,\n  mode: 'mode',\n  schedulingBufferTime: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 36,
        "75": 65,
        "91": 3,
        "153": 2,
        "169": 1,
        "192": 7,
        "193": 20,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 60,
        "290": 1
      },
      "fqnsFingerprint": "c18f4c066f7c8b566457438208c0dd89bc0a0ad6b3e90d5e7ccd9481831a132a"
    },
    "12311f365c969824e01083dbcd7a3365509f432c41981d49ed6341a20397a6b6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\npredictive_scaling_customized_capacity_metric_property = autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty(\n    metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n        id=\"id\",\n\n        # the properties below are optional\n        expression=\"expression\",\n        label=\"label\",\n        metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n            metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                metric_name=\"metricName\",\n                namespace=\"namespace\",\n\n                # the properties below are optional\n                dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            ),\n            stat=\"stat\",\n\n            # the properties below are optional\n            unit=\"unit\"\n        ),\n        return_data=False\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nPredictiveScalingCustomizedCapacityMetricProperty predictiveScalingCustomizedCapacityMetricProperty = new PredictiveScalingCustomizedCapacityMetricProperty {\n    MetricDataQueries = new [] { new MetricDataQueryProperty {\n        Id = \"id\",\n\n        // the properties below are optional\n        Expression = \"expression\",\n        Label = \"label\",\n        MetricStat = new MetricStatProperty {\n            Metric = new MetricProperty {\n                MetricName = \"metricName\",\n                Namespace = \"namespace\",\n\n                // the properties below are optional\n                Dimensions = new [] { new MetricDimensionProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            },\n            Stat = \"stat\",\n\n            // the properties below are optional\n            Unit = \"unit\"\n        },\n        ReturnData = false\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nPredictiveScalingCustomizedCapacityMetricProperty predictiveScalingCustomizedCapacityMetricProperty = PredictiveScalingCustomizedCapacityMetricProperty.builder()\n        .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                .id(\"id\")\n\n                // the properties below are optional\n                .expression(\"expression\")\n                .label(\"label\")\n                .metricStat(MetricStatProperty.builder()\n                        .metric(MetricProperty.builder()\n                                .metricName(\"metricName\")\n                                .namespace(\"namespace\")\n\n                                // the properties below are optional\n                                .dimensions(List.of(MetricDimensionProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .stat(\"stat\")\n\n                        // the properties below are optional\n                        .unit(\"unit\")\n                        .build())\n                .returnData(false)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\npredictiveScalingCustomizedCapacityMetricProperty := &predictiveScalingCustomizedCapacityMetricProperty{\n\tmetricDataQueries: []interface{}{\n\t\t&metricDataQueryProperty{\n\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t// the properties below are optional\n\t\t\texpression: jsii.String(\"expression\"),\n\t\t\tlabel: jsii.String(\"label\"),\n\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t},\n\t\t\treturnData: jsii.Boolean(false),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingCustomizedCapacityMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty = {\n  metricDataQueries: [{\n    id: 'id',\n\n    // the properties below are optional\n    expression: 'expression',\n    label: 'label',\n    metricStat: {\n      metric: {\n        metricName: 'metricName',\n        namespace: 'namespace',\n\n        // the properties below are optional\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n      stat: 'stat',\n\n      // the properties below are optional\n      unit: 'unit',\n    },\n    returnData: false,\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predictiveScalingCustomizedCapacityMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty = {\n  metricDataQueries: [{\n    id: 'id',\n\n    // the properties below are optional\n    expression: 'expression',\n    label: 'label',\n    metricStat: {\n      metric: {\n        metricName: 'metricName',\n        namespace: 'namespace',\n\n        // the properties below are optional\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n      stat: 'stat',\n\n      // the properties below are optional\n      unit: 'unit',\n    },\n    returnData: false,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 19,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "a103b1180bb7d5bc5db53c333385f8e493de4d86dd9c7388fcb722a16c0a0f89"
    },
    "7d56d3126a1508c2076465bfb2376aab3d2d399d0c5a54f9f1fab6a4406bc179": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\npredictive_scaling_customized_load_metric_property = autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty(\n    metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n        id=\"id\",\n\n        # the properties below are optional\n        expression=\"expression\",\n        label=\"label\",\n        metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n            metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                metric_name=\"metricName\",\n                namespace=\"namespace\",\n\n                # the properties below are optional\n                dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            ),\n            stat=\"stat\",\n\n            # the properties below are optional\n            unit=\"unit\"\n        ),\n        return_data=False\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nPredictiveScalingCustomizedLoadMetricProperty predictiveScalingCustomizedLoadMetricProperty = new PredictiveScalingCustomizedLoadMetricProperty {\n    MetricDataQueries = new [] { new MetricDataQueryProperty {\n        Id = \"id\",\n\n        // the properties below are optional\n        Expression = \"expression\",\n        Label = \"label\",\n        MetricStat = new MetricStatProperty {\n            Metric = new MetricProperty {\n                MetricName = \"metricName\",\n                Namespace = \"namespace\",\n\n                // the properties below are optional\n                Dimensions = new [] { new MetricDimensionProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            },\n            Stat = \"stat\",\n\n            // the properties below are optional\n            Unit = \"unit\"\n        },\n        ReturnData = false\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nPredictiveScalingCustomizedLoadMetricProperty predictiveScalingCustomizedLoadMetricProperty = PredictiveScalingCustomizedLoadMetricProperty.builder()\n        .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                .id(\"id\")\n\n                // the properties below are optional\n                .expression(\"expression\")\n                .label(\"label\")\n                .metricStat(MetricStatProperty.builder()\n                        .metric(MetricProperty.builder()\n                                .metricName(\"metricName\")\n                                .namespace(\"namespace\")\n\n                                // the properties below are optional\n                                .dimensions(List.of(MetricDimensionProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .stat(\"stat\")\n\n                        // the properties below are optional\n                        .unit(\"unit\")\n                        .build())\n                .returnData(false)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\npredictiveScalingCustomizedLoadMetricProperty := &predictiveScalingCustomizedLoadMetricProperty{\n\tmetricDataQueries: []interface{}{\n\t\t&metricDataQueryProperty{\n\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t// the properties below are optional\n\t\t\texpression: jsii.String(\"expression\"),\n\t\t\tlabel: jsii.String(\"label\"),\n\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t},\n\t\t\treturnData: jsii.Boolean(false),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingCustomizedLoadMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty = {\n  metricDataQueries: [{\n    id: 'id',\n\n    // the properties below are optional\n    expression: 'expression',\n    label: 'label',\n    metricStat: {\n      metric: {\n        metricName: 'metricName',\n        namespace: 'namespace',\n\n        // the properties below are optional\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n      stat: 'stat',\n\n      // the properties below are optional\n      unit: 'unit',\n    },\n    returnData: false,\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predictiveScalingCustomizedLoadMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty = {\n  metricDataQueries: [{\n    id: 'id',\n\n    // the properties below are optional\n    expression: 'expression',\n    label: 'label',\n    metricStat: {\n      metric: {\n        metricName: 'metricName',\n        namespace: 'namespace',\n\n        // the properties below are optional\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n      stat: 'stat',\n\n      // the properties below are optional\n      unit: 'unit',\n    },\n    returnData: false,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 19,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "b3600718c1dc4cf6e955d95dd4f7faf38cc6f5d11de4d6e938943cc34aa46e05"
    },
    "50da9d82a3348b4f1bf1d24dc5a59bf3b60c017eb29ce103567c1dcd5901858f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\npredictive_scaling_customized_scaling_metric_property = autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty(\n    metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n        id=\"id\",\n\n        # the properties below are optional\n        expression=\"expression\",\n        label=\"label\",\n        metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n            metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                metric_name=\"metricName\",\n                namespace=\"namespace\",\n\n                # the properties below are optional\n                dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                    name=\"name\",\n                    value=\"value\"\n                )]\n            ),\n            stat=\"stat\",\n\n            # the properties below are optional\n            unit=\"unit\"\n        ),\n        return_data=False\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nPredictiveScalingCustomizedScalingMetricProperty predictiveScalingCustomizedScalingMetricProperty = new PredictiveScalingCustomizedScalingMetricProperty {\n    MetricDataQueries = new [] { new MetricDataQueryProperty {\n        Id = \"id\",\n\n        // the properties below are optional\n        Expression = \"expression\",\n        Label = \"label\",\n        MetricStat = new MetricStatProperty {\n            Metric = new MetricProperty {\n                MetricName = \"metricName\",\n                Namespace = \"namespace\",\n\n                // the properties below are optional\n                Dimensions = new [] { new MetricDimensionProperty {\n                    Name = \"name\",\n                    Value = \"value\"\n                } }\n            },\n            Stat = \"stat\",\n\n            // the properties below are optional\n            Unit = \"unit\"\n        },\n        ReturnData = false\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nPredictiveScalingCustomizedScalingMetricProperty predictiveScalingCustomizedScalingMetricProperty = PredictiveScalingCustomizedScalingMetricProperty.builder()\n        .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                .id(\"id\")\n\n                // the properties below are optional\n                .expression(\"expression\")\n                .label(\"label\")\n                .metricStat(MetricStatProperty.builder()\n                        .metric(MetricProperty.builder()\n                                .metricName(\"metricName\")\n                                .namespace(\"namespace\")\n\n                                // the properties below are optional\n                                .dimensions(List.of(MetricDimensionProperty.builder()\n                                        .name(\"name\")\n                                        .value(\"value\")\n                                        .build()))\n                                .build())\n                        .stat(\"stat\")\n\n                        // the properties below are optional\n                        .unit(\"unit\")\n                        .build())\n                .returnData(false)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\npredictiveScalingCustomizedScalingMetricProperty := &predictiveScalingCustomizedScalingMetricProperty{\n\tmetricDataQueries: []interface{}{\n\t\t&metricDataQueryProperty{\n\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t// the properties below are optional\n\t\t\texpression: jsii.String(\"expression\"),\n\t\t\tlabel: jsii.String(\"label\"),\n\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t},\n\t\t\treturnData: jsii.Boolean(false),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingCustomizedScalingMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty = {\n  metricDataQueries: [{\n    id: 'id',\n\n    // the properties below are optional\n    expression: 'expression',\n    label: 'label',\n    metricStat: {\n      metric: {\n        metricName: 'metricName',\n        namespace: 'namespace',\n\n        // the properties below are optional\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n      stat: 'stat',\n\n      // the properties below are optional\n      unit: 'unit',\n    },\n    returnData: false,\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predictiveScalingCustomizedScalingMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty = {\n  metricDataQueries: [{\n    id: 'id',\n\n    // the properties below are optional\n    expression: 'expression',\n    label: 'label',\n    metricStat: {\n      metric: {\n        metricName: 'metricName',\n        namespace: 'namespace',\n\n        // the properties below are optional\n        dimensions: [{\n          name: 'name',\n          value: 'value',\n        }],\n      },\n      stat: 'stat',\n\n      // the properties below are optional\n      unit: 'unit',\n    },\n    returnData: false,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 19,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "4029761ed8a980b2e88f88af8f5798526917489fced59658ed52276b2da49b74"
    },
    "c19bef9fd2639eccfda7e226b9fecbe97fd489a84025df3717d1d31e735daf33": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\npredictive_scaling_metric_specification_property = autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty(\n    target_value=123,\n\n    # the properties below are optional\n    customized_capacity_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty(\n        metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n            id=\"id\",\n\n            # the properties below are optional\n            expression=\"expression\",\n            label=\"label\",\n            metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                    metric_name=\"metricName\",\n                    namespace=\"namespace\",\n\n                    # the properties below are optional\n                    dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                ),\n                stat=\"stat\",\n\n                # the properties below are optional\n                unit=\"unit\"\n            ),\n            return_data=False\n        )]\n    ),\n    customized_load_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty(\n        metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n            id=\"id\",\n\n            # the properties below are optional\n            expression=\"expression\",\n            label=\"label\",\n            metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                    metric_name=\"metricName\",\n                    namespace=\"namespace\",\n\n                    # the properties below are optional\n                    dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                ),\n                stat=\"stat\",\n\n                # the properties below are optional\n                unit=\"unit\"\n            ),\n            return_data=False\n        )]\n    ),\n    customized_scaling_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty(\n        metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n            id=\"id\",\n\n            # the properties below are optional\n            expression=\"expression\",\n            label=\"label\",\n            metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                    metric_name=\"metricName\",\n                    namespace=\"namespace\",\n\n                    # the properties below are optional\n                    dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                        name=\"name\",\n                        value=\"value\"\n                    )]\n                ),\n                stat=\"stat\",\n\n                # the properties below are optional\n                unit=\"unit\"\n            ),\n            return_data=False\n        )]\n    ),\n    predefined_load_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty(\n        predefined_metric_type=\"predefinedMetricType\",\n\n        # the properties below are optional\n        resource_label=\"resourceLabel\"\n    ),\n    predefined_metric_pair_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty(\n        predefined_metric_type=\"predefinedMetricType\",\n\n        # the properties below are optional\n        resource_label=\"resourceLabel\"\n    ),\n    predefined_scaling_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty(\n        predefined_metric_type=\"predefinedMetricType\",\n\n        # the properties below are optional\n        resource_label=\"resourceLabel\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nPredictiveScalingMetricSpecificationProperty predictiveScalingMetricSpecificationProperty = new PredictiveScalingMetricSpecificationProperty {\n    TargetValue = 123,\n\n    // the properties below are optional\n    CustomizedCapacityMetricSpecification = new PredictiveScalingCustomizedCapacityMetricProperty {\n        MetricDataQueries = new [] { new MetricDataQueryProperty {\n            Id = \"id\",\n\n            // the properties below are optional\n            Expression = \"expression\",\n            Label = \"label\",\n            MetricStat = new MetricStatProperty {\n                Metric = new MetricProperty {\n                    MetricName = \"metricName\",\n                    Namespace = \"namespace\",\n\n                    // the properties below are optional\n                    Dimensions = new [] { new MetricDimensionProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                },\n                Stat = \"stat\",\n\n                // the properties below are optional\n                Unit = \"unit\"\n            },\n            ReturnData = false\n        } }\n    },\n    CustomizedLoadMetricSpecification = new PredictiveScalingCustomizedLoadMetricProperty {\n        MetricDataQueries = new [] { new MetricDataQueryProperty {\n            Id = \"id\",\n\n            // the properties below are optional\n            Expression = \"expression\",\n            Label = \"label\",\n            MetricStat = new MetricStatProperty {\n                Metric = new MetricProperty {\n                    MetricName = \"metricName\",\n                    Namespace = \"namespace\",\n\n                    // the properties below are optional\n                    Dimensions = new [] { new MetricDimensionProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                },\n                Stat = \"stat\",\n\n                // the properties below are optional\n                Unit = \"unit\"\n            },\n            ReturnData = false\n        } }\n    },\n    CustomizedScalingMetricSpecification = new PredictiveScalingCustomizedScalingMetricProperty {\n        MetricDataQueries = new [] { new MetricDataQueryProperty {\n            Id = \"id\",\n\n            // the properties below are optional\n            Expression = \"expression\",\n            Label = \"label\",\n            MetricStat = new MetricStatProperty {\n                Metric = new MetricProperty {\n                    MetricName = \"metricName\",\n                    Namespace = \"namespace\",\n\n                    // the properties below are optional\n                    Dimensions = new [] { new MetricDimensionProperty {\n                        Name = \"name\",\n                        Value = \"value\"\n                    } }\n                },\n                Stat = \"stat\",\n\n                // the properties below are optional\n                Unit = \"unit\"\n            },\n            ReturnData = false\n        } }\n    },\n    PredefinedLoadMetricSpecification = new PredictiveScalingPredefinedLoadMetricProperty {\n        PredefinedMetricType = \"predefinedMetricType\",\n\n        // the properties below are optional\n        ResourceLabel = \"resourceLabel\"\n    },\n    PredefinedMetricPairSpecification = new PredictiveScalingPredefinedMetricPairProperty {\n        PredefinedMetricType = \"predefinedMetricType\",\n\n        // the properties below are optional\n        ResourceLabel = \"resourceLabel\"\n    },\n    PredefinedScalingMetricSpecification = new PredictiveScalingPredefinedScalingMetricProperty {\n        PredefinedMetricType = \"predefinedMetricType\",\n\n        // the properties below are optional\n        ResourceLabel = \"resourceLabel\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nPredictiveScalingMetricSpecificationProperty predictiveScalingMetricSpecificationProperty = PredictiveScalingMetricSpecificationProperty.builder()\n        .targetValue(123)\n\n        // the properties below are optional\n        .customizedCapacityMetricSpecification(PredictiveScalingCustomizedCapacityMetricProperty.builder()\n                .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                        .id(\"id\")\n\n                        // the properties below are optional\n                        .expression(\"expression\")\n                        .label(\"label\")\n                        .metricStat(MetricStatProperty.builder()\n                                .metric(MetricProperty.builder()\n                                        .metricName(\"metricName\")\n                                        .namespace(\"namespace\")\n\n                                        // the properties below are optional\n                                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .stat(\"stat\")\n\n                                // the properties below are optional\n                                .unit(\"unit\")\n                                .build())\n                        .returnData(false)\n                        .build()))\n                .build())\n        .customizedLoadMetricSpecification(PredictiveScalingCustomizedLoadMetricProperty.builder()\n                .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                        .id(\"id\")\n\n                        // the properties below are optional\n                        .expression(\"expression\")\n                        .label(\"label\")\n                        .metricStat(MetricStatProperty.builder()\n                                .metric(MetricProperty.builder()\n                                        .metricName(\"metricName\")\n                                        .namespace(\"namespace\")\n\n                                        // the properties below are optional\n                                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .stat(\"stat\")\n\n                                // the properties below are optional\n                                .unit(\"unit\")\n                                .build())\n                        .returnData(false)\n                        .build()))\n                .build())\n        .customizedScalingMetricSpecification(PredictiveScalingCustomizedScalingMetricProperty.builder()\n                .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                        .id(\"id\")\n\n                        // the properties below are optional\n                        .expression(\"expression\")\n                        .label(\"label\")\n                        .metricStat(MetricStatProperty.builder()\n                                .metric(MetricProperty.builder()\n                                        .metricName(\"metricName\")\n                                        .namespace(\"namespace\")\n\n                                        // the properties below are optional\n                                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                                .name(\"name\")\n                                                .value(\"value\")\n                                                .build()))\n                                        .build())\n                                .stat(\"stat\")\n\n                                // the properties below are optional\n                                .unit(\"unit\")\n                                .build())\n                        .returnData(false)\n                        .build()))\n                .build())\n        .predefinedLoadMetricSpecification(PredictiveScalingPredefinedLoadMetricProperty.builder()\n                .predefinedMetricType(\"predefinedMetricType\")\n\n                // the properties below are optional\n                .resourceLabel(\"resourceLabel\")\n                .build())\n        .predefinedMetricPairSpecification(PredictiveScalingPredefinedMetricPairProperty.builder()\n                .predefinedMetricType(\"predefinedMetricType\")\n\n                // the properties below are optional\n                .resourceLabel(\"resourceLabel\")\n                .build())\n        .predefinedScalingMetricSpecification(PredictiveScalingPredefinedScalingMetricProperty.builder()\n                .predefinedMetricType(\"predefinedMetricType\")\n\n                // the properties below are optional\n                .resourceLabel(\"resourceLabel\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\npredictiveScalingMetricSpecificationProperty := &predictiveScalingMetricSpecificationProperty{\n\ttargetValue: jsii.Number(123),\n\n\t// the properties below are optional\n\tcustomizedCapacityMetricSpecification: &predictiveScalingCustomizedCapacityMetricProperty{\n\t\tmetricDataQueries: []interface{}{\n\t\t\t&metricDataQueryProperty{\n\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t},\n\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t},\n\tcustomizedLoadMetricSpecification: &predictiveScalingCustomizedLoadMetricProperty{\n\t\tmetricDataQueries: []interface{}{\n\t\t\t&metricDataQueryProperty{\n\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t},\n\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t},\n\tcustomizedScalingMetricSpecification: &predictiveScalingCustomizedScalingMetricProperty{\n\t\tmetricDataQueries: []interface{}{\n\t\t\t&metricDataQueryProperty{\n\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t},\n\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t},\n\tpredefinedLoadMetricSpecification: &predictiveScalingPredefinedLoadMetricProperty{\n\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t// the properties below are optional\n\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t},\n\tpredefinedMetricPairSpecification: &predictiveScalingPredefinedMetricPairProperty{\n\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t// the properties below are optional\n\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t},\n\tpredefinedScalingMetricSpecification: &predictiveScalingPredefinedScalingMetricProperty{\n\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t// the properties below are optional\n\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingMetricSpecificationProperty: autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  customizedCapacityMetricSpecification: {\n    metricDataQueries: [{\n      id: 'id',\n\n      // the properties below are optional\n      expression: 'expression',\n      label: 'label',\n      metricStat: {\n        metric: {\n          metricName: 'metricName',\n          namespace: 'namespace',\n\n          // the properties below are optional\n          dimensions: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n        stat: 'stat',\n\n        // the properties below are optional\n        unit: 'unit',\n      },\n      returnData: false,\n    }],\n  },\n  customizedLoadMetricSpecification: {\n    metricDataQueries: [{\n      id: 'id',\n\n      // the properties below are optional\n      expression: 'expression',\n      label: 'label',\n      metricStat: {\n        metric: {\n          metricName: 'metricName',\n          namespace: 'namespace',\n\n          // the properties below are optional\n          dimensions: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n        stat: 'stat',\n\n        // the properties below are optional\n        unit: 'unit',\n      },\n      returnData: false,\n    }],\n  },\n  customizedScalingMetricSpecification: {\n    metricDataQueries: [{\n      id: 'id',\n\n      // the properties below are optional\n      expression: 'expression',\n      label: 'label',\n      metricStat: {\n        metric: {\n          metricName: 'metricName',\n          namespace: 'namespace',\n\n          // the properties below are optional\n          dimensions: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n        stat: 'stat',\n\n        // the properties below are optional\n        unit: 'unit',\n      },\n      returnData: false,\n    }],\n  },\n  predefinedLoadMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  predefinedMetricPairSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  predefinedScalingMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predictiveScalingMetricSpecificationProperty: autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  customizedCapacityMetricSpecification: {\n    metricDataQueries: [{\n      id: 'id',\n\n      // the properties below are optional\n      expression: 'expression',\n      label: 'label',\n      metricStat: {\n        metric: {\n          metricName: 'metricName',\n          namespace: 'namespace',\n\n          // the properties below are optional\n          dimensions: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n        stat: 'stat',\n\n        // the properties below are optional\n        unit: 'unit',\n      },\n      returnData: false,\n    }],\n  },\n  customizedLoadMetricSpecification: {\n    metricDataQueries: [{\n      id: 'id',\n\n      // the properties below are optional\n      expression: 'expression',\n      label: 'label',\n      metricStat: {\n        metric: {\n          metricName: 'metricName',\n          namespace: 'namespace',\n\n          // the properties below are optional\n          dimensions: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n        stat: 'stat',\n\n        // the properties below are optional\n        unit: 'unit',\n      },\n      returnData: false,\n    }],\n  },\n  customizedScalingMetricSpecification: {\n    metricDataQueries: [{\n      id: 'id',\n\n      // the properties below are optional\n      expression: 'expression',\n      label: 'label',\n      metricStat: {\n        metric: {\n          metricName: 'metricName',\n          namespace: 'namespace',\n\n          // the properties below are optional\n          dimensions: [{\n            name: 'name',\n            value: 'value',\n          }],\n        },\n        stat: 'stat',\n\n        // the properties below are optional\n        unit: 'unit',\n      },\n      returnData: false,\n    }],\n  },\n  predefinedLoadMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  predefinedMetricPairSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n  predefinedScalingMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 34,
        "75": 60,
        "91": 3,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 19,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 55,
        "290": 1
      },
      "fqnsFingerprint": "f77d0db66d214f97dded46fec22df4a3eec1c40a175a885da368bcba837cf730"
    },
    "22fa297ca3dd7def6a51a5d77298e9b8cc152ba368e8cb4647aa0e620c10081b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\npredictive_scaling_predefined_load_metric_property = autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty(\n    predefined_metric_type=\"predefinedMetricType\",\n\n    # the properties below are optional\n    resource_label=\"resourceLabel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nPredictiveScalingPredefinedLoadMetricProperty predictiveScalingPredefinedLoadMetricProperty = new PredictiveScalingPredefinedLoadMetricProperty {\n    PredefinedMetricType = \"predefinedMetricType\",\n\n    // the properties below are optional\n    ResourceLabel = \"resourceLabel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nPredictiveScalingPredefinedLoadMetricProperty predictiveScalingPredefinedLoadMetricProperty = PredictiveScalingPredefinedLoadMetricProperty.builder()\n        .predefinedMetricType(\"predefinedMetricType\")\n\n        // the properties below are optional\n        .resourceLabel(\"resourceLabel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\npredictiveScalingPredefinedLoadMetricProperty := &predictiveScalingPredefinedLoadMetricProperty{\n\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t// the properties below are optional\n\tresourceLabel: jsii.String(\"resourceLabel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingPredefinedLoadMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predictiveScalingPredefinedLoadMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1d789551427525a5718a24adac1c4d909697e7b310cfab94614f1e250e5c445a"
    },
    "29d67af96f84bf7f05fe707fec4babf9719850bf228bd3ef5d3bf9f9020fe8f8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\npredictive_scaling_predefined_metric_pair_property = autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty(\n    predefined_metric_type=\"predefinedMetricType\",\n\n    # the properties below are optional\n    resource_label=\"resourceLabel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nPredictiveScalingPredefinedMetricPairProperty predictiveScalingPredefinedMetricPairProperty = new PredictiveScalingPredefinedMetricPairProperty {\n    PredefinedMetricType = \"predefinedMetricType\",\n\n    // the properties below are optional\n    ResourceLabel = \"resourceLabel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nPredictiveScalingPredefinedMetricPairProperty predictiveScalingPredefinedMetricPairProperty = PredictiveScalingPredefinedMetricPairProperty.builder()\n        .predefinedMetricType(\"predefinedMetricType\")\n\n        // the properties below are optional\n        .resourceLabel(\"resourceLabel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\npredictiveScalingPredefinedMetricPairProperty := &predictiveScalingPredefinedMetricPairProperty{\n\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t// the properties below are optional\n\tresourceLabel: jsii.String(\"resourceLabel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingPredefinedMetricPairProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predictiveScalingPredefinedMetricPairProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "975bd880eea111a1400bb1e5c96e06f913c2fcc0287a622389e0f96eb20404d9"
    },
    "ff5e0bfc8790a1319dc96bb1583a8939a372c7312347e23dca8d73955b9132d7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\npredictive_scaling_predefined_scaling_metric_property = autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty(\n    predefined_metric_type=\"predefinedMetricType\",\n\n    # the properties below are optional\n    resource_label=\"resourceLabel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nPredictiveScalingPredefinedScalingMetricProperty predictiveScalingPredefinedScalingMetricProperty = new PredictiveScalingPredefinedScalingMetricProperty {\n    PredefinedMetricType = \"predefinedMetricType\",\n\n    // the properties below are optional\n    ResourceLabel = \"resourceLabel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nPredictiveScalingPredefinedScalingMetricProperty predictiveScalingPredefinedScalingMetricProperty = PredictiveScalingPredefinedScalingMetricProperty.builder()\n        .predefinedMetricType(\"predefinedMetricType\")\n\n        // the properties below are optional\n        .resourceLabel(\"resourceLabel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\npredictiveScalingPredefinedScalingMetricProperty := &predictiveScalingPredefinedScalingMetricProperty{\n\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t// the properties below are optional\n\tresourceLabel: jsii.String(\"resourceLabel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst predictiveScalingPredefinedScalingMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predictiveScalingPredefinedScalingMetricProperty: autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty = {\n  predefinedMetricType: 'predefinedMetricType',\n\n  // the properties below are optional\n  resourceLabel: 'resourceLabel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "76a7f8f704cb7a0e9afa227fe27059d1cdb478d63ae3866ca4a13a5848f500af"
    },
    "15b6b0eb0ce11949198ed09c47479d0e6f737b7b6e7e1f12e78026c60d35d07d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nstep_adjustment_property = autoscaling.CfnScalingPolicy.StepAdjustmentProperty(\n    scaling_adjustment=123,\n\n    # the properties below are optional\n    metric_interval_lower_bound=123,\n    metric_interval_upper_bound=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nStepAdjustmentProperty stepAdjustmentProperty = new StepAdjustmentProperty {\n    ScalingAdjustment = 123,\n\n    // the properties below are optional\n    MetricIntervalLowerBound = 123,\n    MetricIntervalUpperBound = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nStepAdjustmentProperty stepAdjustmentProperty = StepAdjustmentProperty.builder()\n        .scalingAdjustment(123)\n\n        // the properties below are optional\n        .metricIntervalLowerBound(123)\n        .metricIntervalUpperBound(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nstepAdjustmentProperty := &stepAdjustmentProperty{\n\tscalingAdjustment: jsii.Number(123),\n\n\t// the properties below are optional\n\tmetricIntervalLowerBound: jsii.Number(123),\n\tmetricIntervalUpperBound: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst stepAdjustmentProperty: autoscaling.CfnScalingPolicy.StepAdjustmentProperty = {\n  scalingAdjustment: 123,\n\n  // the properties below are optional\n  metricIntervalLowerBound: 123,\n  metricIntervalUpperBound: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.StepAdjustmentProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.StepAdjustmentProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepAdjustmentProperty: autoscaling.CfnScalingPolicy.StepAdjustmentProperty = {\n  scalingAdjustment: 123,\n\n  // the properties below are optional\n  metricIntervalLowerBound: 123,\n  metricIntervalUpperBound: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 1,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "722b0b4abd22229152afc08701789eb9be11a6e1535792a35f42eb244f6e39c9"
    },
    "da530094e8c5408a2379f9cf6769428b51734a5f4be6b20f87f823ca0c438262": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ntarget_tracking_configuration_property = autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty(\n    target_value=123,\n\n    # the properties below are optional\n    customized_metric_specification=autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty(\n        metric_name=\"metricName\",\n        namespace=\"namespace\",\n        statistic=\"statistic\",\n\n        # the properties below are optional\n        dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n            name=\"name\",\n            value=\"value\"\n        )],\n        unit=\"unit\"\n    ),\n    disable_scale_in=False,\n    predefined_metric_specification=autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty(\n        predefined_metric_type=\"predefinedMetricType\",\n\n        # the properties below are optional\n        resource_label=\"resourceLabel\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nTargetTrackingConfigurationProperty targetTrackingConfigurationProperty = new TargetTrackingConfigurationProperty {\n    TargetValue = 123,\n\n    // the properties below are optional\n    CustomizedMetricSpecification = new CustomizedMetricSpecificationProperty {\n        MetricName = \"metricName\",\n        Namespace = \"namespace\",\n        Statistic = \"statistic\",\n\n        // the properties below are optional\n        Dimensions = new [] { new MetricDimensionProperty {\n            Name = \"name\",\n            Value = \"value\"\n        } },\n        Unit = \"unit\"\n    },\n    DisableScaleIn = false,\n    PredefinedMetricSpecification = new PredefinedMetricSpecificationProperty {\n        PredefinedMetricType = \"predefinedMetricType\",\n\n        // the properties below are optional\n        ResourceLabel = \"resourceLabel\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nTargetTrackingConfigurationProperty targetTrackingConfigurationProperty = TargetTrackingConfigurationProperty.builder()\n        .targetValue(123)\n\n        // the properties below are optional\n        .customizedMetricSpecification(CustomizedMetricSpecificationProperty.builder()\n                .metricName(\"metricName\")\n                .namespace(\"namespace\")\n                .statistic(\"statistic\")\n\n                // the properties below are optional\n                .dimensions(List.of(MetricDimensionProperty.builder()\n                        .name(\"name\")\n                        .value(\"value\")\n                        .build()))\n                .unit(\"unit\")\n                .build())\n        .disableScaleIn(false)\n        .predefinedMetricSpecification(PredefinedMetricSpecificationProperty.builder()\n                .predefinedMetricType(\"predefinedMetricType\")\n\n                // the properties below are optional\n                .resourceLabel(\"resourceLabel\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ntargetTrackingConfigurationProperty := &targetTrackingConfigurationProperty{\n\ttargetValue: jsii.Number(123),\n\n\t// the properties below are optional\n\tcustomizedMetricSpecification: &customizedMetricSpecificationProperty{\n\t\tmetricName: jsii.String(\"metricName\"),\n\t\tnamespace: jsii.String(\"namespace\"),\n\t\tstatistic: jsii.String(\"statistic\"),\n\n\t\t// the properties below are optional\n\t\tdimensions: []interface{}{\n\t\t\t&metricDimensionProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t},\n\t\t},\n\t\tunit: jsii.String(\"unit\"),\n\t},\n\tdisableScaleIn: jsii.Boolean(false),\n\tpredefinedMetricSpecification: &predefinedMetricSpecificationProperty{\n\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t// the properties below are optional\n\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst targetTrackingConfigurationProperty: autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  customizedMetricSpecification: {\n    metricName: 'metricName',\n    namespace: 'namespace',\n    statistic: 'statistic',\n\n    // the properties below are optional\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n    unit: 'unit',\n  },\n  disableScaleIn: false,\n  predefinedMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetTrackingConfigurationProperty: autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty = {\n  targetValue: 123,\n\n  // the properties below are optional\n  customizedMetricSpecification: {\n    metricName: 'metricName',\n    namespace: 'namespace',\n    statistic: 'statistic',\n\n    // the properties below are optional\n    dimensions: [{\n      name: 'name',\n      value: 'value',\n    }],\n    unit: 'unit',\n  },\n  disableScaleIn: false,\n  predefinedMetricSpecification: {\n    predefinedMetricType: 'predefinedMetricType',\n\n    // the properties below are optional\n    resourceLabel: 'resourceLabel',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 9,
        "75": 18,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "49e705bc596438249f61dd552016e13db2091bb8ab0d24005f29e28cf035f883"
    },
    "79f6329843edb1fca9fcbd8613f7c39bedea402324a8e886c05fc1c92c247e6b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_scaling_policy_props = autoscaling.CfnScalingPolicyProps(\n    auto_scaling_group_name=\"autoScalingGroupName\",\n\n    # the properties below are optional\n    adjustment_type=\"adjustmentType\",\n    cooldown=\"cooldown\",\n    estimated_instance_warmup=123,\n    metric_aggregation_type=\"metricAggregationType\",\n    min_adjustment_magnitude=123,\n    policy_type=\"policyType\",\n    predictive_scaling_configuration=autoscaling.CfnScalingPolicy.PredictiveScalingConfigurationProperty(\n        metric_specifications=[autoscaling.CfnScalingPolicy.PredictiveScalingMetricSpecificationProperty(\n            target_value=123,\n\n            # the properties below are optional\n            customized_capacity_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedCapacityMetricProperty(\n                metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n                    id=\"id\",\n\n                    # the properties below are optional\n                    expression=\"expression\",\n                    label=\"label\",\n                    metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                        metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                            metric_name=\"metricName\",\n                            namespace=\"namespace\",\n\n                            # the properties below are optional\n                            dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                                name=\"name\",\n                                value=\"value\"\n                            )]\n                        ),\n                        stat=\"stat\",\n\n                        # the properties below are optional\n                        unit=\"unit\"\n                    ),\n                    return_data=False\n                )]\n            ),\n            customized_load_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedLoadMetricProperty(\n                metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n                    id=\"id\",\n\n                    # the properties below are optional\n                    expression=\"expression\",\n                    label=\"label\",\n                    metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                        metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                            metric_name=\"metricName\",\n                            namespace=\"namespace\",\n\n                            # the properties below are optional\n                            dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                                name=\"name\",\n                                value=\"value\"\n                            )]\n                        ),\n                        stat=\"stat\",\n\n                        # the properties below are optional\n                        unit=\"unit\"\n                    ),\n                    return_data=False\n                )]\n            ),\n            customized_scaling_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingCustomizedScalingMetricProperty(\n                metric_data_queries=[autoscaling.CfnScalingPolicy.MetricDataQueryProperty(\n                    id=\"id\",\n\n                    # the properties below are optional\n                    expression=\"expression\",\n                    label=\"label\",\n                    metric_stat=autoscaling.CfnScalingPolicy.MetricStatProperty(\n                        metric=autoscaling.CfnScalingPolicy.MetricProperty(\n                            metric_name=\"metricName\",\n                            namespace=\"namespace\",\n\n                            # the properties below are optional\n                            dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                                name=\"name\",\n                                value=\"value\"\n                            )]\n                        ),\n                        stat=\"stat\",\n\n                        # the properties below are optional\n                        unit=\"unit\"\n                    ),\n                    return_data=False\n                )]\n            ),\n            predefined_load_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedLoadMetricProperty(\n                predefined_metric_type=\"predefinedMetricType\",\n\n                # the properties below are optional\n                resource_label=\"resourceLabel\"\n            ),\n            predefined_metric_pair_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedMetricPairProperty(\n                predefined_metric_type=\"predefinedMetricType\",\n\n                # the properties below are optional\n                resource_label=\"resourceLabel\"\n            ),\n            predefined_scaling_metric_specification=autoscaling.CfnScalingPolicy.PredictiveScalingPredefinedScalingMetricProperty(\n                predefined_metric_type=\"predefinedMetricType\",\n\n                # the properties below are optional\n                resource_label=\"resourceLabel\"\n            )\n        )],\n\n        # the properties below are optional\n        max_capacity_breach_behavior=\"maxCapacityBreachBehavior\",\n        max_capacity_buffer=123,\n        mode=\"mode\",\n        scheduling_buffer_time=123\n    ),\n    scaling_adjustment=123,\n    step_adjustments=[autoscaling.CfnScalingPolicy.StepAdjustmentProperty(\n        scaling_adjustment=123,\n\n        # the properties below are optional\n        metric_interval_lower_bound=123,\n        metric_interval_upper_bound=123\n    )],\n    target_tracking_configuration=autoscaling.CfnScalingPolicy.TargetTrackingConfigurationProperty(\n        target_value=123,\n\n        # the properties below are optional\n        customized_metric_specification=autoscaling.CfnScalingPolicy.CustomizedMetricSpecificationProperty(\n            metric_name=\"metricName\",\n            namespace=\"namespace\",\n            statistic=\"statistic\",\n\n            # the properties below are optional\n            dimensions=[autoscaling.CfnScalingPolicy.MetricDimensionProperty(\n                name=\"name\",\n                value=\"value\"\n            )],\n            unit=\"unit\"\n        ),\n        disable_scale_in=False,\n        predefined_metric_specification=autoscaling.CfnScalingPolicy.PredefinedMetricSpecificationProperty(\n            predefined_metric_type=\"predefinedMetricType\",\n\n            # the properties below are optional\n            resource_label=\"resourceLabel\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnScalingPolicyProps cfnScalingPolicyProps = new CfnScalingPolicyProps {\n    AutoScalingGroupName = \"autoScalingGroupName\",\n\n    // the properties below are optional\n    AdjustmentType = \"adjustmentType\",\n    Cooldown = \"cooldown\",\n    EstimatedInstanceWarmup = 123,\n    MetricAggregationType = \"metricAggregationType\",\n    MinAdjustmentMagnitude = 123,\n    PolicyType = \"policyType\",\n    PredictiveScalingConfiguration = new PredictiveScalingConfigurationProperty {\n        MetricSpecifications = new [] { new PredictiveScalingMetricSpecificationProperty {\n            TargetValue = 123,\n\n            // the properties below are optional\n            CustomizedCapacityMetricSpecification = new PredictiveScalingCustomizedCapacityMetricProperty {\n                MetricDataQueries = new [] { new MetricDataQueryProperty {\n                    Id = \"id\",\n\n                    // the properties below are optional\n                    Expression = \"expression\",\n                    Label = \"label\",\n                    MetricStat = new MetricStatProperty {\n                        Metric = new MetricProperty {\n                            MetricName = \"metricName\",\n                            Namespace = \"namespace\",\n\n                            // the properties below are optional\n                            Dimensions = new [] { new MetricDimensionProperty {\n                                Name = \"name\",\n                                Value = \"value\"\n                            } }\n                        },\n                        Stat = \"stat\",\n\n                        // the properties below are optional\n                        Unit = \"unit\"\n                    },\n                    ReturnData = false\n                } }\n            },\n            CustomizedLoadMetricSpecification = new PredictiveScalingCustomizedLoadMetricProperty {\n                MetricDataQueries = new [] { new MetricDataQueryProperty {\n                    Id = \"id\",\n\n                    // the properties below are optional\n                    Expression = \"expression\",\n                    Label = \"label\",\n                    MetricStat = new MetricStatProperty {\n                        Metric = new MetricProperty {\n                            MetricName = \"metricName\",\n                            Namespace = \"namespace\",\n\n                            // the properties below are optional\n                            Dimensions = new [] { new MetricDimensionProperty {\n                                Name = \"name\",\n                                Value = \"value\"\n                            } }\n                        },\n                        Stat = \"stat\",\n\n                        // the properties below are optional\n                        Unit = \"unit\"\n                    },\n                    ReturnData = false\n                } }\n            },\n            CustomizedScalingMetricSpecification = new PredictiveScalingCustomizedScalingMetricProperty {\n                MetricDataQueries = new [] { new MetricDataQueryProperty {\n                    Id = \"id\",\n\n                    // the properties below are optional\n                    Expression = \"expression\",\n                    Label = \"label\",\n                    MetricStat = new MetricStatProperty {\n                        Metric = new MetricProperty {\n                            MetricName = \"metricName\",\n                            Namespace = \"namespace\",\n\n                            // the properties below are optional\n                            Dimensions = new [] { new MetricDimensionProperty {\n                                Name = \"name\",\n                                Value = \"value\"\n                            } }\n                        },\n                        Stat = \"stat\",\n\n                        // the properties below are optional\n                        Unit = \"unit\"\n                    },\n                    ReturnData = false\n                } }\n            },\n            PredefinedLoadMetricSpecification = new PredictiveScalingPredefinedLoadMetricProperty {\n                PredefinedMetricType = \"predefinedMetricType\",\n\n                // the properties below are optional\n                ResourceLabel = \"resourceLabel\"\n            },\n            PredefinedMetricPairSpecification = new PredictiveScalingPredefinedMetricPairProperty {\n                PredefinedMetricType = \"predefinedMetricType\",\n\n                // the properties below are optional\n                ResourceLabel = \"resourceLabel\"\n            },\n            PredefinedScalingMetricSpecification = new PredictiveScalingPredefinedScalingMetricProperty {\n                PredefinedMetricType = \"predefinedMetricType\",\n\n                // the properties below are optional\n                ResourceLabel = \"resourceLabel\"\n            }\n        } },\n\n        // the properties below are optional\n        MaxCapacityBreachBehavior = \"maxCapacityBreachBehavior\",\n        MaxCapacityBuffer = 123,\n        Mode = \"mode\",\n        SchedulingBufferTime = 123\n    },\n    ScalingAdjustment = 123,\n    StepAdjustments = new [] { new StepAdjustmentProperty {\n        ScalingAdjustment = 123,\n\n        // the properties below are optional\n        MetricIntervalLowerBound = 123,\n        MetricIntervalUpperBound = 123\n    } },\n    TargetTrackingConfiguration = new TargetTrackingConfigurationProperty {\n        TargetValue = 123,\n\n        // the properties below are optional\n        CustomizedMetricSpecification = new CustomizedMetricSpecificationProperty {\n            MetricName = \"metricName\",\n            Namespace = \"namespace\",\n            Statistic = \"statistic\",\n\n            // the properties below are optional\n            Dimensions = new [] { new MetricDimensionProperty {\n                Name = \"name\",\n                Value = \"value\"\n            } },\n            Unit = \"unit\"\n        },\n        DisableScaleIn = false,\n        PredefinedMetricSpecification = new PredefinedMetricSpecificationProperty {\n            PredefinedMetricType = \"predefinedMetricType\",\n\n            // the properties below are optional\n            ResourceLabel = \"resourceLabel\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnScalingPolicyProps cfnScalingPolicyProps = CfnScalingPolicyProps.builder()\n        .autoScalingGroupName(\"autoScalingGroupName\")\n\n        // the properties below are optional\n        .adjustmentType(\"adjustmentType\")\n        .cooldown(\"cooldown\")\n        .estimatedInstanceWarmup(123)\n        .metricAggregationType(\"metricAggregationType\")\n        .minAdjustmentMagnitude(123)\n        .policyType(\"policyType\")\n        .predictiveScalingConfiguration(PredictiveScalingConfigurationProperty.builder()\n                .metricSpecifications(List.of(PredictiveScalingMetricSpecificationProperty.builder()\n                        .targetValue(123)\n\n                        // the properties below are optional\n                        .customizedCapacityMetricSpecification(PredictiveScalingCustomizedCapacityMetricProperty.builder()\n                                .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                                        .id(\"id\")\n\n                                        // the properties below are optional\n                                        .expression(\"expression\")\n                                        .label(\"label\")\n                                        .metricStat(MetricStatProperty.builder()\n                                                .metric(MetricProperty.builder()\n                                                        .metricName(\"metricName\")\n                                                        .namespace(\"namespace\")\n\n                                                        // the properties below are optional\n                                                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                                                .name(\"name\")\n                                                                .value(\"value\")\n                                                                .build()))\n                                                        .build())\n                                                .stat(\"stat\")\n\n                                                // the properties below are optional\n                                                .unit(\"unit\")\n                                                .build())\n                                        .returnData(false)\n                                        .build()))\n                                .build())\n                        .customizedLoadMetricSpecification(PredictiveScalingCustomizedLoadMetricProperty.builder()\n                                .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                                        .id(\"id\")\n\n                                        // the properties below are optional\n                                        .expression(\"expression\")\n                                        .label(\"label\")\n                                        .metricStat(MetricStatProperty.builder()\n                                                .metric(MetricProperty.builder()\n                                                        .metricName(\"metricName\")\n                                                        .namespace(\"namespace\")\n\n                                                        // the properties below are optional\n                                                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                                                .name(\"name\")\n                                                                .value(\"value\")\n                                                                .build()))\n                                                        .build())\n                                                .stat(\"stat\")\n\n                                                // the properties below are optional\n                                                .unit(\"unit\")\n                                                .build())\n                                        .returnData(false)\n                                        .build()))\n                                .build())\n                        .customizedScalingMetricSpecification(PredictiveScalingCustomizedScalingMetricProperty.builder()\n                                .metricDataQueries(List.of(MetricDataQueryProperty.builder()\n                                        .id(\"id\")\n\n                                        // the properties below are optional\n                                        .expression(\"expression\")\n                                        .label(\"label\")\n                                        .metricStat(MetricStatProperty.builder()\n                                                .metric(MetricProperty.builder()\n                                                        .metricName(\"metricName\")\n                                                        .namespace(\"namespace\")\n\n                                                        // the properties below are optional\n                                                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                                                .name(\"name\")\n                                                                .value(\"value\")\n                                                                .build()))\n                                                        .build())\n                                                .stat(\"stat\")\n\n                                                // the properties below are optional\n                                                .unit(\"unit\")\n                                                .build())\n                                        .returnData(false)\n                                        .build()))\n                                .build())\n                        .predefinedLoadMetricSpecification(PredictiveScalingPredefinedLoadMetricProperty.builder()\n                                .predefinedMetricType(\"predefinedMetricType\")\n\n                                // the properties below are optional\n                                .resourceLabel(\"resourceLabel\")\n                                .build())\n                        .predefinedMetricPairSpecification(PredictiveScalingPredefinedMetricPairProperty.builder()\n                                .predefinedMetricType(\"predefinedMetricType\")\n\n                                // the properties below are optional\n                                .resourceLabel(\"resourceLabel\")\n                                .build())\n                        .predefinedScalingMetricSpecification(PredictiveScalingPredefinedScalingMetricProperty.builder()\n                                .predefinedMetricType(\"predefinedMetricType\")\n\n                                // the properties below are optional\n                                .resourceLabel(\"resourceLabel\")\n                                .build())\n                        .build()))\n\n                // the properties below are optional\n                .maxCapacityBreachBehavior(\"maxCapacityBreachBehavior\")\n                .maxCapacityBuffer(123)\n                .mode(\"mode\")\n                .schedulingBufferTime(123)\n                .build())\n        .scalingAdjustment(123)\n        .stepAdjustments(List.of(StepAdjustmentProperty.builder()\n                .scalingAdjustment(123)\n\n                // the properties below are optional\n                .metricIntervalLowerBound(123)\n                .metricIntervalUpperBound(123)\n                .build()))\n        .targetTrackingConfiguration(TargetTrackingConfigurationProperty.builder()\n                .targetValue(123)\n\n                // the properties below are optional\n                .customizedMetricSpecification(CustomizedMetricSpecificationProperty.builder()\n                        .metricName(\"metricName\")\n                        .namespace(\"namespace\")\n                        .statistic(\"statistic\")\n\n                        // the properties below are optional\n                        .dimensions(List.of(MetricDimensionProperty.builder()\n                                .name(\"name\")\n                                .value(\"value\")\n                                .build()))\n                        .unit(\"unit\")\n                        .build())\n                .disableScaleIn(false)\n                .predefinedMetricSpecification(PredefinedMetricSpecificationProperty.builder()\n                        .predefinedMetricType(\"predefinedMetricType\")\n\n                        // the properties below are optional\n                        .resourceLabel(\"resourceLabel\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnScalingPolicyProps := &cfnScalingPolicyProps{\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\n\t// the properties below are optional\n\tadjustmentType: jsii.String(\"adjustmentType\"),\n\tcooldown: jsii.String(\"cooldown\"),\n\testimatedInstanceWarmup: jsii.Number(123),\n\tmetricAggregationType: jsii.String(\"metricAggregationType\"),\n\tminAdjustmentMagnitude: jsii.Number(123),\n\tpolicyType: jsii.String(\"policyType\"),\n\tpredictiveScalingConfiguration: &predictiveScalingConfigurationProperty{\n\t\tmetricSpecifications: []interface{}{\n\t\t\t&predictiveScalingMetricSpecificationProperty{\n\t\t\t\ttargetValue: jsii.Number(123),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcustomizedCapacityMetricSpecification: &predictiveScalingCustomizedCapacityMetricProperty{\n\t\t\t\t\tmetricDataQueries: []interface{}{\n\t\t\t\t\t\t&metricDataQueryProperty{\n\t\t\t\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcustomizedLoadMetricSpecification: &predictiveScalingCustomizedLoadMetricProperty{\n\t\t\t\t\tmetricDataQueries: []interface{}{\n\t\t\t\t\t\t&metricDataQueryProperty{\n\t\t\t\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcustomizedScalingMetricSpecification: &predictiveScalingCustomizedScalingMetricProperty{\n\t\t\t\t\tmetricDataQueries: []interface{}{\n\t\t\t\t\t\t&metricDataQueryProperty{\n\t\t\t\t\t\t\tid: jsii.String(\"id\"),\n\n\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\texpression: jsii.String(\"expression\"),\n\t\t\t\t\t\t\tlabel: jsii.String(\"label\"),\n\t\t\t\t\t\t\tmetricStat: &metricStatProperty{\n\t\t\t\t\t\t\t\tmetric: &metricProperty{\n\t\t\t\t\t\t\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\t\t\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\n\t\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\t\tdimensions: []interface{}{\n\t\t\t\t\t\t\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstat: jsii.String(\"stat\"),\n\n\t\t\t\t\t\t\t\t// the properties below are optional\n\t\t\t\t\t\t\t\tunit: jsii.String(\"unit\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treturnData: jsii.Boolean(false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpredefinedLoadMetricSpecification: &predictiveScalingPredefinedLoadMetricProperty{\n\t\t\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t\t\t},\n\t\t\t\tpredefinedMetricPairSpecification: &predictiveScalingPredefinedMetricPairProperty{\n\t\t\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t\t\t},\n\t\t\t\tpredefinedScalingMetricSpecification: &predictiveScalingPredefinedScalingMetricProperty{\n\t\t\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\n\t\t// the properties below are optional\n\t\tmaxCapacityBreachBehavior: jsii.String(\"maxCapacityBreachBehavior\"),\n\t\tmaxCapacityBuffer: jsii.Number(123),\n\t\tmode: jsii.String(\"mode\"),\n\t\tschedulingBufferTime: jsii.Number(123),\n\t},\n\tscalingAdjustment: jsii.Number(123),\n\tstepAdjustments: []interface{}{\n\t\t&stepAdjustmentProperty{\n\t\t\tscalingAdjustment: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tmetricIntervalLowerBound: jsii.Number(123),\n\t\t\tmetricIntervalUpperBound: jsii.Number(123),\n\t\t},\n\t},\n\ttargetTrackingConfiguration: &targetTrackingConfigurationProperty{\n\t\ttargetValue: jsii.Number(123),\n\n\t\t// the properties below are optional\n\t\tcustomizedMetricSpecification: &customizedMetricSpecificationProperty{\n\t\t\tmetricName: jsii.String(\"metricName\"),\n\t\t\tnamespace: jsii.String(\"namespace\"),\n\t\t\tstatistic: jsii.String(\"statistic\"),\n\n\t\t\t// the properties below are optional\n\t\t\tdimensions: []interface{}{\n\t\t\t\t&metricDimensionProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\tvalue: jsii.String(\"value\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tunit: jsii.String(\"unit\"),\n\t\t},\n\t\tdisableScaleIn: jsii.Boolean(false),\n\t\tpredefinedMetricSpecification: &predefinedMetricSpecificationProperty{\n\t\t\tpredefinedMetricType: jsii.String(\"predefinedMetricType\"),\n\n\t\t\t// the properties below are optional\n\t\t\tresourceLabel: jsii.String(\"resourceLabel\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnScalingPolicyProps: autoscaling.CfnScalingPolicyProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  adjustmentType: 'adjustmentType',\n  cooldown: 'cooldown',\n  estimatedInstanceWarmup: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  policyType: 'policyType',\n  predictiveScalingConfiguration: {\n    metricSpecifications: [{\n      targetValue: 123,\n\n      // the properties below are optional\n      customizedCapacityMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedLoadMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedScalingMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      predefinedLoadMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedMetricPairSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedScalingMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n    }],\n\n    // the properties below are optional\n    maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n    maxCapacityBuffer: 123,\n    mode: 'mode',\n    schedulingBufferTime: 123,\n  },\n  scalingAdjustment: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n  targetTrackingConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScalingPolicyProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScalingPolicyProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnScalingPolicyProps: autoscaling.CfnScalingPolicyProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  adjustmentType: 'adjustmentType',\n  cooldown: 'cooldown',\n  estimatedInstanceWarmup: 123,\n  metricAggregationType: 'metricAggregationType',\n  minAdjustmentMagnitude: 123,\n  policyType: 'policyType',\n  predictiveScalingConfiguration: {\n    metricSpecifications: [{\n      targetValue: 123,\n\n      // the properties below are optional\n      customizedCapacityMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedLoadMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      customizedScalingMetricSpecification: {\n        metricDataQueries: [{\n          id: 'id',\n\n          // the properties below are optional\n          expression: 'expression',\n          label: 'label',\n          metricStat: {\n            metric: {\n              metricName: 'metricName',\n              namespace: 'namespace',\n\n              // the properties below are optional\n              dimensions: [{\n                name: 'name',\n                value: 'value',\n              }],\n            },\n            stat: 'stat',\n\n            // the properties below are optional\n            unit: 'unit',\n          },\n          returnData: false,\n        }],\n      },\n      predefinedLoadMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedMetricPairSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n      predefinedScalingMetricSpecification: {\n        predefinedMetricType: 'predefinedMetricType',\n\n        // the properties below are optional\n        resourceLabel: 'resourceLabel',\n      },\n    }],\n\n    // the properties below are optional\n    maxCapacityBreachBehavior: 'maxCapacityBreachBehavior',\n    maxCapacityBuffer: 123,\n    mode: 'mode',\n    schedulingBufferTime: 123,\n  },\n  scalingAdjustment: 123,\n  stepAdjustments: [{\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    metricIntervalLowerBound: 123,\n    metricIntervalUpperBound: 123,\n  }],\n  targetTrackingConfiguration: {\n    targetValue: 123,\n\n    // the properties below are optional\n    customizedMetricSpecification: {\n      metricName: 'metricName',\n      namespace: 'namespace',\n      statistic: 'statistic',\n\n      // the properties below are optional\n      dimensions: [{\n        name: 'name',\n        value: 'value',\n      }],\n      unit: 'unit',\n    },\n    disableScaleIn: false,\n    predefinedMetricSpecification: {\n      predefinedMetricType: 'predefinedMetricType',\n\n      // the properties below are optional\n      resourceLabel: 'resourceLabel',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 10,
        "10": 49,
        "75": 91,
        "91": 4,
        "153": 1,
        "169": 1,
        "192": 9,
        "193": 26,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 87,
        "290": 1
      },
      "fqnsFingerprint": "f11ec8deba2a2333d522ff0a6d1433a542b185584183a52b10130745d75c838d"
    },
    "bc4eed3b7fcc62600a51136255ad8635c8c2e0ba14a8d9614f3583c288942860": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_scheduled_action = autoscaling.CfnScheduledAction(self, \"MyCfnScheduledAction\",\n    auto_scaling_group_name=\"autoScalingGroupName\",\n\n    # the properties below are optional\n    desired_capacity=123,\n    end_time=\"endTime\",\n    max_size=123,\n    min_size=123,\n    recurrence=\"recurrence\",\n    start_time=\"startTime\",\n    time_zone=\"timeZone\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnScheduledAction cfnScheduledAction = new CfnScheduledAction(this, \"MyCfnScheduledAction\", new CfnScheduledActionProps {\n    AutoScalingGroupName = \"autoScalingGroupName\",\n\n    // the properties below are optional\n    DesiredCapacity = 123,\n    EndTime = \"endTime\",\n    MaxSize = 123,\n    MinSize = 123,\n    Recurrence = \"recurrence\",\n    StartTime = \"startTime\",\n    TimeZone = \"timeZone\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnScheduledAction cfnScheduledAction = CfnScheduledAction.Builder.create(this, \"MyCfnScheduledAction\")\n        .autoScalingGroupName(\"autoScalingGroupName\")\n\n        // the properties below are optional\n        .desiredCapacity(123)\n        .endTime(\"endTime\")\n        .maxSize(123)\n        .minSize(123)\n        .recurrence(\"recurrence\")\n        .startTime(\"startTime\")\n        .timeZone(\"timeZone\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnScheduledAction := autoscaling.NewCfnScheduledAction(this, jsii.String(\"MyCfnScheduledAction\"), &cfnScheduledActionProps{\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\n\t// the properties below are optional\n\tdesiredCapacity: jsii.Number(123),\n\tendTime: jsii.String(\"endTime\"),\n\tmaxSize: jsii.Number(123),\n\tminSize: jsii.Number(123),\n\trecurrence: jsii.String(\"recurrence\"),\n\tstartTime: jsii.String(\"startTime\"),\n\ttimeZone: jsii.String(\"timeZone\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnScheduledAction = new autoscaling.CfnScheduledAction(this, 'MyCfnScheduledAction', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: 'endTime',\n  maxSize: 123,\n  minSize: 123,\n  recurrence: 'recurrence',\n  startTime: 'startTime',\n  timeZone: 'timeZone',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScheduledAction"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScheduledAction",
        "@aws-cdk/aws-autoscaling.CfnScheduledActionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnScheduledAction = new autoscaling.CfnScheduledAction(this, 'MyCfnScheduledAction', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: 'endTime',\n  maxSize: 123,\n  minSize: 123,\n  recurrence: 'recurrence',\n  startTime: 'startTime',\n  timeZone: 'timeZone',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 7,
        "75": 12,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "ed40a27458aa7c6a49bd74930ce7923114d083b38746f20b5438759242195feb"
    },
    "ef35e3b26e9efa00954abb39b7f5ea5ad22f6c333d39ea1f540a8f702373d8be": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_scheduled_action_props = autoscaling.CfnScheduledActionProps(\n    auto_scaling_group_name=\"autoScalingGroupName\",\n\n    # the properties below are optional\n    desired_capacity=123,\n    end_time=\"endTime\",\n    max_size=123,\n    min_size=123,\n    recurrence=\"recurrence\",\n    start_time=\"startTime\",\n    time_zone=\"timeZone\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnScheduledActionProps cfnScheduledActionProps = new CfnScheduledActionProps {\n    AutoScalingGroupName = \"autoScalingGroupName\",\n\n    // the properties below are optional\n    DesiredCapacity = 123,\n    EndTime = \"endTime\",\n    MaxSize = 123,\n    MinSize = 123,\n    Recurrence = \"recurrence\",\n    StartTime = \"startTime\",\n    TimeZone = \"timeZone\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnScheduledActionProps cfnScheduledActionProps = CfnScheduledActionProps.builder()\n        .autoScalingGroupName(\"autoScalingGroupName\")\n\n        // the properties below are optional\n        .desiredCapacity(123)\n        .endTime(\"endTime\")\n        .maxSize(123)\n        .minSize(123)\n        .recurrence(\"recurrence\")\n        .startTime(\"startTime\")\n        .timeZone(\"timeZone\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnScheduledActionProps := &cfnScheduledActionProps{\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\n\t// the properties below are optional\n\tdesiredCapacity: jsii.Number(123),\n\tendTime: jsii.String(\"endTime\"),\n\tmaxSize: jsii.Number(123),\n\tminSize: jsii.Number(123),\n\trecurrence: jsii.String(\"recurrence\"),\n\tstartTime: jsii.String(\"startTime\"),\n\ttimeZone: jsii.String(\"timeZone\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnScheduledActionProps: autoscaling.CfnScheduledActionProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: 'endTime',\n  maxSize: 123,\n  minSize: 123,\n  recurrence: 'recurrence',\n  startTime: 'startTime',\n  timeZone: 'timeZone',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnScheduledActionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnScheduledActionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnScheduledActionProps: autoscaling.CfnScheduledActionProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: 'endTime',\n  maxSize: 123,\n  minSize: 123,\n  recurrence: 'recurrence',\n  startTime: 'startTime',\n  timeZone: 'timeZone',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 6,
        "75": 12,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "5d134163b218a752c7962688b14a7fbe236ec852934314056b8e7136cf34fbd9"
    },
    "1269ea75772562122fbad155fb678368f752dc9c6baaaa8d194858ca844e1385": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_warm_pool = autoscaling.CfnWarmPool(self, \"MyCfnWarmPool\",\n    auto_scaling_group_name=\"autoScalingGroupName\",\n\n    # the properties below are optional\n    instance_reuse_policy=autoscaling.CfnWarmPool.InstanceReusePolicyProperty(\n        reuse_on_scale_in=False\n    ),\n    max_group_prepared_capacity=123,\n    min_size=123,\n    pool_state=\"poolState\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnWarmPool cfnWarmPool = new CfnWarmPool(this, \"MyCfnWarmPool\", new CfnWarmPoolProps {\n    AutoScalingGroupName = \"autoScalingGroupName\",\n\n    // the properties below are optional\n    InstanceReusePolicy = new InstanceReusePolicyProperty {\n        ReuseOnScaleIn = false\n    },\n    MaxGroupPreparedCapacity = 123,\n    MinSize = 123,\n    PoolState = \"poolState\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnWarmPool cfnWarmPool = CfnWarmPool.Builder.create(this, \"MyCfnWarmPool\")\n        .autoScalingGroupName(\"autoScalingGroupName\")\n\n        // the properties below are optional\n        .instanceReusePolicy(InstanceReusePolicyProperty.builder()\n                .reuseOnScaleIn(false)\n                .build())\n        .maxGroupPreparedCapacity(123)\n        .minSize(123)\n        .poolState(\"poolState\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnWarmPool := autoscaling.NewCfnWarmPool(this, jsii.String(\"MyCfnWarmPool\"), &cfnWarmPoolProps{\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\n\t// the properties below are optional\n\tinstanceReusePolicy: &instanceReusePolicyProperty{\n\t\treuseOnScaleIn: jsii.Boolean(false),\n\t},\n\tmaxGroupPreparedCapacity: jsii.Number(123),\n\tminSize: jsii.Number(123),\n\tpoolState: jsii.String(\"poolState\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnWarmPool = new autoscaling.CfnWarmPool(this, 'MyCfnWarmPool', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  instanceReusePolicy: {\n    reuseOnScaleIn: false,\n  },\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: 'poolState',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPool"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnWarmPool",
        "@aws-cdk/aws-autoscaling.CfnWarmPoolProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWarmPool = new autoscaling.CfnWarmPool(this, 'MyCfnWarmPool', {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  instanceReusePolicy: {\n    reuseOnScaleIn: false,\n  },\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: 'poolState',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 10,
        "91": 1,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "4b02240d8023114aeea65b07e23ee720c4ff758cdf3512105b80921b731adca0"
    },
    "136d90da1391e6c4348488116f48c8c9884b2fdbcf8ed8cfc7ce1ac8c006f493": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ninstance_reuse_policy_property = autoscaling.CfnWarmPool.InstanceReusePolicyProperty(\n    reuse_on_scale_in=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nInstanceReusePolicyProperty instanceReusePolicyProperty = new InstanceReusePolicyProperty {\n    ReuseOnScaleIn = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nInstanceReusePolicyProperty instanceReusePolicyProperty = InstanceReusePolicyProperty.builder()\n        .reuseOnScaleIn(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ninstanceReusePolicyProperty := &instanceReusePolicyProperty{\n\treuseOnScaleIn: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst instanceReusePolicyProperty: autoscaling.CfnWarmPool.InstanceReusePolicyProperty = {\n  reuseOnScaleIn: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPool.InstanceReusePolicyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnWarmPool.InstanceReusePolicyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst instanceReusePolicyProperty: autoscaling.CfnWarmPool.InstanceReusePolicyProperty = {\n  reuseOnScaleIn: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "79c3c2e6a7d788595a2c7adc35fd6ae5f30f9c65e60279b3de8474ddd413a2ff"
    },
    "2737c38a7af99bdc949ddfa673e51876e159188a9096f4d263712f60fb2cc3cc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\ncfn_warm_pool_props = autoscaling.CfnWarmPoolProps(\n    auto_scaling_group_name=\"autoScalingGroupName\",\n\n    # the properties below are optional\n    instance_reuse_policy=autoscaling.CfnWarmPool.InstanceReusePolicyProperty(\n        reuse_on_scale_in=False\n    ),\n    max_group_prepared_capacity=123,\n    min_size=123,\n    pool_state=\"poolState\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nCfnWarmPoolProps cfnWarmPoolProps = new CfnWarmPoolProps {\n    AutoScalingGroupName = \"autoScalingGroupName\",\n\n    // the properties below are optional\n    InstanceReusePolicy = new InstanceReusePolicyProperty {\n        ReuseOnScaleIn = false\n    },\n    MaxGroupPreparedCapacity = 123,\n    MinSize = 123,\n    PoolState = \"poolState\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nCfnWarmPoolProps cfnWarmPoolProps = CfnWarmPoolProps.builder()\n        .autoScalingGroupName(\"autoScalingGroupName\")\n\n        // the properties below are optional\n        .instanceReusePolicy(InstanceReusePolicyProperty.builder()\n                .reuseOnScaleIn(false)\n                .build())\n        .maxGroupPreparedCapacity(123)\n        .minSize(123)\n        .poolState(\"poolState\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\ncfnWarmPoolProps := &cfnWarmPoolProps{\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\n\t// the properties below are optional\n\tinstanceReusePolicy: &instanceReusePolicyProperty{\n\t\treuseOnScaleIn: jsii.Boolean(false),\n\t},\n\tmaxGroupPreparedCapacity: jsii.Number(123),\n\tminSize: jsii.Number(123),\n\tpoolState: jsii.String(\"poolState\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst cfnWarmPoolProps: autoscaling.CfnWarmPoolProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  instanceReusePolicy: {\n    reuseOnScaleIn: false,\n  },\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: 'poolState',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CfnWarmPoolProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CfnWarmPoolProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWarmPoolProps: autoscaling.CfnWarmPoolProps = {\n  autoScalingGroupName: 'autoScalingGroupName',\n\n  // the properties below are optional\n  instanceReusePolicy: {\n    reuseOnScaleIn: false,\n  },\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: 'poolState',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 10,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "44bf210901b139960a7a2f8bd52416252a026d035e5c86b760f20b508d6f6308"
    },
    "256074fd033b07d2d4ebaf8c9ad2d66cb9818005b6ae2813fd865001216c8f03": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_sns as sns\nimport aws_cdk.core as cdk\n\n# block_device_volume: autoscaling.BlockDeviceVolume\n# group_metrics: autoscaling.GroupMetrics\n# health_check: autoscaling.HealthCheck\n# scaling_events: autoscaling.ScalingEvents\n# signals: autoscaling.Signals\n# subnet: ec2.Subnet\n# subnet_filter: ec2.SubnetFilter\n# topic: sns.Topic\n# update_policy: autoscaling.UpdatePolicy\n\ncommon_auto_scaling_group_props = autoscaling.CommonAutoScalingGroupProps(\n    allow_all_outbound=False,\n    associate_public_ip_address=False,\n    auto_scaling_group_name=\"autoScalingGroupName\",\n    block_devices=[autoscaling.BlockDevice(\n        device_name=\"deviceName\",\n        volume=block_device_volume,\n\n        # the properties below are optional\n        mapping_enabled=False\n    )],\n    cooldown=cdk.Duration.minutes(30),\n    desired_capacity=123,\n    group_metrics=[group_metrics],\n    health_check=health_check,\n    ignore_unmodified_size_properties=False,\n    instance_monitoring=autoscaling.Monitoring.BASIC,\n    key_name=\"keyName\",\n    max_capacity=123,\n    max_instance_lifetime=cdk.Duration.minutes(30),\n    min_capacity=123,\n    new_instances_protected_from_scale_in=False,\n    notifications=[autoscaling.NotificationConfiguration(\n        topic=topic,\n\n        # the properties below are optional\n        scaling_events=scaling_events\n    )],\n    notifications_topic=topic,\n    replacing_update_min_successful_instances_percent=123,\n    resource_signal_count=123,\n    resource_signal_timeout=cdk.Duration.minutes(30),\n    rolling_update_configuration=autoscaling.RollingUpdateConfiguration(\n        max_batch_size=123,\n        min_instances_in_service=123,\n        min_successful_instances_percent=123,\n        pause_time=cdk.Duration.minutes(30),\n        suspend_processes=[autoscaling.ScalingProcess.LAUNCH],\n        wait_on_resource_signals=False\n    ),\n    signals=signals,\n    spot_price=\"spotPrice\",\n    termination_policies=[autoscaling.TerminationPolicy.ALLOCATION_STRATEGY],\n    update_policy=update_policy,\n    update_type=autoscaling.UpdateType.NONE,\n    vpc_subnets=ec2.SubnetSelection(\n        availability_zones=[\"availabilityZones\"],\n        one_per_az=False,\n        subnet_filters=[subnet_filter],\n        subnet_group_name=\"subnetGroupName\",\n        subnet_name=\"subnetName\",\n        subnets=[subnet],\n        subnet_type=ec2.SubnetType.ISOLATED\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.SNS;\nusing Amazon.CDK;\n\nBlockDeviceVolume blockDeviceVolume;\nGroupMetrics groupMetrics;\nHealthCheck healthCheck;\nScalingEvents scalingEvents;\nSignals signals;\nSubnet subnet;\nSubnetFilter subnetFilter;\nTopic topic;\nUpdatePolicy updatePolicy;\nCommonAutoScalingGroupProps commonAutoScalingGroupProps = new CommonAutoScalingGroupProps {\n    AllowAllOutbound = false,\n    AssociatePublicIpAddress = false,\n    AutoScalingGroupName = \"autoScalingGroupName\",\n    BlockDevices = new [] { new BlockDevice {\n        DeviceName = \"deviceName\",\n        Volume = blockDeviceVolume,\n\n        // the properties below are optional\n        MappingEnabled = false\n    } },\n    Cooldown = Duration.Minutes(30),\n    DesiredCapacity = 123,\n    GroupMetrics = new [] { groupMetrics },\n    HealthCheck = healthCheck,\n    IgnoreUnmodifiedSizeProperties = false,\n    InstanceMonitoring = Monitoring.BASIC,\n    KeyName = \"keyName\",\n    MaxCapacity = 123,\n    MaxInstanceLifetime = Duration.Minutes(30),\n    MinCapacity = 123,\n    NewInstancesProtectedFromScaleIn = false,\n    Notifications = new [] { new NotificationConfiguration {\n        Topic = topic,\n\n        // the properties below are optional\n        ScalingEvents = scalingEvents\n    } },\n    NotificationsTopic = topic,\n    ReplacingUpdateMinSuccessfulInstancesPercent = 123,\n    ResourceSignalCount = 123,\n    ResourceSignalTimeout = Duration.Minutes(30),\n    RollingUpdateConfiguration = new RollingUpdateConfiguration {\n        MaxBatchSize = 123,\n        MinInstancesInService = 123,\n        MinSuccessfulInstancesPercent = 123,\n        PauseTime = Duration.Minutes(30),\n        SuspendProcesses = new [] { ScalingProcess.LAUNCH },\n        WaitOnResourceSignals = false\n    },\n    Signals = signals,\n    SpotPrice = \"spotPrice\",\n    TerminationPolicies = new [] { TerminationPolicy.ALLOCATION_STRATEGY },\n    UpdatePolicy = updatePolicy,\n    UpdateType = UpdateType.NONE,\n    VpcSubnets = new SubnetSelection {\n        AvailabilityZones = new [] { \"availabilityZones\" },\n        OnePerAz = false,\n        SubnetFilters = new [] { subnetFilter },\n        SubnetGroupName = \"subnetGroupName\",\n        SubnetName = \"subnetName\",\n        Subnets = new [] { subnet },\n        SubnetType = SubnetType.ISOLATED\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.sns.*;\nimport software.amazon.awscdk.core.*;\n\nBlockDeviceVolume blockDeviceVolume;\nGroupMetrics groupMetrics;\nHealthCheck healthCheck;\nScalingEvents scalingEvents;\nSignals signals;\nSubnet subnet;\nSubnetFilter subnetFilter;\nTopic topic;\nUpdatePolicy updatePolicy;\n\nCommonAutoScalingGroupProps commonAutoScalingGroupProps = CommonAutoScalingGroupProps.builder()\n        .allowAllOutbound(false)\n        .associatePublicIpAddress(false)\n        .autoScalingGroupName(\"autoScalingGroupName\")\n        .blockDevices(List.of(BlockDevice.builder()\n                .deviceName(\"deviceName\")\n                .volume(blockDeviceVolume)\n\n                // the properties below are optional\n                .mappingEnabled(false)\n                .build()))\n        .cooldown(Duration.minutes(30))\n        .desiredCapacity(123)\n        .groupMetrics(List.of(groupMetrics))\n        .healthCheck(healthCheck)\n        .ignoreUnmodifiedSizeProperties(false)\n        .instanceMonitoring(Monitoring.BASIC)\n        .keyName(\"keyName\")\n        .maxCapacity(123)\n        .maxInstanceLifetime(Duration.minutes(30))\n        .minCapacity(123)\n        .newInstancesProtectedFromScaleIn(false)\n        .notifications(List.of(NotificationConfiguration.builder()\n                .topic(topic)\n\n                // the properties below are optional\n                .scalingEvents(scalingEvents)\n                .build()))\n        .notificationsTopic(topic)\n        .replacingUpdateMinSuccessfulInstancesPercent(123)\n        .resourceSignalCount(123)\n        .resourceSignalTimeout(Duration.minutes(30))\n        .rollingUpdateConfiguration(RollingUpdateConfiguration.builder()\n                .maxBatchSize(123)\n                .minInstancesInService(123)\n                .minSuccessfulInstancesPercent(123)\n                .pauseTime(Duration.minutes(30))\n                .suspendProcesses(List.of(ScalingProcess.LAUNCH))\n                .waitOnResourceSignals(false)\n                .build())\n        .signals(signals)\n        .spotPrice(\"spotPrice\")\n        .terminationPolicies(List.of(TerminationPolicy.ALLOCATION_STRATEGY))\n        .updatePolicy(updatePolicy)\n        .updateType(UpdateType.NONE)\n        .vpcSubnets(SubnetSelection.builder()\n                .availabilityZones(List.of(\"availabilityZones\"))\n                .onePerAz(false)\n                .subnetFilters(List.of(subnetFilter))\n                .subnetGroupName(\"subnetGroupName\")\n                .subnetName(\"subnetName\")\n                .subnets(List.of(subnet))\n                .subnetType(SubnetType.ISOLATED)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport sns \"github.com/aws-samples/dummy/awscdkawssns\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar blockDeviceVolume blockDeviceVolume\nvar groupMetrics groupMetrics\nvar healthCheck healthCheck\nvar scalingEvents scalingEvents\nvar signals signals\nvar subnet subnet\nvar subnetFilter subnetFilter\nvar topic topic\nvar updatePolicy updatePolicy\n\ncommonAutoScalingGroupProps := &commonAutoScalingGroupProps{\n\tallowAllOutbound: jsii.Boolean(false),\n\tassociatePublicIpAddress: jsii.Boolean(false),\n\tautoScalingGroupName: jsii.String(\"autoScalingGroupName\"),\n\tblockDevices: []blockDevice{\n\t\t&blockDevice{\n\t\t\tdeviceName: jsii.String(\"deviceName\"),\n\t\t\tvolume: blockDeviceVolume,\n\n\t\t\t// the properties below are optional\n\t\t\tmappingEnabled: jsii.Boolean(false),\n\t\t},\n\t},\n\tcooldown: cdk.duration.minutes(jsii.Number(30)),\n\tdesiredCapacity: jsii.Number(123),\n\tgroupMetrics: []*groupMetrics{\n\t\tgroupMetrics,\n\t},\n\thealthCheck: healthCheck,\n\tignoreUnmodifiedSizeProperties: jsii.Boolean(false),\n\tinstanceMonitoring: autoscaling.monitoring_BASIC,\n\tkeyName: jsii.String(\"keyName\"),\n\tmaxCapacity: jsii.Number(123),\n\tmaxInstanceLifetime: cdk.*duration.minutes(jsii.Number(30)),\n\tminCapacity: jsii.Number(123),\n\tnewInstancesProtectedFromScaleIn: jsii.Boolean(false),\n\tnotifications: []notificationConfiguration{\n\t\t&notificationConfiguration{\n\t\t\ttopic: topic,\n\n\t\t\t// the properties below are optional\n\t\t\tscalingEvents: scalingEvents,\n\t\t},\n\t},\n\tnotificationsTopic: topic,\n\treplacingUpdateMinSuccessfulInstancesPercent: jsii.Number(123),\n\tresourceSignalCount: jsii.Number(123),\n\tresourceSignalTimeout: cdk.*duration.minutes(jsii.Number(30)),\n\trollingUpdateConfiguration: &rollingUpdateConfiguration{\n\t\tmaxBatchSize: jsii.Number(123),\n\t\tminInstancesInService: jsii.Number(123),\n\t\tminSuccessfulInstancesPercent: jsii.Number(123),\n\t\tpauseTime: cdk.*duration.minutes(jsii.Number(30)),\n\t\tsuspendProcesses: []scalingProcess{\n\t\t\tautoscaling.*scalingProcess_LAUNCH,\n\t\t},\n\t\twaitOnResourceSignals: jsii.Boolean(false),\n\t},\n\tsignals: signals,\n\tspotPrice: jsii.String(\"spotPrice\"),\n\tterminationPolicies: []terminationPolicy{\n\t\tautoscaling.*terminationPolicy_ALLOCATION_STRATEGY,\n\t},\n\tupdatePolicy: updatePolicy,\n\tupdateType: autoscaling.updateType_NONE,\n\tvpcSubnets: &subnetSelection{\n\t\tavailabilityZones: []*string{\n\t\t\tjsii.String(\"availabilityZones\"),\n\t\t},\n\t\tonePerAz: jsii.Boolean(false),\n\t\tsubnetFilters: []*subnetFilter{\n\t\t\tsubnetFilter,\n\t\t},\n\t\tsubnetGroupName: jsii.String(\"subnetGroupName\"),\n\t\tsubnetName: jsii.String(\"subnetName\"),\n\t\tsubnets: []iSubnet{\n\t\t\tsubnet,\n\t\t},\n\t\tsubnetType: ec2.subnetType_ISOLATED,\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const blockDeviceVolume: autoscaling.BlockDeviceVolume;\ndeclare const groupMetrics: autoscaling.GroupMetrics;\ndeclare const healthCheck: autoscaling.HealthCheck;\ndeclare const scalingEvents: autoscaling.ScalingEvents;\ndeclare const signals: autoscaling.Signals;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const topic: sns.Topic;\ndeclare const updatePolicy: autoscaling.UpdatePolicy;\nconst commonAutoScalingGroupProps: autoscaling.CommonAutoScalingGroupProps = {\n  allowAllOutbound: false,\n  associatePublicIpAddress: false,\n  autoScalingGroupName: 'autoScalingGroupName',\n  blockDevices: [{\n    deviceName: 'deviceName',\n    volume: blockDeviceVolume,\n\n    // the properties below are optional\n    mappingEnabled: false,\n  }],\n  cooldown: cdk.Duration.minutes(30),\n  desiredCapacity: 123,\n  groupMetrics: [groupMetrics],\n  healthCheck: healthCheck,\n  ignoreUnmodifiedSizeProperties: false,\n  instanceMonitoring: autoscaling.Monitoring.BASIC,\n  keyName: 'keyName',\n  maxCapacity: 123,\n  maxInstanceLifetime: cdk.Duration.minutes(30),\n  minCapacity: 123,\n  newInstancesProtectedFromScaleIn: false,\n  notifications: [{\n    topic: topic,\n\n    // the properties below are optional\n    scalingEvents: scalingEvents,\n  }],\n  notificationsTopic: topic,\n  replacingUpdateMinSuccessfulInstancesPercent: 123,\n  resourceSignalCount: 123,\n  resourceSignalTimeout: cdk.Duration.minutes(30),\n  rollingUpdateConfiguration: {\n    maxBatchSize: 123,\n    minInstancesInService: 123,\n    minSuccessfulInstancesPercent: 123,\n    pauseTime: cdk.Duration.minutes(30),\n    suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n    waitOnResourceSignals: false,\n  },\n  signals: signals,\n  spotPrice: 'spotPrice',\n  terminationPolicies: [autoscaling.TerminationPolicy.ALLOCATION_STRATEGY],\n  updatePolicy: updatePolicy,\n  updateType: autoscaling.UpdateType.NONE,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.BlockDeviceVolume",
        "@aws-cdk/aws-autoscaling.CommonAutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.HealthCheck",
        "@aws-cdk/aws-autoscaling.Monitoring",
        "@aws-cdk/aws-autoscaling.Monitoring#BASIC",
        "@aws-cdk/aws-autoscaling.RollingUpdateConfiguration",
        "@aws-cdk/aws-autoscaling.ScalingEvents",
        "@aws-cdk/aws-autoscaling.ScalingProcess",
        "@aws-cdk/aws-autoscaling.ScalingProcess#LAUNCH",
        "@aws-cdk/aws-autoscaling.Signals",
        "@aws-cdk/aws-autoscaling.TerminationPolicy",
        "@aws-cdk/aws-autoscaling.TerminationPolicy#ALLOCATION_STRATEGY",
        "@aws-cdk/aws-autoscaling.UpdatePolicy",
        "@aws-cdk/aws-autoscaling.UpdateType",
        "@aws-cdk/aws-autoscaling.UpdateType#NONE",
        "@aws-cdk/aws-ec2.SubnetSelection",
        "@aws-cdk/aws-ec2.SubnetType",
        "@aws-cdk/aws-ec2.SubnetType#ISOLATED",
        "@aws-cdk/aws-sns.ITopic",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const blockDeviceVolume: autoscaling.BlockDeviceVolume;\ndeclare const groupMetrics: autoscaling.GroupMetrics;\ndeclare const healthCheck: autoscaling.HealthCheck;\ndeclare const scalingEvents: autoscaling.ScalingEvents;\ndeclare const signals: autoscaling.Signals;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const topic: sns.Topic;\ndeclare const updatePolicy: autoscaling.UpdatePolicy;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst commonAutoScalingGroupProps: autoscaling.CommonAutoScalingGroupProps = {\n  allowAllOutbound: false,\n  associatePublicIpAddress: false,\n  autoScalingGroupName: 'autoScalingGroupName',\n  blockDevices: [{\n    deviceName: 'deviceName',\n    volume: blockDeviceVolume,\n\n    // the properties below are optional\n    mappingEnabled: false,\n  }],\n  cooldown: cdk.Duration.minutes(30),\n  desiredCapacity: 123,\n  groupMetrics: [groupMetrics],\n  healthCheck: healthCheck,\n  ignoreUnmodifiedSizeProperties: false,\n  instanceMonitoring: autoscaling.Monitoring.BASIC,\n  keyName: 'keyName',\n  maxCapacity: 123,\n  maxInstanceLifetime: cdk.Duration.minutes(30),\n  minCapacity: 123,\n  newInstancesProtectedFromScaleIn: false,\n  notifications: [{\n    topic: topic,\n\n    // the properties below are optional\n    scalingEvents: scalingEvents,\n  }],\n  notificationsTopic: topic,\n  replacingUpdateMinSuccessfulInstancesPercent: 123,\n  resourceSignalCount: 123,\n  resourceSignalTimeout: cdk.Duration.minutes(30),\n  rollingUpdateConfiguration: {\n    maxBatchSize: 123,\n    minInstancesInService: 123,\n    minSuccessfulInstancesPercent: 123,\n    pauseTime: cdk.Duration.minutes(30),\n    suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n    waitOnResourceSignals: false,\n  },\n  signals: signals,\n  spotPrice: 'spotPrice',\n  terminationPolicies: [autoscaling.TerminationPolicy.ALLOCATION_STRATEGY],\n  updatePolicy: updatePolicy,\n  updateType: autoscaling.UpdateType.NONE,\n  vpcSubnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 12,
        "10": 11,
        "75": 116,
        "91": 7,
        "130": 9,
        "153": 10,
        "169": 10,
        "192": 8,
        "193": 5,
        "194": 18,
        "196": 4,
        "225": 10,
        "242": 10,
        "243": 10,
        "254": 4,
        "255": 4,
        "256": 4,
        "281": 45,
        "290": 1
      },
      "fqnsFingerprint": "05bfeb6611ff4ddfe12a8d3a12f0aeef69e933d46cf93d0579a6ba92cc29629c"
    },
    "797f7a90872bedc03b66dc9fe67feb3852dfa862629ea4f517371be624d731bd": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.scale_on_cpu_utilization(\"KeepSpareCPU\",\n    target_utilization_percent=50\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.ScaleOnCpuUtilization(\"KeepSpareCPU\", new CpuUtilizationScalingProps {\n    TargetUtilizationPercent = 50\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.scaleOnCpuUtilization(\"KeepSpareCPU\", CpuUtilizationScalingProps.builder()\n        .targetUtilizationPercent(50)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.scaleOnCpuUtilization(jsii.String(\"KeepSpareCPU\"), &cpuUtilizationScalingProps{\n\ttargetUtilizationPercent: jsii.Number(50),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnCpuUtilization('KeepSpareCPU', {\n  targetUtilizationPercent: 50\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.CpuUtilizationScalingProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.scaleOnCpuUtilization('KeepSpareCPU', {\n  targetUtilizationPercent: 50\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "32d9b0a4fd1e2099a4f92fbd343d041d4c78ca4be3e1074e5fd08c122d3222a0"
    },
    "634b2b292ff895f8f592b4cc45be4d9b45f0ee5bb837c5d69d8355e5efb4bffd": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_autoscaling as autoscaling\n\n# fn: lambda.Function\n\nalias = fn.add_alias(\"prod\")\n\n# Create AutoScaling target\nas = alias.add_auto_scaling(max_capacity=50)\n\n# Configure Target Tracking\nas.scale_on_utilization(\n    utilization_target=0.5\n)\n\n# Configure Scheduled Scaling\nas.scale_on_schedule(\"ScaleUpInTheMorning\",\n    schedule=autoscaling.Schedule.cron(hour=\"8\", minute=\"0\"),\n    min_capacity=20\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.AutoScaling;\n\nFunction fn;\n\nAlias alias = fn.AddAlias(\"prod\");\n\n// Create AutoScaling target\nIScalableFunctionAttribute as = alias.AddAutoScaling(new AutoScalingOptions { MaxCapacity = 50 });\n\n// Configure Target Tracking\nas.ScaleOnUtilization(new UtilizationScalingOptions {\n    UtilizationTarget = 0.5\n});\n\n// Configure Scheduled Scaling\nas.ScaleOnSchedule(\"ScaleUpInTheMorning\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"8\", Minute = \"0\" }),\n    MinCapacity = 20\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.autoscaling.*;\n\nFunction fn;\n\nAlias alias = fn.addAlias(\"prod\");\n\n// Create AutoScaling target\nIScalableFunctionAttribute as = alias.addAutoScaling(AutoScalingOptions.builder().maxCapacity(50).build());\n\n// Configure Target Tracking\nas.scaleOnUtilization(UtilizationScalingOptions.builder()\n        .utilizationTarget(0.5)\n        .build());\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule(\"ScaleUpInTheMorning\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"8\").minute(\"0\").build()))\n        .minCapacity(20)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "import autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nvar fn function\n\nalias := fn.addAlias(jsii.String(\"prod\"))\n\n// Create AutoScaling target\nas := alias.addAutoScaling(&autoScalingOptions{\n\tmaxCapacity: jsii.Number(50),\n})\n\n// Configure Target Tracking\nas.scaleOnUtilization(&utilizationScalingOptions{\n\tutilizationTarget: jsii.Number(0.5),\n})\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule(jsii.String(\"ScaleUpInTheMorning\"), &scalingSchedule{\n\tschedule: autoscaling.schedule.cron(&cronOptions{\n\t\thour: jsii.String(\"8\"),\n\t\tminute: jsii.String(\"0\"),\n\t}),\n\tminCapacity: jsii.Number(20),\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\nconst alias = fn.addAlias('prod');\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.CronOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-applicationautoscaling.ScalingSchedule",
        "@aws-cdk/aws-applicationautoscaling.Schedule",
        "@aws-cdk/aws-autoscaling.CronOptions",
        "@aws-cdk/aws-autoscaling.Schedule",
        "@aws-cdk/aws-autoscaling.Schedule#cron",
        "@aws-cdk/aws-lambda.Alias",
        "@aws-cdk/aws-lambda.Alias#addAutoScaling",
        "@aws-cdk/aws-lambda.AutoScalingOptions",
        "@aws-cdk/aws-lambda.Function#addAlias",
        "@aws-cdk/aws-lambda.IScalableFunctionAttribute",
        "@aws-cdk/aws-lambda.IScalableFunctionAttribute#scaleOnSchedule",
        "@aws-cdk/aws-lambda.IScalableFunctionAttribute#scaleOnUtilization",
        "@aws-cdk/aws-lambda.UtilizationScalingOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Aspects, CfnOutput, DockerImage, Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport { LAMBDA_RECOGNIZE_VERSION_PROPS, LAMBDA_RECOGNIZE_LAYER_VERSION } from '@aws-cdk/cx-api';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst alias = fn.addAlias('prod');\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 3,
        "10": 5,
        "75": 23,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "194": 6,
        "196": 5,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "861c13e8fee83f583f8832e233aabdb670109af6bec46c348bc14af6f61f1a65"
    },
    "739615eadb432561bc8d5418a94407d17227ac971f9dd5c5eb91040840dcc8a7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nebs_device_options = autoscaling.EbsDeviceOptions(\n    delete_on_termination=False,\n    encrypted=False,\n    iops=123,\n    volume_type=autoscaling.EbsDeviceVolumeType.STANDARD\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nEbsDeviceOptions ebsDeviceOptions = new EbsDeviceOptions {\n    DeleteOnTermination = false,\n    Encrypted = false,\n    Iops = 123,\n    VolumeType = EbsDeviceVolumeType.STANDARD\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nEbsDeviceOptions ebsDeviceOptions = EbsDeviceOptions.builder()\n        .deleteOnTermination(false)\n        .encrypted(false)\n        .iops(123)\n        .volumeType(EbsDeviceVolumeType.STANDARD)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nebsDeviceOptions := &ebsDeviceOptions{\n\tdeleteOnTermination: jsii.Boolean(false),\n\tencrypted: jsii.Boolean(false),\n\tiops: jsii.Number(123),\n\tvolumeType: autoscaling.ebsDeviceVolumeType_STANDARD,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst ebsDeviceOptions: autoscaling.EbsDeviceOptions = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.EbsDeviceOptions",
        "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType",
        "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType#STANDARD"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ebsDeviceOptions: autoscaling.EbsDeviceOptions = {\n  deleteOnTermination: false,\n  encrypted: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 11,
        "91": 2,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "919f4f958887fb8bada12ad43dea0060a52e82da1c90acd86e401928c83f039f"
    },
    "6c703d4d6924858ddae950e6e9601f4624f7cfa1ee6c73589949cdbf9fef9742": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nebs_device_options_base = autoscaling.EbsDeviceOptionsBase(\n    delete_on_termination=False,\n    iops=123,\n    volume_type=autoscaling.EbsDeviceVolumeType.STANDARD\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nEbsDeviceOptionsBase ebsDeviceOptionsBase = new EbsDeviceOptionsBase {\n    DeleteOnTermination = false,\n    Iops = 123,\n    VolumeType = EbsDeviceVolumeType.STANDARD\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nEbsDeviceOptionsBase ebsDeviceOptionsBase = EbsDeviceOptionsBase.builder()\n        .deleteOnTermination(false)\n        .iops(123)\n        .volumeType(EbsDeviceVolumeType.STANDARD)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nebsDeviceOptionsBase := &ebsDeviceOptionsBase{\n\tdeleteOnTermination: jsii.Boolean(false),\n\tiops: jsii.Number(123),\n\tvolumeType: autoscaling.ebsDeviceVolumeType_STANDARD,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst ebsDeviceOptionsBase: autoscaling.EbsDeviceOptionsBase = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceOptionsBase"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.EbsDeviceOptionsBase",
        "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType",
        "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType#STANDARD"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ebsDeviceOptionsBase: autoscaling.EbsDeviceOptionsBase = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 10,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "12c26f90c7a3ff6134674ebd233dd55a369728ef1d409e66b462eaba5aedc4c2"
    },
    "886f025b61b01a588619eb2f0d53e7fda816ed32edb214e3e85ffff8138fc720": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nebs_device_props = autoscaling.EbsDeviceProps(\n    delete_on_termination=False,\n    iops=123,\n    snapshot_id=\"snapshotId\",\n    volume_size=123,\n    volume_type=autoscaling.EbsDeviceVolumeType.STANDARD\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nEbsDeviceProps ebsDeviceProps = new EbsDeviceProps {\n    DeleteOnTermination = false,\n    Iops = 123,\n    SnapshotId = \"snapshotId\",\n    VolumeSize = 123,\n    VolumeType = EbsDeviceVolumeType.STANDARD\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nEbsDeviceProps ebsDeviceProps = EbsDeviceProps.builder()\n        .deleteOnTermination(false)\n        .iops(123)\n        .snapshotId(\"snapshotId\")\n        .volumeSize(123)\n        .volumeType(EbsDeviceVolumeType.STANDARD)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nebsDeviceProps := &ebsDeviceProps{\n\tdeleteOnTermination: jsii.Boolean(false),\n\tiops: jsii.Number(123),\n\tsnapshotId: jsii.String(\"snapshotId\"),\n\tvolumeSize: jsii.Number(123),\n\tvolumeType: autoscaling.ebsDeviceVolumeType_STANDARD,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst ebsDeviceProps: autoscaling.EbsDeviceProps = {\n  deleteOnTermination: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  volumeSize: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.EbsDeviceProps",
        "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType",
        "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType#STANDARD"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ebsDeviceProps: autoscaling.EbsDeviceProps = {\n  deleteOnTermination: false,\n  iops: 123,\n  snapshotId: 'snapshotId',\n  volumeSize: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 12,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "227175da3b79173a64abfe5d721231739a5685bbfddff09dd56ca57b6246bdbf"
    },
    "c4867772a7e8f0adddc36cd4fa57219dc8ddd3c9c4ca73c53866e06890cafd48": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nebs_device_snapshot_options = autoscaling.EbsDeviceSnapshotOptions(\n    delete_on_termination=False,\n    iops=123,\n    volume_size=123,\n    volume_type=autoscaling.EbsDeviceVolumeType.STANDARD\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nEbsDeviceSnapshotOptions ebsDeviceSnapshotOptions = new EbsDeviceSnapshotOptions {\n    DeleteOnTermination = false,\n    Iops = 123,\n    VolumeSize = 123,\n    VolumeType = EbsDeviceVolumeType.STANDARD\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nEbsDeviceSnapshotOptions ebsDeviceSnapshotOptions = EbsDeviceSnapshotOptions.builder()\n        .deleteOnTermination(false)\n        .iops(123)\n        .volumeSize(123)\n        .volumeType(EbsDeviceVolumeType.STANDARD)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nebsDeviceSnapshotOptions := &ebsDeviceSnapshotOptions{\n\tdeleteOnTermination: jsii.Boolean(false),\n\tiops: jsii.Number(123),\n\tvolumeSize: jsii.Number(123),\n\tvolumeType: autoscaling.ebsDeviceVolumeType_STANDARD,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst ebsDeviceSnapshotOptions: autoscaling.EbsDeviceSnapshotOptions = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeSize: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.EbsDeviceSnapshotOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.EbsDeviceSnapshotOptions",
        "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType",
        "@aws-cdk/aws-autoscaling.EbsDeviceVolumeType#STANDARD"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ebsDeviceSnapshotOptions: autoscaling.EbsDeviceSnapshotOptions = {\n  deleteOnTermination: false,\n  iops: 123,\n  volumeSize: 123,\n  volumeType: autoscaling.EbsDeviceVolumeType.STANDARD,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 11,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "806ae40d2d8d7d59112b6c331d435f5336742794cc49252b8086b6ea149e7944"
    },
    "595b77317989d973d21663a6d0c4c6f266554997e19856b2ef6caa356f465dc5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.core as cdk\n\nec2_health_check_options = autoscaling.Ec2HealthCheckOptions(\n    grace=cdk.Duration.minutes(30)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK;\nEc2HealthCheckOptions ec2HealthCheckOptions = new Ec2HealthCheckOptions {\n    Grace = Duration.Minutes(30)\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nEc2HealthCheckOptions ec2HealthCheckOptions = Ec2HealthCheckOptions.builder()\n        .grace(Duration.minutes(30))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nec2HealthCheckOptions := &ec2HealthCheckOptions{\n\tgrace: cdk.duration.minutes(jsii.Number(30)),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst ec2HealthCheckOptions: autoscaling.Ec2HealthCheckOptions = {\n  grace: cdk.Duration.minutes(30),\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.Ec2HealthCheckOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.Ec2HealthCheckOptions",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst ec2HealthCheckOptions: autoscaling.Ec2HealthCheckOptions = {\n  grace: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "c50d455b263d7299fa8f9bed179ba8576198c51aace7b5585f2db3a1e535ba85"
    },
    "44132da811d98d82e7b808666603a8b375bf1fe02645e38dbb72844397071755": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.core as cdk\n\nelb_health_check_options = autoscaling.ElbHealthCheckOptions(\n    grace=cdk.Duration.minutes(30)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK;\nElbHealthCheckOptions elbHealthCheckOptions = new ElbHealthCheckOptions {\n    Grace = Duration.Minutes(30)\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nElbHealthCheckOptions elbHealthCheckOptions = ElbHealthCheckOptions.builder()\n        .grace(Duration.minutes(30))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nelbHealthCheckOptions := &elbHealthCheckOptions{\n\tgrace: cdk.duration.minutes(jsii.Number(30)),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst elbHealthCheckOptions: autoscaling.ElbHealthCheckOptions = {\n  grace: cdk.Duration.minutes(30),\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.ElbHealthCheckOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.ElbHealthCheckOptions",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst elbHealthCheckOptions: autoscaling.ElbHealthCheckOptions = {\n  grace: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "c571aea78edffe781a724d9a429f85d2b48375b3a231791100262ae008b9861e"
    },
    "b9356ccbcd0e33061049f99484ec04b956be63b73eb0cf4a722dbea68ef82e17": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\n# Enable monitoring of all group metrics\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    group_metrics=[autoscaling.GroupMetrics.all()]\n)\n\n# Enable monitoring for a subset of group metrics\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    group_metrics=[autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\n// Enable monitoring of all group metrics\n// Enable monitoring of all group metrics\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    GroupMetrics = new [] { GroupMetrics.All() }\n});\n\n// Enable monitoring for a subset of group metrics\n// Enable monitoring for a subset of group metrics\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    GroupMetrics = new [] { new GroupMetrics(GroupMetric.MIN_SIZE, GroupMetric.MAX_SIZE) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\n// Enable monitoring of all group metrics\n// Enable monitoring of all group metrics\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .groupMetrics(List.of(GroupMetrics.all()))\n        .build();\n\n// Enable monitoring for a subset of group metrics\n// Enable monitoring for a subset of group metrics\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .groupMetrics(List.of(new GroupMetrics(GroupMetric.MIN_SIZE, GroupMetric.MAX_SIZE)))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\n// Enable monitoring of all group metrics\n// Enable monitoring of all group metrics\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tgroupMetrics: []groupMetrics{\n\t\tautoscaling.*groupMetrics.all(),\n\t},\n})\n\n// Enable monitoring for a subset of group metrics\n// Enable monitoring for a subset of group metrics\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tgroupMetrics: []*groupMetrics{\n\t\tautoscaling.NewGroupMetrics(autoscaling.groupMetric_MIN_SIZE(), autoscaling.*groupMetric_MAX_SIZE()),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.GroupMetric"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.GroupMetric",
        "@aws-cdk/aws-autoscaling.GroupMetric#MAX_SIZE",
        "@aws-cdk/aws-autoscaling.GroupMetric#MIN_SIZE",
        "@aws-cdk/aws-autoscaling.GroupMetrics",
        "@aws-cdk/aws-autoscaling.GroupMetrics#all",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 32,
        "104": 2,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 2,
        "193": 2,
        "194": 9,
        "196": 1,
        "197": 3,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "281": 2,
        "282": 6,
        "290": 1
      },
      "fqnsFingerprint": "8737b0bddd30369df71f8e483ed05608d8ff2ee08be1b72999f5c462491dd1c9"
    },
    "b31eca0ecdc9be247e856c9f68136c123b00fb44ff611a3034d01cdac53f5951": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\n# Enable monitoring of all group metrics\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    group_metrics=[autoscaling.GroupMetrics.all()]\n)\n\n# Enable monitoring for a subset of group metrics\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    group_metrics=[autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\n// Enable monitoring of all group metrics\n// Enable monitoring of all group metrics\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    GroupMetrics = new [] { GroupMetrics.All() }\n});\n\n// Enable monitoring for a subset of group metrics\n// Enable monitoring for a subset of group metrics\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    GroupMetrics = new [] { new GroupMetrics(GroupMetric.MIN_SIZE, GroupMetric.MAX_SIZE) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\n// Enable monitoring of all group metrics\n// Enable monitoring of all group metrics\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .groupMetrics(List.of(GroupMetrics.all()))\n        .build();\n\n// Enable monitoring for a subset of group metrics\n// Enable monitoring for a subset of group metrics\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .groupMetrics(List.of(new GroupMetrics(GroupMetric.MIN_SIZE, GroupMetric.MAX_SIZE)))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\n// Enable monitoring of all group metrics\n// Enable monitoring of all group metrics\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tgroupMetrics: []groupMetrics{\n\t\tautoscaling.*groupMetrics.all(),\n\t},\n})\n\n// Enable monitoring for a subset of group metrics\n// Enable monitoring for a subset of group metrics\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tgroupMetrics: []*groupMetrics{\n\t\tautoscaling.NewGroupMetrics(autoscaling.groupMetric_MIN_SIZE(), autoscaling.*groupMetric_MAX_SIZE()),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.GroupMetrics"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.GroupMetric",
        "@aws-cdk/aws-autoscaling.GroupMetric#MAX_SIZE",
        "@aws-cdk/aws-autoscaling.GroupMetric#MIN_SIZE",
        "@aws-cdk/aws-autoscaling.GroupMetrics",
        "@aws-cdk/aws-autoscaling.GroupMetrics#all",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Enable monitoring of all group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [autoscaling.GroupMetrics.all()],\n});\n\n// Enable monitoring for a subset of group metrics\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  groupMetrics: [new autoscaling.GroupMetrics(autoscaling.GroupMetric.MIN_SIZE, autoscaling.GroupMetric.MAX_SIZE)],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 32,
        "104": 2,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 2,
        "193": 2,
        "194": 9,
        "196": 1,
        "197": 3,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "281": 2,
        "282": 6,
        "290": 1
      },
      "fqnsFingerprint": "8737b0bddd30369df71f8e483ed05608d8ff2ee08be1b72999f5c462491dd1c9"
    },
    "c80200839151f087843f79dbb961ce8015ed4ca93a952c5e183ca9c57f512578": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.core as cdk\n\nhealth_check = autoscaling.HealthCheck.ec2(\n    grace=cdk.Duration.minutes(30)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK;\nHealthCheck healthCheck = HealthCheck.Ec2(new Ec2HealthCheckOptions {\n    Grace = Duration.Minutes(30)\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nHealthCheck healthCheck = HealthCheck.ec2(Ec2HealthCheckOptions.builder()\n        .grace(Duration.minutes(30))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nhealthCheck := autoscaling.healthCheck.ec2(&ec2HealthCheckOptions{\n\tgrace: cdk.duration.minutes(jsii.Number(30)),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst healthCheck = autoscaling.HealthCheck.ec2(/* all optional props */ {\n  grace: cdk.Duration.minutes(30),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.HealthCheck"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.Ec2HealthCheckOptions",
        "@aws-cdk/aws-autoscaling.HealthCheck",
        "@aws-cdk/aws-autoscaling.HealthCheck#ec2",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst healthCheck = autoscaling.HealthCheck.ec2(/* all optional props */ {\n  grace: cdk.Duration.minutes(30),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 10,
        "193": 1,
        "194": 4,
        "196": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "dbcff07e795e6e6dc6ecff129bc13d613f0509b1b159eaa136ad17d0fd168ba7"
    },
    "bf53587d0df8e8e4e83aa501eaf19d94321da5b3278a21aab358007acee379b7": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# launch_template1: ec2.LaunchTemplate\n# launch_template2: ec2.LaunchTemplate\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    mixed_instances_policy=autoscaling.MixedInstancesPolicy(\n        instances_distribution=autoscaling.InstancesDistribution(\n            on_demand_percentage_above_base_capacity=50\n        ),\n        launch_template=launch_template1,\n        launch_template_overrides=[autoscaling.LaunchTemplateOverrides(instance_type=ec2.InstanceType(\"t3.micro\")), autoscaling.LaunchTemplateOverrides(instance_type=ec2.InstanceType(\"t3a.micro\")), autoscaling.LaunchTemplateOverrides(instance_type=ec2.InstanceType(\"t4g.micro\"), launch_template=launch_template2)]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nLaunchTemplate launchTemplate1;\nLaunchTemplate launchTemplate2;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    MixedInstancesPolicy = new MixedInstancesPolicy {\n        InstancesDistribution = new InstancesDistribution {\n            OnDemandPercentageAboveBaseCapacity = 50\n        },\n        LaunchTemplate = launchTemplate1,\n        LaunchTemplateOverrides = new [] { new LaunchTemplateOverrides { InstanceType = new InstanceType(\"t3.micro\") }, new LaunchTemplateOverrides { InstanceType = new InstanceType(\"t3a.micro\") }, new LaunchTemplateOverrides { InstanceType = new InstanceType(\"t4g.micro\"), LaunchTemplate = launchTemplate2 } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nLaunchTemplate launchTemplate1;\nLaunchTemplate launchTemplate2;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .mixedInstancesPolicy(MixedInstancesPolicy.builder()\n                .instancesDistribution(InstancesDistribution.builder()\n                        .onDemandPercentageAboveBaseCapacity(50)\n                        .build())\n                .launchTemplate(launchTemplate1)\n                .launchTemplateOverrides(List.of(LaunchTemplateOverrides.builder().instanceType(new InstanceType(\"t3.micro\")).build(), LaunchTemplateOverrides.builder().instanceType(new InstanceType(\"t3a.micro\")).build(), LaunchTemplateOverrides.builder().instanceType(new InstanceType(\"t4g.micro\")).launchTemplate(launchTemplate2).build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar launchTemplate1 launchTemplate\nvar launchTemplate2 launchTemplate\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tmixedInstancesPolicy: &mixedInstancesPolicy{\n\t\tinstancesDistribution: &instancesDistribution{\n\t\t\tonDemandPercentageAboveBaseCapacity: jsii.Number(50),\n\t\t},\n\t\tlaunchTemplate: launchTemplate1,\n\t\tlaunchTemplateOverrides: []launchTemplateOverrides{\n\t\t\t&launchTemplateOverrides{\n\t\t\t\tinstanceType: ec2.NewInstanceType(jsii.String(\"t3.micro\")),\n\t\t\t},\n\t\t\t&launchTemplateOverrides{\n\t\t\t\tinstanceType: ec2.NewInstanceType(jsii.String(\"t3a.micro\")),\n\t\t\t},\n\t\t\t&launchTemplateOverrides{\n\t\t\t\tinstanceType: ec2.NewInstanceType(jsii.String(\"t4g.micro\")),\n\t\t\t\tlaunchTemplate: launchTemplate2,\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const launchTemplate1: ec2.LaunchTemplate;\ndeclare const launchTemplate2: ec2.LaunchTemplate;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  mixedInstancesPolicy: {\n    instancesDistribution: {\n      onDemandPercentageAboveBaseCapacity: 50, // Mix Spot and On-Demand instances\n    },\n    launchTemplate: launchTemplate1,\n    launchTemplateOverrides: [ // Mix multiple instance types\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: launchTemplate2 },\n    ],\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.InstancesDistribution"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.InstancesDistribution",
        "@aws-cdk/aws-autoscaling.MixedInstancesPolicy",
        "@aws-cdk/aws-ec2.ILaunchTemplate",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const launchTemplate1: ec2.LaunchTemplate;\ndeclare const launchTemplate2: ec2.LaunchTemplate;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  mixedInstancesPolicy: {\n    instancesDistribution: {\n      onDemandPercentageAboveBaseCapacity: 50, // Mix Spot and On-Demand instances\n    },\n    launchTemplate: launchTemplate1,\n    launchTemplateOverrides: [ // Mix multiple instance types\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: launchTemplate2 },\n    ],\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 29,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 6,
        "194": 4,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 9,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "f8005d9c92407e748effb8a41421342c73d937ef5ad87afef2443d95bb15f03a"
    },
    "d0d35464cf30d92d936299147918b6eb372bdae98308acd8e539562a983b02d1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_ec2 as ec2\n\n# instance_type: ec2.InstanceType\n# launch_template: ec2.LaunchTemplate\n\nlaunch_template_overrides = autoscaling.LaunchTemplateOverrides(\n    instance_type=instance_type,\n\n    # the properties below are optional\n    launch_template=launch_template,\n    weighted_capacity=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.EC2;\n\nInstanceType instanceType;\nLaunchTemplate launchTemplate;\n\nLaunchTemplateOverrides launchTemplateOverrides = new LaunchTemplateOverrides {\n    InstanceType = instanceType,\n\n    // the properties below are optional\n    LaunchTemplate = launchTemplate,\n    WeightedCapacity = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.ec2.*;\n\nInstanceType instanceType;\nLaunchTemplate launchTemplate;\n\nLaunchTemplateOverrides launchTemplateOverrides = LaunchTemplateOverrides.builder()\n        .instanceType(instanceType)\n\n        // the properties below are optional\n        .launchTemplate(launchTemplate)\n        .weightedCapacity(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\n\nvar instanceType instanceType\nvar launchTemplate launchTemplate\n\nlaunchTemplateOverrides := &launchTemplateOverrides{\n\tinstanceType: instanceType,\n\n\t// the properties below are optional\n\tlaunchTemplate: launchTemplate,\n\tweightedCapacity: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const instanceType: ec2.InstanceType;\ndeclare const launchTemplate: ec2.LaunchTemplate;\nconst launchTemplateOverrides: autoscaling.LaunchTemplateOverrides = {\n  instanceType: instanceType,\n\n  // the properties below are optional\n  launchTemplate: launchTemplate,\n  weightedCapacity: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.LaunchTemplateOverrides"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.LaunchTemplateOverrides",
        "@aws-cdk/aws-ec2.ILaunchTemplate",
        "@aws-cdk/aws-ec2.InstanceType"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const instanceType: ec2.InstanceType;\ndeclare const launchTemplate: ec2.LaunchTemplate;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst launchTemplateOverrides: autoscaling.LaunchTemplateOverrides = {\n  instanceType: instanceType,\n\n  // the properties below are optional\n  launchTemplate: launchTemplate,\n  weightedCapacity: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 16,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "d14e5fa0df5403b3f5cec3a46e864a427b5267458bb3a7191aa835e34aff44b6"
    },
    "4862de1d049062d9e513ebb19f794dff0033d1141a7fa28698a6787cdb4e0f28": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.core as cdk\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n# lifecycle_hook_target: autoscaling.ILifecycleHookTarget\n# role: iam.Role\n\nlifecycle_hook = autoscaling.LifecycleHook(self, \"MyLifecycleHook\",\n    auto_scaling_group=auto_scaling_group,\n    lifecycle_transition=autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n    # the properties below are optional\n    default_result=autoscaling.DefaultResult.CONTINUE,\n    heartbeat_timeout=cdk.Duration.minutes(30),\n    lifecycle_hook_name=\"lifecycleHookName\",\n    notification_metadata=\"notificationMetadata\",\n    notification_target=lifecycle_hook_target,\n    role=role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK;\n\nAutoScalingGroup autoScalingGroup;\nILifecycleHookTarget lifecycleHookTarget;\nRole role;\nLifecycleHook lifecycleHook = new LifecycleHook(this, \"MyLifecycleHook\", new LifecycleHookProps {\n    AutoScalingGroup = autoScalingGroup,\n    LifecycleTransition = LifecycleTransition.INSTANCE_LAUNCHING,\n\n    // the properties below are optional\n    DefaultResult = DefaultResult.CONTINUE,\n    HeartbeatTimeout = Duration.Minutes(30),\n    LifecycleHookName = \"lifecycleHookName\",\n    NotificationMetadata = \"notificationMetadata\",\n    NotificationTarget = lifecycleHookTarget,\n    Role = role\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.core.*;\n\nAutoScalingGroup autoScalingGroup;\nILifecycleHookTarget lifecycleHookTarget;\nRole role;\n\nLifecycleHook lifecycleHook = LifecycleHook.Builder.create(this, \"MyLifecycleHook\")\n        .autoScalingGroup(autoScalingGroup)\n        .lifecycleTransition(LifecycleTransition.INSTANCE_LAUNCHING)\n\n        // the properties below are optional\n        .defaultResult(DefaultResult.CONTINUE)\n        .heartbeatTimeout(Duration.minutes(30))\n        .lifecycleHookName(\"lifecycleHookName\")\n        .notificationMetadata(\"notificationMetadata\")\n        .notificationTarget(lifecycleHookTarget)\n        .role(role)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar autoScalingGroup autoScalingGroup\nvar lifecycleHookTarget iLifecycleHookTarget\nvar role role\n\nlifecycleHook := autoscaling.NewLifecycleHook(this, jsii.String(\"MyLifecycleHook\"), &lifecycleHookProps{\n\tautoScalingGroup: autoScalingGroup,\n\tlifecycleTransition: autoscaling.lifecycleTransition_INSTANCE_LAUNCHING,\n\n\t// the properties below are optional\n\tdefaultResult: autoscaling.defaultResult_CONTINUE,\n\theartbeatTimeout: cdk.duration.minutes(jsii.Number(30)),\n\tlifecycleHookName: jsii.String(\"lifecycleHookName\"),\n\tnotificationMetadata: jsii.String(\"notificationMetadata\"),\n\tnotificationTarget: lifecycleHookTarget,\n\trole: role,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\nconst lifecycleHook = new autoscaling.LifecycleHook(this, 'MyLifecycleHook', {\n  autoScalingGroup: autoScalingGroup,\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.LifecycleHook"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.DefaultResult",
        "@aws-cdk/aws-autoscaling.DefaultResult#CONTINUE",
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.ILifecycleHookTarget",
        "@aws-cdk/aws-autoscaling.LifecycleHook",
        "@aws-cdk/aws-autoscaling.LifecycleHookProps",
        "@aws-cdk/aws-autoscaling.LifecycleTransition",
        "@aws-cdk/aws-autoscaling.LifecycleTransition#INSTANCE_LAUNCHING",
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lifecycleHook = new autoscaling.LifecycleHook(this, 'MyLifecycleHook', {\n  autoScalingGroup: autoScalingGroup,\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 35,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "193": 1,
        "194": 7,
        "196": 1,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "735e3f99e04864b4999e32eb670f21f671404be5c33181230eed6c2546d37377"
    },
    "487cbaf7edc7b640be4ca9de02fd0a266a8bc1b0b8a6b5d3b9a63a906b399682": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.core as cdk\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n# lifecycle_hook_target: autoscaling.ILifecycleHookTarget\n# role: iam.Role\n\nlifecycle_hook_props = autoscaling.LifecycleHookProps(\n    auto_scaling_group=auto_scaling_group,\n    lifecycle_transition=autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n    # the properties below are optional\n    default_result=autoscaling.DefaultResult.CONTINUE,\n    heartbeat_timeout=cdk.Duration.minutes(30),\n    lifecycle_hook_name=\"lifecycleHookName\",\n    notification_metadata=\"notificationMetadata\",\n    notification_target=lifecycle_hook_target,\n    role=role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK;\n\nAutoScalingGroup autoScalingGroup;\nILifecycleHookTarget lifecycleHookTarget;\nRole role;\nLifecycleHookProps lifecycleHookProps = new LifecycleHookProps {\n    AutoScalingGroup = autoScalingGroup,\n    LifecycleTransition = LifecycleTransition.INSTANCE_LAUNCHING,\n\n    // the properties below are optional\n    DefaultResult = DefaultResult.CONTINUE,\n    HeartbeatTimeout = Duration.Minutes(30),\n    LifecycleHookName = \"lifecycleHookName\",\n    NotificationMetadata = \"notificationMetadata\",\n    NotificationTarget = lifecycleHookTarget,\n    Role = role\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.core.*;\n\nAutoScalingGroup autoScalingGroup;\nILifecycleHookTarget lifecycleHookTarget;\nRole role;\n\nLifecycleHookProps lifecycleHookProps = LifecycleHookProps.builder()\n        .autoScalingGroup(autoScalingGroup)\n        .lifecycleTransition(LifecycleTransition.INSTANCE_LAUNCHING)\n\n        // the properties below are optional\n        .defaultResult(DefaultResult.CONTINUE)\n        .heartbeatTimeout(Duration.minutes(30))\n        .lifecycleHookName(\"lifecycleHookName\")\n        .notificationMetadata(\"notificationMetadata\")\n        .notificationTarget(lifecycleHookTarget)\n        .role(role)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar autoScalingGroup autoScalingGroup\nvar lifecycleHookTarget iLifecycleHookTarget\nvar role role\n\nlifecycleHookProps := &lifecycleHookProps{\n\tautoScalingGroup: autoScalingGroup,\n\tlifecycleTransition: autoscaling.lifecycleTransition_INSTANCE_LAUNCHING,\n\n\t// the properties below are optional\n\tdefaultResult: autoscaling.defaultResult_CONTINUE,\n\theartbeatTimeout: cdk.duration.minutes(jsii.Number(30)),\n\tlifecycleHookName: jsii.String(\"lifecycleHookName\"),\n\tnotificationMetadata: jsii.String(\"notificationMetadata\"),\n\tnotificationTarget: lifecycleHookTarget,\n\trole: role,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\nconst lifecycleHookProps: autoscaling.LifecycleHookProps = {\n  autoScalingGroup: autoScalingGroup,\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.LifecycleHookProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.DefaultResult",
        "@aws-cdk/aws-autoscaling.DefaultResult#CONTINUE",
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.ILifecycleHookTarget",
        "@aws-cdk/aws-autoscaling.LifecycleHookProps",
        "@aws-cdk/aws-autoscaling.LifecycleTransition",
        "@aws-cdk/aws-autoscaling.LifecycleTransition#INSTANCE_LAUNCHING",
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const lifecycleHookTarget: autoscaling.ILifecycleHookTarget;\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lifecycleHookProps: autoscaling.LifecycleHookProps = {\n  autoScalingGroup: autoScalingGroup,\n  lifecycleTransition: autoscaling.LifecycleTransition.INSTANCE_LAUNCHING,\n\n  // the properties below are optional\n  defaultResult: autoscaling.DefaultResult.CONTINUE,\n  heartbeatTimeout: cdk.Duration.minutes(30),\n  lifecycleHookName: 'lifecycleHookName',\n  notificationMetadata: 'notificationMetadata',\n  notificationTarget: lifecycleHookTarget,\n  role: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 35,
        "130": 3,
        "153": 4,
        "169": 4,
        "193": 1,
        "194": 6,
        "196": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "b0471d1a94e548f9c49c25832cb7d5bba423d5f82fc6590d6ef001721da273e8"
    },
    "f3abe8222a8e7277f05e76874136fffe354a7f691fa537fc6508cfbd4da55d20": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_iam as iam\n\n# role: iam.Role\n\nlifecycle_hook_target_config = autoscaling.LifecycleHookTargetConfig(\n    created_role=role,\n    notification_target_arn=\"notificationTargetArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.IAM;\n\nRole role;\n\nLifecycleHookTargetConfig lifecycleHookTargetConfig = new LifecycleHookTargetConfig {\n    CreatedRole = role,\n    NotificationTargetArn = \"notificationTargetArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.iam.*;\n\nRole role;\n\nLifecycleHookTargetConfig lifecycleHookTargetConfig = LifecycleHookTargetConfig.builder()\n        .createdRole(role)\n        .notificationTargetArn(\"notificationTargetArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar role role\n\nlifecycleHookTargetConfig := &lifecycleHookTargetConfig{\n\tcreatedRole: role,\n\tnotificationTargetArn: jsii.String(\"notificationTargetArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\nconst lifecycleHookTargetConfig: autoscaling.LifecycleHookTargetConfig = {\n  createdRole: role,\n  notificationTargetArn: 'notificationTargetArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.LifecycleHookTargetConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.LifecycleHookTargetConfig",
        "@aws-cdk/aws-iam.IRole"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst lifecycleHookTargetConfig: autoscaling.LifecycleHookTargetConfig = {\n  createdRole: role,\n  notificationTargetArn: 'notificationTargetArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 11,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "71bfb71b7aeb8881e5d68eb71fe4106a268956396bd327398a5b2bd700aba095"
    },
    "2f78a11cb75e7d5dc089ad3f38e614bd0b6a363c479925998b690fce271add20": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.core as cdk\n\n# metric: cloudwatch.Metric\n\nmetric_target_tracking_props = autoscaling.MetricTargetTrackingProps(\n    metric=metric,\n    target_value=123,\n\n    # the properties below are optional\n    cooldown=cdk.Duration.minutes(30),\n    disable_scale_in=False,\n    estimated_instance_warmup=cdk.Duration.minutes(30)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK;\n\nMetric metric;\nMetricTargetTrackingProps metricTargetTrackingProps = new MetricTargetTrackingProps {\n    Metric = metric,\n    TargetValue = 123,\n\n    // the properties below are optional\n    Cooldown = Duration.Minutes(30),\n    DisableScaleIn = false,\n    EstimatedInstanceWarmup = Duration.Minutes(30)\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.core.*;\n\nMetric metric;\n\nMetricTargetTrackingProps metricTargetTrackingProps = MetricTargetTrackingProps.builder()\n        .metric(metric)\n        .targetValue(123)\n\n        // the properties below are optional\n        .cooldown(Duration.minutes(30))\n        .disableScaleIn(false)\n        .estimatedInstanceWarmup(Duration.minutes(30))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar metric metric\n\nmetricTargetTrackingProps := &metricTargetTrackingProps{\n\tmetric: metric,\n\ttargetValue: jsii.Number(123),\n\n\t// the properties below are optional\n\tcooldown: cdk.duration.minutes(jsii.Number(30)),\n\tdisableScaleIn: jsii.Boolean(false),\n\testimatedInstanceWarmup: cdk.*duration.minutes(jsii.Number(30)),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\nconst metricTargetTrackingProps: autoscaling.MetricTargetTrackingProps = {\n  metric: metric,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.MetricTargetTrackingProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.MetricTargetTrackingProps",
        "@aws-cdk/aws-cloudwatch.IMetric",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const metric: cloudwatch.Metric;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst metricTargetTrackingProps: autoscaling.MetricTargetTrackingProps = {\n  metric: metric,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 3,
        "75": 21,
        "91": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 4,
        "196": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "7f1dfda76ac0b597df761f21034af4830d44da0e187ecf03a6744e1ddf3db285"
    },
    "b78f7d6e9c738bbe82ed7d691eaa24fc1e9e2d6cf2a4e10667a2ccd45d037ffc": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# launch_template1: ec2.LaunchTemplate\n# launch_template2: ec2.LaunchTemplate\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    mixed_instances_policy=autoscaling.MixedInstancesPolicy(\n        instances_distribution=autoscaling.InstancesDistribution(\n            on_demand_percentage_above_base_capacity=50\n        ),\n        launch_template=launch_template1,\n        launch_template_overrides=[autoscaling.LaunchTemplateOverrides(instance_type=ec2.InstanceType(\"t3.micro\")), autoscaling.LaunchTemplateOverrides(instance_type=ec2.InstanceType(\"t3a.micro\")), autoscaling.LaunchTemplateOverrides(instance_type=ec2.InstanceType(\"t4g.micro\"), launch_template=launch_template2)]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nLaunchTemplate launchTemplate1;\nLaunchTemplate launchTemplate2;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    MixedInstancesPolicy = new MixedInstancesPolicy {\n        InstancesDistribution = new InstancesDistribution {\n            OnDemandPercentageAboveBaseCapacity = 50\n        },\n        LaunchTemplate = launchTemplate1,\n        LaunchTemplateOverrides = new [] { new LaunchTemplateOverrides { InstanceType = new InstanceType(\"t3.micro\") }, new LaunchTemplateOverrides { InstanceType = new InstanceType(\"t3a.micro\") }, new LaunchTemplateOverrides { InstanceType = new InstanceType(\"t4g.micro\"), LaunchTemplate = launchTemplate2 } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nLaunchTemplate launchTemplate1;\nLaunchTemplate launchTemplate2;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .mixedInstancesPolicy(MixedInstancesPolicy.builder()\n                .instancesDistribution(InstancesDistribution.builder()\n                        .onDemandPercentageAboveBaseCapacity(50)\n                        .build())\n                .launchTemplate(launchTemplate1)\n                .launchTemplateOverrides(List.of(LaunchTemplateOverrides.builder().instanceType(new InstanceType(\"t3.micro\")).build(), LaunchTemplateOverrides.builder().instanceType(new InstanceType(\"t3a.micro\")).build(), LaunchTemplateOverrides.builder().instanceType(new InstanceType(\"t4g.micro\")).launchTemplate(launchTemplate2).build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar launchTemplate1 launchTemplate\nvar launchTemplate2 launchTemplate\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tmixedInstancesPolicy: &mixedInstancesPolicy{\n\t\tinstancesDistribution: &instancesDistribution{\n\t\t\tonDemandPercentageAboveBaseCapacity: jsii.Number(50),\n\t\t},\n\t\tlaunchTemplate: launchTemplate1,\n\t\tlaunchTemplateOverrides: []launchTemplateOverrides{\n\t\t\t&launchTemplateOverrides{\n\t\t\t\tinstanceType: ec2.NewInstanceType(jsii.String(\"t3.micro\")),\n\t\t\t},\n\t\t\t&launchTemplateOverrides{\n\t\t\t\tinstanceType: ec2.NewInstanceType(jsii.String(\"t3a.micro\")),\n\t\t\t},\n\t\t\t&launchTemplateOverrides{\n\t\t\t\tinstanceType: ec2.NewInstanceType(jsii.String(\"t4g.micro\")),\n\t\t\t\tlaunchTemplate: launchTemplate2,\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const launchTemplate1: ec2.LaunchTemplate;\ndeclare const launchTemplate2: ec2.LaunchTemplate;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  mixedInstancesPolicy: {\n    instancesDistribution: {\n      onDemandPercentageAboveBaseCapacity: 50, // Mix Spot and On-Demand instances\n    },\n    launchTemplate: launchTemplate1,\n    launchTemplateOverrides: [ // Mix multiple instance types\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: launchTemplate2 },\n    ],\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.MixedInstancesPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.InstancesDistribution",
        "@aws-cdk/aws-autoscaling.MixedInstancesPolicy",
        "@aws-cdk/aws-ec2.ILaunchTemplate",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const launchTemplate1: ec2.LaunchTemplate;\ndeclare const launchTemplate2: ec2.LaunchTemplate;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  mixedInstancesPolicy: {\n    instancesDistribution: {\n      onDemandPercentageAboveBaseCapacity: 50, // Mix Spot and On-Demand instances\n    },\n    launchTemplate: launchTemplate1,\n    launchTemplateOverrides: [ // Mix multiple instance types\n      { instanceType: new ec2.InstanceType('t3.micro') },\n      { instanceType: new ec2.InstanceType('t3a.micro') },\n      { instanceType: new ec2.InstanceType('t4g.micro'), launchTemplate: launchTemplate2 },\n    ],\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 29,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 6,
        "194": 4,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 9,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "f8005d9c92407e748effb8a41421342c73d937ef5ad87afef2443d95bb15f03a"
    },
    "b39d6ada08f8fd13b38dae95e7341f4c56730953cd1a384842bf51bfe0d031a4": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.scale_on_incoming_bytes(\"LimitIngressPerInstance\",\n    target_bytes_per_second=10 * 1024 * 1024\n)\nauto_scaling_group.scale_on_outgoing_bytes(\"LimitEgressPerInstance\",\n    target_bytes_per_second=10 * 1024 * 1024\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.ScaleOnIncomingBytes(\"LimitIngressPerInstance\", new NetworkUtilizationScalingProps {\n    TargetBytesPerSecond = 10 * 1024 * 1024\n});\nautoScalingGroup.ScaleOnOutgoingBytes(\"LimitEgressPerInstance\", new NetworkUtilizationScalingProps {\n    TargetBytesPerSecond = 10 * 1024 * 1024\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.scaleOnIncomingBytes(\"LimitIngressPerInstance\", NetworkUtilizationScalingProps.builder()\n        .targetBytesPerSecond(10 * 1024 * 1024)\n        .build());\nautoScalingGroup.scaleOnOutgoingBytes(\"LimitEgressPerInstance\", NetworkUtilizationScalingProps.builder()\n        .targetBytesPerSecond(10 * 1024 * 1024)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.scaleOnIncomingBytes(jsii.String(\"LimitIngressPerInstance\"), &networkUtilizationScalingProps{\n\ttargetBytesPerSecond: jsii.Number(10 * 1024 * 1024),\n})\nautoScalingGroup.scaleOnOutgoingBytes(jsii.String(\"LimitEgressPerInstance\"), &networkUtilizationScalingProps{\n\ttargetBytesPerSecond: jsii.Number(10 * 1024 * 1024),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnIncomingBytes('LimitIngressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\nautoScalingGroup.scaleOnOutgoingBytes('LimitEgressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.NetworkUtilizationScalingProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.scaleOnIncomingBytes('LimitIngressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\nautoScalingGroup.scaleOnOutgoingBytes('LimitEgressPerInstance', {\n    targetBytesPerSecond: 10 * 1024 * 1024 // 10 MB/s\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 6,
        "10": 2,
        "41": 4,
        "75": 9,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 2,
        "196": 2,
        "209": 4,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d37ae9d93577e661d44e93218d19e0bed5ee5c4694b4040c98be4389418e25ed"
    },
    "2df976533550357a30f4011e0005c1db2d8044d682424c5c2733d730381eece0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_sns as sns\n\n# scaling_events: autoscaling.ScalingEvents\n# topic: sns.Topic\n\nnotification_configuration = autoscaling.NotificationConfiguration(\n    topic=topic,\n\n    # the properties below are optional\n    scaling_events=scaling_events\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.SNS;\n\nScalingEvents scalingEvents;\nTopic topic;\n\nNotificationConfiguration notificationConfiguration = new NotificationConfiguration {\n    Topic = topic,\n\n    // the properties below are optional\n    ScalingEvents = scalingEvents\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.sns.*;\n\nScalingEvents scalingEvents;\nTopic topic;\n\nNotificationConfiguration notificationConfiguration = NotificationConfiguration.builder()\n        .topic(topic)\n\n        // the properties below are optional\n        .scalingEvents(scalingEvents)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport sns \"github.com/aws-samples/dummy/awscdkawssns\"\n\nvar scalingEvents scalingEvents\nvar topic topic\n\nnotificationConfiguration := &notificationConfiguration{\n\ttopic: topic,\n\n\t// the properties below are optional\n\tscalingEvents: scalingEvents,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as sns from '@aws-cdk/aws-sns';\n\ndeclare const scalingEvents: autoscaling.ScalingEvents;\ndeclare const topic: sns.Topic;\nconst notificationConfiguration: autoscaling.NotificationConfiguration = {\n  topic: topic,\n\n  // the properties below are optional\n  scalingEvents: scalingEvents,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.NotificationConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.NotificationConfiguration",
        "@aws-cdk/aws-autoscaling.ScalingEvents",
        "@aws-cdk/aws-sns.ITopic"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as sns from '@aws-cdk/aws-sns';\n\ndeclare const scalingEvents: autoscaling.ScalingEvents;\ndeclare const topic: sns.Topic;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notificationConfiguration: autoscaling.NotificationConfiguration = {\n  topic: topic,\n\n  // the properties below are optional\n  scalingEvents: scalingEvents,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 15,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "2eb9b639724a895a1066e769b2c2906a543b9ebdf3c4caf772998677a0244dd6"
    },
    "4f271532b43e5683bfe3e61f231729a02a9175e6521c1646f0df8e8820dc9530": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nrender_signals_options = autoscaling.RenderSignalsOptions(\n    desired_capacity=123,\n    min_capacity=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nRenderSignalsOptions renderSignalsOptions = new RenderSignalsOptions {\n    DesiredCapacity = 123,\n    MinCapacity = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nRenderSignalsOptions renderSignalsOptions = RenderSignalsOptions.builder()\n        .desiredCapacity(123)\n        .minCapacity(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nrenderSignalsOptions := &renderSignalsOptions{\n\tdesiredCapacity: jsii.Number(123),\n\tminCapacity: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst renderSignalsOptions: autoscaling.RenderSignalsOptions = {\n  desiredCapacity: 123,\n  minCapacity: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.RenderSignalsOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.RenderSignalsOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst renderSignalsOptions: autoscaling.RenderSignalsOptions = {\n  desiredCapacity: 123,\n  minCapacity: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "9241bd1804f8c3743140cacb0320e0d2b03212c9383769290e8a16c3297f25b8"
    },
    "c798aa8bc00660b77fc190c489f764e591b43dc9918002a40b2a871dc72ddc59": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.scale_on_request_count(\"LimitRPS\",\n    target_requests_per_second=1000\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.ScaleOnRequestCount(\"LimitRPS\", new RequestCountScalingProps {\n    TargetRequestsPerSecond = 1000\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.scaleOnRequestCount(\"LimitRPS\", RequestCountScalingProps.builder()\n        .targetRequestsPerSecond(1000)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.scaleOnRequestCount(jsii.String(\"LimitRPS\"), &requestCountScalingProps{\n\ttargetRequestsPerSecond: jsii.Number(1000),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.scaleOnRequestCount('LimitRPS', {\n    targetRequestsPerSecond: 1000\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.RequestCountScalingProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.RequestCountScalingProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.scaleOnRequestCount('LimitRPS', {\n    targetRequestsPerSecond: 1000\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "32f5ca61395d25ef805734ff50c15bca3ed30bff28bad6ff111a7d0c2bad5f42"
    },
    "022c255b7dbbd9758bc6c1086eda3f511404f1f10cede6d6d706dd8af6cbbce1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.core as cdk\n\nrolling_update_configuration = autoscaling.RollingUpdateConfiguration(\n    max_batch_size=123,\n    min_instances_in_service=123,\n    min_successful_instances_percent=123,\n    pause_time=cdk.Duration.minutes(30),\n    suspend_processes=[autoscaling.ScalingProcess.LAUNCH],\n    wait_on_resource_signals=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK;\nRollingUpdateConfiguration rollingUpdateConfiguration = new RollingUpdateConfiguration {\n    MaxBatchSize = 123,\n    MinInstancesInService = 123,\n    MinSuccessfulInstancesPercent = 123,\n    PauseTime = Duration.Minutes(30),\n    SuspendProcesses = new [] { ScalingProcess.LAUNCH },\n    WaitOnResourceSignals = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nRollingUpdateConfiguration rollingUpdateConfiguration = RollingUpdateConfiguration.builder()\n        .maxBatchSize(123)\n        .minInstancesInService(123)\n        .minSuccessfulInstancesPercent(123)\n        .pauseTime(Duration.minutes(30))\n        .suspendProcesses(List.of(ScalingProcess.LAUNCH))\n        .waitOnResourceSignals(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nrollingUpdateConfiguration := &rollingUpdateConfiguration{\n\tmaxBatchSize: jsii.Number(123),\n\tminInstancesInService: jsii.Number(123),\n\tminSuccessfulInstancesPercent: jsii.Number(123),\n\tpauseTime: cdk.duration.minutes(jsii.Number(30)),\n\tsuspendProcesses: []scalingProcess{\n\t\tautoscaling.*scalingProcess_LAUNCH,\n\t},\n\twaitOnResourceSignals: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst rollingUpdateConfiguration: autoscaling.RollingUpdateConfiguration = {\n  maxBatchSize: 123,\n  minInstancesInService: 123,\n  minSuccessfulInstancesPercent: 123,\n  pauseTime: cdk.Duration.minutes(30),\n  suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n  waitOnResourceSignals: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.RollingUpdateConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.RollingUpdateConfiguration",
        "@aws-cdk/aws-autoscaling.ScalingProcess",
        "@aws-cdk/aws-autoscaling.ScalingProcess#LAUNCH",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rollingUpdateConfiguration: autoscaling.RollingUpdateConfiguration = {\n  maxBatchSize: 123,\n  minInstancesInService: 123,\n  minSuccessfulInstancesPercent: 123,\n  pauseTime: cdk.Duration.minutes(30),\n  suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n  waitOnResourceSignals: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 2,
        "75": 17,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 4,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "4ccb401c8e65791b2389600ca2334f1e4e8333549945724e681bd6c24511426f"
    },
    "4b75582dc0c6b804f1309c9f1b4caf42e38b6c9f82e4e56cba0cafdf05566ef1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.core as cdk\n\nrolling_update_options = autoscaling.RollingUpdateOptions(\n    max_batch_size=123,\n    min_instances_in_service=123,\n    min_success_percentage=123,\n    pause_time=cdk.Duration.minutes(30),\n    suspend_processes=[autoscaling.ScalingProcess.LAUNCH],\n    wait_on_resource_signals=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK;\nRollingUpdateOptions rollingUpdateOptions = new RollingUpdateOptions {\n    MaxBatchSize = 123,\n    MinInstancesInService = 123,\n    MinSuccessPercentage = 123,\n    PauseTime = Duration.Minutes(30),\n    SuspendProcesses = new [] { ScalingProcess.LAUNCH },\n    WaitOnResourceSignals = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nRollingUpdateOptions rollingUpdateOptions = RollingUpdateOptions.builder()\n        .maxBatchSize(123)\n        .minInstancesInService(123)\n        .minSuccessPercentage(123)\n        .pauseTime(Duration.minutes(30))\n        .suspendProcesses(List.of(ScalingProcess.LAUNCH))\n        .waitOnResourceSignals(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nrollingUpdateOptions := &rollingUpdateOptions{\n\tmaxBatchSize: jsii.Number(123),\n\tminInstancesInService: jsii.Number(123),\n\tminSuccessPercentage: jsii.Number(123),\n\tpauseTime: cdk.duration.minutes(jsii.Number(30)),\n\tsuspendProcesses: []scalingProcess{\n\t\tautoscaling.*scalingProcess_LAUNCH,\n\t},\n\twaitOnResourceSignals: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\nconst rollingUpdateOptions: autoscaling.RollingUpdateOptions = {\n  maxBatchSize: 123,\n  minInstancesInService: 123,\n  minSuccessPercentage: 123,\n  pauseTime: cdk.Duration.minutes(30),\n  suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n  waitOnResourceSignals: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.RollingUpdateOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.RollingUpdateOptions",
        "@aws-cdk/aws-autoscaling.ScalingProcess",
        "@aws-cdk/aws-autoscaling.ScalingProcess#LAUNCH",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst rollingUpdateOptions: autoscaling.RollingUpdateOptions = {\n  maxBatchSize: 123,\n  minInstancesInService: 123,\n  minSuccessPercentage: 123,\n  pauseTime: cdk.Duration.minutes(30),\n  suspendProcesses: [autoscaling.ScalingProcess.LAUNCH],\n  waitOnResourceSignals: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 2,
        "75": 17,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 4,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "69aa7176774353741ad733cb8588a69475870b032d4b5140c017970dba1b1dcf"
    },
    "43f3ce67b2ad7420da41a79cea342431b21bf2c2406aeee1bb25dc349064085e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nscaling_events = autoscaling.ScalingEvents.ALL",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nScalingEvents scalingEvents = ScalingEvents.ALL;",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nScalingEvents scalingEvents = ScalingEvents.ALL;",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nscalingEvents := autoscaling.scalingEvents_ALL()",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst scalingEvents = autoscaling.ScalingEvents.ALL;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.ScalingEvents"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.ScalingEvents",
        "@aws-cdk/aws-autoscaling.ScalingEvents#ALL"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst scalingEvents = autoscaling.ScalingEvents.ALL;\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "ea2826cd521ffb10e82a0d4b833a36dcac9d98762546823f0df02665e67bde1b"
    },
    "f6b0a31b1a543bd72902383088459f8a501c85e28693f1cc46bcdb4859268df6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nscaling_interval = autoscaling.ScalingInterval(\n    change=123,\n\n    # the properties below are optional\n    lower=123,\n    upper=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nScalingInterval scalingInterval = new ScalingInterval {\n    Change = 123,\n\n    // the properties below are optional\n    Lower = 123,\n    Upper = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nScalingInterval scalingInterval = ScalingInterval.builder()\n        .change(123)\n\n        // the properties below are optional\n        .lower(123)\n        .upper(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nscalingInterval := &scalingInterval{\n\tchange: jsii.Number(123),\n\n\t// the properties below are optional\n\tlower: jsii.Number(123),\n\tupper: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst scalingInterval: autoscaling.ScalingInterval = {\n  change: 123,\n\n  // the properties below are optional\n  lower: 123,\n  upper: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.ScalingInterval"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.ScalingInterval"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst scalingInterval: autoscaling.ScalingInterval = {\n  change: 123,\n\n  // the properties below are optional\n  lower: 123,\n  upper: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 1,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "d797d7b76f685969b8c0e6b171cc24b2cdb37df414446a4fd6c5c2615334ea86"
    },
    "a1f8c8ba671be3a1479d76391a125949f3ee080f8cdd28e93dac8a61bedb8a0e": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_autoscaling as autoscaling\n\n# fn: lambda.Function\n\nalias = fn.add_alias(\"prod\")\n\n# Create AutoScaling target\nas = alias.add_auto_scaling(max_capacity=50)\n\n# Configure Target Tracking\nas.scale_on_utilization(\n    utilization_target=0.5\n)\n\n# Configure Scheduled Scaling\nas.scale_on_schedule(\"ScaleUpInTheMorning\",\n    schedule=autoscaling.Schedule.cron(hour=\"8\", minute=\"0\"),\n    min_capacity=20\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.AutoScaling;\n\nFunction fn;\n\nAlias alias = fn.AddAlias(\"prod\");\n\n// Create AutoScaling target\nIScalableFunctionAttribute as = alias.AddAutoScaling(new AutoScalingOptions { MaxCapacity = 50 });\n\n// Configure Target Tracking\nas.ScaleOnUtilization(new UtilizationScalingOptions {\n    UtilizationTarget = 0.5\n});\n\n// Configure Scheduled Scaling\nas.ScaleOnSchedule(\"ScaleUpInTheMorning\", new ScalingSchedule {\n    Schedule = Schedule.Cron(new CronOptions { Hour = \"8\", Minute = \"0\" }),\n    MinCapacity = 20\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.autoscaling.*;\n\nFunction fn;\n\nAlias alias = fn.addAlias(\"prod\");\n\n// Create AutoScaling target\nIScalableFunctionAttribute as = alias.addAutoScaling(AutoScalingOptions.builder().maxCapacity(50).build());\n\n// Configure Target Tracking\nas.scaleOnUtilization(UtilizationScalingOptions.builder()\n        .utilizationTarget(0.5)\n        .build());\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule(\"ScaleUpInTheMorning\", ScalingSchedule.builder()\n        .schedule(Schedule.cron(CronOptions.builder().hour(\"8\").minute(\"0\").build()))\n        .minCapacity(20)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "import autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nvar fn function\n\nalias := fn.addAlias(jsii.String(\"prod\"))\n\n// Create AutoScaling target\nas := alias.addAutoScaling(&autoScalingOptions{\n\tmaxCapacity: jsii.Number(50),\n})\n\n// Configure Target Tracking\nas.scaleOnUtilization(&utilizationScalingOptions{\n\tutilizationTarget: jsii.Number(0.5),\n})\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule(jsii.String(\"ScaleUpInTheMorning\"), &scalingSchedule{\n\tschedule: autoscaling.schedule.cron(&cronOptions{\n\t\thour: jsii.String(\"8\"),\n\t\tminute: jsii.String(\"0\"),\n\t}),\n\tminCapacity: jsii.Number(20),\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\nconst alias = fn.addAlias('prod');\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.Schedule"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-applicationautoscaling.ScalingSchedule",
        "@aws-cdk/aws-applicationautoscaling.Schedule",
        "@aws-cdk/aws-autoscaling.CronOptions",
        "@aws-cdk/aws-autoscaling.Schedule",
        "@aws-cdk/aws-autoscaling.Schedule#cron",
        "@aws-cdk/aws-lambda.Alias",
        "@aws-cdk/aws-lambda.Alias#addAutoScaling",
        "@aws-cdk/aws-lambda.AutoScalingOptions",
        "@aws-cdk/aws-lambda.Function#addAlias",
        "@aws-cdk/aws-lambda.IScalableFunctionAttribute",
        "@aws-cdk/aws-lambda.IScalableFunctionAttribute#scaleOnSchedule",
        "@aws-cdk/aws-lambda.IScalableFunctionAttribute#scaleOnUtilization",
        "@aws-cdk/aws-lambda.UtilizationScalingOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const fn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Aspects, CfnOutput, DockerImage, Duration, RemovalPolicy, Stack } from '@aws-cdk/core';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as iam from '@aws-cdk/aws-iam';\nimport { LAMBDA_RECOGNIZE_VERSION_PROPS, LAMBDA_RECOGNIZE_LAYER_VERSION } from '@aws-cdk/cx-api';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst alias = fn.addAlias('prod');\n\n// Create AutoScaling target\nconst as = alias.addAutoScaling({ maxCapacity: 50 });\n\n// Configure Target Tracking\nas.scaleOnUtilization({\n  utilizationTarget: 0.5,\n});\n\n// Configure Scheduled Scaling\nas.scaleOnSchedule('ScaleUpInTheMorning', {\n  schedule: autoscaling.Schedule.cron({ hour: '8', minute: '0'}),\n  minCapacity: 20,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 3,
        "10": 5,
        "75": 23,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "194": 6,
        "196": 5,
        "225": 3,
        "226": 2,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "861c13e8fee83f583f8832e233aabdb670109af6bec46c348bc14af6f61f1a65"
    },
    "e01eb2ed9af451ea16299e45dbe836b4701a40809a45dd25065751c4e1184ca7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n# schedule: autoscaling.Schedule\n\nscheduled_action = autoscaling.ScheduledAction(self, \"MyScheduledAction\",\n    auto_scaling_group=auto_scaling_group,\n    schedule=schedule,\n\n    # the properties below are optional\n    desired_capacity=123,\n    end_time=Date(),\n    max_capacity=123,\n    min_capacity=123,\n    start_time=Date(),\n    time_zone=\"timeZone\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nAutoScalingGroup autoScalingGroup;\nSchedule schedule;\n\nScheduledAction scheduledAction = new ScheduledAction(this, \"MyScheduledAction\", new ScheduledActionProps {\n    AutoScalingGroup = autoScalingGroup,\n    Schedule = schedule,\n\n    // the properties below are optional\n    DesiredCapacity = 123,\n    EndTime = new Date(),\n    MaxCapacity = 123,\n    MinCapacity = 123,\n    StartTime = new Date(),\n    TimeZone = \"timeZone\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nAutoScalingGroup autoScalingGroup;\nSchedule schedule;\n\nScheduledAction scheduledAction = ScheduledAction.Builder.create(this, \"MyScheduledAction\")\n        .autoScalingGroup(autoScalingGroup)\n        .schedule(schedule)\n\n        // the properties below are optional\n        .desiredCapacity(123)\n        .endTime(new Date())\n        .maxCapacity(123)\n        .minCapacity(123)\n        .startTime(new Date())\n        .timeZone(\"timeZone\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nvar autoScalingGroup autoScalingGroup\nvar schedule schedule\n\nscheduledAction := autoscaling.NewScheduledAction(this, jsii.String(\"MyScheduledAction\"), &scheduledActionProps{\n\tautoScalingGroup: autoScalingGroup,\n\tschedule: schedule,\n\n\t// the properties below are optional\n\tdesiredCapacity: jsii.Number(123),\n\tendTime: NewDate(),\n\tmaxCapacity: jsii.Number(123),\n\tminCapacity: jsii.Number(123),\n\tstartTime: NewDate(),\n\ttimeZone: jsii.String(\"timeZone\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const schedule: autoscaling.Schedule;\nconst scheduledAction = new autoscaling.ScheduledAction(this, 'MyScheduledAction', {\n  autoScalingGroup: autoScalingGroup,\n  schedule: schedule,\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: new Date(),\n  maxCapacity: 123,\n  minCapacity: 123,\n  startTime: new Date(),\n  timeZone: 'timeZone',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.ScheduledAction"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.Schedule",
        "@aws-cdk/aws-autoscaling.ScheduledAction",
        "@aws-cdk/aws-autoscaling.ScheduledActionProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const schedule: autoscaling.Schedule;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst scheduledAction = new autoscaling.ScheduledAction(this, 'MyScheduledAction', {\n  autoScalingGroup: autoScalingGroup,\n  schedule: schedule,\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: new Date(),\n  maxCapacity: 123,\n  minCapacity: 123,\n  startTime: new Date(),\n  timeZone: 'timeZone',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 3,
        "75": 22,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 1,
        "197": 3,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "8193f3d12f83735cfc37c480c0a755e1056116790156d8cae4350410c28ec8a2"
    },
    "509e0f36520307c3dae3f6209c5af73f9c3e99f6dda2e4f08cbf2f7b2e678696": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n# schedule: autoscaling.Schedule\n\nscheduled_action_props = autoscaling.ScheduledActionProps(\n    auto_scaling_group=auto_scaling_group,\n    schedule=schedule,\n\n    # the properties below are optional\n    desired_capacity=123,\n    end_time=Date(),\n    max_capacity=123,\n    min_capacity=123,\n    start_time=Date(),\n    time_zone=\"timeZone\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nAutoScalingGroup autoScalingGroup;\nSchedule schedule;\n\nScheduledActionProps scheduledActionProps = new ScheduledActionProps {\n    AutoScalingGroup = autoScalingGroup,\n    Schedule = schedule,\n\n    // the properties below are optional\n    DesiredCapacity = 123,\n    EndTime = new Date(),\n    MaxCapacity = 123,\n    MinCapacity = 123,\n    StartTime = new Date(),\n    TimeZone = \"timeZone\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nAutoScalingGroup autoScalingGroup;\nSchedule schedule;\n\nScheduledActionProps scheduledActionProps = ScheduledActionProps.builder()\n        .autoScalingGroup(autoScalingGroup)\n        .schedule(schedule)\n\n        // the properties below are optional\n        .desiredCapacity(123)\n        .endTime(new Date())\n        .maxCapacity(123)\n        .minCapacity(123)\n        .startTime(new Date())\n        .timeZone(\"timeZone\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nvar autoScalingGroup autoScalingGroup\nvar schedule schedule\n\nscheduledActionProps := &scheduledActionProps{\n\tautoScalingGroup: autoScalingGroup,\n\tschedule: schedule,\n\n\t// the properties below are optional\n\tdesiredCapacity: jsii.Number(123),\n\tendTime: NewDate(),\n\tmaxCapacity: jsii.Number(123),\n\tminCapacity: jsii.Number(123),\n\tstartTime: NewDate(),\n\ttimeZone: jsii.String(\"timeZone\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const schedule: autoscaling.Schedule;\nconst scheduledActionProps: autoscaling.ScheduledActionProps = {\n  autoScalingGroup: autoScalingGroup,\n  schedule: schedule,\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: new Date(),\n  maxCapacity: 123,\n  minCapacity: 123,\n  startTime: new Date(),\n  timeZone: 'timeZone',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.ScheduledActionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.Schedule",
        "@aws-cdk/aws-autoscaling.ScheduledActionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const schedule: autoscaling.Schedule;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst scheduledActionProps: autoscaling.ScheduledActionProps = {\n  autoScalingGroup: autoScalingGroup,\n  schedule: schedule,\n\n  // the properties below are optional\n  desiredCapacity: 123,\n  endTime: new Date(),\n  maxCapacity: 123,\n  minCapacity: 123,\n  startTime: new Date(),\n  timeZone: 'timeZone',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 2,
        "75": 22,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "197": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "0fd96984121be4e9d454ae40a828eb1e59967c00a277cea3a6a2426836eeefc7"
    },
    "5de0be728d02050594e0b9e10e7e004732f50e7558efd3b37ad935cf2197172d": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    init=ec2.CloudFormationInit.from_elements(\n        ec2.InitFile.from_string(\"/etc/my_instance\", \"This got written during instance startup\")),\n    signals=autoscaling.Signals.wait_for_all(\n        timeout=Duration.minutes(10)\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    Init = CloudFormationInit.FromElements(InitFile.FromString(\"/etc/my_instance\", \"This got written during instance startup\")),\n    Signals = Signals.WaitForAll(new SignalsOptions {\n        Timeout = Duration.Minutes(10)\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .init(CloudFormationInit.fromElements(InitFile.fromString(\"/etc/my_instance\", \"This got written during instance startup\")))\n        .signals(Signals.waitForAll(SignalsOptions.builder()\n                .timeout(Duration.minutes(10))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tinit: ec2.cloudFormationInit.fromElements(ec2.initFile.fromString(jsii.String(\"/etc/my_instance\"), jsii.String(\"This got written during instance startup\"))),\n\tsignals: autoscaling.signals.waitForAll(&signalsOptions{\n\t\ttimeout: *awscdkcore.Duration.minutes(jsii.Number(10)),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.Signals"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.Signals",
        "@aws-cdk/aws-autoscaling.Signals#waitForAll",
        "@aws-cdk/aws-autoscaling.SignalsOptions",
        "@aws-cdk/aws-ec2.CloudFormationInit",
        "@aws-cdk/aws-ec2.CloudFormationInit#fromElements",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InitElement",
        "@aws-cdk/aws-ec2.InitFile",
        "@aws-cdk/aws-ec2.InitFile#fromString",
        "@aws-cdk/aws-ec2.InstanceType",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 28,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "193": 2,
        "194": 8,
        "196": 4,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 3,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "84d50ae55a91b5b9828c5b71ef9d300fd97e60982e5bda838e575143a4821c62"
    },
    "766194e33eab5b17884eff630ba171917cffc0c71dfa3ef15871cf089a4a7747": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    init=ec2.CloudFormationInit.from_elements(\n        ec2.InitFile.from_string(\"/etc/my_instance\", \"This got written during instance startup\")),\n    signals=autoscaling.Signals.wait_for_all(\n        timeout=Duration.minutes(10)\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    Init = CloudFormationInit.FromElements(InitFile.FromString(\"/etc/my_instance\", \"This got written during instance startup\")),\n    Signals = Signals.WaitForAll(new SignalsOptions {\n        Timeout = Duration.Minutes(10)\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .init(CloudFormationInit.fromElements(InitFile.fromString(\"/etc/my_instance\", \"This got written during instance startup\")))\n        .signals(Signals.waitForAll(SignalsOptions.builder()\n                .timeout(Duration.minutes(10))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tinit: ec2.cloudFormationInit.fromElements(ec2.initFile.fromString(jsii.String(\"/etc/my_instance\"), jsii.String(\"This got written during instance startup\"))),\n\tsignals: autoscaling.signals.waitForAll(&signalsOptions{\n\t\ttimeout: *awscdkcore.Duration.minutes(jsii.Number(10)),\n\t}),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.SignalsOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.Signals",
        "@aws-cdk/aws-autoscaling.Signals#waitForAll",
        "@aws-cdk/aws-autoscaling.SignalsOptions",
        "@aws-cdk/aws-ec2.CloudFormationInit",
        "@aws-cdk/aws-ec2.CloudFormationInit#fromElements",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InitElement",
        "@aws-cdk/aws-ec2.InitFile",
        "@aws-cdk/aws-ec2.InitFile#fromString",
        "@aws-cdk/aws-ec2.InstanceType",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  init: ec2.CloudFormationInit.fromElements(\n    ec2.InitFile.fromString('/etc/my_instance', 'This got written during instance startup'),\n  ),\n  signals: autoscaling.Signals.waitForAll({\n    timeout: Duration.minutes(10),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 28,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "193": 2,
        "194": 8,
        "196": 4,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 3,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "84d50ae55a91b5b9828c5b71ef9d300fd97e60982e5bda838e575143a4821c62"
    },
    "e7c8990c55d8a0d065982dd5aca5abb480cba58a8d57fe81a8082ff9aee523af": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.core as cdk\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n\nstep_scaling_action = autoscaling.StepScalingAction(self, \"MyStepScalingAction\",\n    auto_scaling_group=auto_scaling_group,\n\n    # the properties below are optional\n    adjustment_type=autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n    cooldown=cdk.Duration.minutes(30),\n    estimated_instance_warmup=cdk.Duration.minutes(30),\n    metric_aggregation_type=autoscaling.MetricAggregationType.AVERAGE,\n    min_adjustment_magnitude=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK;\n\nAutoScalingGroup autoScalingGroup;\nStepScalingAction stepScalingAction = new StepScalingAction(this, \"MyStepScalingAction\", new StepScalingActionProps {\n    AutoScalingGroup = autoScalingGroup,\n\n    // the properties below are optional\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY,\n    Cooldown = Duration.Minutes(30),\n    EstimatedInstanceWarmup = Duration.Minutes(30),\n    MetricAggregationType = MetricAggregationType.AVERAGE,\n    MinAdjustmentMagnitude = 123\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nAutoScalingGroup autoScalingGroup;\n\nStepScalingAction stepScalingAction = StepScalingAction.Builder.create(this, \"MyStepScalingAction\")\n        .autoScalingGroup(autoScalingGroup)\n\n        // the properties below are optional\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .cooldown(Duration.minutes(30))\n        .estimatedInstanceWarmup(Duration.minutes(30))\n        .metricAggregationType(MetricAggregationType.AVERAGE)\n        .minAdjustmentMagnitude(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar autoScalingGroup autoScalingGroup\n\nstepScalingAction := autoscaling.NewStepScalingAction(this, jsii.String(\"MyStepScalingAction\"), &stepScalingActionProps{\n\tautoScalingGroup: autoScalingGroup,\n\n\t// the properties below are optional\n\tadjustmentType: autoscaling.adjustmentType_CHANGE_IN_CAPACITY,\n\tcooldown: cdk.duration.minutes(jsii.Number(30)),\n\testimatedInstanceWarmup: cdk.*duration.minutes(jsii.Number(30)),\n\tmetricAggregationType: autoscaling.metricAggregationType_AVERAGE,\n\tminAdjustmentMagnitude: jsii.Number(123),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\nconst stepScalingAction = new autoscaling.StepScalingAction(this, 'MyStepScalingAction', {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.StepScalingAction"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AdjustmentType",
        "@aws-cdk/aws-autoscaling.AdjustmentType#CHANGE_IN_CAPACITY",
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.MetricAggregationType",
        "@aws-cdk/aws-autoscaling.MetricAggregationType#AVERAGE",
        "@aws-cdk/aws-autoscaling.StepScalingAction",
        "@aws-cdk/aws-autoscaling.StepScalingActionProps",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepScalingAction = new autoscaling.StepScalingAction(this, 'MyStepScalingAction', {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 3,
        "75": 27,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "c80c629195985e39d0a1939bf5f10165c7b60738b6889e7bc8e9eff8652ee7c6"
    },
    "59214bf7ac7bd72a613477f7c45e9bc0e2173b47143d9b504e56b0e2015b16e8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.core as cdk\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n\nstep_scaling_action_props = autoscaling.StepScalingActionProps(\n    auto_scaling_group=auto_scaling_group,\n\n    # the properties below are optional\n    adjustment_type=autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n    cooldown=cdk.Duration.minutes(30),\n    estimated_instance_warmup=cdk.Duration.minutes(30),\n    metric_aggregation_type=autoscaling.MetricAggregationType.AVERAGE,\n    min_adjustment_magnitude=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK;\n\nAutoScalingGroup autoScalingGroup;\nStepScalingActionProps stepScalingActionProps = new StepScalingActionProps {\n    AutoScalingGroup = autoScalingGroup,\n\n    // the properties below are optional\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY,\n    Cooldown = Duration.Minutes(30),\n    EstimatedInstanceWarmup = Duration.Minutes(30),\n    MetricAggregationType = MetricAggregationType.AVERAGE,\n    MinAdjustmentMagnitude = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.core.*;\n\nAutoScalingGroup autoScalingGroup;\n\nStepScalingActionProps stepScalingActionProps = StepScalingActionProps.builder()\n        .autoScalingGroup(autoScalingGroup)\n\n        // the properties below are optional\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .cooldown(Duration.minutes(30))\n        .estimatedInstanceWarmup(Duration.minutes(30))\n        .metricAggregationType(MetricAggregationType.AVERAGE)\n        .minAdjustmentMagnitude(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar autoScalingGroup autoScalingGroup\n\nstepScalingActionProps := &stepScalingActionProps{\n\tautoScalingGroup: autoScalingGroup,\n\n\t// the properties below are optional\n\tadjustmentType: autoscaling.adjustmentType_CHANGE_IN_CAPACITY,\n\tcooldown: cdk.duration.minutes(jsii.Number(30)),\n\testimatedInstanceWarmup: cdk.*duration.minutes(jsii.Number(30)),\n\tmetricAggregationType: autoscaling.metricAggregationType_AVERAGE,\n\tminAdjustmentMagnitude: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\nconst stepScalingActionProps: autoscaling.StepScalingActionProps = {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.StepScalingActionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AdjustmentType",
        "@aws-cdk/aws-autoscaling.AdjustmentType#CHANGE_IN_CAPACITY",
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.MetricAggregationType",
        "@aws-cdk/aws-autoscaling.MetricAggregationType#AVERAGE",
        "@aws-cdk/aws-autoscaling.StepScalingActionProps",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepScalingActionProps: autoscaling.StepScalingActionProps = {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 2,
        "75": 27,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 8,
        "196": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "41f388978aa15c0582fc4105ed8b1cad40dd2becab9d127601313f378bc0dfc5"
    },
    "f15e96f15a255a78d735df4157ab9de86847ed8af9d708780f97f3a3a50a5d58": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.core as cdk\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n# metric: cloudwatch.Metric\n\nstep_scaling_policy = autoscaling.StepScalingPolicy(self, \"MyStepScalingPolicy\",\n    auto_scaling_group=auto_scaling_group,\n    metric=metric,\n    scaling_steps=[autoscaling.ScalingInterval(\n        change=123,\n\n        # the properties below are optional\n        lower=123,\n        upper=123\n    )],\n\n    # the properties below are optional\n    adjustment_type=autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n    cooldown=cdk.Duration.minutes(30),\n    estimated_instance_warmup=cdk.Duration.minutes(30),\n    evaluation_periods=123,\n    metric_aggregation_type=autoscaling.MetricAggregationType.AVERAGE,\n    min_adjustment_magnitude=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK;\n\nAutoScalingGroup autoScalingGroup;\nMetric metric;\nStepScalingPolicy stepScalingPolicy = new StepScalingPolicy(this, \"MyStepScalingPolicy\", new StepScalingPolicyProps {\n    AutoScalingGroup = autoScalingGroup,\n    Metric = metric,\n    ScalingSteps = new [] { new ScalingInterval {\n        Change = 123,\n\n        // the properties below are optional\n        Lower = 123,\n        Upper = 123\n    } },\n\n    // the properties below are optional\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY,\n    Cooldown = Duration.Minutes(30),\n    EstimatedInstanceWarmup = Duration.Minutes(30),\n    EvaluationPeriods = 123,\n    MetricAggregationType = MetricAggregationType.AVERAGE,\n    MinAdjustmentMagnitude = 123\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.core.*;\n\nAutoScalingGroup autoScalingGroup;\nMetric metric;\n\nStepScalingPolicy stepScalingPolicy = StepScalingPolicy.Builder.create(this, \"MyStepScalingPolicy\")\n        .autoScalingGroup(autoScalingGroup)\n        .metric(metric)\n        .scalingSteps(List.of(ScalingInterval.builder()\n                .change(123)\n\n                // the properties below are optional\n                .lower(123)\n                .upper(123)\n                .build()))\n\n        // the properties below are optional\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .cooldown(Duration.minutes(30))\n        .estimatedInstanceWarmup(Duration.minutes(30))\n        .evaluationPeriods(123)\n        .metricAggregationType(MetricAggregationType.AVERAGE)\n        .minAdjustmentMagnitude(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar autoScalingGroup autoScalingGroup\nvar metric metric\n\nstepScalingPolicy := autoscaling.NewStepScalingPolicy(this, jsii.String(\"MyStepScalingPolicy\"), &stepScalingPolicyProps{\n\tautoScalingGroup: autoScalingGroup,\n\tmetric: metric,\n\tscalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tchange: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tlower: jsii.Number(123),\n\t\t\tupper: jsii.Number(123),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tadjustmentType: autoscaling.adjustmentType_CHANGE_IN_CAPACITY,\n\tcooldown: cdk.duration.minutes(jsii.Number(30)),\n\testimatedInstanceWarmup: cdk.*duration.minutes(jsii.Number(30)),\n\tevaluationPeriods: jsii.Number(123),\n\tmetricAggregationType: autoscaling.metricAggregationType_AVERAGE,\n\tminAdjustmentMagnitude: jsii.Number(123),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\nconst stepScalingPolicy = new autoscaling.StepScalingPolicy(this, 'MyStepScalingPolicy', {\n  autoScalingGroup: autoScalingGroup,\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  evaluationPeriods: 123,\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AdjustmentType",
        "@aws-cdk/aws-autoscaling.AdjustmentType#CHANGE_IN_CAPACITY",
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.MetricAggregationType",
        "@aws-cdk/aws-autoscaling.MetricAggregationType#AVERAGE",
        "@aws-cdk/aws-autoscaling.StepScalingPolicy",
        "@aws-cdk/aws-autoscaling.StepScalingPolicyProps",
        "@aws-cdk/aws-cloudwatch.IMetric",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepScalingPolicy = new autoscaling.StepScalingPolicy(this, 'MyStepScalingPolicy', {\n  autoScalingGroup: autoScalingGroup,\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  evaluationPeriods: 123,\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 7,
        "10": 4,
        "75": 38,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 2,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "3a1d45eaf594e8d9b693bb1ce6cf335c52fd1a19aa4a0e1c4ab389e7fc90e6df"
    },
    "d4570d785c6e03009120e0a6e28afc7523a512d1cdca8438272a569fe14dc8ce": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.core as cdk\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n# metric: cloudwatch.Metric\n\nstep_scaling_policy_props = autoscaling.StepScalingPolicyProps(\n    auto_scaling_group=auto_scaling_group,\n    metric=metric,\n    scaling_steps=[autoscaling.ScalingInterval(\n        change=123,\n\n        # the properties below are optional\n        lower=123,\n        upper=123\n    )],\n\n    # the properties below are optional\n    adjustment_type=autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n    cooldown=cdk.Duration.minutes(30),\n    estimated_instance_warmup=cdk.Duration.minutes(30),\n    evaluation_periods=123,\n    metric_aggregation_type=autoscaling.MetricAggregationType.AVERAGE,\n    min_adjustment_magnitude=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK;\n\nAutoScalingGroup autoScalingGroup;\nMetric metric;\nStepScalingPolicyProps stepScalingPolicyProps = new StepScalingPolicyProps {\n    AutoScalingGroup = autoScalingGroup,\n    Metric = metric,\n    ScalingSteps = new [] { new ScalingInterval {\n        Change = 123,\n\n        // the properties below are optional\n        Lower = 123,\n        Upper = 123\n    } },\n\n    // the properties below are optional\n    AdjustmentType = AdjustmentType.CHANGE_IN_CAPACITY,\n    Cooldown = Duration.Minutes(30),\n    EstimatedInstanceWarmup = Duration.Minutes(30),\n    EvaluationPeriods = 123,\n    MetricAggregationType = MetricAggregationType.AVERAGE,\n    MinAdjustmentMagnitude = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.core.*;\n\nAutoScalingGroup autoScalingGroup;\nMetric metric;\n\nStepScalingPolicyProps stepScalingPolicyProps = StepScalingPolicyProps.builder()\n        .autoScalingGroup(autoScalingGroup)\n        .metric(metric)\n        .scalingSteps(List.of(ScalingInterval.builder()\n                .change(123)\n\n                // the properties below are optional\n                .lower(123)\n                .upper(123)\n                .build()))\n\n        // the properties below are optional\n        .adjustmentType(AdjustmentType.CHANGE_IN_CAPACITY)\n        .cooldown(Duration.minutes(30))\n        .estimatedInstanceWarmup(Duration.minutes(30))\n        .evaluationPeriods(123)\n        .metricAggregationType(MetricAggregationType.AVERAGE)\n        .minAdjustmentMagnitude(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar autoScalingGroup autoScalingGroup\nvar metric metric\n\nstepScalingPolicyProps := &stepScalingPolicyProps{\n\tautoScalingGroup: autoScalingGroup,\n\tmetric: metric,\n\tscalingSteps: []scalingInterval{\n\t\t&scalingInterval{\n\t\t\tchange: jsii.Number(123),\n\n\t\t\t// the properties below are optional\n\t\t\tlower: jsii.Number(123),\n\t\t\tupper: jsii.Number(123),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tadjustmentType: autoscaling.adjustmentType_CHANGE_IN_CAPACITY,\n\tcooldown: cdk.duration.minutes(jsii.Number(30)),\n\testimatedInstanceWarmup: cdk.*duration.minutes(jsii.Number(30)),\n\tevaluationPeriods: jsii.Number(123),\n\tmetricAggregationType: autoscaling.metricAggregationType_AVERAGE,\n\tminAdjustmentMagnitude: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\nconst stepScalingPolicyProps: autoscaling.StepScalingPolicyProps = {\n  autoScalingGroup: autoScalingGroup,\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  evaluationPeriods: 123,\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.StepScalingPolicyProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AdjustmentType",
        "@aws-cdk/aws-autoscaling.AdjustmentType#CHANGE_IN_CAPACITY",
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.MetricAggregationType",
        "@aws-cdk/aws-autoscaling.MetricAggregationType#AVERAGE",
        "@aws-cdk/aws-autoscaling.StepScalingPolicyProps",
        "@aws-cdk/aws-cloudwatch.IMetric",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stepScalingPolicyProps: autoscaling.StepScalingPolicyProps = {\n  autoScalingGroup: autoScalingGroup,\n  metric: metric,\n  scalingSteps: [{\n    change: 123,\n\n    // the properties below are optional\n    lower: 123,\n    upper: 123,\n  }],\n\n  // the properties below are optional\n  adjustmentType: autoscaling.AdjustmentType.CHANGE_IN_CAPACITY,\n  cooldown: cdk.Duration.minutes(30),\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  evaluationPeriods: 123,\n  metricAggregationType: autoscaling.MetricAggregationType.AVERAGE,\n  minAdjustmentMagnitude: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 7,
        "10": 3,
        "75": 38,
        "130": 2,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 2,
        "194": 8,
        "196": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "deabd9f495ccb266ff1af78e8f23f2cfa7a62655c5f2f7d8ff43729fd77eb00a"
    },
    "e76f2027ac42879653ecbe31e0f0e8db0942d023a83d43e8b96f0f21d329b21a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.core as cdk\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n# metric: cloudwatch.Metric\n\ntarget_tracking_scaling_policy = autoscaling.TargetTrackingScalingPolicy(self, \"MyTargetTrackingScalingPolicy\",\n    auto_scaling_group=auto_scaling_group,\n    target_value=123,\n\n    # the properties below are optional\n    cooldown=cdk.Duration.minutes(30),\n    custom_metric=metric,\n    disable_scale_in=False,\n    estimated_instance_warmup=cdk.Duration.minutes(30),\n    predefined_metric=autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n    resource_label=\"resourceLabel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK;\n\nAutoScalingGroup autoScalingGroup;\nMetric metric;\nTargetTrackingScalingPolicy targetTrackingScalingPolicy = new TargetTrackingScalingPolicy(this, \"MyTargetTrackingScalingPolicy\", new TargetTrackingScalingPolicyProps {\n    AutoScalingGroup = autoScalingGroup,\n    TargetValue = 123,\n\n    // the properties below are optional\n    Cooldown = Duration.Minutes(30),\n    CustomMetric = metric,\n    DisableScaleIn = false,\n    EstimatedInstanceWarmup = Duration.Minutes(30),\n    PredefinedMetric = PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n    ResourceLabel = \"resourceLabel\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.core.*;\n\nAutoScalingGroup autoScalingGroup;\nMetric metric;\n\nTargetTrackingScalingPolicy targetTrackingScalingPolicy = TargetTrackingScalingPolicy.Builder.create(this, \"MyTargetTrackingScalingPolicy\")\n        .autoScalingGroup(autoScalingGroup)\n        .targetValue(123)\n\n        // the properties below are optional\n        .cooldown(Duration.minutes(30))\n        .customMetric(metric)\n        .disableScaleIn(false)\n        .estimatedInstanceWarmup(Duration.minutes(30))\n        .predefinedMetric(PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION)\n        .resourceLabel(\"resourceLabel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar autoScalingGroup autoScalingGroup\nvar metric metric\n\ntargetTrackingScalingPolicy := autoscaling.NewTargetTrackingScalingPolicy(this, jsii.String(\"MyTargetTrackingScalingPolicy\"), &targetTrackingScalingPolicyProps{\n\tautoScalingGroup: autoScalingGroup,\n\ttargetValue: jsii.Number(123),\n\n\t// the properties below are optional\n\tcooldown: cdk.duration.minutes(jsii.Number(30)),\n\tcustomMetric: metric,\n\tdisableScaleIn: jsii.Boolean(false),\n\testimatedInstanceWarmup: cdk.*duration.minutes(jsii.Number(30)),\n\tpredefinedMetric: autoscaling.predefinedMetric_ASG_AVERAGE_CPU_UTILIZATION,\n\tresourceLabel: jsii.String(\"resourceLabel\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\nconst targetTrackingScalingPolicy = new autoscaling.TargetTrackingScalingPolicy(this, 'MyTargetTrackingScalingPolicy', {\n  autoScalingGroup: autoScalingGroup,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.PredefinedMetric",
        "@aws-cdk/aws-autoscaling.PredefinedMetric#ASG_AVERAGE_CPU_UTILIZATION",
        "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicy",
        "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicyProps",
        "@aws-cdk/aws-cloudwatch.IMetric",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetTrackingScalingPolicy = new autoscaling.TargetTrackingScalingPolicy(this, 'MyTargetTrackingScalingPolicy', {\n  autoScalingGroup: autoScalingGroup,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 5,
        "75": 31,
        "91": 1,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 7,
        "196": 2,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "4098e99738d5a4db1c82fc8b59dc7b61fbdd77c7f327bd280ddc812d4210b5e2"
    },
    "d167c799a6e78b359e9d9f3aab63c3281ce0fe42e659ed4eb644d9d9182e6043": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_cloudwatch as cloudwatch\nimport aws_cdk.core as cdk\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n# metric: cloudwatch.Metric\n\ntarget_tracking_scaling_policy_props = autoscaling.TargetTrackingScalingPolicyProps(\n    auto_scaling_group=auto_scaling_group,\n    target_value=123,\n\n    # the properties below are optional\n    cooldown=cdk.Duration.minutes(30),\n    custom_metric=metric,\n    disable_scale_in=False,\n    estimated_instance_warmup=cdk.Duration.minutes(30),\n    predefined_metric=autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n    resource_label=\"resourceLabel\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.CloudWatch;\nusing Amazon.CDK;\n\nAutoScalingGroup autoScalingGroup;\nMetric metric;\nTargetTrackingScalingPolicyProps targetTrackingScalingPolicyProps = new TargetTrackingScalingPolicyProps {\n    AutoScalingGroup = autoScalingGroup,\n    TargetValue = 123,\n\n    // the properties below are optional\n    Cooldown = Duration.Minutes(30),\n    CustomMetric = metric,\n    DisableScaleIn = false,\n    EstimatedInstanceWarmup = Duration.Minutes(30),\n    PredefinedMetric = PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n    ResourceLabel = \"resourceLabel\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.*;\nimport software.amazon.awscdk.core.*;\n\nAutoScalingGroup autoScalingGroup;\nMetric metric;\n\nTargetTrackingScalingPolicyProps targetTrackingScalingPolicyProps = TargetTrackingScalingPolicyProps.builder()\n        .autoScalingGroup(autoScalingGroup)\n        .targetValue(123)\n\n        // the properties below are optional\n        .cooldown(Duration.minutes(30))\n        .customMetric(metric)\n        .disableScaleIn(false)\n        .estimatedInstanceWarmup(Duration.minutes(30))\n        .predefinedMetric(PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION)\n        .resourceLabel(\"resourceLabel\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar autoScalingGroup autoScalingGroup\nvar metric metric\n\ntargetTrackingScalingPolicyProps := &targetTrackingScalingPolicyProps{\n\tautoScalingGroup: autoScalingGroup,\n\ttargetValue: jsii.Number(123),\n\n\t// the properties below are optional\n\tcooldown: cdk.duration.minutes(jsii.Number(30)),\n\tcustomMetric: metric,\n\tdisableScaleIn: jsii.Boolean(false),\n\testimatedInstanceWarmup: cdk.*duration.minutes(jsii.Number(30)),\n\tpredefinedMetric: autoscaling.predefinedMetric_ASG_AVERAGE_CPU_UTILIZATION,\n\tresourceLabel: jsii.String(\"resourceLabel\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\nconst targetTrackingScalingPolicyProps: autoscaling.TargetTrackingScalingPolicyProps = {\n  autoScalingGroup: autoScalingGroup,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicyProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.PredefinedMetric",
        "@aws-cdk/aws-autoscaling.PredefinedMetric#ASG_AVERAGE_CPU_UTILIZATION",
        "@aws-cdk/aws-autoscaling.TargetTrackingScalingPolicyProps",
        "@aws-cdk/aws-cloudwatch.IMetric",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\ndeclare const metric: cloudwatch.Metric;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetTrackingScalingPolicyProps: autoscaling.TargetTrackingScalingPolicyProps = {\n  autoScalingGroup: autoScalingGroup,\n  targetValue: 123,\n\n  // the properties below are optional\n  cooldown: cdk.Duration.minutes(30),\n  customMetric: metric,\n  disableScaleIn: false,\n  estimatedInstanceWarmup: cdk.Duration.minutes(30),\n  predefinedMetric: autoscaling.PredefinedMetric.ASG_AVERAGE_CPU_UTILIZATION,\n  resourceLabel: 'resourceLabel',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 4,
        "75": 31,
        "91": 1,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "194": 6,
        "196": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "162836898992a1bc357b45c13894a4f4f7f7b398a980a46a50e378eca4107b8e"
    },
    "ca701749b1e79276b6fb8f0c1ff9525ccdfc8432e3414da07c3f996ff1825e26": {
      "translations": {
        "python": {
          "source": "# vpc: ec2.Vpc\n# instance_type: ec2.InstanceType\n# machine_image: ec2.IMachineImage\n\n\nautoscaling.AutoScalingGroup(self, \"ASG\",\n    vpc=vpc,\n    instance_type=instance_type,\n    machine_image=machine_image,\n\n    # ...\n\n    termination_policies=[autoscaling.TerminationPolicy.OLDEST_INSTANCE, autoscaling.TerminationPolicy.DEFAULT\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nnew AutoScalingGroup(this, \"ASG\", new AutoScalingGroupProps {\n    Vpc = vpc,\n    InstanceType = instanceType,\n    MachineImage = machineImage,\n\n    // ...\n\n    TerminationPolicies = new [] { TerminationPolicy.OLDEST_INSTANCE, TerminationPolicy.DEFAULT }\n});",
          "version": "1"
        },
        "java": {
          "source": "Vpc vpc;\nInstanceType instanceType;\nIMachineImage machineImage;\n\n\nAutoScalingGroup.Builder.create(this, \"ASG\")\n        .vpc(vpc)\n        .instanceType(instanceType)\n        .machineImage(machineImage)\n\n        // ...\n\n        .terminationPolicies(List.of(TerminationPolicy.OLDEST_INSTANCE, TerminationPolicy.DEFAULT))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var vpc vpc\nvar instanceType instanceType\nvar machineImage iMachineImage\n\n\nautoscaling.NewAutoScalingGroup(this, jsii.String(\"ASG\"), &autoScalingGroupProps{\n\tvpc: vpc,\n\tinstanceType: instanceType,\n\tmachineImage: machineImage,\n\n\t// ...\n\n\tterminationPolicies: []terminationPolicy{\n\t\tautoscaling.*terminationPolicy_OLDEST_INSTANCE,\n\t\tautoscaling.*terminationPolicy_DEFAULT,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  terminationPolicies: [\n    autoscaling.TerminationPolicy.OLDEST_INSTANCE,\n    autoscaling.TerminationPolicy.DEFAULT,\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.TerminationPolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.AutoScalingGroup",
        "@aws-cdk/aws-autoscaling.AutoScalingGroupProps",
        "@aws-cdk/aws-autoscaling.TerminationPolicy",
        "@aws-cdk/aws-autoscaling.TerminationPolicy#DEFAULT",
        "@aws-cdk/aws-autoscaling.TerminationPolicy#OLDEST_INSTANCE",
        "@aws-cdk/aws-ec2.IMachineImage",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.InstanceType",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const vpc: ec2.Vpc;\ndeclare const instanceType: ec2.InstanceType;\ndeclare const machineImage: ec2.IMachineImage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew autoscaling.AutoScalingGroup(this, 'ASG', {\n  vpc,\n  instanceType,\n  machineImage,\n\n  // ...\n\n  terminationPolicies: [\n    autoscaling.TerminationPolicy.OLDEST_INSTANCE,\n    autoscaling.TerminationPolicy.DEFAULT,\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 21,
        "104": 1,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 1,
        "193": 1,
        "194": 5,
        "197": 1,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 1,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "bdf8f53fadf8f952710b60fef26ddbd31b09925e614e36809913bb2f689b78b3"
    },
    "63114f9af7eab99671d3875e7b368f80fcee9aac4c7368b18d395f591662a474": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\nupdate_policy = autoscaling.UpdatePolicy.replacing_update()",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nUpdatePolicy updatePolicy = UpdatePolicy.ReplacingUpdate();",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nUpdatePolicy updatePolicy = UpdatePolicy.replacingUpdate();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nupdatePolicy := autoscaling.updatePolicy.replacingUpdate()",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nconst updatePolicy = autoscaling.UpdatePolicy.replacingUpdate();",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.UpdatePolicy"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.UpdatePolicy",
        "@aws-cdk/aws-autoscaling.UpdatePolicy#replacingUpdate"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst updatePolicy = autoscaling.UpdatePolicy.replacingUpdate();\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "194": 2,
        "196": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "5bba7e203142e83c311e80806729bf493c53d690a34e8096c8383f02f1d1edb1"
    },
    "b26579dfbf12a424a1d7306d806f4fdf54e06faedc237c6199b904b2ed0f7f75": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n\nwarm_pool = autoscaling.WarmPool(self, \"MyWarmPool\",\n    auto_scaling_group=auto_scaling_group,\n\n    # the properties below are optional\n    max_group_prepared_capacity=123,\n    min_size=123,\n    pool_state=autoscaling.PoolState.HIBERNATED,\n    reuse_on_scale_in=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nAutoScalingGroup autoScalingGroup;\n\nWarmPool warmPool = new WarmPool(this, \"MyWarmPool\", new WarmPoolProps {\n    AutoScalingGroup = autoScalingGroup,\n\n    // the properties below are optional\n    MaxGroupPreparedCapacity = 123,\n    MinSize = 123,\n    PoolState = PoolState.HIBERNATED,\n    ReuseOnScaleIn = false\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nAutoScalingGroup autoScalingGroup;\n\nWarmPool warmPool = WarmPool.Builder.create(this, \"MyWarmPool\")\n        .autoScalingGroup(autoScalingGroup)\n\n        // the properties below are optional\n        .maxGroupPreparedCapacity(123)\n        .minSize(123)\n        .poolState(PoolState.HIBERNATED)\n        .reuseOnScaleIn(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nvar autoScalingGroup autoScalingGroup\n\nwarmPool := autoscaling.NewWarmPool(this, jsii.String(\"MyWarmPool\"), &warmPoolProps{\n\tautoScalingGroup: autoScalingGroup,\n\n\t// the properties below are optional\n\tmaxGroupPreparedCapacity: jsii.Number(123),\n\tminSize: jsii.Number(123),\n\tpoolState: autoscaling.poolState_HIBERNATED,\n\treuseOnScaleIn: jsii.Boolean(false),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\nconst warmPool = new autoscaling.WarmPool(this, 'MyWarmPool', {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: autoscaling.PoolState.HIBERNATED,\n  reuseOnScaleIn: false,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.WarmPool"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.PoolState",
        "@aws-cdk/aws-autoscaling.PoolState#HIBERNATED",
        "@aws-cdk/aws-autoscaling.WarmPool",
        "@aws-cdk/aws-autoscaling.WarmPoolProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst warmPool = new autoscaling.WarmPool(this, 'MyWarmPool', {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: autoscaling.PoolState.HIBERNATED,\n  reuseOnScaleIn: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 16,
        "91": 1,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "815d7b2a8a27fe205a144a8a248e03a2fb8476b11273b1c0f1d074881245a19c"
    },
    "0dd79fc4e858f435a1ea5e41e18b8362c6dd7e71f46c25935ef839c668d725ed": {
      "translations": {
        "python": {
          "source": "# auto_scaling_group: autoscaling.AutoScalingGroup\n\n\nauto_scaling_group.add_warm_pool(\n    min_size=1,\n    reuse_on_scale_in=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.AddWarmPool(new WarmPoolOptions {\n    MinSize = 1,\n    ReuseOnScaleIn = true\n});",
          "version": "1"
        },
        "java": {
          "source": "AutoScalingGroup autoScalingGroup;\n\n\nautoScalingGroup.addWarmPool(WarmPoolOptions.builder()\n        .minSize(1)\n        .reuseOnScaleIn(true)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var autoScalingGroup autoScalingGroup\n\n\nautoScalingGroup.addWarmPool(&warmPoolOptions{\n\tminSize: jsii.Number(1),\n\treuseOnScaleIn: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const autoScalingGroup: autoscaling.AutoScalingGroup;\n\nautoScalingGroup.addWarmPool({\n  minSize: 1,\n  reuseOnScaleIn: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.WarmPoolOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.WarmPoolOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct, Node } from 'constructs';\nimport { Aspects, CfnOutput, Stack, Duration, Resource, SecretValue } from '@aws-cdk/core';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as iam from '@aws-cdk/aws-iam';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nautoScalingGroup.addWarmPool({\n  minSize: 1,\n  reuseOnScaleIn: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n\n",
      "syntaxKindCounter": {
        "8": 1,
        "75": 7,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "68c6d143caa6650a04d8981796c1fd9e642b14bbeb9f9f8bea0761e3e14a132e"
    },
    "175398ce576b4108e39b472390a9ddf51cbd7752676f04d75e870d94666dd55a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\n\n# auto_scaling_group: autoscaling.AutoScalingGroup\n\nwarm_pool_props = autoscaling.WarmPoolProps(\n    auto_scaling_group=auto_scaling_group,\n\n    # the properties below are optional\n    max_group_prepared_capacity=123,\n    min_size=123,\n    pool_state=autoscaling.PoolState.HIBERNATED,\n    reuse_on_scale_in=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\n\nAutoScalingGroup autoScalingGroup;\n\nWarmPoolProps warmPoolProps = new WarmPoolProps {\n    AutoScalingGroup = autoScalingGroup,\n\n    // the properties below are optional\n    MaxGroupPreparedCapacity = 123,\n    MinSize = 123,\n    PoolState = PoolState.HIBERNATED,\n    ReuseOnScaleIn = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\n\nAutoScalingGroup autoScalingGroup;\n\nWarmPoolProps warmPoolProps = WarmPoolProps.builder()\n        .autoScalingGroup(autoScalingGroup)\n\n        // the properties below are optional\n        .maxGroupPreparedCapacity(123)\n        .minSize(123)\n        .poolState(PoolState.HIBERNATED)\n        .reuseOnScaleIn(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\n\nvar autoScalingGroup autoScalingGroup\n\nwarmPoolProps := &warmPoolProps{\n\tautoScalingGroup: autoScalingGroup,\n\n\t// the properties below are optional\n\tmaxGroupPreparedCapacity: jsii.Number(123),\n\tminSize: jsii.Number(123),\n\tpoolState: autoscaling.poolState_HIBERNATED,\n\treuseOnScaleIn: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\nconst warmPoolProps: autoscaling.WarmPoolProps = {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: autoscaling.PoolState.HIBERNATED,\n  reuseOnScaleIn: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-autoscaling.WarmPoolProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-autoscaling.IAutoScalingGroup",
        "@aws-cdk/aws-autoscaling.PoolState",
        "@aws-cdk/aws-autoscaling.PoolState#HIBERNATED",
        "@aws-cdk/aws-autoscaling.WarmPoolProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\n\ndeclare const autoScalingGroup: autoscaling.AutoScalingGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst warmPoolProps: autoscaling.WarmPoolProps = {\n  autoScalingGroup: autoScalingGroup,\n\n  // the properties below are optional\n  maxGroupPreparedCapacity: 123,\n  minSize: 123,\n  poolState: autoscaling.PoolState.HIBERNATED,\n  reuseOnScaleIn: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 16,
        "91": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "29005dc9ec033dbd5fc7b942de128ea67b9b6a5275f41a35f84356dfe8803714"
    }
  }
}