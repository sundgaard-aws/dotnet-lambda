{
  "version": "2",
  "toolVersion": "1.74.0",
  "snippets": {
    "06137b6a8b790e724cc802af2e87d3b67c4c6a4e477b59766fef8d28557f7e9e": {
      "translations": {
        "python": {
          "source": "my_bucket = s3.Bucket(self, \"myBucket\")\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.S3Origin(my_bucket))\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new S3Origin(myBucket) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder().origin(new S3Origin(myBucket)).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "myBucket := s3.NewBucket(this, jsii.String(\"myBucket\"))\ncloudfront.NewDistribution(this, jsii.String(\"myDist\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewS3Origin(myBucket),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 20
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 10,
        "104": 2,
        "193": 2,
        "194": 3,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "6054c3dea3fc10aee00036440bb01052c5da960b61f593cd0ffe90e4c34b1bc9"
    },
    "99a08706079366dba2bd998a43a6a433fdf21a27872ea26ac669f9e3d02d0a8d": {
      "translations": {
        "python": {
          "source": "my_bucket = s3.Bucket(self, \"myBucket\")\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.S3Origin(my_bucket,\n        custom_headers={\n            \"Foo\": \"bar\"\n        }\n    ))\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new S3Origin(myBucket, new S3OriginProps {\n        CustomHeaders = new Dictionary<string, string> {\n            { \"Foo\", \"bar\" }\n        }\n    }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder().origin(S3Origin.Builder.create(myBucket)\n                .customHeaders(Map.of(\n                        \"Foo\", \"bar\"))\n                .build()).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "myBucket := s3.NewBucket(this, jsii.String(\"myBucket\"))\ncloudfront.NewDistribution(this, jsii.String(\"myDist\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewS3Origin(myBucket, &s3OriginProps{\n\t\t\tcustomHeaders: map[string]*string{\n\t\t\t\t\"Foo\": jsii.String(\"bar\"),\n\t\t\t},\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket, {\n    customHeaders: {\n      Foo: 'bar',\n    },\n  })},\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 37
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront-origins.S3OriginProps",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket, {\n    customHeaders: {\n      Foo: 'bar',\n    },\n  })},\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 12,
        "104": 2,
        "193": 4,
        "194": 3,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 4
      },
      "fqnsFingerprint": "de968fd4d13b253fa16ab22003e78b1d2dd92f6ddbef982afaeaced53f3587e5"
    },
    "5cc218de4623870103bd8187b377411674e970ebd47b4208bf559138659ecc45": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# vpc: ec2.Vpc\n\n# Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n# for CloudFront to access the load balancer and use it as an origin.\nlb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.LoadBalancerV2Origin(lb))\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nVpc vpc;\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new LoadBalancerV2Origin(lb) }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nVpc vpc;\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder().origin(new LoadBalancerV2Origin(lb)).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar vpc vpc\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nlb := elbv2.NewApplicationLoadBalancer(this, jsii.String(\"LB\"), &applicationLoadBalancerProps{\n\tvpc: vpc,\n\tinternetFacing: jsii.Boolean(true),\n})\ncloudfront.NewDistribution(this, jsii.String(\"myDist\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewLoadBalancerV2Origin(lb),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const vpc: ec2.Vpc;\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 53
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 17,
        "104": 2,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 3,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "e8fe61df5ea6779d1786c8e56fac606fa3fc998ec51aa9b1fffb3cf6a5288c47"
    },
    "a270d41675f0bf7474a350a02abede82902bb9a87e18e338bc970bf64866367b": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# load_balancer: elbv2.ApplicationLoadBalancer\n\norigin = origins.LoadBalancerV2Origin(load_balancer,\n    connection_attempts=3,\n    connection_timeout=Duration.seconds(5),\n    read_timeout=Duration.seconds(45),\n    keepalive_timeout=Duration.seconds(45),\n    protocol_policy=cloudfront.OriginProtocolPolicy.MATCH_VIEWER\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationLoadBalancer loadBalancer;\n\nLoadBalancerV2Origin origin = new LoadBalancerV2Origin(loadBalancer, new LoadBalancerV2OriginProps {\n    ConnectionAttempts = 3,\n    ConnectionTimeout = Duration.Seconds(5),\n    ReadTimeout = Duration.Seconds(45),\n    KeepaliveTimeout = Duration.Seconds(45),\n    ProtocolPolicy = OriginProtocolPolicy.MATCH_VIEWER\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationLoadBalancer loadBalancer;\n\nLoadBalancerV2Origin origin = LoadBalancerV2Origin.Builder.create(loadBalancer)\n        .connectionAttempts(3)\n        .connectionTimeout(Duration.seconds(5))\n        .readTimeout(Duration.seconds(45))\n        .keepaliveTimeout(Duration.seconds(45))\n        .protocolPolicy(OriginProtocolPolicy.MATCH_VIEWER)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar loadBalancer applicationLoadBalancer\n\norigin := origins.NewLoadBalancerV2Origin(loadBalancer, &loadBalancerV2OriginProps{\n\tconnectionAttempts: jsii.Number(3),\n\tconnectionTimeout: *awscdkcore.Duration.seconds(jsii.Number(5)),\n\treadTimeout: *awscdkcore.Duration.seconds(jsii.Number(45)),\n\tkeepaliveTimeout: *awscdkcore.Duration.seconds(jsii.Number(45)),\n\tprotocolPolicy: cloudfront.originProtocolPolicy_MATCH_VIEWER,\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const loadBalancer: elbv2.ApplicationLoadBalancer;\nconst origin = new origins.LoadBalancerV2Origin(loadBalancer, {\n  connectionAttempts: 3,\n  connectionTimeout: Duration.seconds(5),\n  readTimeout: Duration.seconds(45),\n  keepaliveTimeout: Duration.seconds(45),\n  protocolPolicy: cloudfront.OriginProtocolPolicy.MATCH_VIEWER,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 71
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2Origin",
        "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2OriginProps",
        "@aws-cdk/aws-cloudfront.OriginProtocolPolicy",
        "@aws-cdk/aws-cloudfront.OriginProtocolPolicy#MATCH_VIEWER",
        "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#seconds"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const loadBalancer: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst origin = new origins.LoadBalancerV2Origin(loadBalancer, {\n  connectionAttempts: 3,\n  connectionTimeout: Duration.seconds(5),\n  readTimeout: Duration.seconds(45),\n  keepaliveTimeout: Duration.seconds(45),\n  protocolPolicy: cloudfront.OriginProtocolPolicy.MATCH_VIEWER,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 1,
        "75": 22,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 6,
        "196": 3,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e89176c4dbdf444687a7395f9cc7fd604c0f068646307c2f7a7ace616768d74d"
    },
    "a2c0197f51c18384b282d3207cd211fbb5d656e2be38bb0f44b7873c6382411c": {
      "translations": {
        "python": {
          "source": "cloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.HttpOrigin(\"www.example.com\"))\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new HttpOrigin(\"www.example.com\") }\n});",
          "version": "1"
        },
        "java": {
          "source": "Distribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder().origin(new HttpOrigin(\"www.example.com\")).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "cloudfront.NewDistribution(this, jsii.String(\"myDist\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewHttpOrigin(jsii.String(\"www.example.com\")),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 92
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.HttpOrigin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "104": 1,
        "193": 2,
        "194": 2,
        "197": 2,
        "226": 1,
        "281": 2
      },
      "fqnsFingerprint": "9d4e5701c24c3d19592174d8634a0b76aa3c9a7351b3fee53c97e10691972495"
    },
    "2bc26656f58c7bb9f1d0b46eede4afff8323f982bbcde3d5caa41e8ca07e699b": {
      "translations": {
        "python": {
          "source": "my_bucket = s3.Bucket(self, \"myBucket\")\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(\n        origin=origins.OriginGroup(\n            primary_origin=origins.S3Origin(my_bucket),\n            fallback_origin=origins.HttpOrigin(\"www.example.com\"),\n            # optional, defaults to: 500, 502, 503 and 504\n            fallback_status_codes=[404]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions {\n        Origin = new OriginGroup(new OriginGroupProps {\n            PrimaryOrigin = new S3Origin(myBucket),\n            FallbackOrigin = new HttpOrigin(\"www.example.com\"),\n            // optional, defaults to: 500, 502, 503 and 504\n            FallbackStatusCodes = new [] { 404 }\n        })\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder()\n                .origin(OriginGroup.Builder.create()\n                        .primaryOrigin(new S3Origin(myBucket))\n                        .fallbackOrigin(new HttpOrigin(\"www.example.com\"))\n                        // optional, defaults to: 500, 502, 503 and 504\n                        .fallbackStatusCodes(List.of(404))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "myBucket := s3.NewBucket(this, jsii.String(\"myBucket\"))\ncloudfront.NewDistribution(this, jsii.String(\"myDist\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewOriginGroup(&originGroupProps{\n\t\t\tprimaryOrigin: origins.NewS3Origin(myBucket),\n\t\t\tfallbackOrigin: origins.NewHttpOrigin(jsii.String(\"www.example.com\")),\n\t\t\t// optional, defaults to: 500, 502, 503 and 504\n\t\t\tfallbackStatusCodes: []*f64{\n\t\t\t\tjsii.Number(404),\n\t\t\t},\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 108
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.HttpOrigin",
        "@aws-cdk/aws-cloudfront-origins.OriginGroup",
        "@aws-cdk/aws-cloudfront-origins.OriginGroupProps",
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 17,
        "104": 2,
        "192": 1,
        "193": 3,
        "194": 5,
        "197": 5,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5
      },
      "fqnsFingerprint": "4636586d701b8f093ae3a611fd4a43aa0c60866c24a7c7f0d175af207f722058"
    },
    "83c1983674c82d19a164eb07ec9df955e99ccd2919f4a245001aa6c931aea589": {
      "translations": {
        "python": {
          "source": "# api: apigateway.RestApi\n\ncloudfront.Distribution(self, \"Distribution\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.RestApiOrigin(api))\n)",
          "version": "2"
        },
        "csharp": {
          "source": "RestApi api;\n\nnew Distribution(this, \"Distribution\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new RestApiOrigin(api) }\n});",
          "version": "1"
        },
        "java": {
          "source": "RestApi api;\n\nDistribution.Builder.create(this, \"Distribution\")\n        .defaultBehavior(BehaviorOptions.builder().origin(new RestApiOrigin(api)).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var api restApi\n\ncloudfront.NewDistribution(this, jsii.String(\"Distribution\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewRestApiOrigin(api),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const api: apigateway.RestApi;\nnew cloudfront.Distribution(this, 'Distribution', {\n  defaultBehavior: { origin: new origins.RestApiOrigin(api) },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 127
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigateway.RestApi",
        "@aws-cdk/aws-cloudfront-origins.RestApiOrigin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const api: apigateway.RestApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew cloudfront.Distribution(this, 'Distribution', {\n  defaultBehavior: { origin: new origins.RestApiOrigin(api) },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 10,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "15e2a746ff775d54984d158ddb879f9a9c045fcbf6f29d3bd4237f4897afcfb6"
    },
    "c2d20f4ee9a8183411e65989a21894cc0b223d0f5450734daa8f09ea106e3b46": {
      "translations": {
        "python": {
          "source": "my_bucket = s3.Bucket(self, \"myBucket\")\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(\n        origin=origins.OriginGroup(\n            primary_origin=origins.S3Origin(my_bucket),\n            fallback_origin=origins.HttpOrigin(\"www.example.com\"),\n            # optional, defaults to: 500, 502, 503 and 504\n            fallback_status_codes=[404]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions {\n        Origin = new OriginGroup(new OriginGroupProps {\n            PrimaryOrigin = new S3Origin(myBucket),\n            FallbackOrigin = new HttpOrigin(\"www.example.com\"),\n            // optional, defaults to: 500, 502, 503 and 504\n            FallbackStatusCodes = new [] { 404 }\n        })\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder()\n                .origin(OriginGroup.Builder.create()\n                        .primaryOrigin(new S3Origin(myBucket))\n                        .fallbackOrigin(new HttpOrigin(\"www.example.com\"))\n                        // optional, defaults to: 500, 502, 503 and 504\n                        .fallbackStatusCodes(List.of(404))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "myBucket := s3.NewBucket(this, jsii.String(\"myBucket\"))\ncloudfront.NewDistribution(this, jsii.String(\"myDist\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewOriginGroup(&originGroupProps{\n\t\t\tprimaryOrigin: origins.NewS3Origin(myBucket),\n\t\t\tfallbackOrigin: origins.NewHttpOrigin(jsii.String(\"www.example.com\")),\n\t\t\t// optional, defaults to: 500, 502, 503 and 504\n\t\t\tfallbackStatusCodes: []*f64{\n\t\t\t\tjsii.Number(404),\n\t\t\t},\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.HttpOrigin"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.HttpOrigin",
        "@aws-cdk/aws-cloudfront-origins.OriginGroup",
        "@aws-cdk/aws-cloudfront-origins.OriginGroupProps",
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 17,
        "104": 2,
        "192": 1,
        "193": 3,
        "194": 5,
        "197": 5,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5
      },
      "fqnsFingerprint": "4636586d701b8f093ae3a611fd4a43aa0c60866c24a7c7f0d175af207f722058"
    },
    "c73b8da0889e136f4dfbf6c0c431a4fb856fad58bb3435ed17cb22604522a374": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudfront as cloudfront\nimport aws_cdk.aws_cloudfront_origins as cloudfront_origins\nimport aws_cdk.core as cdk\n\nhttp_origin_props = cloudfront_origins.HttpOriginProps(\n    connection_attempts=123,\n    connection_timeout=cdk.Duration.minutes(30),\n    custom_headers={\n        \"custom_headers_key\": \"customHeaders\"\n    },\n    http_port=123,\n    https_port=123,\n    keepalive_timeout=cdk.Duration.minutes(30),\n    origin_path=\"originPath\",\n    origin_shield_region=\"originShieldRegion\",\n    origin_ssl_protocols=[cloudfront.OriginSslPolicy.SSL_V3],\n    protocol_policy=cloudfront.OriginProtocolPolicy.HTTP_ONLY,\n    read_timeout=cdk.Duration.minutes(30)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudFront;\nusing Amazon.CDK.AWS.CloudFront.Origins;\nusing Amazon.CDK;\nHttpOriginProps httpOriginProps = new HttpOriginProps {\n    ConnectionAttempts = 123,\n    ConnectionTimeout = Duration.Minutes(30),\n    CustomHeaders = new Dictionary<string, string> {\n        { \"customHeadersKey\", \"customHeaders\" }\n    },\n    HttpPort = 123,\n    HttpsPort = 123,\n    KeepaliveTimeout = Duration.Minutes(30),\n    OriginPath = \"originPath\",\n    OriginShieldRegion = \"originShieldRegion\",\n    OriginSslProtocols = new [] { OriginSslPolicy.SSL_V3 },\n    ProtocolPolicy = OriginProtocolPolicy.HTTP_ONLY,\n    ReadTimeout = Duration.Minutes(30)\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudfront.*;\nimport software.amazon.awscdk.services.cloudfront.origins.*;\nimport software.amazon.awscdk.core.*;\n\nHttpOriginProps httpOriginProps = HttpOriginProps.builder()\n        .connectionAttempts(123)\n        .connectionTimeout(Duration.minutes(30))\n        .customHeaders(Map.of(\n                \"customHeadersKey\", \"customHeaders\"))\n        .httpPort(123)\n        .httpsPort(123)\n        .keepaliveTimeout(Duration.minutes(30))\n        .originPath(\"originPath\")\n        .originShieldRegion(\"originShieldRegion\")\n        .originSslProtocols(List.of(OriginSslPolicy.SSL_V3))\n        .protocolPolicy(OriginProtocolPolicy.HTTP_ONLY)\n        .readTimeout(Duration.minutes(30))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudfront \"github.com/aws-samples/dummy/awscdkawscloudfront\"\nimport cloudfront_origins \"github.com/aws-samples/dummy/awscdkawscloudfrontorigins\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nhttpOriginProps := &httpOriginProps{\n\tconnectionAttempts: jsii.Number(123),\n\tconnectionTimeout: cdk.duration.minutes(jsii.Number(30)),\n\tcustomHeaders: map[string]*string{\n\t\t\"customHeadersKey\": jsii.String(\"customHeaders\"),\n\t},\n\thttpPort: jsii.Number(123),\n\thttpsPort: jsii.Number(123),\n\tkeepaliveTimeout: cdk.*duration.minutes(jsii.Number(30)),\n\toriginPath: jsii.String(\"originPath\"),\n\toriginShieldRegion: jsii.String(\"originShieldRegion\"),\n\toriginSslProtocols: []originSslPolicy{\n\t\tcloudfront.*originSslPolicy_SSL_V3,\n\t},\n\tprotocolPolicy: cloudfront.originProtocolPolicy_HTTP_ONLY,\n\treadTimeout: cdk.*duration.minutes(jsii.Number(30)),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as cloudfront_origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as cdk from '@aws-cdk/core';\nconst httpOriginProps: cloudfront_origins.HttpOriginProps = {\n  connectionAttempts: 123,\n  connectionTimeout: cdk.Duration.minutes(30),\n  customHeaders: {\n    customHeadersKey: 'customHeaders',\n  },\n  httpPort: 123,\n  httpsPort: 123,\n  keepaliveTimeout: cdk.Duration.minutes(30),\n  originPath: 'originPath',\n  originShieldRegion: 'originShieldRegion',\n  originSslProtocols: [cloudfront.OriginSslPolicy.SSL_V3],\n  protocolPolicy: cloudfront.OriginProtocolPolicy.HTTP_ONLY,\n  readTimeout: cdk.Duration.minutes(30),\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.HttpOriginProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.HttpOriginProps",
        "@aws-cdk/aws-cloudfront.OriginProtocolPolicy",
        "@aws-cdk/aws-cloudfront.OriginProtocolPolicy#HTTP_ONLY",
        "@aws-cdk/aws-cloudfront.OriginSslPolicy",
        "@aws-cdk/aws-cloudfront.OriginSslPolicy#SSL_V3",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as cloudfront_origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpOriginProps: cloudfront_origins.HttpOriginProps = {\n  connectionAttempts: 123,\n  connectionTimeout: cdk.Duration.minutes(30),\n  customHeaders: {\n    customHeadersKey: 'customHeaders',\n  },\n  httpPort: 123,\n  httpsPort: 123,\n  keepaliveTimeout: cdk.Duration.minutes(30),\n  originPath: 'originPath',\n  originShieldRegion: 'originShieldRegion',\n  originSslProtocols: [cloudfront.OriginSslPolicy.SSL_V3],\n  protocolPolicy: cloudfront.OriginProtocolPolicy.HTTP_ONLY,\n  readTimeout: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 6,
        "75": 33,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 10,
        "196": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "78f8b6c04c3cc7919fe377ad7966518fcab20adb7073b345e78e851d63234975"
    },
    "2a1ec2ea2d3ac6e9408ad51335521c71d4723cc7a0d8ea9a45871a9c69930f04": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# vpc: ec2.Vpc\n\n# Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n# for CloudFront to access the load balancer and use it as an origin.\nlb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.LoadBalancerV2Origin(lb))\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nVpc vpc;\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new LoadBalancerV2Origin(lb) }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nVpc vpc;\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder().origin(new LoadBalancerV2Origin(lb)).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\nimport elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar vpc vpc\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nlb := elbv2.NewApplicationLoadBalancer(this, jsii.String(\"LB\"), &applicationLoadBalancerProps{\n\tvpc: vpc,\n\tinternetFacing: jsii.Boolean(true),\n})\ncloudfront.NewDistribution(this, jsii.String(\"myDist\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewLoadBalancerV2Origin(lb),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const vpc: ec2.Vpc;\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2Origin"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 17,
        "104": 2,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 3,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "e8fe61df5ea6779d1786c8e56fac606fa3fc998ec51aa9b1fffb3cf6a5288c47"
    },
    "328c155f20c64f0489612780eb8014006177e3bb869cadaec8cec528bc2f0f06": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\n# load_balancer: elbv2.ApplicationLoadBalancer\n\norigin = origins.LoadBalancerV2Origin(load_balancer,\n    connection_attempts=3,\n    connection_timeout=Duration.seconds(5),\n    read_timeout=Duration.seconds(45),\n    keepalive_timeout=Duration.seconds(45),\n    protocol_policy=cloudfront.OriginProtocolPolicy.MATCH_VIEWER\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nApplicationLoadBalancer loadBalancer;\n\nLoadBalancerV2Origin origin = new LoadBalancerV2Origin(loadBalancer, new LoadBalancerV2OriginProps {\n    ConnectionAttempts = 3,\n    ConnectionTimeout = Duration.Seconds(5),\n    ReadTimeout = Duration.Seconds(45),\n    KeepaliveTimeout = Duration.Seconds(45),\n    ProtocolPolicy = OriginProtocolPolicy.MATCH_VIEWER\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nApplicationLoadBalancer loadBalancer;\n\nLoadBalancerV2Origin origin = LoadBalancerV2Origin.Builder.create(loadBalancer)\n        .connectionAttempts(3)\n        .connectionTimeout(Duration.seconds(5))\n        .readTimeout(Duration.seconds(45))\n        .keepaliveTimeout(Duration.seconds(45))\n        .protocolPolicy(OriginProtocolPolicy.MATCH_VIEWER)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import elbv2 \"github.com/aws-samples/dummy/awscdkawselasticloadbalancingv2\"\n\nvar loadBalancer applicationLoadBalancer\n\norigin := origins.NewLoadBalancerV2Origin(loadBalancer, &loadBalancerV2OriginProps{\n\tconnectionAttempts: jsii.Number(3),\n\tconnectionTimeout: *awscdkcore.Duration.seconds(jsii.Number(5)),\n\treadTimeout: *awscdkcore.Duration.seconds(jsii.Number(45)),\n\tkeepaliveTimeout: *awscdkcore.Duration.seconds(jsii.Number(45)),\n\tprotocolPolicy: cloudfront.originProtocolPolicy_MATCH_VIEWER,\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const loadBalancer: elbv2.ApplicationLoadBalancer;\nconst origin = new origins.LoadBalancerV2Origin(loadBalancer, {\n  connectionAttempts: 3,\n  connectionTimeout: Duration.seconds(5),\n  readTimeout: Duration.seconds(45),\n  keepaliveTimeout: Duration.seconds(45),\n  protocolPolicy: cloudfront.OriginProtocolPolicy.MATCH_VIEWER,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2OriginProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2Origin",
        "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2OriginProps",
        "@aws-cdk/aws-cloudfront.OriginProtocolPolicy",
        "@aws-cdk/aws-cloudfront.OriginProtocolPolicy#MATCH_VIEWER",
        "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#seconds"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const loadBalancer: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst origin = new origins.LoadBalancerV2Origin(loadBalancer, {\n  connectionAttempts: 3,\n  connectionTimeout: Duration.seconds(5),\n  readTimeout: Duration.seconds(45),\n  keepaliveTimeout: Duration.seconds(45),\n  protocolPolicy: cloudfront.OriginProtocolPolicy.MATCH_VIEWER,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 1,
        "75": 22,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 6,
        "196": 3,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e89176c4dbdf444687a7395f9cc7fd604c0f068646307c2f7a7ace616768d74d"
    },
    "b14350c4d132432c190f54d1d6b43325db067a07195e22e4eabcfc44e2da4f7d": {
      "translations": {
        "python": {
          "source": "my_bucket = s3.Bucket(self, \"myBucket\")\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(\n        origin=origins.OriginGroup(\n            primary_origin=origins.S3Origin(my_bucket),\n            fallback_origin=origins.HttpOrigin(\"www.example.com\"),\n            # optional, defaults to: 500, 502, 503 and 504\n            fallback_status_codes=[404]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions {\n        Origin = new OriginGroup(new OriginGroupProps {\n            PrimaryOrigin = new S3Origin(myBucket),\n            FallbackOrigin = new HttpOrigin(\"www.example.com\"),\n            // optional, defaults to: 500, 502, 503 and 504\n            FallbackStatusCodes = new [] { 404 }\n        })\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder()\n                .origin(OriginGroup.Builder.create()\n                        .primaryOrigin(new S3Origin(myBucket))\n                        .fallbackOrigin(new HttpOrigin(\"www.example.com\"))\n                        // optional, defaults to: 500, 502, 503 and 504\n                        .fallbackStatusCodes(List.of(404))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "myBucket := s3.NewBucket(this, jsii.String(\"myBucket\"))\ncloudfront.NewDistribution(this, jsii.String(\"myDist\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewOriginGroup(&originGroupProps{\n\t\t\tprimaryOrigin: origins.NewS3Origin(myBucket),\n\t\t\tfallbackOrigin: origins.NewHttpOrigin(jsii.String(\"www.example.com\")),\n\t\t\t// optional, defaults to: 500, 502, 503 and 504\n\t\t\tfallbackStatusCodes: []*f64{\n\t\t\t\tjsii.Number(404),\n\t\t\t},\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.OriginGroup"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.HttpOrigin",
        "@aws-cdk/aws-cloudfront-origins.OriginGroup",
        "@aws-cdk/aws-cloudfront-origins.OriginGroupProps",
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 17,
        "104": 2,
        "192": 1,
        "193": 3,
        "194": 5,
        "197": 5,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5
      },
      "fqnsFingerprint": "4636586d701b8f093ae3a611fd4a43aa0c60866c24a7c7f0d175af207f722058"
    },
    "bddc021315c681dec0587b101bc26ab1ca5d4508e3212f1ea58919814d500ee3": {
      "translations": {
        "python": {
          "source": "my_bucket = s3.Bucket(self, \"myBucket\")\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(\n        origin=origins.OriginGroup(\n            primary_origin=origins.S3Origin(my_bucket),\n            fallback_origin=origins.HttpOrigin(\"www.example.com\"),\n            # optional, defaults to: 500, 502, 503 and 504\n            fallback_status_codes=[404]\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions {\n        Origin = new OriginGroup(new OriginGroupProps {\n            PrimaryOrigin = new S3Origin(myBucket),\n            FallbackOrigin = new HttpOrigin(\"www.example.com\"),\n            // optional, defaults to: 500, 502, 503 and 504\n            FallbackStatusCodes = new [] { 404 }\n        })\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder()\n                .origin(OriginGroup.Builder.create()\n                        .primaryOrigin(new S3Origin(myBucket))\n                        .fallbackOrigin(new HttpOrigin(\"www.example.com\"))\n                        // optional, defaults to: 500, 502, 503 and 504\n                        .fallbackStatusCodes(List.of(404))\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "myBucket := s3.NewBucket(this, jsii.String(\"myBucket\"))\ncloudfront.NewDistribution(this, jsii.String(\"myDist\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewOriginGroup(&originGroupProps{\n\t\t\tprimaryOrigin: origins.NewS3Origin(myBucket),\n\t\t\tfallbackOrigin: origins.NewHttpOrigin(jsii.String(\"www.example.com\")),\n\t\t\t// optional, defaults to: 500, 502, 503 and 504\n\t\t\tfallbackStatusCodes: []*f64{\n\t\t\t\tjsii.Number(404),\n\t\t\t},\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.OriginGroupProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.HttpOrigin",
        "@aws-cdk/aws-cloudfront-origins.OriginGroup",
        "@aws-cdk/aws-cloudfront-origins.OriginGroupProps",
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 17,
        "104": 2,
        "192": 1,
        "193": 3,
        "194": 5,
        "197": 5,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5
      },
      "fqnsFingerprint": "4636586d701b8f093ae3a611fd4a43aa0c60866c24a7c7f0d175af207f722058"
    },
    "6655908b8999e80a6137633b06e804f4c82c6f6b5a022c215b1f17d3aba28fd6": {
      "translations": {
        "python": {
          "source": "# api: apigateway.RestApi\n\ncloudfront.Distribution(self, \"Distribution\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.RestApiOrigin(api))\n)",
          "version": "2"
        },
        "csharp": {
          "source": "RestApi api;\n\nnew Distribution(this, \"Distribution\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new RestApiOrigin(api) }\n});",
          "version": "1"
        },
        "java": {
          "source": "RestApi api;\n\nDistribution.Builder.create(this, \"Distribution\")\n        .defaultBehavior(BehaviorOptions.builder().origin(new RestApiOrigin(api)).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var api restApi\n\ncloudfront.NewDistribution(this, jsii.String(\"Distribution\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewRestApiOrigin(api),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const api: apigateway.RestApi;\nnew cloudfront.Distribution(this, 'Distribution', {\n  defaultBehavior: { origin: new origins.RestApiOrigin(api) },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.RestApiOrigin"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigateway.RestApi",
        "@aws-cdk/aws-cloudfront-origins.RestApiOrigin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const api: apigateway.RestApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew cloudfront.Distribution(this, 'Distribution', {\n  defaultBehavior: { origin: new origins.RestApiOrigin(api) },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 10,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "15e2a746ff775d54984d158ddb879f9a9c045fcbf6f29d3bd4237f4897afcfb6"
    },
    "84eaa6237371e807de5c385043bd0ec257a0709afbd1c9c8cb9776703f89b2e9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_cloudfront_origins as cloudfront_origins\nimport aws_cdk.core as cdk\n\nrest_api_origin_props = cloudfront_origins.RestApiOriginProps(\n    connection_attempts=123,\n    connection_timeout=cdk.Duration.minutes(30),\n    custom_headers={\n        \"custom_headers_key\": \"customHeaders\"\n    },\n    keepalive_timeout=cdk.Duration.minutes(30),\n    origin_shield_region=\"originShieldRegion\",\n    read_timeout=cdk.Duration.minutes(30)\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CloudFront.Origins;\nusing Amazon.CDK;\nRestApiOriginProps restApiOriginProps = new RestApiOriginProps {\n    ConnectionAttempts = 123,\n    ConnectionTimeout = Duration.Minutes(30),\n    CustomHeaders = new Dictionary<string, string> {\n        { \"customHeadersKey\", \"customHeaders\" }\n    },\n    KeepaliveTimeout = Duration.Minutes(30),\n    OriginShieldRegion = \"originShieldRegion\",\n    ReadTimeout = Duration.Minutes(30)\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.cloudfront.origins.*;\nimport software.amazon.awscdk.core.*;\n\nRestApiOriginProps restApiOriginProps = RestApiOriginProps.builder()\n        .connectionAttempts(123)\n        .connectionTimeout(Duration.minutes(30))\n        .customHeaders(Map.of(\n                \"customHeadersKey\", \"customHeaders\"))\n        .keepaliveTimeout(Duration.minutes(30))\n        .originShieldRegion(\"originShieldRegion\")\n        .readTimeout(Duration.minutes(30))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport cloudfront_origins \"github.com/aws-samples/dummy/awscdkawscloudfrontorigins\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nrestApiOriginProps := &restApiOriginProps{\n\tconnectionAttempts: jsii.Number(123),\n\tconnectionTimeout: cdk.duration.minutes(jsii.Number(30)),\n\tcustomHeaders: map[string]*string{\n\t\t\"customHeadersKey\": jsii.String(\"customHeaders\"),\n\t},\n\tkeepaliveTimeout: cdk.*duration.minutes(jsii.Number(30)),\n\toriginShieldRegion: jsii.String(\"originShieldRegion\"),\n\treadTimeout: cdk.*duration.minutes(jsii.Number(30)),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront_origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as cdk from '@aws-cdk/core';\nconst restApiOriginProps: cloudfront_origins.RestApiOriginProps = {\n  connectionAttempts: 123,\n  connectionTimeout: cdk.Duration.minutes(30),\n  customHeaders: {\n    customHeadersKey: 'customHeaders',\n  },\n  keepaliveTimeout: cdk.Duration.minutes(30),\n  originShieldRegion: 'originShieldRegion',\n  readTimeout: cdk.Duration.minutes(30),\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.RestApiOriginProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.RestApiOriginProps",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront_origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as cdk from '@aws-cdk/core';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst restApiOriginProps: cloudfront_origins.RestApiOriginProps = {\n  connectionAttempts: 123,\n  connectionTimeout: cdk.Duration.minutes(30),\n  customHeaders: {\n    customHeadersKey: 'customHeaders',\n  },\n  keepaliveTimeout: cdk.Duration.minutes(30),\n  originShieldRegion: 'originShieldRegion',\n  readTimeout: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 4,
        "75": 21,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 6,
        "196": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "4aaf9295d66dafa58d893c4ba568b080ff381baa61b41756e801a3da5f09abb3"
    },
    "2f2b3a47a253cdb7b87de12a7e3e7ab56f9d5f42320e52d7dd568d6798750e43": {
      "translations": {
        "python": {
          "source": "# Adding an existing Lambda@Edge function created in a different stack\n# to a CloudFront distribution.\n# s3_bucket: s3.Bucket\n\nfunction_version = lambda_.Version.from_version_arn(self, \"Version\", \"arn:aws:lambda:us-east-1:123456789012:function:functionName:1\")\n\ncloudfront.Distribution(self, \"distro\",\n    default_behavior=cloudfront.BehaviorOptions(\n        origin=origins.S3Origin(s3_bucket),\n        edge_lambdas=[cloudfront.EdgeLambda(\n            function_version=function_version,\n            event_type=cloudfront.LambdaEdgeEventType.VIEWER_REQUEST\n        )\n        ]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\nBucket s3Bucket;\n\nIVersion functionVersion = Version.FromVersionArn(this, \"Version\", \"arn:aws:lambda:us-east-1:123456789012:function:functionName:1\");\n\nnew Distribution(this, \"distro\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions {\n        Origin = new S3Origin(s3Bucket),\n        EdgeLambdas = new [] { new EdgeLambda {\n            FunctionVersion = functionVersion,\n            EventType = LambdaEdgeEventType.VIEWER_REQUEST\n        } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\nBucket s3Bucket;\n\nIVersion functionVersion = Version.fromVersionArn(this, \"Version\", \"arn:aws:lambda:us-east-1:123456789012:function:functionName:1\");\n\nDistribution.Builder.create(this, \"distro\")\n        .defaultBehavior(BehaviorOptions.builder()\n                .origin(new S3Origin(s3Bucket))\n                .edgeLambdas(List.of(EdgeLambda.builder()\n                        .functionVersion(functionVersion)\n                        .eventType(LambdaEdgeEventType.VIEWER_REQUEST)\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\nvar s3Bucket bucket\n\nfunctionVersion := lambda.version.fromVersionArn(this, jsii.String(\"Version\"), jsii.String(\"arn:aws:lambda:us-east-1:123456789012:function:functionName:1\"))\n\ncloudfront.NewDistribution(this, jsii.String(\"distro\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewS3Origin(s3Bucket),\n\t\tedgeLambdas: []edgeLambda{\n\t\t\t&edgeLambda{\n\t\t\t\tfunctionVersion: functionVersion,\n\t\t\t\teventType: cloudfront.lambdaEdgeEventType_VIEWER_REQUEST,\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\ndeclare const s3Bucket: s3.Bucket;\nconst functionVersion = lambda.Version.fromVersionArn(this, 'Version', 'arn:aws:lambda:us-east-1:123456789012:function:functionName:1');\n\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    edgeLambdas: [\n      {\n        functionVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      },\n    ],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.S3Origin"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-cloudfront.LambdaEdgeEventType",
        "@aws-cdk/aws-cloudfront.LambdaEdgeEventType#VIEWER_REQUEST",
        "@aws-cdk/aws-lambda.IVersion",
        "@aws-cdk/aws-lambda.Version",
        "@aws-cdk/aws-lambda.Version#fromVersionArn",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\ndeclare const s3Bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst functionVersion = lambda.Version.fromVersionArn(this, 'Version', 'arn:aws:lambda:us-east-1:123456789012:function:functionName:1');\n\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    edgeLambdas: [\n      {\n        functionVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      },\n    ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 20,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "194": 6,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 4,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "ed7d20f26b1f4e4dbade5657199847f143c35c149fbeb49e54402db9c319793a"
    },
    "ac2d8b95d0e91b9dfbf722c76347bb31fd85172d5b1755e1907c0c98d2bb9f17": {
      "translations": {
        "python": {
          "source": "my_bucket = s3.Bucket(self, \"myBucket\")\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.S3Origin(my_bucket,\n        custom_headers={\n            \"Foo\": \"bar\"\n        }\n    ))\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new S3Origin(myBucket, new S3OriginProps {\n        CustomHeaders = new Dictionary<string, string> {\n            { \"Foo\", \"bar\" }\n        }\n    }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket myBucket = new Bucket(this, \"myBucket\");\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder().origin(S3Origin.Builder.create(myBucket)\n                .customHeaders(Map.of(\n                        \"Foo\", \"bar\"))\n                .build()).build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "myBucket := s3.NewBucket(this, jsii.String(\"myBucket\"))\ncloudfront.NewDistribution(this, jsii.String(\"myDist\"), &distributionProps{\n\tdefaultBehavior: &behaviorOptions{\n\t\torigin: origins.NewS3Origin(myBucket, &s3OriginProps{\n\t\t\tcustomHeaders: map[string]*string{\n\t\t\t\t\"Foo\": jsii.String(\"bar\"),\n\t\t\t},\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket, {\n    customHeaders: {\n      Foo: 'bar',\n    },\n  })},\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.S3OriginProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront-origins.S3OriginProps",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Duration, Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket, {\n    customHeaders: {\n      Foo: 'bar',\n    },\n  })},\n});\n/// !hide\n// Code snippet ended before !hide marker above\n    \n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 12,
        "104": 2,
        "193": 4,
        "194": 3,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 4
      },
      "fqnsFingerprint": "de968fd4d13b253fa16ab22003e78b1d2dd92f6ddbef982afaeaced53f3587e5"
    }
  }
}