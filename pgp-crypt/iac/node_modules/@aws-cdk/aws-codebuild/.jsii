{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "bundled": {
    "yaml": "1.10.2"
  },
  "dependencies": {
    "@aws-cdk/assets": "1.193.0",
    "@aws-cdk/aws-cloudwatch": "1.193.0",
    "@aws-cdk/aws-codecommit": "1.193.0",
    "@aws-cdk/aws-codestarnotifications": "1.193.0",
    "@aws-cdk/aws-ec2": "1.193.0",
    "@aws-cdk/aws-ecr": "1.193.0",
    "@aws-cdk/aws-ecr-assets": "1.193.0",
    "@aws-cdk/aws-events": "1.193.0",
    "@aws-cdk/aws-iam": "1.193.0",
    "@aws-cdk/aws-kms": "1.193.0",
    "@aws-cdk/aws-logs": "1.193.0",
    "@aws-cdk/aws-s3": "1.193.0",
    "@aws-cdk/aws-s3-assets": "1.193.0",
    "@aws-cdk/aws-secretsmanager": "1.193.0",
    "@aws-cdk/core": "1.193.0",
    "@aws-cdk/region-info": "1.193.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codecommit": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeCommit",
          "packageId": "Amazon.CDK.AWS.CodeCommit"
        },
        "java": {
          "maven": {
            "artifactId": "codecommit",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codecommit"
        },
        "js": {
          "npm": "@aws-cdk/aws-codecommit"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codecommit",
          "module": "aws_cdk.aws_codecommit"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::CodeBuild",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "codebuild"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-codebuild",
  "readme": {
    "markdown": "# AWS CodeBuild Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nAWS CodeBuild is a fully managed continuous integration service that compiles\nsource code, runs tests, and produces software packages that are ready to\ndeploy. With CodeBuild, you don’t need to provision, manage, and scale your own\nbuild servers. CodeBuild scales continuously and processes multiple builds\nconcurrently, so your builds are not left waiting in a queue. You can get\nstarted quickly by using prepackaged build environments, or you can create\ncustom build environments that use your own build tools. With CodeBuild, you are\ncharged by the minute for the compute resources you use.\n\n## Installation\n\nInstall the module:\n\n```console\n$ npm i @aws-cdk/aws-codebuild\n```\n\nImport it into your code:\n\n```ts nofixture\nimport * as codebuild from '@aws-cdk/aws-codebuild';\n```\n\nThe `codebuild.Project` construct represents a build project resource. See the\nreference documentation for a comprehensive list of initialization properties,\nmethods and attributes.\n\n## Source\n\nBuild projects are usually associated with a _source_, which is specified via\nthe `source` property which accepts a class that extends the `Source`\nabstract base class.\nThe default is to have no source associated with the build project;\nthe `buildSpec` option is required in that case.\n\nHere's a CodeBuild project with no source which simply prints `Hello,\nCodeBuild!`:\n\n```ts lit=test/integ.defaults.lit.ts\nnew codebuild.Project(this, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: [\n          'echo \"Hello, CodeBuild!\"',\n        ],\n      },\n    },\n  }),\n});\n```\n\n### `CodeCommitSource`\n\nUse an AWS CodeCommit repository as the source of this build:\n\n```ts\nimport * as codecommit from '@aws-cdk/aws-codecommit';\n\nconst repository = new codecommit.Repository(this, 'MyRepo', { repositoryName: 'foo' });\nnew codebuild.Project(this, 'MyFirstCodeCommitProject', {\n  source: codebuild.Source.codeCommit({ repository }),\n});\n```\n\n### `S3Source`\n\nCreate a CodeBuild project with an S3 bucket as the source:\n\n```ts\nconst bucket = new s3.Bucket(this, 'MyBucket');\n\nnew codebuild.Project(this, 'MyProject', {\n  source: codebuild.Source.s3({\n    bucket: bucket,\n    path: 'path/to/file.zip',\n  }),\n});\n```\n\nThe CodeBuild role will be granted to read just the given path from the given `bucket`.\n\n### `GitHubSource` and `GitHubEnterpriseSource`\n\nThese source types can be used to build code from a GitHub repository.\nExample:\n\n```ts\nconst gitHubSource = codebuild.Source.gitHub({\n  owner: 'awslabs',\n  repo: 'aws-cdk',\n  webhook: true, // optional, default: true if `webhookFilters` were provided, false otherwise\n  webhookTriggersBatchBuild: true, // optional, default is false\n  webhookFilters: [\n    codebuild.FilterGroup\n      .inEventOf(codebuild.EventAction.PUSH)\n      .andBranchIs('master')\n      .andCommitMessageIs('the commit message'),\n  ], // optional, by default all pushes and Pull Requests will trigger a build\n});\n```\n\nTo provide GitHub credentials, please either go to AWS CodeBuild Console to connect\nor call `ImportSourceCredentials` to persist your personal access token.\nExample:\n\n```console\naws codebuild import-source-credentials --server-type GITHUB --auth-type PERSONAL_ACCESS_TOKEN --token <token_value>\n```\n\n### `BitBucketSource`\n\nThis source type can be used to build code from a BitBucket repository.\n\n```ts\nconst bbSource = codebuild.Source.bitBucket({\n  owner: 'owner',\n  repo: 'repo',\n});\n```\n\n### For all Git sources\n\nFor all Git sources, you can fetch submodules while cloing git repo.\n\n```ts\nconst gitHubSource = codebuild.Source.gitHub({\n  owner: 'awslabs',\n  repo: 'aws-cdk',\n  fetchSubmodules: true,\n});\n```\n\n## Artifacts\n\nCodeBuild Projects can produce Artifacts and upload them to S3. For example:\n\n```ts\ndeclare const bucket: s3.Bucket;\n\nconst project = new codebuild.Project(this, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  artifacts: codebuild.Artifacts.s3({\n      bucket,\n      includeBuildId: false,\n      packageZip: true,\n      path: 'another/path',\n      identifier: 'AddArtifact1',\n    }),\n});\n```\n\nIf you'd prefer your buildspec to be rendered as YAML in the template,\nuse the `fromObjectToYaml()` method instead of `fromObject()`.\n\nBecause we've not set the `name` property, this example will set the\n`overrideArtifactName` parameter, and produce an artifact named as defined in\nthe Buildspec file, uploaded to an S3 bucket (`bucket`). The path will be\n`another/path` and the artifact will be a zipfile.\n\n## CodePipeline\n\nTo add a CodeBuild Project as an Action to CodePipeline,\nuse the `PipelineProject` class instead of `Project`.\nIt's a simple class that doesn't allow you to specify `sources`,\n`secondarySources`, `artifacts` or `secondaryArtifacts`,\nas these are handled by setting input and output CodePipeline `Artifact` instances on the Action,\ninstead of setting them on the Project.\n\n```ts\nconst project = new codebuild.PipelineProject(this, 'Project', {\n  // properties as above...\n})\n```\n\nFor more details, see the readme of the `@aws-cdk/@aws-codepipeline-actions` package.\n\n## Caching\n\nYou can save time when your project builds by using a cache. A cache can store reusable pieces of your build environment and use them across multiple builds. Your build project can use one of two types of caching: Amazon S3 or local. In general, S3 caching is a good option for small and intermediate build artifacts that are more expensive to build than to download. Local caching is a good option for large intermediate build artifacts because the cache is immediately available on the build host.\n\n### S3 Caching\n\nWith S3 caching, the cache is stored in an S3 bucket which is available\nregardless from what CodeBuild instance gets selected to run your CodeBuild job\non. When using S3 caching, you must also add in a `cache` section to your\nbuildspec which indicates the files to be cached:\n\n```ts\ndeclare const myCachingBucket: s3.Bucket;\n\nnew codebuild.Project(this, 'Project', {\n  source: codebuild.Source.bitBucket({\n    owner: 'awslabs',\n    repo: 'aws-cdk',\n  }),\n\n  cache: codebuild.Cache.bucket(myCachingBucket),\n\n  // BuildSpec with a 'cache' section necessary for S3 caching. This can\n  // also come from 'buildspec.yml' in your source.\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: ['...'],\n      },\n    },\n    cache: {\n      paths: [\n        // The '**/*' is required to indicate all files in this directory\n        '/root/cachedir/**/*',\n      ],\n    },\n  }),\n});\n```\n\nNote that two different CodeBuild Projects using the same S3 bucket will *not*\nshare their cache: each Project will get a unique file in the S3 bucket to store\nthe cache in.\n\n### Local Caching\n\nWith local caching, the cache is stored on the codebuild instance itself. This\nis simple, cheap and fast, but CodeBuild cannot guarantee a reuse of instance\nand hence cannot guarantee cache hits. For example, when a build starts and\ncaches files locally, if two subsequent builds start at the same time afterwards\nonly one of those builds would get the cache. Three different cache modes are\nsupported, which can be turned on individually.\n\n* `LocalCacheMode.SOURCE` caches Git metadata for primary and secondary sources.\n* `LocalCacheMode.DOCKER_LAYER` caches existing Docker layers.\n* `LocalCacheMode.CUSTOM` caches directories you specify in the buildspec file.\n\n```ts\nnew codebuild.Project(this, 'Project', {\n  source: codebuild.Source.gitHubEnterprise({\n    httpsCloneUrl: 'https://my-github-enterprise.com/owner/repo',\n  }),\n\n  // Enable Docker AND custom caching\n  cache: codebuild.Cache.local(codebuild.LocalCacheMode.DOCKER_LAYER, codebuild.LocalCacheMode.CUSTOM),\n\n  // BuildSpec with a 'cache' section necessary for 'CUSTOM' caching. This can\n  // also come from 'buildspec.yml' in your source.\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: ['...'],\n      },\n    },\n    cache: {\n      paths: [\n        // The '**/*' is required to indicate all files in this directory\n        '/root/cachedir/**/*',\n      ],\n    },\n  }),\n});\n```\n\n## Environment\n\nBy default, projects use a small instance with an Ubuntu 18.04 image. You\ncan use the `environment` property to customize the build environment:\n\n* `buildImage` defines the Docker image used. See [Images](#images) below for\n  details on how to define build images.\n* `certificate` defines the location of a PEM encoded certificate to import.\n* `computeType` defines the instance type used for the build.\n* `privileged` can be set to `true` to allow privileged access.\n* `environmentVariables` can be set at this level (and also at the project\n  level).\n\n## Images\n\nThe CodeBuild library supports both Linux and Windows images via the\n`LinuxBuildImage` (or `LinuxArmBuildImage`), and `WindowsBuildImage` classes, respectively.\n\nYou can specify one of the predefined Windows/Linux images by using one\nof the constants such as `WindowsBuildImage.WIN_SERVER_CORE_2019_BASE`,\n`WindowsBuildImage.WINDOWS_BASE_2_0`, `LinuxBuildImage.STANDARD_2_0`, or\n`LinuxArmBuildImage.AMAZON_LINUX_2_ARM`.\n\nAlternatively, you can specify a custom image using one of the static methods on\n`LinuxBuildImage`:\n\n* `LinuxBuildImage.fromDockerRegistry(image[, { secretsManagerCredentials }])` to reference an image in any public or private Docker registry.\n* `LinuxBuildImage.fromEcrRepository(repo[, tag])` to reference an image available in an\n  ECR repository.\n* `LinuxBuildImage.fromAsset(parent, id, props)` to use an image created from a\n  local asset.\n* `LinuxBuildImage.fromCodeBuildImageId(id)` to reference a pre-defined, CodeBuild-provided Docker image.\n\nor one of the corresponding methods on `WindowsBuildImage`:\n\n* `WindowsBuildImage.fromDockerRegistry(image[, { secretsManagerCredentials }, imageType])`\n* `WindowsBuildImage.fromEcrRepository(repo[, tag, imageType])`\n* `WindowsBuildImage.fromAsset(parent, id, props, [, imageType])`\n\nor one of the corresponding methods on `LinuxArmBuildImage`:\n\n* `LinuxArmBuildImage.fromEcrRepository(repo[, tag])`\n\nNote that the `WindowsBuildImage` version of the static methods accepts an optional parameter of type `WindowsImageType`,\nwhich can be either `WindowsImageType.STANDARD`, the default, or `WindowsImageType.SERVER_2019`:\n\n```ts\ndeclare const ecrRepository: ecr.Repository;\n\nnew codebuild.Project(this, 'Project', {\n  environment: {\n    buildImage: codebuild.WindowsBuildImage.fromEcrRepository(ecrRepository, 'v1.0', codebuild.WindowsImageType.SERVER_2019),\n    // optional certificate to include in the build image\n    certificate: {\n      bucket: s3.Bucket.fromBucketName(this, 'Bucket', 'my-bucket'),\n      objectKey: 'path/to/cert.pem',\n    },\n  },\n  // ...\n})\n```\n\nThe following example shows how to define an image from a Docker asset:\n\n```ts lit=test/integ.docker-asset.lit.ts\nenvironment: {\n  buildImage: codebuild.LinuxBuildImage.fromAsset(this, 'MyImage', {\n    directory: path.join(__dirname, 'demo-image'),\n  }),\n},\n```\n\nThe following example shows how to define an image from an ECR repository:\n\n```ts lit=test/integ.ecr.lit.ts\nenvironment: {\n  buildImage: codebuild.LinuxBuildImage.fromEcrRepository(ecrRepository, 'v1.0'),\n},\n```\n\nThe following example shows how to define an image from a private docker registry:\n\n```ts lit=test/integ.docker-registry.lit.ts\nenvironment: {\n  buildImage: codebuild.LinuxBuildImage.fromDockerRegistry('my-registry/my-repo', {\n    secretsManagerCredentials: secrets,\n  }),\n},\n```\n\n### GPU images\n\nThe class `LinuxGpuBuildImage` contains constants for working with\n[AWS Deep Learning Container images](https://aws.amazon.com/releasenotes/available-deep-learning-containers-images):\n\n\n```ts\nnew codebuild.Project(this, 'Project', {\n  environment: {\n    buildImage: codebuild.LinuxGpuBuildImage.DLC_TENSORFLOW_2_1_0_INFERENCE,\n  },\n  // ...\n})\n```\n\nOne complication is that the repositories for the DLC images are in\ndifferent accounts in different AWS regions.\nIn most cases, the CDK will handle providing the correct account for you;\nin rare cases (for example, deploying to new regions)\nwhere our information might be out of date,\nyou can always specify the account\n(along with the repository name and tag)\nexplicitly using the `awsDeepLearningContainersImage` method:\n\n```ts\nnew codebuild.Project(this, 'Project', {\n  environment: {\n    buildImage: codebuild.LinuxGpuBuildImage.awsDeepLearningContainersImage(\n      'tensorflow-inference', '2.1.0-gpu-py36-cu101-ubuntu18.04', '123456789012'),\n  },\n  // ...\n})\n```\n\nAlternatively, you can reference an image available in an ECR repository using the `LinuxGpuBuildImage.fromEcrRepository(repo[, tag])` method.\n\n## Logs\n\nCodeBuild lets you specify an S3 Bucket, CloudWatch Log Group or both to receive logs from your projects.\n\nBy default, logs will go to cloudwatch.\n\n### CloudWatch Logs Example\n\n```ts\nnew codebuild.Project(this, 'Project', {\n  logging: {\n    cloudWatch: {\n      logGroup: new logs.LogGroup(this, `MyLogGroup`),\n    }\n  },\n})\n```\n\n### S3 Logs Example\n\n```ts\nnew codebuild.Project(this, 'Project', {\n  logging: {\n    s3: {\n      bucket: new s3.Bucket(this, `LogBucket`)\n    }\n  },\n})\n```\n\n## Credentials\n\nCodeBuild allows you to store credentials used when communicating with various sources,\nlike GitHub:\n\n```ts\nnew codebuild.GitHubSourceCredentials(this, 'CodeBuildGitHubCreds', {\n  accessToken: SecretValue.secretsManager('my-token'),\n});\n// GitHub Enterprise is almost the same,\n// except the class is called GitHubEnterpriseSourceCredentials\n```\n\nand BitBucket:\n\n```ts\nnew codebuild.BitBucketSourceCredentials(this, 'CodeBuildBitBucketCreds', {\n  username: SecretValue.secretsManager('my-bitbucket-creds', { jsonField: 'username' }),\n  password: SecretValue.secretsManager('my-bitbucket-creds', { jsonField: 'password' }),\n});\n```\n\n**Note**: the credentials are global to a given account in a given region -\nthey are not defined per CodeBuild project.\nCodeBuild only allows storing a single credential of a given type\n(GitHub, GitHub Enterprise or BitBucket)\nin a given account in a given region -\nany attempt to save more than one will result in an error.\nYou can use the [`list-source-credentials` AWS CLI operation](https://docs.aws.amazon.com/cli/latest/reference/codebuild/list-source-credentials.html)\nto inspect what credentials are stored in your account.\n\n## Test reports\n\nYou can specify a test report in your buildspec:\n\n```ts\nconst project = new codebuild.Project(this, 'Project', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    // ...\n    reports: {\n      myReport: {\n        files: '**/*',\n        'base-directory': 'build/test-results',\n      },\n    },\n  }),\n});\n```\n\nThis will create a new test report group,\nwith the name `<ProjectName>-myReport`.\n\nThe project's role in the CDK will always be granted permissions to create and use report groups\nwith names starting with the project's name;\nif you'd rather not have those permissions added,\nyou can opt out of it when creating the project:\n\n```ts\ndeclare const source: codebuild.Source;\n\nconst project = new codebuild.Project(this, 'Project', {\n  source,\n  grantReportGroupPermissions: false,\n});\n```\n\nAlternatively, you can specify an ARN of an existing resource group,\ninstead of a simple name, in your buildspec:\n\n```ts\ndeclare const source: codebuild.Source;\n\n// create a new ReportGroup\nconst reportGroup = new codebuild.ReportGroup(this, 'ReportGroup');\n\nconst project = new codebuild.Project(this, 'Project', {\n  source,\n  buildSpec: codebuild.BuildSpec.fromObject({\n    // ...\n    reports: {\n      [reportGroup.reportGroupArn]: {\n        files: '**/*',\n        'base-directory': 'build/test-results',\n      },\n    },\n  }),\n});\n```\n\nIf you do that, you need to grant the project's role permissions to write reports to that report group:\n\n```ts\ndeclare const project: codebuild.Project;\ndeclare const reportGroup: codebuild.ReportGroup;\n\nreportGroup.grantWrite(project);\n```\n\nFor more information on the test reports feature,\nsee the [AWS CodeBuild documentation](https://docs.aws.amazon.com/codebuild/latest/userguide/test-reporting.html).\n\n## Events\n\nCodeBuild projects can be used either as a source for events or be triggered\nby events via an event rule.\n\n### Using Project as an event target\n\nThe `@aws-cdk/aws-events-targets.CodeBuildProject` allows using an AWS CodeBuild\nproject as a AWS CloudWatch event rule target:\n\n```ts\n// start build when a commit is pushed\nimport * as codecommit from '@aws-cdk/aws-codecommit';\nimport * as targets from '@aws-cdk/aws-events-targets';\n\ndeclare const codeCommitRepository: codecommit.Repository;\ndeclare const project: codebuild.Project;\n\ncodeCommitRepository.onCommit('OnCommit', {\n  target: new targets.CodeBuildProject(project),\n});\n```\n\n### Using Project as an event source\n\nTo define Amazon CloudWatch event rules for build projects, use one of the `onXxx`\nmethods:\n\n```ts\nimport * as targets from '@aws-cdk/aws-events-targets';\ndeclare const fn: lambda.Function;\ndeclare const project: codebuild.Project;\n\nconst rule = project.onStateChange('BuildStateChange', {\n  target: new targets.LambdaFunction(fn)\n});\n```\n\n## CodeStar Notifications\n\nTo define CodeStar Notification rules for Projects, use one of the `notifyOnXxx()` methods.\nThey are very similar to `onXxx()` methods for CloudWatch events:\n\n```ts\nimport * as chatbot from '@aws-cdk/aws-chatbot';\n\ndeclare const project: codebuild.Project;\n\nconst target = new chatbot.SlackChannelConfiguration(this, 'MySlackChannel', {\n  slackChannelConfigurationName: 'YOUR_CHANNEL_NAME',\n  slackWorkspaceId: 'YOUR_SLACK_WORKSPACE_ID',\n  slackChannelId: 'YOUR_SLACK_CHANNEL_ID',\n});\n\nconst rule = project.notifyOnBuildSucceeded('NotifyOnBuildSucceeded', target);\n```\n\n## Secondary sources and artifacts\n\nCodeBuild Projects can get their sources from multiple places, and produce\nmultiple outputs. For example:\n\n```ts\nimport * as codecommit from '@aws-cdk/aws-codecommit';\ndeclare const repo: codecommit.Repository;\ndeclare const bucket: s3.Bucket;\n\nconst project = new codebuild.Project(this, 'MyProject', {\n  secondarySources: [\n    codebuild.Source.codeCommit({\n      identifier: 'source2',\n      repository: repo,\n    }),\n  ],\n  secondaryArtifacts: [\n    codebuild.Artifacts.s3({\n      identifier: 'artifact2',\n      bucket: bucket,\n      path: 'some/path',\n      name: 'file.zip',\n    }),\n  ],\n  // ...\n});\n```\n\nNote that the `identifier` property is required for both secondary sources and\nartifacts.\n\nThe contents of the secondary source is available to the build under the\ndirectory specified by the `CODEBUILD_SRC_DIR_<identifier>` environment variable\n(so, `CODEBUILD_SRC_DIR_source2` in the above case).\n\nThe secondary artifacts have their own section in the buildspec, under the\nregular `artifacts` one. Each secondary artifact has its own section, beginning\nwith their identifier.\n\nSo, a buildspec for the above Project could look something like this:\n\n```ts\nconst project = new codebuild.Project(this, 'MyProject', {\n  // secondary sources and artifacts as above...\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: [\n          'cd $CODEBUILD_SRC_DIR_source2',\n          'touch output2.txt',\n        ],\n      },\n    },\n    artifacts: {\n      'secondary-artifacts': {\n        'artifact2': {\n          'base-directory': '$CODEBUILD_SRC_DIR_source2',\n          'files': [\n            'output2.txt',\n          ],\n        },\n      },\n    },\n  }),\n});\n```\n\n### Definition of VPC configuration in CodeBuild Project\n\nTypically, resources in an VPC are not accessible by AWS CodeBuild. To enable\naccess, you must provide additional VPC-specific configuration information as\npart of your CodeBuild project configuration. This includes the VPC ID, the\nVPC subnet IDs, and the VPC security group IDs. VPC-enabled builds are then\nable to access resources inside your VPC.\n\nFor further Information see https://docs.aws.amazon.com/codebuild/latest/userguide/vpc-support.html\n\n**Use Cases**\nVPC connectivity from AWS CodeBuild builds makes it possible to:\n\n* Run integration tests from your build against data in an Amazon RDS database that's isolated on a private subnet.\n* Query data in an Amazon ElastiCache cluster directly from tests.\n* Interact with internal web services hosted on Amazon EC2, Amazon ECS, or services that use internal Elastic Load Balancing.\n* Retrieve dependencies from self-hosted, internal artifact repositories, such as PyPI for Python, Maven for Java, and npm for Node.js.\n* Access objects in an Amazon S3 bucket configured to allow access through an Amazon VPC endpoint only.\n* Query external web services that require fixed IP addresses through the Elastic IP address of the NAT gateway or NAT instance associated with your subnet(s).\n\nYour builds can access any resource that's hosted in your VPC.\n\n**Enable Amazon VPC Access in your CodeBuild Projects**\n\nPass the VPC when defining your Project, then make sure to\ngive the CodeBuild's security group the right permissions\nto access the resources that it needs by using the\n`connections` object.\n\nFor example:\n\n```ts\ndeclare const loadBalancer: elbv2.ApplicationLoadBalancer;\n\nconst vpc = new ec2.Vpc(this, 'MyVPC');\nconst project = new codebuild.Project(this, 'MyProject', {\n  vpc: vpc,\n  buildSpec: codebuild.BuildSpec.fromObject({\n    // ...\n  }),\n});\n\nproject.connections.allowTo(loadBalancer, ec2.Port.tcp(443));\n```\n\n## Project File System Location EFS\n\nAdd support for CodeBuild to build on AWS EFS file system mounts using\nthe new ProjectFileSystemLocation.\nThe `fileSystemLocations` property which accepts a list `ProjectFileSystemLocation`\nas represented by the interface `IFileSystemLocations`.\nThe only supported file system type is `EFS`.\n\nFor example:\n\n```ts\nnew codebuild.Project(this, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  fileSystemLocations: [\n    codebuild.FileSystemLocation.efs({\n      identifier: \"myidentifier2\",\n      location: \"myclodation.mydnsroot.com:/loc\",\n      mountPoint: \"/media\",\n      mountOptions: \"opts\"\n    })\n  ]\n});\n```\n\nHere's a CodeBuild project with a simple example that creates a project mounted on AWS EFS:\n\n[Minimal Example](./test/integ.project-file-system-location.ts)\n\n## Batch builds\n\nTo enable batch builds you should call `enableBatchBuilds()` on the project instance.\n\nIt returns an object containing the batch service role that was created,\nor `undefined` if batch builds could not be enabled, for example if the project was imported.\n\n```ts\ndeclare const source: codebuild.Source;\n\nconst project = new codebuild.Project(this, 'MyProject', { source, });\n\nif (project.enableBatchBuilds()) {\n  console.log('Batch builds were enabled');\n}\n```\n\n## Timeouts\n\nThere are two types of timeouts that can be set when creating your Project.\nThe `timeout` property can be used to set an upper limit on how long your Project is able to run without being marked as completed.\nThe default is 60 minutes.\nAn example of overriding the default follows.\n\n```ts\nnew codebuild.Project(this, 'MyProject', {\n  timeout: Duration.minutes(90)\n});\n```\n\nThe `queuedTimeout` property can be used to set an upper limit on how your Project remains queued to run.\nThere is no default value for this property.\nAs an example, to allow your Project to queue for up to thirty (30) minutes before the build fails,\nuse the following code.\n\n```ts\nnew codebuild.Project(this, 'MyProject', {\n  queuedTimeout: Duration.minutes(30)\n});\n```\n\n## Limiting concurrency\n\nBy default if a new build is triggered it will be run even if there is a previous build already in progress.\nIt is possible to limit the maximum concurrent builds to value between 1 and the account specific maximum limit.\nBy default there is no explicit limit.\n\n```ts\nnew codebuild.Project(this, 'MyProject', {\n  concurrentBuildLimit: 1\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-codebuild",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CodeBuild",
      "packageId": "Amazon.CDK.AWS.CodeBuild"
    },
    "java": {
      "maven": {
        "artifactId": "codebuild",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.codebuild"
    },
    "js": {
      "npm": "@aws-cdk/aws-codebuild"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-codebuild",
      "module": "aws_cdk.aws_codebuild"
    }
  },
  "types": {
    "@aws-cdk/aws-codebuild.Artifacts": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "Artifacts definition for a CodeBuild Project.",
        "example": "declare const bucket: s3.Bucket;\n\nconst project = new codebuild.Project(this, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  artifacts: codebuild.Artifacts.s3({\n      bucket,\n      includeBuildId: false,\n      packageZip: true,\n      path: 'another/path',\n      identifier: 'AddArtifact1',\n    }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.Artifacts",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/artifacts.ts",
          "line": 66
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.ArtifactsProps"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-codebuild.IArtifacts"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/artifacts.ts",
        "line": 58
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 59
          },
          "name": "s3",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.S3ArtifactsProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IArtifacts"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Callback when an Artifacts class is used in a CodeBuild Project."
          },
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 70
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-codebuild.IArtifacts",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_project",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.IProject"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.ArtifactsConfig"
            }
          }
        }
      ],
      "name": "Artifacts",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CodeBuild type of this artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 64
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-codebuild.IArtifacts",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "This property is required on secondary artifacts.",
            "stability": "stable",
            "summary": "The artifact identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 63
          },
          "name": "identifier",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IArtifacts",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/artifacts:Artifacts"
    },
    "@aws-cdk/aws-codebuild.ArtifactsConfig": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The type returned from {@link IArtifacts#bind}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst artifactsConfig: codebuild.ArtifactsConfig = {\n  artifactsProperty: {\n    type: 'type',\n\n    // the properties below are optional\n    artifactIdentifier: 'artifactIdentifier',\n    encryptionDisabled: false,\n    location: 'location',\n    name: 'name',\n    namespaceType: 'namespaceType',\n    overrideArtifactName: false,\n    packaging: 'packaging',\n    path: 'path',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.ArtifactsConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/artifacts.ts",
        "line": 12
      },
      "name": "ArtifactsConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The low-level CloudFormation artifacts property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 16
          },
          "name": "artifactsProperty",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.CfnProject.ArtifactsProperty"
          }
        }
      ],
      "symbolId": "lib/artifacts:ArtifactsConfig"
    },
    "@aws-cdk/aws-codebuild.ArtifactsProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties common to all Artifacts classes.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst artifactsProps: codebuild.ArtifactsProps = {\n  identifier: 'identifier',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.ArtifactsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/artifacts.ts",
        "line": 47
      },
      "name": "ArtifactsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This property is required on secondary artifacts.",
            "stability": "stable",
            "summary": "The artifact identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 52
          },
          "name": "identifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/artifacts:ArtifactsProps"
    },
    "@aws-cdk/aws-codebuild.BatchBuildConfig": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The type returned from {@link IProject#enableBatchBuilds}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\nconst batchBuildConfig: codebuild.BatchBuildConfig = {\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BatchBuildConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 37
      },
      "name": "BatchBuildConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The IAM batch service Role of this Project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 39
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/project:BatchBuildConfig"
    },
    "@aws-cdk/aws-codebuild.BindToCodePipelineOptions": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The extra options passed to the {@link IProject.bindToCodePipeline} method.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\nconst bindToCodePipelineOptions: codebuild.BindToCodePipelineOptions = {\n  artifactBucket: bucket,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BindToCodePipelineOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 741
      },
      "name": "BindToCodePipelineOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The artifact bucket that will be used by the action that invokes this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 745
          },
          "name": "artifactBucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        }
      ],
      "symbolId": "lib/project:BindToCodePipelineOptions"
    },
    "@aws-cdk/aws-codebuild.BitBucketSourceCredentials": {
      "assembly": "@aws-cdk/aws-codebuild",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CodeBuild::SourceCredential",
          "exampleMetadata": "infused"
        },
        "remarks": "**Note**: CodeBuild only allows a single credential for BitBucket\nto be saved in a given AWS account in a given region -\nany attempt to add more than one will result in an error.",
        "stability": "stable",
        "summary": "The source credentials used when contacting the BitBucket API.",
        "example": "new codebuild.BitBucketSourceCredentials(this, 'CodeBuildBitBucketCreds', {\n  username: SecretValue.secretsManager('my-bitbucket-creds', { jsonField: 'username' }),\n  password: SecretValue.secretsManager('my-bitbucket-creds', { jsonField: 'password' }),\n});"
      },
      "fqn": "@aws-cdk/aws-codebuild.BitBucketSourceCredentials",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/source-credentials.ts",
          "line": 89
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BitBucketSourceCredentialsProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/source-credentials.ts",
        "line": 88
      },
      "name": "BitBucketSourceCredentials",
      "symbolId": "lib/source-credentials:BitBucketSourceCredentials"
    },
    "@aws-cdk/aws-codebuild.BitBucketSourceCredentialsProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of {@link BitBucketSourceCredentials}.",
        "example": "new codebuild.BitBucketSourceCredentials(this, 'CodeBuildBitBucketCreds', {\n  username: SecretValue.secretsManager('my-bitbucket-creds', { jsonField: 'username' }),\n  password: SecretValue.secretsManager('my-bitbucket-creds', { jsonField: 'password' }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BitBucketSourceCredentialsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source-credentials.ts",
        "line": 71
      },
      "name": "BitBucketSourceCredentialsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Your BitBucket application password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-credentials.ts",
            "line": 76
          },
          "name": "password",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Your BitBucket username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-credentials.ts",
            "line": 73
          },
          "name": "username",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        }
      ],
      "symbolId": "lib/source-credentials:BitBucketSourceCredentialsProps"
    },
    "@aws-cdk/aws-codebuild.BitBucketSourceProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link BitBucketSource}.",
        "example": "const bbSource = codebuild.Source.bitBucket({\n  owner: 'owner',\n  repo: 'repo',\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BitBucketSourceProps",
      "interfaces": [
        "@aws-cdk/aws-codebuild.SourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 814
      },
      "name": "BitBucketSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "'awslabs'",
            "stability": "stable",
            "summary": "The BitBucket account/user that owns the repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 820
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "'aws-cdk'",
            "stability": "stable",
            "summary": "The name of the repo (without the username)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 827
          },
          "name": "repo",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the default branch's HEAD commit ID is used",
            "example": "'mybranch'",
            "stability": "stable",
            "summary": "The commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 124
          },
          "name": "branchOrRef",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"AWS CodeBuild $AWS_REGION ($PROJECT_NAME)\"",
            "example": "\"My build #$CODEBUILD_BUILD_NUMBER\"",
            "remarks": "Can use built-in CodeBuild variables, like $AWS_REGION.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html",
            "stability": "stable",
            "summary": "This parameter is used for the `name` parameter in the Bitbucket commit status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 839
          },
          "name": "buildStatusName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- link to the AWS Console for CodeBuild to a particular build execution",
            "example": "\"$CODEBUILD_PUBLIC_BUILD_URL\"",
            "remarks": "Can use built-in CodeBuild variables, like $AWS_REGION.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html",
            "stability": "stable",
            "summary": "The URL that the build will report back to the source provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 513
          },
          "name": "buildStatusUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Minimum value is 0.\nIf this value is 0, greater than 25, or not provided,\nthen the full history is downloaded with each build of the project.",
            "stability": "stable",
            "summary": "The depth of history to download."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 115
          },
          "name": "cloneDepth",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to fetch submodules while cloning git repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 131
          },
          "name": "fetchSubmodules",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to send notifications on your build's start and end."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 476
          },
          "name": "reportBuildStatus",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true if any `webhookFilters` were provided, false otherwise",
            "stability": "stable",
            "summary": "Whether to create a webhook that will trigger a build every time an event happens in the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 483
          },
          "name": "webhook",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "every push and every Pull Request (create or update) triggers a build",
            "remarks": "A build is triggered if any of the provided filter groups match.\nOnly valid if `webhook` was not provided as false.",
            "stability": "stable",
            "summary": "A list of webhook filters that can constraint what events in the repository will trigger a build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 501
          },
          "name": "webhookFilters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Enabling this will enable batch builds on the CodeBuild project.",
            "stability": "stable",
            "summary": "Trigger a batch build from a webhook instead of a standard one."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 492
          },
          "name": "webhookTriggersBatchBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/source:BitBucketSourceProps"
    },
    "@aws-cdk/aws-codebuild.BucketCacheOptions": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst bucketCacheOptions: codebuild.BucketCacheOptions = {\n  prefix: 'prefix',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BucketCacheOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cache.ts",
        "line": 6
      },
      "name": "BucketCacheOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The prefix to use to store the cache in the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cache.ts",
            "line": 10
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/cache:BucketCacheOptions"
    },
    "@aws-cdk/aws-codebuild.BuildEnvironment": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "declare const vpc: ec2.Vpc;\ndeclare const mySecurityGroup: ec2.SecurityGroup;\nnew pipelines.CodePipeline(this, 'Pipeline', {\n  // Standard CodePipeline properties\n  synth: new pipelines.ShellStep('Synth', {\n    input: pipelines.CodePipelineSource.connection('my-org/my-app', 'main', {\n      connectionArn: 'arn:aws:codestar-connections:us-east-1:222222222222:connection/7d2469ff-514a-4e4f-9003-5ca4a43cdc41', // Created using the AWS console * });',\n    }),\n    commands: [\n      'npm ci',\n      'npm run build',\n      'npx cdk synth',\n    ],\n  }),\n\n  // Defaults for all CodeBuild projects\n  codeBuildDefaults: {\n    // Prepend commands and configuration to all projects\n    partialBuildSpec: codebuild.BuildSpec.fromObject({\n      version: '0.2',\n      // ...\n    }),\n\n    // Control the build environment\n    buildEnvironment: {\n      computeType: codebuild.ComputeType.LARGE,\n    },\n\n    // Control Elastic Network Interface creation\n    vpc: vpc,\n    subnetSelection: { subnetType: ec2.SubnetType.PRIVATE_WITH_NAT },\n    securityGroups: [mySecurityGroup],\n\n    // Additional policy statements for the execution role\n    rolePolicy: [\n      new iam.PolicyStatement({ /* ... */ }),\n    ],\n  },\n\n  synthCodeBuildDefaults: { /* ... */ },\n  assetPublishingCodeBuildDefaults: { /* ... */ },\n  selfMutationCodeBuildDefaults: { /* ... */ },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BuildEnvironment",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1531
      },
      "name": "BuildEnvironment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "LinuxBuildImage.STANDARD_1_0",
            "stability": "stable",
            "summary": "The image used for the builds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1537
          },
          "name": "buildImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No external certificate is added to the project",
            "stability": "stable",
            "summary": "The location of the PEM-encoded certificate for the build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1564
          },
          "name": "certificate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.BuildEnvironmentCertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "taken from {@link #buildImage#defaultComputeType}",
            "remarks": "See the {@link ComputeType} enum for the possible values.",
            "stability": "stable",
            "summary": "The type of compute to use for this build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1545
          },
          "name": "computeType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ComputeType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The environment variables that your builds can use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1569
          },
          "name": "environmentVariables",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.BuildEnvironmentVariable"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Specify true to enable\nrunning the Docker daemon inside a Docker container. This value must be\nset to true only if this build project will be used to build Docker\nimages, and the specified build environment image is not one provided by\nAWS CodeBuild with Docker support. Otherwise, all associated builds that\nattempt to interact with the Docker daemon will fail.",
            "stability": "stable",
            "summary": "Indicates how the project builds Docker images."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1557
          },
          "name": "privileged",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/project:BuildEnvironment"
    },
    "@aws-cdk/aws-codebuild.BuildEnvironmentCertificate": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Location of a PEM certificate on S3.",
        "example": "declare const ecrRepository: ecr.Repository;\n\nnew codebuild.Project(this, 'Project', {\n  environment: {\n    buildImage: codebuild.WindowsBuildImage.fromEcrRepository(ecrRepository, 'v1.0', codebuild.WindowsImageType.SERVER_2019),\n    // optional certificate to include in the build image\n    certificate: {\n      bucket: s3.Bucket.fromBucketName(this, 'Bucket', 'my-bucket'),\n      objectKey: 'path/to/cert.pem',\n    },\n  },\n  // ...\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BuildEnvironmentCertificate",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 45
      },
      "name": "BuildEnvironmentCertificate",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The bucket where the certificate is."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 49
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The full path and name of the key file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 53
          },
          "name": "objectKey",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/project:BuildEnvironmentCertificate"
    },
    "@aws-cdk/aws-codebuild.BuildEnvironmentVariable": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "const sourceOutput = new codepipeline.Artifact();\nconst buildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'Build1',\n  input: sourceOutput,\n  project: new codebuild.PipelineProject(this, 'Project', {\n    buildSpec: codebuild.BuildSpec.fromObject({\n      version: '0.2',\n      env: {\n        'exported-variables': [\n          'MY_VAR',\n        ],\n      },\n      phases: {\n        build: {\n          commands: 'export MY_VAR=\"some value\"',\n        },\n      },\n    }),\n  }),\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\n\n// later:\ndeclare const project: codebuild.PipelineProject;\nnew codepipeline_actions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput,\n  environmentVariables: {\n    MyVar: {\n      value: buildAction.variable('MY_VAR'),\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BuildEnvironmentVariable",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 2036
      },
      "name": "BuildEnvironmentVariable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For plain-text variables (the default), this is the literal value of variable.\nFor SSM parameter variables, pass the name of the parameter here (`parameterName` property of `IParameter`).\nFor SecretsManager variables secrets, pass either the secret name (`secretName` property of `ISecret`)\nor the secret ARN (`secretArn` property of `ISecret`) here,\nalong with optional SecretsManager qualifiers separated by ':', like the JSON key, or the version or stage\n(see https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec.env.secrets-manager for details).",
            "stability": "stable",
            "summary": "The value of the environment variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 2052
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "PlainText",
            "stability": "stable",
            "summary": "The type of environment variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 2041
          },
          "name": "type",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.BuildEnvironmentVariableType"
          }
        }
      ],
      "symbolId": "lib/project:BuildEnvironmentVariable"
    },
    "@aws-cdk/aws-codebuild.BuildEnvironmentVariableType": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "example": "import * as codebuild from '@aws-cdk/aws-codebuild';\n\nconst codebuildProject = new codebuild.Project(this, 'Project', {\n  projectName: 'MyTestProject',\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: [\n          'echo \"Hello, CodeBuild!\"',\n        ],\n      },\n    },\n  }),\n});\n\nconst task = new tasks.CodeBuildStartBuild(this, 'Task', {\n  project: codebuildProject,\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  environmentVariablesOverride: {\n    ZONE: {\n      type: codebuild.BuildEnvironmentVariableType.PLAINTEXT,\n      value: sfn.JsonPath.stringAt('$.envVariables.zone'),\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BuildEnvironmentVariableType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 2055
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "An environment variable in plaintext format."
          },
          "name": "PLAINTEXT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An environment variable stored in Systems Manager Parameter Store."
          },
          "name": "PARAMETER_STORE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An environment variable stored in AWS Secrets Manager."
          },
          "name": "SECRETS_MANAGER"
        }
      ],
      "name": "BuildEnvironmentVariableType",
      "symbolId": "lib/project:BuildEnvironmentVariableType"
    },
    "@aws-cdk/aws-codebuild.BuildImageBindOptions": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Optional arguments to {@link IBuildImage.binder} - currently empty.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst buildImageBindOptions: codebuild.BuildImageBindOptions = { };",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BuildImageBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1631
      },
      "name": "BuildImageBindOptions",
      "symbolId": "lib/project:BuildImageBindOptions"
    },
    "@aws-cdk/aws-codebuild.BuildImageConfig": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The return type from {@link IBuildImage.binder} - currently empty.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst buildImageConfig: codebuild.BuildImageConfig = { };",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BuildImageConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1634
      },
      "name": "BuildImageConfig",
      "symbolId": "lib/project:BuildImageConfig"
    },
    "@aws-cdk/aws-codebuild.BuildSpec": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "BuildSpec for CodeBuild projects.",
        "example": "const sourceOutput = new codepipeline.Artifact();\nconst buildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'Build1',\n  input: sourceOutput,\n  project: new codebuild.PipelineProject(this, 'Project', {\n    buildSpec: codebuild.BuildSpec.fromObject({\n      version: '0.2',\n      env: {\n        'exported-variables': [\n          'MY_VAR',\n        ],\n      },\n      phases: {\n        build: {\n          commands: 'export MY_VAR=\"some value\"',\n        },\n      },\n    }),\n  }),\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\n\n// later:\ndeclare const project: codebuild.PipelineProject;\nnew codepipeline_actions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput,\n  environmentVariables: {\n    MyVar: {\n      value: buildAction.variable('MY_VAR'),\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.BuildSpec",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/build-spec.ts",
          "line": 35
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/build-spec.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/build-spec.ts",
            "line": 8
          },
          "name": "fromObject",
          "parameters": [
            {
              "name": "value",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BuildSpec"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a buildspec from an object that will be rendered as YAML in the resulting CloudFormation template."
          },
          "locationInModule": {
            "filename": "lib/build-spec.ts",
            "line": 17
          },
          "name": "fromObjectToYaml",
          "parameters": [
            {
              "docs": {
                "summary": "the object containing the buildspec that will be rendered as YAML."
              },
              "name": "value",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BuildSpec"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Use this if you want to use a file different from 'buildspec.yml'`",
            "stability": "stable",
            "summary": "Use a file from the source as buildspec."
          },
          "locationInModule": {
            "filename": "lib/build-spec.ts",
            "line": 26
          },
          "name": "fromSourceFilename",
          "parameters": [
            {
              "name": "filename",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BuildSpec"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Render the represented BuildSpec."
          },
          "locationInModule": {
            "filename": "lib/build-spec.ts",
            "line": 41
          },
          "name": "toBuildSpec",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "BuildSpec",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether the buildspec is directly available or deferred until build-time."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/build-spec.ts",
            "line": 33
          },
          "name": "isImmediate",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/build-spec:BuildSpec"
    },
    "@aws-cdk/aws-codebuild.Cache": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "remarks": "A cache can store reusable pieces of your build environment and use them across multiple builds.",
        "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-caching.html",
        "stability": "stable",
        "summary": "Cache options for CodeBuild Project.",
        "example": "declare const myCachingBucket: s3.Bucket;\n\nnew codebuild.Project(this, 'Project', {\n  source: codebuild.Source.bitBucket({\n    owner: 'awslabs',\n    repo: 'aws-cdk',\n  }),\n\n  cache: codebuild.Cache.bucket(myCachingBucket),\n\n  // BuildSpec with a 'cache' section necessary for S3 caching. This can\n  // also come from 'buildspec.yml' in your source.\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: ['...'],\n      },\n    },\n    cache: {\n      paths: [\n        // The '**/*' is required to indicate all files in this directory\n        '/root/cachedir/**/*',\n      ],\n    },\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.Cache",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cache.ts",
        "line": 38
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Create an S3 caching strategy."
          },
          "locationInModule": {
            "filename": "lib/cache.ts",
            "line": 68
          },
          "name": "bucket",
          "parameters": [
            {
              "docs": {
                "summary": "the S3 bucket to use for caching."
              },
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "docs": {
                "summary": "additional options to pass to the S3 caching."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.BucketCacheOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.Cache"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a local caching strategy."
          },
          "locationInModule": {
            "filename": "lib/cache.ts",
            "line": 53
          },
          "name": "local",
          "parameters": [
            {
              "docs": {
                "summary": "the mode(s) to enable for local caching."
              },
              "name": "modes",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.LocalCacheMode"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.Cache"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/cache.ts",
            "line": 39
          },
          "name": "none",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.Cache"
            }
          },
          "static": true
        }
      ],
      "name": "Cache",
      "symbolId": "lib/cache:Cache"
    },
    "@aws-cdk/aws-codebuild.CfnProject": {
      "assembly": "@aws-cdk/aws-codebuild",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CodeBuild::Project",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::CodeBuild::Project` resource configures how AWS CodeBuild builds your source code. For example, it tells CodeBuild where to get the source code and which build environment to use.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CodeBuild::Project`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst cfnProject = new codebuild.CfnProject(this, 'MyCfnProject', {\n  artifacts: {\n    type: 'type',\n\n    // the properties below are optional\n    artifactIdentifier: 'artifactIdentifier',\n    encryptionDisabled: false,\n    location: 'location',\n    name: 'name',\n    namespaceType: 'namespaceType',\n    overrideArtifactName: false,\n    packaging: 'packaging',\n    path: 'path',\n  },\n  environment: {\n    computeType: 'computeType',\n    image: 'image',\n    type: 'type',\n\n    // the properties below are optional\n    certificate: 'certificate',\n    environmentVariables: [{\n      name: 'name',\n      value: 'value',\n\n      // the properties below are optional\n      type: 'type',\n    }],\n    imagePullCredentialsType: 'imagePullCredentialsType',\n    privilegedMode: false,\n    registryCredential: {\n      credential: 'credential',\n      credentialProvider: 'credentialProvider',\n    },\n  },\n  serviceRole: 'serviceRole',\n  source: {\n    type: 'type',\n\n    // the properties below are optional\n    auth: {\n      type: 'type',\n\n      // the properties below are optional\n      resource: 'resource',\n    },\n    buildSpec: 'buildSpec',\n    buildStatusConfig: {\n      context: 'context',\n      targetUrl: 'targetUrl',\n    },\n    gitCloneDepth: 123,\n    gitSubmodulesConfig: {\n      fetchSubmodules: false,\n    },\n    insecureSsl: false,\n    location: 'location',\n    reportBuildStatus: false,\n    sourceIdentifier: 'sourceIdentifier',\n  },\n\n  // the properties below are optional\n  badgeEnabled: false,\n  buildBatchConfig: {\n    batchReportMode: 'batchReportMode',\n    combineArtifacts: false,\n    restrictions: {\n      computeTypesAllowed: ['computeTypesAllowed'],\n      maximumBuildsAllowed: 123,\n    },\n    serviceRole: 'serviceRole',\n    timeoutInMins: 123,\n  },\n  cache: {\n    type: 'type',\n\n    // the properties below are optional\n    location: 'location',\n    modes: ['modes'],\n  },\n  concurrentBuildLimit: 123,\n  description: 'description',\n  encryptionKey: 'encryptionKey',\n  fileSystemLocations: [{\n    identifier: 'identifier',\n    location: 'location',\n    mountPoint: 'mountPoint',\n    type: 'type',\n\n    // the properties below are optional\n    mountOptions: 'mountOptions',\n  }],\n  logsConfig: {\n    cloudWatchLogs: {\n      status: 'status',\n\n      // the properties below are optional\n      groupName: 'groupName',\n      streamName: 'streamName',\n    },\n    s3Logs: {\n      status: 'status',\n\n      // the properties below are optional\n      encryptionDisabled: false,\n      location: 'location',\n    },\n  },\n  name: 'name',\n  queuedTimeoutInMinutes: 123,\n  resourceAccessRole: 'resourceAccessRole',\n  secondaryArtifacts: [{\n    type: 'type',\n\n    // the properties below are optional\n    artifactIdentifier: 'artifactIdentifier',\n    encryptionDisabled: false,\n    location: 'location',\n    name: 'name',\n    namespaceType: 'namespaceType',\n    overrideArtifactName: false,\n    packaging: 'packaging',\n    path: 'path',\n  }],\n  secondarySources: [{\n    type: 'type',\n\n    // the properties below are optional\n    auth: {\n      type: 'type',\n\n      // the properties below are optional\n      resource: 'resource',\n    },\n    buildSpec: 'buildSpec',\n    buildStatusConfig: {\n      context: 'context',\n      targetUrl: 'targetUrl',\n    },\n    gitCloneDepth: 123,\n    gitSubmodulesConfig: {\n      fetchSubmodules: false,\n    },\n    insecureSsl: false,\n    location: 'location',\n    reportBuildStatus: false,\n    sourceIdentifier: 'sourceIdentifier',\n  }],\n  secondarySourceVersions: [{\n    sourceIdentifier: 'sourceIdentifier',\n\n    // the properties below are optional\n    sourceVersion: 'sourceVersion',\n  }],\n  sourceVersion: 'sourceVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeoutInMinutes: 123,\n  triggers: {\n    buildType: 'buildType',\n    filterGroups: [[{\n      pattern: 'pattern',\n      type: 'type',\n\n      // the properties below are optional\n      excludeMatchedPattern: false,\n    }]],\n    webhook: false,\n  },\n  visibility: 'visibility',\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n    vpcId: 'vpcId',\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CodeBuild::Project`."
        },
        "locationInModule": {
          "filename": "lib/codebuild.generated.ts",
          "line": 568
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.CfnProjectProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 340
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 608
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 642
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnProject",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 344
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The ARN of the AWS CodeBuild project, such as `arn:aws:codebuild:us-west-2:123456789012:project/myProjectName` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 369
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 613
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-tags"
            },
            "remarks": "These tags are available for use by AWS services that support AWS CodeBuild build project tags.",
            "stability": "external",
            "summary": "An arbitrary set of tags (key-value pairs) for the AWS CodeBuild project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 528
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-artifacts"
            },
            "stability": "external",
            "summary": "`Artifacts` is a property of the [AWS::CodeBuild::Project](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html) resource that specifies output settings for artifacts generated by an AWS CodeBuild build."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 376
          },
          "name": "artifacts",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.ArtifactsProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-environment"
            },
            "stability": "external",
            "summary": "The build environment settings for the project, such as the environment type or the environment variables to use for the build environment."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 383
          },
          "name": "environment",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.EnvironmentProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-servicerole"
            },
            "stability": "external",
            "summary": "The ARN of the IAM role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 390
          },
          "name": "serviceRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-source"
            },
            "stability": "external",
            "summary": "The source code settings for the project, such as the source code's repository type and location."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 397
          },
          "name": "source",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.SourceProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-badgeenabled"
            },
            "remarks": "For more information, see [Build Badges Sample](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-badges.html) in the *AWS CodeBuild User Guide* .\n\n> Including build badges with your project is currently not supported if the source type is CodePipeline. If you specify `CODEPIPELINE` for the `Source` property, do not specify the `BadgeEnabled` property.",
            "stability": "external",
            "summary": "Indicates whether AWS CodeBuild generates a publicly accessible URL for your project's build badge."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 406
          },
          "name": "badgeEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-buildbatchconfig"
            },
            "stability": "external",
            "summary": "A `ProjectBuildBatchConfig` object that defines the batch build options for the project."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 413
          },
          "name": "buildBatchConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectBuildBatchConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-cache"
            },
            "stability": "external",
            "summary": "Settings that AWS CodeBuild uses to store and reuse build dependencies."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 420
          },
          "name": "cache",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectCacheProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-concurrentbuildlimit"
            },
            "remarks": "New builds are only started if the current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds are throttled and are not run.",
            "stability": "external",
            "summary": "The maximum number of concurrent builds that are allowed for this project."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 429
          },
          "name": "concurrentBuildLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-description"
            },
            "stability": "external",
            "summary": "A description that makes the build project easy to identify."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 436
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-encryptionkey"
            },
            "remarks": "> You can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias (using the format `alias/<alias-name>` ). If you don't specify a value, CodeBuild uses the managed CMK for Amazon Simple Storage Service (Amazon S3).",
            "stability": "external",
            "summary": "The AWS Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 447
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-filesystemlocations"
            },
            "remarks": "A `ProjectFileSystemLocation` object specifies the `identifier` , `location` , `mountOptions` , `mountPoint` , and `type` of a file system created using Amazon Elastic File System.",
            "stability": "external",
            "summary": "An array of `ProjectFileSystemLocation` objects for a CodeBuild build project."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 454
          },
          "name": "fileSystemLocations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectFileSystemLocationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-logsconfig"
            },
            "remarks": "A project can create logs in CloudWatch Logs, an S3 bucket, or both.",
            "stability": "external",
            "summary": "Information about logs for the build project."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 461
          },
          "name": "logsConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.LogsConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-name"
            },
            "remarks": "The name must be unique across all of the projects in your AWS account .",
            "stability": "external",
            "summary": "The name of the build project."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 468
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-queuedtimeoutinminutes"
            },
            "stability": "external",
            "summary": "The number of minutes a build is allowed to be queued before it times out."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 475
          },
          "name": "queuedTimeoutInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-resourceaccessrole"
            },
            "stability": "external",
            "summary": "The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 482
          },
          "name": "resourceAccessRole",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondaryartifacts"
            },
            "remarks": "Each artifacts object specifies output settings that the project generates during a build.",
            "stability": "external",
            "summary": "A list of `Artifacts` objects."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 489
          },
          "name": "secondaryArtifacts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codebuild.CfnProject.ArtifactsProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondarysources"
            },
            "stability": "external",
            "summary": "An array of `ProjectSource` objects."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 496
          },
          "name": "secondarySources",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-codebuild.CfnProject.SourceProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondarysourceversions"
            },
            "remarks": "If `secondarySourceVersions` is specified at the build level, then they take over these `secondarySourceVersions` (at the project level).",
            "stability": "external",
            "summary": "An array of `ProjectSourceVersion` objects."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 503
          },
          "name": "secondarySourceVersions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectSourceVersionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-sourceversion"
            },
            "remarks": "If not specified, the latest version is used. If specified, it must be one of:\n\n- For CodeCommit: the commit ID, branch, or Git tag to use.\n- For GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format `pr/pull-request-ID` (for example `pr/25` ). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.\n- For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.\n- For Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nIf `sourceVersion` is specified at the build level, then that version takes precedence over this `sourceVersion` (at the project level).\n\nFor more information, see [Source Version Sample with CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html) in the *AWS CodeBuild User Guide* .",
            "stability": "external",
            "summary": "A version of the build input to be built for this project."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 519
          },
          "name": "sourceVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-timeoutinminutes"
            },
            "remarks": "The default is 60 minutes.",
            "stability": "external",
            "summary": "How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before timing out any related build that did not get marked as completed."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 535
          },
          "name": "timeoutInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-triggers"
            },
            "stability": "external",
            "summary": "For an existing AWS CodeBuild build project that has its source code stored in a GitHub repository, enables AWS CodeBuild to begin automatically rebuilding the source code every time a code change is pushed to the repository."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 542
          },
          "name": "triggers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectTriggersProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-visibility"
            },
            "remarks": "- **PUBLIC_READ** - The project builds are visible to the public.\n- **PRIVATE** - The project builds are not visible to the public.",
            "stability": "external",
            "summary": "Specifies the visibility of the project's builds. Possible values are:."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 552
          },
          "name": "visibility",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-vpcconfig"
            },
            "remarks": "For more information, see [Use AWS CodeBuild with Amazon Virtual Private Cloud](https://docs.aws.amazon.com/codebuild/latest/userguide/vpc-support.html) in the *AWS CodeBuild User Guide* .",
            "stability": "external",
            "summary": "`VpcConfig` specifies settings that enable AWS CodeBuild to access resources in an Amazon VPC."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 559
          },
          "name": "vpcConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.VpcConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject"
    },
    "@aws-cdk/aws-codebuild.CfnProject.ArtifactsProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`Artifacts` is a property of the [AWS::CodeBuild::Project](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html) resource that specifies output settings for artifacts generated by an AWS CodeBuild build.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst artifactsProperty: codebuild.CfnProject.ArtifactsProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  artifactIdentifier: 'artifactIdentifier',\n  encryptionDisabled: false,\n  location: 'location',\n  name: 'name',\n  namespaceType: 'namespaceType',\n  overrideArtifactName: false,\n  packaging: 'packaging',\n  path: 'path',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.ArtifactsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 656
      },
      "name": "ArtifactsProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-type"
            },
            "remarks": "- `CODEPIPELINE` : The build project has build output generated through CodePipeline.\n\n> The `CODEPIPELINE` type is not supported for `secondaryArtifacts` .\n- `NO_ARTIFACTS` : The build project does not produce any build output.\n- `S3` : The build project stores build output in Amazon S3.",
            "stability": "external",
            "summary": "The type of build output artifact. Valid values include:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 756
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-artifactidentifier"
            },
            "stability": "external",
            "summary": "An identifier for this artifact definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 662
          },
          "name": "artifactIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-encryptiondisabled"
            },
            "remarks": "This option is valid only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an `invalidInputException` is thrown.",
            "stability": "external",
            "summary": "Set to true if you do not want your output artifacts encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 668
          },
          "name": "encryptionDisabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-location"
            },
            "remarks": "- If `type` is set to `CODEPIPELINE` , AWS CodePipeline ignores this value if specified. This is because CodePipeline manages its build output locations instead of CodeBuild .\n- If `type` is set to `NO_ARTIFACTS` , this value is ignored if specified, because no build output is produced.\n- If `type` is set to `S3` , this is the name of the output bucket.\n\nIf you specify `CODEPIPELINE` or `NO_ARTIFACTS` for the `Type` property, don't specify this property. For all of the other types, you must specify this property.",
            "stability": "external",
            "summary": "Information about the build output artifact location:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 680
          },
          "name": "location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-name"
            },
            "remarks": "- If `type` is set to `CODEPIPELINE` , AWS CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of AWS CodeBuild .\n- If `type` is set to `NO_ARTIFACTS` , this value is ignored if specified, because no build output is produced.\n- If `type` is set to `S3` , this is the name of the output artifact object. If you set the name to be a forward slash (\"/\"), the artifact is stored in the root of the output bucket.\n\nFor example:\n\n- If `path` is set to `MyArtifacts` , `namespaceType` is set to `BUILD_ID` , and `name` is set to `MyArtifact.zip` , then the output artifact is stored in `MyArtifacts/ *build-ID* /MyArtifact.zip` .\n- If `path` is empty, `namespaceType` is set to `NONE` , and `name` is set to \" `/` \", the output artifact is stored in the root of the output bucket.\n- If `path` is set to `MyArtifacts` , `namespaceType` is set to `BUILD_ID` , and `name` is set to \" `/` \", the output artifact is stored in `MyArtifacts/ *build-ID*` .\n\nIf you specify `CODEPIPELINE` or `NO_ARTIFACTS` for the `Type` property, don't specify this property. For all of the other types, you must specify this property.",
            "stability": "external",
            "summary": "Along with `path` and `namespaceType` , the pattern that AWS CodeBuild uses to name and store the output artifact:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 698
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-namespacetype"
            },
            "remarks": "This is because CodePipeline manages its build output names instead of AWS CodeBuild .\n- If `type` is set to `NO_ARTIFACTS` , this value is ignored if specified, because no build output is produced.\n- If `type` is set to `S3` , valid values include:\n\n- `BUILD_ID` : Include the build ID in the location of the build output artifact.\n- `NONE` : Do not include the build ID. This is the default if `namespaceType` is not specified.\n\nFor example, if `path` is set to `MyArtifacts` , `namespaceType` is set to `BUILD_ID` , and `name` is set to `MyArtifact.zip` , the output artifact is stored in `MyArtifacts/<build-ID>/MyArtifact.zip` .",
            "stability": "external",
            "summary": "Along with `path` and `name` , the pattern that AWS CodeBuild uses to determine the name and location to store the output artifact:  - If `type` is set to `CODEPIPELINE` , CodePipeline ignores this value if specified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 713
          },
          "name": "namespaceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-overrideartifactname"
            },
            "remarks": "The name specified in a buildspec file is calculated at build time and uses the Shell command language. For example, you can append a date and time to your artifact name so that it is always unique.",
            "stability": "external",
            "summary": "If set to true a name specified in the buildspec file overrides the artifact name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 719
          },
          "name": "overrideArtifactName",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-packaging"
            },
            "remarks": "- If `type` is set to `CODEPIPELINE` , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output artifacts instead of AWS CodeBuild .\n- If `type` is set to `NO_ARTIFACTS` , this value is ignored if specified, because no build output is produced.\n- If `type` is set to `S3` , valid values include:\n\n- `NONE` : AWS CodeBuild creates in the output bucket a folder that contains the build output. This is the default if `packaging` is not specified.\n- `ZIP` : AWS CodeBuild creates in the output bucket a ZIP file that contains the build output.",
            "stability": "external",
            "summary": "The type of build output artifact to create:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 732
          },
          "name": "packaging",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html#cfn-codebuild-project-artifacts-path"
            },
            "remarks": "- If `type` is set to `CODEPIPELINE` , CodePipeline ignores this value if specified. This is because CodePipeline manages its build output names instead of AWS CodeBuild .\n- If `type` is set to `NO_ARTIFACTS` , this value is ignored if specified, because no build output is produced.\n- If `type` is set to `S3` , this is the path to the output artifact. If `path` is not specified, `path` is not used.\n\nFor example, if `path` is set to `MyArtifacts` , `namespaceType` is set to `NONE` , and `name` is set to `MyArtifact.zip` , the output artifact is stored in the output bucket at `MyArtifacts/MyArtifact.zip` .",
            "stability": "external",
            "summary": "Along with `namespaceType` and `name` , the pattern that AWS CodeBuild uses to name and store the output artifact:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 744
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.ArtifactsProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.BatchRestrictionsProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-batchrestrictions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Specifies restrictions for the batch build.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst batchRestrictionsProperty: codebuild.CfnProject.BatchRestrictionsProperty = {\n  computeTypesAllowed: ['computeTypesAllowed'],\n  maximumBuildsAllowed: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.BatchRestrictionsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 842
      },
      "name": "BatchRestrictionsProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-batchrestrictions.html#cfn-codebuild-project-batchrestrictions-computetypesallowed"
            },
            "remarks": "See [Build environment compute types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html) in the *AWS CodeBuild User Guide* for these values.",
            "stability": "external",
            "summary": "An array of strings that specify the compute types that are allowed for the batch build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 848
          },
          "name": "computeTypesAllowed",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-batchrestrictions.html#cfn-codebuild-project-batchrestrictions-maximumbuildsallowed"
            },
            "stability": "external",
            "summary": "Specifies the maximum number of builds allowed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 854
          },
          "name": "maximumBuildsAllowed",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.BatchRestrictionsProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.BuildStatusConfigProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-buildstatusconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains information that defines how the AWS CodeBuild build project reports the build status to the source provider.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst buildStatusConfigProperty: codebuild.CfnProject.BuildStatusConfigProperty = {\n  context: 'context',\n  targetUrl: 'targetUrl',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.BuildStatusConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 918
      },
      "name": "BuildStatusConfigProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-buildstatusconfig.html#cfn-codebuild-project-buildstatusconfig-context"
            },
            "remarks": "The usage of this parameter depends on the source provider.\n\n- **Bitbucket** - This parameter is used for the `name` parameter in the Bitbucket commit status. For more information, see [build](https://docs.aws.amazon.com/https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build) in the Bitbucket API documentation.\n- **GitHub/GitHub Enterprise Server** - This parameter is used for the `context` parameter in the GitHub commit status. For more information, see [Create a commit status](https://docs.aws.amazon.com/https://developer.github.com/v3/repos/statuses/#create-a-commit-status) in the GitHub developer guide.",
            "stability": "external",
            "summary": "Specifies the context of the build status CodeBuild sends to the source provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 927
          },
          "name": "context",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-buildstatusconfig.html#cfn-codebuild-project-buildstatusconfig-targeturl"
            },
            "remarks": "The usage of this parameter depends on the source provider.\n\n- **Bitbucket** - This parameter is used for the `url` parameter in the Bitbucket commit status. For more information, see [build](https://docs.aws.amazon.com/https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build) in the Bitbucket API documentation.\n- **GitHub/GitHub Enterprise Server** - This parameter is used for the `target_url` parameter in the GitHub commit status. For more information, see [Create a commit status](https://docs.aws.amazon.com/https://developer.github.com/v3/repos/statuses/#create-a-commit-status) in the GitHub developer guide.",
            "stability": "external",
            "summary": "Specifies the target url of the build status CodeBuild sends to the source provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 936
          },
          "name": "targetUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.BuildStatusConfigProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.CloudWatchLogsConfigProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-cloudwatchlogsconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`CloudWatchLogs` is a property of the [AWS CodeBuild Project LogsConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-logsconfig.html) property type that specifies settings for CloudWatch logs generated by an AWS CodeBuild build.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst cloudWatchLogsConfigProperty: codebuild.CfnProject.CloudWatchLogsConfigProperty = {\n  status: 'status',\n\n  // the properties below are optional\n  groupName: 'groupName',\n  streamName: 'streamName',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.CloudWatchLogsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 1000
      },
      "name": "CloudWatchLogsConfigProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-cloudwatchlogsconfig.html#cfn-codebuild-project-cloudwatchlogsconfig-status"
            },
            "remarks": "- `ENABLED` : CloudWatch Logs are enabled for this build project.\n- `DISABLED` : CloudWatch Logs are not enabled for this build project.",
            "stability": "external",
            "summary": "The current status of the logs in CloudWatch Logs for a build project. Valid values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1015
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-cloudwatchlogsconfig.html#cfn-codebuild-project-cloudwatchlogsconfig-groupname"
            },
            "remarks": "For more information, see [Working with Log Groups and Log Streams](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html) .",
            "stability": "external",
            "summary": "The group name of the logs in CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1006
          },
          "name": "groupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-cloudwatchlogsconfig.html#cfn-codebuild-project-cloudwatchlogsconfig-streamname"
            },
            "remarks": "For more information, see [Working with Log Groups and Log Streams](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html) .",
            "stability": "external",
            "summary": "The prefix of the stream name of the CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1021
          },
          "name": "streamName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.CloudWatchLogsConfigProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.EnvironmentProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`Environment` is a property of the [AWS::CodeBuild::Project](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html) resource that specifies the environment for an AWS CodeBuild project.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst environmentProperty: codebuild.CfnProject.EnvironmentProperty = {\n  computeType: 'computeType',\n  image: 'image',\n  type: 'type',\n\n  // the properties below are optional\n  certificate: 'certificate',\n  environmentVariables: [{\n    name: 'name',\n    value: 'value',\n\n    // the properties below are optional\n    type: 'type',\n  }],\n  imagePullCredentialsType: 'imagePullCredentialsType',\n  privilegedMode: false,\n  registryCredential: {\n    credential: 'credential',\n    credentialProvider: 'credentialProvider',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.EnvironmentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 1089
      },
      "name": "EnvironmentProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html#cfn-codebuild-project-environment-computetype"
            },
            "remarks": "This determines the number of CPU cores and memory the build environment uses. Available values include:\n\n- `BUILD_GENERAL1_SMALL` : Use up to 3 GB memory and 2 vCPUs for builds.\n- `BUILD_GENERAL1_MEDIUM` : Use up to 7 GB memory and 4 vCPUs for builds.\n- `BUILD_GENERAL1_LARGE` : Use up to 15 GB memory and 8 vCPUs for builds.\n\nFor more information, see [Build Environment Compute Types](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html) in the *AWS CodeBuild User Guide.*",
            "stability": "external",
            "summary": "The type of compute environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1107
          },
          "name": "computeType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html#cfn-codebuild-project-environment-image"
            },
            "remarks": "Use the following formats:\n\n- For an image tag: `<registry>/<repository>:<tag>` . For example, in the Docker repository that CodeBuild uses to manage its Docker images, this would be `aws/codebuild/standard:4.0` .\n- For an image digest: `<registry>/<repository>@<digest>` . For example, to specify an image with the digest \"sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf,\" use `<registry>/<repository>@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf` .\n\nFor more information, see [Docker images provided by CodeBuild](https://docs.aws.amazon.com//codebuild/latest/userguide/build-env-ref-available.html) in the *AWS CodeBuild user guide* .",
            "stability": "external",
            "summary": "The image tag or image digest that identifies the Docker image to use for this build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1124
          },
          "name": "image",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html#cfn-codebuild-project-environment-type"
            },
            "remarks": "- The environment type `ARM_CONTAINER` is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), EU (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and EU (Frankfurt).\n- The environment type `LINUX_CONTAINER` with compute type `build.general1.2xlarge` is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).\n- The environment type `LINUX_GPU_CONTAINER` is available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), Canada (Central), EU (Ireland), EU (London), EU (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney) , China (Beijing), and China (Ningxia).\n\n- The environment types `WINDOWS_CONTAINER` and `WINDOWS_SERVER_2019_CONTAINER` are available only in regions US East (N. Virginia), US East (Ohio), US West (Oregon), and EU (Ireland).\n\nFor more information, see [Build environment compute types](https://docs.aws.amazon.com//codebuild/latest/userguide/build-env-ref-compute-types.html) in the *AWS CodeBuild user guide* .",
            "stability": "external",
            "summary": "The type of build environment to use for related builds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1178
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html#cfn-codebuild-project-environment-certificate"
            },
            "remarks": "For more information, see [certificate](https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-cli.html#cli.environment.certificate) in the *AWS CodeBuild User Guide* .",
            "stability": "external",
            "summary": "The ARN of the Amazon S3 bucket, path prefix, and object key that contains the PEM-encoded certificate for the build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1095
          },
          "name": "certificate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html#cfn-codebuild-project-environment-environmentvariables"
            },
            "stability": "external",
            "summary": "A set of environment variables to make available to builds for this build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1113
          },
          "name": "environmentVariables",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-codebuild.CfnProject.EnvironmentVariableProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html#cfn-codebuild-project-environment-imagepullcredentialstype"
            },
            "remarks": "- `CODEBUILD` specifies that AWS CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust AWS CodeBuild service principal.\n- `SERVICE_ROLE` specifies that AWS CodeBuild uses your build project's service role.\n\nWhen you use a cross-account or private registry image, you must use SERVICE_ROLE credentials. When you use an AWS CodeBuild curated image, you must use CODEBUILD credentials.",
            "stability": "external",
            "summary": "The type of credentials AWS CodeBuild uses to pull images in your build. There are two valid values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1135
          },
          "name": "imagePullCredentialsType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html#cfn-codebuild-project-environment-privilegedmode"
            },
            "remarks": "Set to true only if the build project is used to build Docker images. Otherwise, a build that attempts to interact with the Docker daemon fails. The default setting is `false` .\n\nYou can initialize the Docker daemon during the install phase of your build by adding one of the following sets of commands to the install phase of your buildspec file:\n\nIf the operating system's base image is Ubuntu Linux:\n\n`- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&`\n\n`- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"`\n\nIf the operating system's base image is Alpine Linux and the previous command does not work, add the `-t` argument to `timeout` :\n\n`- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&`\n\n`- timeout -t 15 sh -c \"until docker info; do echo .; sleep 1; done\"`",
            "stability": "external",
            "summary": "Enables running the Docker daemon inside a Docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1155
          },
          "name": "privilegedMode",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html#cfn-codebuild-project-environment-registrycredential"
            },
            "remarks": "- `imagePullCredentialsType` must be set to `SERVICE_ROLE` .\n- images cannot be curated or an Amazon ECR image.",
            "stability": "external",
            "summary": "`RegistryCredential` is a property of the [AWS::CodeBuild::Project Environment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-environment) property that specifies information about credentials that provide access to a private Docker registry. When this is set:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1164
          },
          "name": "registryCredential",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.RegistryCredentialProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.EnvironmentProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.EnvironmentVariableProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environmentvariable.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`EnvironmentVariable` is a property of the [AWS CodeBuild Project Environment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html) property type that specifies the name and value of an environment variable for an AWS CodeBuild project environment. When you use the environment to run a build, these variables are available for your builds to use. `EnvironmentVariable` contains a list of `EnvironmentVariable` property types.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst environmentVariableProperty: codebuild.CfnProject.EnvironmentVariableProperty = {\n  name: 'name',\n  value: 'value',\n\n  // the properties below are optional\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.EnvironmentVariableProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 1263
      },
      "name": "EnvironmentVariableProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environmentvariable.html#cfn-codebuild-project-environmentvariable-name"
            },
            "stability": "external",
            "summary": "The name or key of the environment variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1269
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environmentvariable.html#cfn-codebuild-project-environmentvariable-value"
            },
            "remarks": "> We strongly discourage the use of `PLAINTEXT` environment variables to store sensitive values, especially AWS secret key IDs and secret access keys. `PLAINTEXT` environment variables can be displayed in plain text using the AWS CodeBuild console and the AWS CLI . For sensitive values, we recommend you use an environment variable of type `PARAMETER_STORE` or `SECRETS_MANAGER` .",
            "stability": "external",
            "summary": "The value of the environment variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1287
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environmentvariable.html#cfn-codebuild-project-environmentvariable-type"
            },
            "remarks": "- `PARAMETER_STORE` : An environment variable stored in Systems Manager Parameter Store. To learn how to specify a parameter store environment variable, see [env/parameter-store](https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec.env.parameter-store) in the *AWS CodeBuild User Guide* .\n- `PLAINTEXT` : An environment variable in plain text format. This is the default value.\n- `SECRETS_MANAGER` : An environment variable stored in AWS Secrets Manager . To learn how to specify a secrets manager environment variable, see [env/secrets-manager](https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec.env.secrets-manager) in the *AWS CodeBuild User Guide* .",
            "stability": "external",
            "summary": "The type of environment variable. Valid values include:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1279
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.EnvironmentVariableProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.GitSubmodulesConfigProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-gitsubmodulesconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`GitSubmodulesConfig` is a property of the [AWS CodeBuild Project Source](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html) property type that specifies information about the Git submodules configuration for the build project.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst gitSubmodulesConfigProperty: codebuild.CfnProject.GitSubmodulesConfigProperty = {\n  fetchSubmodules: false,\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.GitSubmodulesConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 1356
      },
      "name": "GitSubmodulesConfigProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-gitsubmodulesconfig.html#cfn-codebuild-project-gitsubmodulesconfig-fetchsubmodules"
            },
            "stability": "external",
            "summary": "Set to true to fetch Git submodules for your AWS CodeBuild build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1362
          },
          "name": "fetchSubmodules",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.GitSubmodulesConfigProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.LogsConfigProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-logsconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`LogsConfig` is a property of the [AWS CodeBuild Project](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html) resource that specifies information about logs for a build project. These can be logs in Amazon CloudWatch Logs, built in a specified S3 bucket, or both.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst logsConfigProperty: codebuild.CfnProject.LogsConfigProperty = {\n  cloudWatchLogs: {\n    status: 'status',\n\n    // the properties below are optional\n    groupName: 'groupName',\n    streamName: 'streamName',\n  },\n  s3Logs: {\n    status: 'status',\n\n    // the properties below are optional\n    encryptionDisabled: false,\n    location: 'location',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.LogsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 1424
      },
      "name": "LogsConfigProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-logsconfig.html#cfn-codebuild-project-logsconfig-cloudwatchlogs"
            },
            "remarks": "CloudWatch Logs are enabled by default.",
            "stability": "external",
            "summary": "Information about CloudWatch Logs for a build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1430
          },
          "name": "cloudWatchLogs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.CloudWatchLogsConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-logsconfig.html#cfn-codebuild-project-logsconfig-s3logs"
            },
            "remarks": "S3 logs are not enabled by default.",
            "stability": "external",
            "summary": "Information about logs built to an S3 bucket for a build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1436
          },
          "name": "s3Logs",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.S3LogsConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.LogsConfigProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.ProjectBuildBatchConfigProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains configuration information about a batch build project.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst projectBuildBatchConfigProperty: codebuild.CfnProject.ProjectBuildBatchConfigProperty = {\n  batchReportMode: 'batchReportMode',\n  combineArtifacts: false,\n  restrictions: {\n    computeTypesAllowed: ['computeTypesAllowed'],\n    maximumBuildsAllowed: 123,\n  },\n  serviceRole: 'serviceRole',\n  timeoutInMins: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectBuildBatchConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 1500
      },
      "name": "ProjectBuildBatchConfigProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html#cfn-codebuild-project-projectbuildbatchconfig-batchreportmode"
            },
            "remarks": "This property is only used when the source provider for your project is Bitbucket, GitHub, or GitHub Enterprise, and your project is configured to report build statuses to the source provider.\n\n- **REPORT_AGGREGATED_BATCH** - (Default) Aggregate all of the build statuses into a single status report.\n- **REPORT_INDIVIDUAL_BUILDS** - Send a separate status report for each individual build.",
            "stability": "external",
            "summary": "Specifies how build status reports are sent to the source provider for the batch build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1509
          },
          "name": "batchReportMode",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html#cfn-codebuild-project-projectbuildbatchconfig-combineartifacts"
            },
            "stability": "external",
            "summary": "Specifies if the build artifacts for the batch build should be combined into a single artifact location."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1515
          },
          "name": "combineArtifacts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html#cfn-codebuild-project-projectbuildbatchconfig-restrictions"
            },
            "stability": "external",
            "summary": "A `BatchRestrictions` object that specifies the restrictions for the batch build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1521
          },
          "name": "restrictions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.BatchRestrictionsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html#cfn-codebuild-project-projectbuildbatchconfig-servicerole"
            },
            "stability": "external",
            "summary": "Specifies the service role ARN for the batch build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1527
          },
          "name": "serviceRole",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectbuildbatchconfig.html#cfn-codebuild-project-projectbuildbatchconfig-timeoutinmins"
            },
            "stability": "external",
            "summary": "Specifies the maximum amount of time, in minutes, that the batch build must be completed in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1533
          },
          "name": "timeoutInMins",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.ProjectBuildBatchConfigProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.ProjectCacheProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectcache.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`ProjectCache` is a property of the [AWS CodeBuild Project](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html) resource that specifies information about the cache for the build project. If `ProjectCache` is not specified, then both of its properties default to `NO_CACHE` .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst projectCacheProperty: codebuild.CfnProject.ProjectCacheProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  location: 'location',\n  modes: ['modes'],\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectCacheProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 1606
      },
      "name": "ProjectCacheProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectcache.html#cfn-codebuild-project-projectcache-type"
            },
            "remarks": "- `NO_CACHE` : The build project does not use any cache.\n- `S3` : The build project reads and writes from and to S3.\n- `LOCAL` : The build project stores a cache locally on a build host that is only available to that build host.",
            "stability": "external",
            "summary": "The type of cache used by the build project. Valid values include:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1645
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectcache.html#cfn-codebuild-project-projectcache-location"
            },
            "remarks": "- `NO_CACHE` or `LOCAL` : This value is ignored.\n- `S3` : This is the S3 bucket name/prefix.",
            "stability": "external",
            "summary": "Information about the cache location:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1615
          },
          "name": "location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectcache.html#cfn-codebuild-project-projectcache-modes"
            },
            "remarks": "You can use one or more local cache modes at the same time. This is only used for `LOCAL` cache types.\n\nPossible values are:\n\n- **LOCAL_SOURCE_CACHE** - Caches Git metadata for primary and secondary sources. After the cache is created, subsequent builds pull only the change between commits. This mode is a good choice for projects with a clean working directory and a source that is a large Git repository. If you choose this option and your project does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the option is ignored.\n- **LOCAL_DOCKER_LAYER_CACHE** - Caches existing Docker layers. This mode is a good choice for projects that build or pull large Docker images. It can prevent the performance issues caused by pulling large Docker images down from the network.\n\n> - You can use a Docker layer cache in the Linux environment only.\n> - The `privileged` flag must be set so that your project has the required Docker permissions.\n> - You should consider the security implications before you use a Docker layer cache.\n- **LOCAL_CUSTOM_CACHE** - Caches directories you specify in the buildspec file. This mode is a good choice if your build scenario is not suited to one of the other three local cache modes. If you use a custom cache:\n\n- Only directories can be specified for caching. You cannot specify individual files.\n- Symlinks are used to reference cached directories.\n- Cached directories are linked to your build before it downloads its project sources. Cached items are overridden if a source item has the same name. Directories are specified using cache paths in the buildspec file.",
            "stability": "external",
            "summary": "An array of strings that specify the local cache modes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1635
          },
          "name": "modes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.ProjectCacheProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.ProjectFileSystemLocationProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectfilesystemlocation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [What Is Amazon Elastic File System?](https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html)",
        "stability": "external",
        "summary": "Information about a file system created by Amazon Elastic File System (EFS).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst projectFileSystemLocationProperty: codebuild.CfnProject.ProjectFileSystemLocationProperty = {\n  identifier: 'identifier',\n  location: 'location',\n  mountPoint: 'mountPoint',\n  type: 'type',\n\n  // the properties below are optional\n  mountOptions: 'mountOptions',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectFileSystemLocationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 1713
      },
      "name": "ProjectFileSystemLocationProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectfilesystemlocation.html#cfn-codebuild-project-projectfilesystemlocation-identifier"
            },
            "remarks": "CodeBuild creates an environment variable by appending the `identifier` in all capital letters to `CODEBUILD_` . For example, if you specify `my_efs` for `identifier` , a new environment variable is create named `CODEBUILD_MY_EFS` .\n\nThe `identifier` is used to mount your file system.",
            "stability": "external",
            "summary": "The name used to access a file system created by Amazon EFS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1721
          },
          "name": "identifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectfilesystemlocation.html#cfn-codebuild-project-projectfilesystemlocation-location"
            },
            "remarks": "Its format is `efs-dns-name:/directory-path` . You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is `fs-abcd1234.efs.us-west-2.amazonaws.com` , and its mount directory is `my-efs-mount-directory` , then the `location` is `fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory` .\n\nThe directory path in the format `efs-dns-name:/directory-path` is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system.",
            "stability": "external",
            "summary": "A string that specifies the location of the file system created by Amazon EFS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1729
          },
          "name": "location",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectfilesystemlocation.html#cfn-codebuild-project-projectfilesystemlocation-mountpoint"
            },
            "stability": "external",
            "summary": "The location in the container where you mount the file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1741
          },
          "name": "mountPoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectfilesystemlocation.html#cfn-codebuild-project-projectfilesystemlocation-type"
            },
            "remarks": "The one supported type is `EFS` .",
            "stability": "external",
            "summary": "The type of the file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1747
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectfilesystemlocation.html#cfn-codebuild-project-projectfilesystemlocation-mountoptions"
            },
            "remarks": "The default mount options used by CodeBuild are `nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2` . For more information, see [Recommended NFS Mount Options](https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html) .",
            "stability": "external",
            "summary": "The mount options for a file system created by Amazon EFS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1735
          },
          "name": "mountOptions",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.ProjectFileSystemLocationProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.ProjectSourceVersionProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectsourceversion.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A source identifier and its corresponding version.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst projectSourceVersionProperty: codebuild.CfnProject.ProjectSourceVersionProperty = {\n  sourceIdentifier: 'sourceIdentifier',\n\n  // the properties below are optional\n  sourceVersion: 'sourceVersion',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectSourceVersionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 1824
      },
      "name": "ProjectSourceVersionProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectsourceversion.html#cfn-codebuild-project-projectsourceversion-sourceidentifier"
            },
            "remarks": "The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.",
            "stability": "external",
            "summary": "An identifier for a source in the build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1830
          },
          "name": "sourceIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectsourceversion.html#cfn-codebuild-project-projectsourceversion-sourceversion"
            },
            "remarks": "- For CodeCommit: the commit ID, branch, or Git tag to use.\n- For GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format `pr/pull-request-ID` (for example, `pr/25` ). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.\n- For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.\n- For Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nFor more information, see [Source Version Sample with CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html) in the *AWS CodeBuild User Guide* .",
            "stability": "external",
            "summary": "The source version for the corresponding source identifier. If specified, must be one of:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1843
          },
          "name": "sourceVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.ProjectSourceVersionProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.ProjectTriggersProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projecttriggers.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`ProjectTriggers` is a property of the [AWS CodeBuild Project](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html) resource that specifies webhooks that trigger an AWS CodeBuild build.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst projectTriggersProperty: codebuild.CfnProject.ProjectTriggersProperty = {\n  buildType: 'buildType',\n  filterGroups: [[{\n    pattern: 'pattern',\n    type: 'type',\n\n    // the properties below are optional\n    excludeMatchedPattern: false,\n  }]],\n  webhook: false,\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectTriggersProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 1908
      },
      "name": "ProjectTriggersProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projecttriggers.html#cfn-codebuild-project-projecttriggers-buildtype"
            },
            "remarks": "- **BUILD** - A single build\n- **BUILD_BATCH** - A batch build",
            "stability": "external",
            "summary": "Specifies the type of build this webhook will trigger. Allowed values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1917
          },
          "name": "buildType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projecttriggers.html#cfn-codebuild-project-projecttriggers-filtergroups"
            },
            "remarks": "At least one `WebhookFilter` in the array must specify `EVENT` as its type.",
            "stability": "external",
            "summary": "A list of lists of `WebhookFilter` objects used to determine which webhook events are triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1923
          },
          "name": "filterGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "collection": {
                              "elementtype": {
                                "union": {
                                  "types": [
                                    {
                                      "fqn": "@aws-cdk/aws-codebuild.CfnProject.WebhookFilterProperty"
                                    },
                                    {
                                      "fqn": "@aws-cdk/core.IResolvable"
                                    }
                                  ]
                                }
                              },
                              "kind": "array"
                            }
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projecttriggers.html#cfn-codebuild-project-projecttriggers-webhook"
            },
            "stability": "external",
            "summary": "Specifies whether or not to begin automatically rebuilding the source code every time a code change is pushed to the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 1929
          },
          "name": "webhook",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.ProjectTriggersProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.RegistryCredentialProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-registrycredential.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "- `imagePullCredentialsType` must be set to `SERVICE_ROLE` .\n- images cannot be curated or an Amazon ECR image.\n\nFor more information, see [Private Registry with AWS Secrets Manager Sample for AWS CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-private-registry.html) .",
        "stability": "external",
        "summary": "`RegistryCredential` is a property of the [AWS CodeBuild Project Environment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html) property type that specifies information about credentials that provide access to a private Docker registry. When this is set:.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst registryCredentialProperty: codebuild.CfnProject.RegistryCredentialProperty = {\n  credential: 'credential',\n  credentialProvider: 'credentialProvider',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.RegistryCredentialProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 2001
      },
      "name": "RegistryCredentialProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-registrycredential.html#cfn-codebuild-project-registrycredential-credential"
            },
            "remarks": "> The `credential` can use the name of the credentials only if they exist in your current AWS Region .",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) or name of credentials created using AWS Secrets Manager ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2009
          },
          "name": "credential",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-registrycredential.html#cfn-codebuild-project-registrycredential-credentialprovider"
            },
            "remarks": "The valid value, SECRETS_MANAGER, is for AWS Secrets Manager .",
            "stability": "external",
            "summary": "The service that created the credentials to access a private Docker registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2015
          },
          "name": "credentialProvider",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.RegistryCredentialProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.S3LogsConfigProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-s3logsconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`S3Logs` is a property of the [AWS CodeBuild Project LogsConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-logsconfig.html) property type that specifies settings for logs generated by an AWS CodeBuild build in an S3 bucket.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst s3LogsConfigProperty: codebuild.CfnProject.S3LogsConfigProperty = {\n  status: 'status',\n\n  // the properties below are optional\n  encryptionDisabled: false,\n  location: 'location',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.S3LogsConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 2081
      },
      "name": "S3LogsConfigProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-s3logsconfig.html#cfn-codebuild-project-s3logsconfig-status"
            },
            "remarks": "- `ENABLED` : S3 build logs are enabled for this build project.\n- `DISABLED` : S3 build logs are not enabled for this build project.",
            "stability": "external",
            "summary": "The current status of the S3 build logs. Valid values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2102
          },
          "name": "status",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-s3logsconfig.html#cfn-codebuild-project-s3logsconfig-encryptiondisabled"
            },
            "remarks": "By default S3 build logs are encrypted.",
            "stability": "external",
            "summary": "Set to true if you do not want your S3 build log output encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2087
          },
          "name": "encryptionDisabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-s3logsconfig.html#cfn-codebuild-project-s3logsconfig-location"
            },
            "remarks": "If your Amazon S3 bucket name is `my-bucket` , and your path prefix is `build-log` , then acceptable formats are `my-bucket/build-log` or `arn:aws:s3:::my-bucket/build-log` .",
            "stability": "external",
            "summary": "The ARN of an S3 bucket and the path prefix for S3 logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2093
          },
          "name": "location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.S3LogsConfigProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.SourceAuthProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-sourceauth.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`SourceAuth` is for use by the CodeBuild console only. Do not get or set it directly.",
        "stability": "external",
        "summary": "`SourceAuth` is a property of the [AWS CodeBuild Project Source](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html) property type that specifies authorization settings for AWS CodeBuild to access the source code to be built.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst sourceAuthProperty: codebuild.CfnProject.SourceAuthProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  resource: 'resource',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.SourceAuthProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 2342
      },
      "name": "SourceAuthProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-sourceauth.html#cfn-codebuild-project-sourceauth-type"
            },
            "remarks": "> This data type is used by the AWS CodeBuild console only.",
            "stability": "external",
            "summary": "The authorization type to use. The only valid value is `OAUTH` , which represents the OAuth authorization type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2358
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-sourceauth.html#cfn-codebuild-project-sourceauth-resource"
            },
            "remarks": "> This data type is used by the AWS CodeBuild console only.",
            "stability": "external",
            "summary": "The resource value that applies to the specified authorization type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2350
          },
          "name": "resource",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.SourceAuthProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.SourceProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`Source` is a property of the [AWS::CodeBuild::Project](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html) resource that specifies the source code settings for the project, such as the source code's repository type and location.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst sourceProperty: codebuild.CfnProject.SourceProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  auth: {\n    type: 'type',\n\n    // the properties below are optional\n    resource: 'resource',\n  },\n  buildSpec: 'buildSpec',\n  buildStatusConfig: {\n    context: 'context',\n    targetUrl: 'targetUrl',\n  },\n  gitCloneDepth: 123,\n  gitSubmodulesConfig: {\n    fetchSubmodules: false,\n  },\n  insecureSsl: false,\n  location: 'location',\n  reportBuildStatus: false,\n  sourceIdentifier: 'sourceIdentifier',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.SourceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 2170
      },
      "name": "SourceProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-type"
            },
            "remarks": "- `BITBUCKET` : The source code is in a Bitbucket repository.\n- `CODECOMMIT` : The source code is in an CodeCommit repository.\n- `CODEPIPELINE` : The source code settings are specified in the source action of a pipeline in CodePipeline.\n- `GITHUB` : The source code is in a GitHub or GitHub Enterprise Cloud repository.\n- `GITHUB_ENTERPRISE` : The source code is in a GitHub Enterprise Server repository.\n- `NO_SOURCE` : The project does not have input source code.\n- `S3` : The source code is in an Amazon S3 bucket.",
            "stability": "external",
            "summary": "The type of repository that contains the source code to be built. Valid values include:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2251
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-auth"
            },
            "remarks": "This information is for the AWS CodeBuild console's use only. Your code should not get or set `Auth` directly.",
            "stability": "external",
            "summary": "Information about the authorization settings for AWS CodeBuild to access the source code to be built."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2178
          },
          "name": "auth",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.SourceAuthProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-buildspec"
            },
            "remarks": "If this value is not provided, then the source code must contain a buildspec file named `buildspec.yml` at the root level. If this value is provided, it can be either a single string containing the entire build specification, or the path to an alternate buildspec file relative to the value of the built-in environment variable `CODEBUILD_SRC_DIR` . The alternate buildspec file can have a name other than `buildspec.yml` , for example `myspec.yml` or `build_spec_qa.yml` or similar. For more information, see the [Build Spec Reference](https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-example) in the *AWS CodeBuild User Guide* .",
            "stability": "external",
            "summary": "The build specification for the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2184
          },
          "name": "buildSpec",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-buildstatusconfig"
            },
            "remarks": "This option is only used when the source provider is `GITHUB` , `GITHUB_ENTERPRISE` , or `BITBUCKET` .",
            "stability": "external",
            "summary": "Contains information that defines how the build project reports the build status to the source provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2190
          },
          "name": "buildStatusConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.BuildStatusConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-gitclonedepth"
            },
            "remarks": "Minimum value is 0. If this value is 0, greater than 25, or not provided, then the full history is downloaded with each build project. If your source type is Amazon S3, this value is not supported.",
            "stability": "external",
            "summary": "The depth of history to download."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2196
          },
          "name": "gitCloneDepth",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-gitsubmodulesconfig"
            },
            "stability": "external",
            "summary": "Information about the Git submodules configuration for the build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2202
          },
          "name": "gitSubmodulesConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.GitSubmodulesConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-insecuressl"
            },
            "remarks": "Set to true to ignore SSL warnings while connecting to your GitHub Enterprise project repository. The default value is `false` . `InsecureSsl` should be used for testing purposes only. It should not be used in a production environment.",
            "stability": "external",
            "summary": "This is used with GitHub Enterprise only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2208
          },
          "name": "insecureSsl",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-location"
            },
            "remarks": "- For source code settings that are specified in the source action of a pipeline in CodePipeline, `location` should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.\n- For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the buildspec file (for example, `https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name>` ).\n- For source code in an Amazon S3 input bucket, one of the following.\n\n- The path to the ZIP file that contains the source code (for example, `<bucket-name>/<path>/<object-name>.zip` ).\n- The path to the folder that contains the source code (for example, `<bucket-name>/<path-to-source-code>/<folder>/` ).\n- For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your AWS account to your GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with GitHub, on the GitHub *Authorize application* page, for *Organization access* , choose *Request access* next to each repository you want to allow AWS CodeBuild to have access to, and then choose *Authorize application* . (After you have connected to your GitHub account, you do not need to finish creating the build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the `source` object, set the `auth` object's `type` value to `OAUTH` .\n- For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the buildspec file. You must connect your AWS account to your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket *Confirm access to your account* page, choose *Grant access* . (After you have connected to your Bitbucket account, you do not need to finish creating the build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the `source` object, set the `auth` object's `type` value to `OAUTH` .\n\nIf you specify `CODEPIPELINE` for the `Type` property, don't specify this property. For all of the other types, you must specify `Location` .",
            "stability": "external",
            "summary": "Information about the location of the source code to be built. Valid values include:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2225
          },
          "name": "location",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-reportbuildstatus"
            },
            "remarks": "This option is valid only when your source provider is GitHub, GitHub Enterprise, or Bitbucket. If this is set and you use a different source provider, an `invalidInputException` is thrown.",
            "stability": "external",
            "summary": "Set to true to report the status of a build's start and finish to your source provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2231
          },
          "name": "reportBuildStatus",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html#cfn-codebuild-project-source-sourceidentifier"
            },
            "remarks": "The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.",
            "stability": "external",
            "summary": "An identifier for this project source."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2237
          },
          "name": "sourceIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.SourceProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.VpcConfigProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-vpcconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`VpcConfig` is a property of the [AWS::CodeBuild::Project](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html) resource that enable AWS CodeBuild to access resources in an Amazon VPC. For more information, see [Use AWS CodeBuild with Amazon Virtual Private Cloud](https://docs.aws.amazon.com/codebuild/latest/userguide/vpc-support.html) in the *AWS CodeBuild User Guide* .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst vpcConfigProperty: codebuild.CfnProject.VpcConfigProperty = {\n  securityGroupIds: ['securityGroupIds'],\n  subnets: ['subnets'],\n  vpcId: 'vpcId',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.VpcConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 2423
      },
      "name": "VpcConfigProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-vpcconfig.html#cfn-codebuild-project-vpcconfig-securitygroupids"
            },
            "remarks": "The maximum count is 5.",
            "stability": "external",
            "summary": "A list of one or more security groups IDs in your Amazon VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2429
          },
          "name": "securityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-vpcconfig.html#cfn-codebuild-project-vpcconfig-subnets"
            },
            "remarks": "The maximum count is 16.",
            "stability": "external",
            "summary": "A list of one or more subnet IDs in your Amazon VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2435
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-vpcconfig.html#cfn-codebuild-project-vpcconfig-vpcid"
            },
            "stability": "external",
            "summary": "The ID of the Amazon VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2441
          },
          "name": "vpcId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.VpcConfigProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProject.WebhookFilterProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-webhookfilter.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`WebhookFilter` is a structure of the `FilterGroups` property on the [AWS CodeBuild Project ProjectTriggers](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projecttriggers.html) property type that specifies which webhooks trigger an AWS CodeBuild build.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst webhookFilterProperty: codebuild.CfnProject.WebhookFilterProperty = {\n  pattern: 'pattern',\n  type: 'type',\n\n  // the properties below are optional\n  excludeMatchedPattern: false,\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProject.WebhookFilterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 2508
      },
      "name": "WebhookFilterProperty",
      "namespace": "CfnProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-webhookfilter.html#cfn-codebuild-project-webhookfilter-pattern"
            },
            "remarks": "For example, the webhook filter `PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED` allows all push, pull request created, and pull request updated events to trigger a build.\n\nFor a `WebHookFilter` that uses any of the other filter types, a regular expression pattern. For example, a `WebHookFilter` that uses `HEAD_REF` for its `type` and the pattern `^refs/heads/` triggers a build when the head reference is a branch with a reference name `refs/heads/branch-name` .",
            "stability": "external",
            "summary": "For a `WebHookFilter` that uses `EVENT` type, a comma-separated string that specifies one or more events."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2522
          },
          "name": "pattern",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-webhookfilter.html#cfn-codebuild-project-webhookfilter-type"
            },
            "remarks": "There are six webhook filter types: `EVENT` , `ACTOR_ACCOUNT_ID` , `HEAD_REF` , `BASE_REF` , `FILE_PATH` , and `COMMIT_MESSAGE` .\n\n- **EVENT** - A webhook event triggers a build when the provided `pattern` matches one of five event types: `PUSH` , `PULL_REQUEST_CREATED` , `PULL_REQUEST_UPDATED` , `PULL_REQUEST_REOPENED` , and `PULL_REQUEST_MERGED` . The `EVENT` patterns are specified as a comma-separated string. For example, `PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED` filters all push, pull request created, and pull request updated events.\n\n> The `PULL_REQUEST_REOPENED` works with GitHub and GitHub Enterprise only.\n- **ACTOR_ACCOUNT_ID** - A webhook event triggers a build when a GitHub, GitHub Enterprise, or Bitbucket account ID matches the regular expression `pattern` .\n- **HEAD_REF** - A webhook event triggers a build when the head reference matches the regular expression `pattern` . For example, `refs/heads/branch-name` and `refs/tags/tag-name` .\n\nWorks with GitHub and GitHub Enterprise push, GitHub and GitHub Enterprise pull request, Bitbucket push, and Bitbucket pull request events.\n- **BASE_REF** - A webhook event triggers a build when the base reference matches the regular expression `pattern` . For example, `refs/heads/branch-name` .\n\n> Works with pull request events only.\n- **FILE_PATH** - A webhook triggers a build when the path of a changed file matches the regular expression `pattern` .\n\n> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.\n- **COMMIT_MESSAGE** - A webhook triggers a build when the head commit message matches the regular expression `pattern` .\n\n> Works with GitHub and Bitbucket events push and pull requests events. Also works with GitHub Enterprise push events, but does not work with GitHub Enterprise pull request events.",
            "stability": "external",
            "summary": "The type of webhook filter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2545
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-webhookfilter.html#cfn-codebuild-project-webhookfilter-excludematchedpattern"
            },
            "remarks": "If true, then a webhook event that does not match the `pattern` triggers a build. If false, then a webhook event that matches the `pattern` triggers a build.",
            "stability": "external",
            "summary": "Used to indicate that the `pattern` determines which webhook events do not trigger a build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2514
          },
          "name": "excludeMatchedPattern",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProject.WebhookFilterProperty"
    },
    "@aws-cdk/aws-codebuild.CfnProjectProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnProject`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst cfnProjectProps: codebuild.CfnProjectProps = {\n  artifacts: {\n    type: 'type',\n\n    // the properties below are optional\n    artifactIdentifier: 'artifactIdentifier',\n    encryptionDisabled: false,\n    location: 'location',\n    name: 'name',\n    namespaceType: 'namespaceType',\n    overrideArtifactName: false,\n    packaging: 'packaging',\n    path: 'path',\n  },\n  environment: {\n    computeType: 'computeType',\n    image: 'image',\n    type: 'type',\n\n    // the properties below are optional\n    certificate: 'certificate',\n    environmentVariables: [{\n      name: 'name',\n      value: 'value',\n\n      // the properties below are optional\n      type: 'type',\n    }],\n    imagePullCredentialsType: 'imagePullCredentialsType',\n    privilegedMode: false,\n    registryCredential: {\n      credential: 'credential',\n      credentialProvider: 'credentialProvider',\n    },\n  },\n  serviceRole: 'serviceRole',\n  source: {\n    type: 'type',\n\n    // the properties below are optional\n    auth: {\n      type: 'type',\n\n      // the properties below are optional\n      resource: 'resource',\n    },\n    buildSpec: 'buildSpec',\n    buildStatusConfig: {\n      context: 'context',\n      targetUrl: 'targetUrl',\n    },\n    gitCloneDepth: 123,\n    gitSubmodulesConfig: {\n      fetchSubmodules: false,\n    },\n    insecureSsl: false,\n    location: 'location',\n    reportBuildStatus: false,\n    sourceIdentifier: 'sourceIdentifier',\n  },\n\n  // the properties below are optional\n  badgeEnabled: false,\n  buildBatchConfig: {\n    batchReportMode: 'batchReportMode',\n    combineArtifacts: false,\n    restrictions: {\n      computeTypesAllowed: ['computeTypesAllowed'],\n      maximumBuildsAllowed: 123,\n    },\n    serviceRole: 'serviceRole',\n    timeoutInMins: 123,\n  },\n  cache: {\n    type: 'type',\n\n    // the properties below are optional\n    location: 'location',\n    modes: ['modes'],\n  },\n  concurrentBuildLimit: 123,\n  description: 'description',\n  encryptionKey: 'encryptionKey',\n  fileSystemLocations: [{\n    identifier: 'identifier',\n    location: 'location',\n    mountPoint: 'mountPoint',\n    type: 'type',\n\n    // the properties below are optional\n    mountOptions: 'mountOptions',\n  }],\n  logsConfig: {\n    cloudWatchLogs: {\n      status: 'status',\n\n      // the properties below are optional\n      groupName: 'groupName',\n      streamName: 'streamName',\n    },\n    s3Logs: {\n      status: 'status',\n\n      // the properties below are optional\n      encryptionDisabled: false,\n      location: 'location',\n    },\n  },\n  name: 'name',\n  queuedTimeoutInMinutes: 123,\n  resourceAccessRole: 'resourceAccessRole',\n  secondaryArtifacts: [{\n    type: 'type',\n\n    // the properties below are optional\n    artifactIdentifier: 'artifactIdentifier',\n    encryptionDisabled: false,\n    location: 'location',\n    name: 'name',\n    namespaceType: 'namespaceType',\n    overrideArtifactName: false,\n    packaging: 'packaging',\n    path: 'path',\n  }],\n  secondarySources: [{\n    type: 'type',\n\n    // the properties below are optional\n    auth: {\n      type: 'type',\n\n      // the properties below are optional\n      resource: 'resource',\n    },\n    buildSpec: 'buildSpec',\n    buildStatusConfig: {\n      context: 'context',\n      targetUrl: 'targetUrl',\n    },\n    gitCloneDepth: 123,\n    gitSubmodulesConfig: {\n      fetchSubmodules: false,\n    },\n    insecureSsl: false,\n    location: 'location',\n    reportBuildStatus: false,\n    sourceIdentifier: 'sourceIdentifier',\n  }],\n  secondarySourceVersions: [{\n    sourceIdentifier: 'sourceIdentifier',\n\n    // the properties below are optional\n    sourceVersion: 'sourceVersion',\n  }],\n  sourceVersion: 'sourceVersion',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  timeoutInMinutes: 123,\n  triggers: {\n    buildType: 'buildType',\n    filterGroups: [[{\n      pattern: 'pattern',\n      type: 'type',\n\n      // the properties below are optional\n      excludeMatchedPattern: false,\n    }]],\n    webhook: false,\n  },\n  visibility: 'visibility',\n  vpcConfig: {\n    securityGroupIds: ['securityGroupIds'],\n    subnets: ['subnets'],\n    vpcId: 'vpcId',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnProjectProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 19
      },
      "name": "CfnProjectProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-artifacts"
            },
            "stability": "external",
            "summary": "`Artifacts` is a property of the [AWS::CodeBuild::Project](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html) resource that specifies output settings for artifacts generated by an AWS CodeBuild build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 26
          },
          "name": "artifacts",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.ArtifactsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-environment"
            },
            "stability": "external",
            "summary": "The build environment settings for the project, such as the environment type or the environment variables to use for the build environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 33
          },
          "name": "environment",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.EnvironmentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-servicerole"
            },
            "stability": "external",
            "summary": "The ARN of the IAM role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 40
          },
          "name": "serviceRole",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-source"
            },
            "stability": "external",
            "summary": "The source code settings for the project, such as the source code's repository type and location."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 47
          },
          "name": "source",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.SourceProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-badgeenabled"
            },
            "remarks": "For more information, see [Build Badges Sample](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-badges.html) in the *AWS CodeBuild User Guide* .\n\n> Including build badges with your project is currently not supported if the source type is CodePipeline. If you specify `CODEPIPELINE` for the `Source` property, do not specify the `BadgeEnabled` property.",
            "stability": "external",
            "summary": "Indicates whether AWS CodeBuild generates a publicly accessible URL for your project's build badge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 56
          },
          "name": "badgeEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-buildbatchconfig"
            },
            "stability": "external",
            "summary": "A `ProjectBuildBatchConfig` object that defines the batch build options for the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 63
          },
          "name": "buildBatchConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectBuildBatchConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-cache"
            },
            "stability": "external",
            "summary": "Settings that AWS CodeBuild uses to store and reuse build dependencies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 70
          },
          "name": "cache",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectCacheProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-concurrentbuildlimit"
            },
            "remarks": "New builds are only started if the current number of builds is less than or equal to this limit. If the current build count meets this limit, new builds are throttled and are not run.",
            "stability": "external",
            "summary": "The maximum number of concurrent builds that are allowed for this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 79
          },
          "name": "concurrentBuildLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-description"
            },
            "stability": "external",
            "summary": "A description that makes the build project easy to identify."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 86
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-encryptionkey"
            },
            "remarks": "> You can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.\n\nYou can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias (using the format `alias/<alias-name>` ). If you don't specify a value, CodeBuild uses the managed CMK for Amazon Simple Storage Service (Amazon S3).",
            "stability": "external",
            "summary": "The AWS Key Management Service customer master key (CMK) to be used for encrypting the build output artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 97
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-filesystemlocations"
            },
            "remarks": "A `ProjectFileSystemLocation` object specifies the `identifier` , `location` , `mountOptions` , `mountPoint` , and `type` of a file system created using Amazon Elastic File System.",
            "stability": "external",
            "summary": "An array of `ProjectFileSystemLocation` objects for a CodeBuild build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 104
          },
          "name": "fileSystemLocations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectFileSystemLocationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-logsconfig"
            },
            "remarks": "A project can create logs in CloudWatch Logs, an S3 bucket, or both.",
            "stability": "external",
            "summary": "Information about logs for the build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 111
          },
          "name": "logsConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.LogsConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-name"
            },
            "remarks": "The name must be unique across all of the projects in your AWS account .",
            "stability": "external",
            "summary": "The name of the build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 118
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-queuedtimeoutinminutes"
            },
            "stability": "external",
            "summary": "The number of minutes a build is allowed to be queued before it times out."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 125
          },
          "name": "queuedTimeoutInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-resourceaccessrole"
            },
            "stability": "external",
            "summary": "The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and Amazon S3 artifacts for the project's builds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 132
          },
          "name": "resourceAccessRole",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondaryartifacts"
            },
            "remarks": "Each artifacts object specifies output settings that the project generates during a build.",
            "stability": "external",
            "summary": "A list of `Artifacts` objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 139
          },
          "name": "secondaryArtifacts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codebuild.CfnProject.ArtifactsProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondarysources"
            },
            "stability": "external",
            "summary": "An array of `ProjectSource` objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 146
          },
          "name": "secondarySources",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/aws-codebuild.CfnProject.SourceProperty"
                          },
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-secondarysourceversions"
            },
            "remarks": "If `secondarySourceVersions` is specified at the build level, then they take over these `secondarySourceVersions` (at the project level).",
            "stability": "external",
            "summary": "An array of `ProjectSourceVersion` objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 153
          },
          "name": "secondarySourceVersions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectSourceVersionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-sourceversion"
            },
            "remarks": "If not specified, the latest version is used. If specified, it must be one of:\n\n- For CodeCommit: the commit ID, branch, or Git tag to use.\n- For GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format `pr/pull-request-ID` (for example `pr/25` ). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.\n- For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.\n- For Amazon S3: the version ID of the object that represents the build input ZIP file to use.\n\nIf `sourceVersion` is specified at the build level, then that version takes precedence over this `sourceVersion` (at the project level).\n\nFor more information, see [Source Version Sample with CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html) in the *AWS CodeBuild User Guide* .",
            "stability": "external",
            "summary": "A version of the build input to be built for this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 169
          },
          "name": "sourceVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-tags"
            },
            "remarks": "These tags are available for use by AWS services that support AWS CodeBuild build project tags.",
            "stability": "external",
            "summary": "An arbitrary set of tags (key-value pairs) for the AWS CodeBuild project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 178
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-timeoutinminutes"
            },
            "remarks": "The default is 60 minutes.",
            "stability": "external",
            "summary": "How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before timing out any related build that did not get marked as completed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 185
          },
          "name": "timeoutInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-triggers"
            },
            "stability": "external",
            "summary": "For an existing AWS CodeBuild build project that has its source code stored in a GitHub repository, enables AWS CodeBuild to begin automatically rebuilding the source code every time a code change is pushed to the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 192
          },
          "name": "triggers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectTriggersProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-visibility"
            },
            "remarks": "- **PUBLIC_READ** - The project builds are visible to the public.\n- **PRIVATE** - The project builds are not visible to the public.",
            "stability": "external",
            "summary": "Specifies the visibility of the project's builds. Possible values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 202
          },
          "name": "visibility",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-vpcconfig"
            },
            "remarks": "For more information, see [Use AWS CodeBuild with Amazon Virtual Private Cloud](https://docs.aws.amazon.com/codebuild/latest/userguide/vpc-support.html) in the *AWS CodeBuild User Guide* .",
            "stability": "external",
            "summary": "`VpcConfig` specifies settings that enable AWS CodeBuild to access resources in an Amazon VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 209
          },
          "name": "vpcConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.VpcConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnProjectProps"
    },
    "@aws-cdk/aws-codebuild.CfnReportGroup": {
      "assembly": "@aws-cdk/aws-codebuild",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CodeBuild::ReportGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Represents a report group. A report group contains a collection of reports.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CodeBuild::ReportGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst cfnReportGroup = new codebuild.CfnReportGroup(this, 'MyCfnReportGroup', {\n  exportConfig: {\n    exportConfigType: 'exportConfigType',\n\n    // the properties below are optional\n    s3Destination: {\n      bucket: 'bucket',\n\n      // the properties below are optional\n      bucketOwner: 'bucketOwner',\n      encryptionDisabled: false,\n      encryptionKey: 'encryptionKey',\n      packaging: 'packaging',\n      path: 'path',\n    },\n  },\n  type: 'type',\n\n  // the properties below are optional\n  deleteReports: false,\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnReportGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CodeBuild::ReportGroup`."
        },
        "locationInModule": {
          "filename": "lib/codebuild.generated.ts",
          "line": 2809
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.CfnReportGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 2728
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2828
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2843
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnReportGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2732
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external",
            "summary": "The ARN of the AWS CodeBuild report group, such as `arn:aws:codebuild:region:123456789012:report-group/myReportGroupName` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2757
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2833
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-tags"
            },
            "remarks": "These tags are available for use by AWS services that support AWS CodeBuild report group tags.",
            "stability": "external",
            "summary": "A list of tag key and value pairs associated with this report group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2800
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-exportconfig"
            },
            "stability": "external",
            "summary": "Information about the destination where the raw data of this `ReportGroup` is exported."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2764
          },
          "name": "exportConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnReportGroup.ReportExportConfigProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-type"
            },
            "remarks": "- **CODE_COVERAGE** - The report group contains code coverage reports.\n- **TEST** - The report group contains test reports.",
            "stability": "external",
            "summary": "The type of the `ReportGroup` . This can be one of the following values:."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2774
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-deletereports"
            },
            "remarks": "- **true** - Deletes any reports that belong to the report group before deleting the report group.\n- **false** - You must delete any reports in the report group. This is the default value. If you delete a report group that contains one or more reports, an exception is thrown.",
            "stability": "external",
            "summary": "When deleting a report group, specifies if reports within the report group should be deleted."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2784
          },
          "name": "deleteReports",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-name"
            },
            "stability": "external",
            "summary": "The name of the `ReportGroup` ."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2791
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnReportGroup"
    },
    "@aws-cdk/aws-codebuild.CfnReportGroup.ReportExportConfigProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-reportgroup-reportexportconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about the location where the run of a report is exported.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst reportExportConfigProperty: codebuild.CfnReportGroup.ReportExportConfigProperty = {\n  exportConfigType: 'exportConfigType',\n\n  // the properties below are optional\n  s3Destination: {\n    bucket: 'bucket',\n\n    // the properties below are optional\n    bucketOwner: 'bucketOwner',\n    encryptionDisabled: false,\n    encryptionKey: 'encryptionKey',\n    packaging: 'packaging',\n    path: 'path',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnReportGroup.ReportExportConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 2857
      },
      "name": "ReportExportConfigProperty",
      "namespace": "CfnReportGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-reportgroup-reportexportconfig.html#cfn-codebuild-reportgroup-reportexportconfig-exportconfigtype"
            },
            "remarks": "- `S3` : The report results are exported to an S3 bucket.\n- `NO_EXPORT` : The report results are not exported.",
            "stability": "external",
            "summary": "The export configuration type. Valid values are:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2866
          },
          "name": "exportConfigType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-reportgroup-reportexportconfig.html#cfn-codebuild-reportgroup-reportexportconfig-s3destination"
            },
            "stability": "external",
            "summary": "A `S3ReportExportConfig` object that contains information about the S3 bucket where the run of a report is exported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2872
          },
          "name": "s3Destination",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnReportGroup.S3ReportExportConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnReportGroup.ReportExportConfigProperty"
    },
    "@aws-cdk/aws-codebuild.CfnReportGroup.S3ReportExportConfigProperty": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-reportgroup-s3reportexportconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about the S3 bucket where the raw data of a report are exported.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst s3ReportExportConfigProperty: codebuild.CfnReportGroup.S3ReportExportConfigProperty = {\n  bucket: 'bucket',\n\n  // the properties below are optional\n  bucketOwner: 'bucketOwner',\n  encryptionDisabled: false,\n  encryptionKey: 'encryptionKey',\n  packaging: 'packaging',\n  path: 'path',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnReportGroup.S3ReportExportConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 2937
      },
      "name": "S3ReportExportConfigProperty",
      "namespace": "CfnReportGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-reportgroup-s3reportexportconfig.html#cfn-codebuild-reportgroup-s3reportexportconfig-bucket"
            },
            "stability": "external",
            "summary": "The name of the S3 bucket where the raw data of a report are exported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2943
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-reportgroup-s3reportexportconfig.html#cfn-codebuild-reportgroup-s3reportexportconfig-bucketowner"
            },
            "remarks": "This allows report data to be exported to an Amazon S3 bucket that is owned by an account other than the account running the build.",
            "stability": "external",
            "summary": "The AWS account identifier of the owner of the Amazon S3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2949
          },
          "name": "bucketOwner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-reportgroup-s3reportexportconfig.html#cfn-codebuild-reportgroup-s3reportexportconfig-encryptiondisabled"
            },
            "stability": "external",
            "summary": "A boolean value that specifies if the results of a report are encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2955
          },
          "name": "encryptionDisabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-reportgroup-s3reportexportconfig.html#cfn-codebuild-reportgroup-s3reportexportconfig-encryptionkey"
            },
            "stability": "external",
            "summary": "The encryption key for the report's encrypted raw data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2961
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-reportgroup-s3reportexportconfig.html#cfn-codebuild-reportgroup-s3reportexportconfig-packaging"
            },
            "remarks": "- `NONE` : CodeBuild creates the raw data in the output bucket. This is the default if packaging is not specified.\n- `ZIP` : CodeBuild creates a ZIP file with the raw data in the output bucket.",
            "stability": "external",
            "summary": "The type of build output artifact to create. Valid values include:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2970
          },
          "name": "packaging",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-reportgroup-s3reportexportconfig.html#cfn-codebuild-reportgroup-s3reportexportconfig-path"
            },
            "stability": "external",
            "summary": "The path to the exported report's raw data results."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2976
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnReportGroup.S3ReportExportConfigProperty"
    },
    "@aws-cdk/aws-codebuild.CfnReportGroupProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnReportGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst cfnReportGroupProps: codebuild.CfnReportGroupProps = {\n  exportConfig: {\n    exportConfigType: 'exportConfigType',\n\n    // the properties below are optional\n    s3Destination: {\n      bucket: 'bucket',\n\n      // the properties below are optional\n      bucketOwner: 'bucketOwner',\n      encryptionDisabled: false,\n      encryptionKey: 'encryptionKey',\n      packaging: 'packaging',\n      path: 'path',\n    },\n  },\n  type: 'type',\n\n  // the properties below are optional\n  deleteReports: false,\n  name: 'name',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnReportGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 2613
      },
      "name": "CfnReportGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-exportconfig"
            },
            "stability": "external",
            "summary": "Information about the destination where the raw data of this `ReportGroup` is exported."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2620
          },
          "name": "exportConfig",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codebuild.CfnReportGroup.ReportExportConfigProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-type"
            },
            "remarks": "- **CODE_COVERAGE** - The report group contains code coverage reports.\n- **TEST** - The report group contains test reports.",
            "stability": "external",
            "summary": "The type of the `ReportGroup` . This can be one of the following values:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2630
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-deletereports"
            },
            "remarks": "- **true** - Deletes any reports that belong to the report group before deleting the report group.\n- **false** - You must delete any reports in the report group. This is the default value. If you delete a report group that contains one or more reports, an exception is thrown.",
            "stability": "external",
            "summary": "When deleting a report group, specifies if reports within the report group should be deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2640
          },
          "name": "deleteReports",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-name"
            },
            "stability": "external",
            "summary": "The name of the `ReportGroup` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2647
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-reportgroup.html#cfn-codebuild-reportgroup-tags"
            },
            "remarks": "These tags are available for use by AWS services that support AWS CodeBuild report group tags.",
            "stability": "external",
            "summary": "A list of tag key and value pairs associated with this report group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 2656
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnReportGroupProps"
    },
    "@aws-cdk/aws-codebuild.CfnSourceCredential": {
      "assembly": "@aws-cdk/aws-codebuild",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CodeBuild::SourceCredential",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Information about the credentials for a GitHub, GitHub Enterprise, or Bitbucket repository. We strongly recommend that you use AWS Secrets Manager to store your credentials. If you use Secrets Manager , you must have secrets in your secrets manager. For more information, see [Using Dynamic References to Specify Template Values](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html#dynamic-references-secretsmanager) .\n\n> For security purposes, do not use plain text in your AWS CloudFormation template to store your credentials.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CodeBuild::SourceCredential`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst cfnSourceCredential = new codebuild.CfnSourceCredential(this, 'MyCfnSourceCredential', {\n  authType: 'authType',\n  serverType: 'serverType',\n  token: 'token',\n\n  // the properties below are optional\n  username: 'username',\n});"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnSourceCredential",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CodeBuild::SourceCredential`."
        },
        "locationInModule": {
          "filename": "lib/codebuild.generated.ts",
          "line": 3212
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.CfnSourceCredentialProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 3152
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3230
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3244
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSourceCredential",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3156
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3235
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-authtype"
            },
            "remarks": "Valid options are OAUTH, BASIC_AUTH, or PERSONAL_ACCESS_TOKEN.",
            "stability": "external",
            "summary": "The type of authentication used by the credentials."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3182
          },
          "name": "authType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-servertype"
            },
            "remarks": "The valid options are GITHUB, GITHUB_ENTERPRISE, or BITBUCKET.",
            "stability": "external",
            "summary": "The type of source provider."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3189
          },
          "name": "serverType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-token"
            },
            "remarks": "For Bitbucket, this is the app password.",
            "stability": "external",
            "summary": "For GitHub or GitHub Enterprise, this is the personal access token."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3196
          },
          "name": "token",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-username"
            },
            "remarks": "This parameter is not valid for other types of source providers or connections.",
            "stability": "external",
            "summary": "The Bitbucket username when the `authType` is BASIC_AUTH."
          },
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3203
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnSourceCredential"
    },
    "@aws-cdk/aws-codebuild.CfnSourceCredentialProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnSourceCredential`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst cfnSourceCredentialProps: codebuild.CfnSourceCredentialProps = {\n  authType: 'authType',\n  serverType: 'serverType',\n  token: 'token',\n\n  // the properties below are optional\n  username: 'username',\n};"
      },
      "fqn": "@aws-cdk/aws-codebuild.CfnSourceCredentialProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild.generated.ts",
        "line": 3052
      },
      "name": "CfnSourceCredentialProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-authtype"
            },
            "remarks": "Valid options are OAUTH, BASIC_AUTH, or PERSONAL_ACCESS_TOKEN.",
            "stability": "external",
            "summary": "The type of authentication used by the credentials."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3059
          },
          "name": "authType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-servertype"
            },
            "remarks": "The valid options are GITHUB, GITHUB_ENTERPRISE, or BITBUCKET.",
            "stability": "external",
            "summary": "The type of source provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3066
          },
          "name": "serverType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-token"
            },
            "remarks": "For Bitbucket, this is the app password.",
            "stability": "external",
            "summary": "For GitHub or GitHub Enterprise, this is the personal access token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3073
          },
          "name": "token",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-sourcecredential.html#cfn-codebuild-sourcecredential-username"
            },
            "remarks": "This parameter is not valid for other types of source providers or connections.",
            "stability": "external",
            "summary": "The Bitbucket username when the `authType` is BASIC_AUTH."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild.generated.ts",
            "line": 3080
          },
          "name": "username",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codebuild.generated:CfnSourceCredentialProps"
    },
    "@aws-cdk/aws-codebuild.CloudWatchLoggingOptions": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Information about logs built to a CloudWatch Log Group for a build project.",
        "example": "new codebuild.Project(this, 'Project', {\n  logging: {\n    cloudWatch: {\n      logGroup: new logs.LogGroup(this, `MyLogGroup`),\n    }\n  },\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.CloudWatchLoggingOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project-logs.ts",
        "line": 38
      },
      "name": "CloudWatchLoggingOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "The current status of the logs in Amazon CloudWatch Logs for a build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project-logs.ts",
            "line": 58
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no log group specified",
            "stability": "stable",
            "summary": "The Log Group to send logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project-logs.ts",
            "line": 44
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no prefix",
            "stability": "stable",
            "summary": "The prefix of the stream name of the Amazon CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project-logs.ts",
            "line": 51
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/project-logs:CloudWatchLoggingOptions"
    },
    "@aws-cdk/aws-codebuild.CodeCommitSourceProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link CodeCommitSource}.",
        "example": "import * as codecommit from '@aws-cdk/aws-codecommit';\ndeclare const repo: codecommit.Repository;\ndeclare const bucket: s3.Bucket;\n\nconst project = new codebuild.Project(this, 'MyProject', {\n  secondarySources: [\n    codebuild.Source.codeCommit({\n      identifier: 'source2',\n      repository: repo,\n    }),\n  ],\n  secondaryArtifacts: [\n    codebuild.Artifacts.s3({\n      identifier: 'artifact2',\n      bucket: bucket,\n      path: 'some/path',\n      name: 'file.zip',\n    }),\n  ],\n  // ...\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.CodeCommitSourceProps",
      "interfaces": [
        "@aws-cdk/aws-codebuild.SourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 573
      },
      "name": "CodeCommitSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 574
          },
          "name": "repository",
          "type": {
            "fqn": "@aws-cdk/aws-codecommit.IRepository"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the default branch's HEAD commit ID is used",
            "example": "'mybranch'",
            "stability": "stable",
            "summary": "The commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 124
          },
          "name": "branchOrRef",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Minimum value is 0.\nIf this value is 0, greater than 25, or not provided,\nthen the full history is downloaded with each build of the project.",
            "stability": "stable",
            "summary": "The depth of history to download."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 115
          },
          "name": "cloneDepth",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to fetch submodules while cloning git repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 131
          },
          "name": "fetchSubmodules",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/source:CodeCommitSourceProps"
    },
    "@aws-cdk/aws-codebuild.CommonProjectProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const bucket: s3.Bucket;\ndeclare const buildImage: codebuild.IBuildImage;\ndeclare const buildSpec: codebuild.BuildSpec;\ndeclare const cache: codebuild.Cache;\ndeclare const fileSystemLocation: codebuild.IFileSystemLocation;\ndeclare const key: kms.Key;\ndeclare const logGroup: logs.LogGroup;\ndeclare const role: iam.Role;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const value: any;\ndeclare const vpc: ec2.Vpc;\nconst commonProjectProps: codebuild.CommonProjectProps = {\n  allowAllOutbound: false,\n  badge: false,\n  buildSpec: buildSpec,\n  cache: cache,\n  checkSecretsInPlainTextEnvVariables: false,\n  concurrentBuildLimit: 123,\n  description: 'description',\n  encryptionKey: key,\n  environment: {\n    buildImage: buildImage,\n    certificate: {\n      bucket: bucket,\n      objectKey: 'objectKey',\n    },\n    computeType: codebuild.ComputeType.SMALL,\n    environmentVariables: {\n      environmentVariablesKey: {\n        value: value,\n\n        // the properties below are optional\n        type: codebuild.BuildEnvironmentVariableType.PLAINTEXT,\n      },\n    },\n    privileged: false,\n  },\n  environmentVariables: {\n    environmentVariablesKey: {\n      value: value,\n\n      // the properties below are optional\n      type: codebuild.BuildEnvironmentVariableType.PLAINTEXT,\n    },\n  },\n  fileSystemLocations: [fileSystemLocation],\n  grantReportGroupPermissions: false,\n  logging: {\n    cloudWatch: {\n      enabled: false,\n      logGroup: logGroup,\n      prefix: 'prefix',\n    },\n    s3: {\n      bucket: bucket,\n\n      // the properties below are optional\n      enabled: false,\n      encrypted: false,\n      prefix: 'prefix',\n    },\n  },\n  projectName: 'projectName',\n  queuedTimeout: cdk.Duration.minutes(30),\n  role: role,\n  securityGroups: [securityGroup],\n  subnetSelection: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n  timeout: cdk.Duration.minutes(30),\n  vpc: vpc,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.CommonProjectProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 523
      },
      "name": "CommonProjectProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If set to false, you must individually add traffic rules to allow the\nCodeBuild project to connect to network targets.\n\nOnly used if 'vpc' is supplied.",
            "stability": "stable",
            "summary": "Whether to allow the CodeBuild to send all network traffic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 650
          },
          "name": "allowAllOutbound",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "For more information, see Build Badges Sample\nin the AWS CodeBuild User Guide.",
            "stability": "stable",
            "summary": "Indicates whether AWS CodeBuild generates a publicly accessible URL for your project's build badge."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 575
          },
          "name": "badge",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Empty buildspec.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-example",
            "stability": "stable",
            "summary": "Filename or contents of buildspec in JSON format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 538
          },
          "name": "buildSpec",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.BuildSpec"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Cache.none",
            "stability": "stable",
            "summary": "Caching strategy to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 559
          },
          "name": "cache",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.Cache"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to check for the presence of any secrets in the environment variables of the default type, BuildEnvironmentVariableType.PLAINTEXT. Since using a secret for the value of that kind of variable would result in it being displayed in plain text in the AWS Console, the construct will throw an exception if it detects a secret was passed there. Pass this property as false if you want to skip this validation, and keep using a secret in a plain text environment variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 602
          },
          "name": "checkSecretsInPlainTextEnvVariables",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no explicit limit is set",
            "remarks": "Minimum value is 1 and maximum is account build limit.",
            "stability": "stable",
            "summary": "Maximum number of concurrent builds."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 698
          },
          "name": "concurrentBuildLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No description.",
            "remarks": "Use the description to identify the purpose\nof the project.",
            "stability": "stable",
            "summary": "A description of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 530
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The AWS-managed CMK for Amazon Simple Storage Service (Amazon S3) is used.",
            "stability": "stable",
            "summary": "Encryption key to use to read and write artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 552
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "BuildEnvironment.LinuxBuildImage.STANDARD_1_0",
            "stability": "stable",
            "summary": "Build environment to use for the build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 566
          },
          "name": "environment",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.BuildEnvironment"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional environment variables are specified.",
            "stability": "stable",
            "summary": "Additional environment variables to add to the build environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 591
          },
          "name": "environmentVariables",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.BuildEnvironmentVariable"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no file system locations",
            "remarks": "A ProjectFileSystemLocation object specifies the identifier, location, mountOptions, mountPoint,\nand type of a file system created using Amazon Elastic File System.",
            "stability": "stable",
            "summary": "An  ProjectFileSystemLocation objects for a CodeBuild build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 660
          },
          "name": "fileSystemLocations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.IFileSystemLocation"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "That is the standard report group that gets created when a simple name\n(in contrast to an ARN)\nis used in the 'reports' section of the buildspec of this project.\nThis is usually harmless, but you can turn these off if you don't plan on using test\nreports in this project.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/test-report-group-naming.html",
            "stability": "stable",
            "summary": "Add permissions to this project's role to create and use test report groups with name starting with the name of this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 675
          },
          "name": "grantReportGroupPermissions",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no log configuration is set",
            "remarks": "A project can create logs in Amazon CloudWatch Logs, an S3 bucket, or both.",
            "stability": "stable",
            "summary": "Information about logs for the build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 682
          },
          "name": "logging",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.LoggingOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Name is automatically generated.",
            "stability": "stable",
            "summary": "The physical, human-readable name of the CodeBuild Project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 609
          },
          "name": "projectName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no queue timeout is set",
            "remarks": "For valid values, see the timeoutInMinutes field in the AWS\nCodeBuild User Guide.",
            "stability": "stable",
            "summary": "The number of minutes after which AWS CodeBuild stops the build if it's still in queue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 691
          },
          "name": "queuedTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role will be created.",
            "stability": "stable",
            "summary": "Service Role to assume while running the build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 545
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Security group will be automatically created.",
            "remarks": "If no security group is identified, one will be created automatically.\n\nOnly used if 'vpc' is supplied.",
            "stability": "stable",
            "summary": "What security group to associate with the codebuild project's network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 638
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- All private subnets.",
            "remarks": "Only used if 'vpc' is supplied.",
            "stability": "stable",
            "summary": "Where to place the network interfaces within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 627
          },
          "name": "subnetSelection",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.hours(1)",
            "remarks": "For valid values, see the timeoutInMinutes field in the AWS\nCodeBuild User Guide.",
            "stability": "stable",
            "summary": "The number of minutes after which AWS CodeBuild stops the build if it's not complete."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 584
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No VPC is specified.",
            "remarks": "Specify this if the codebuild project needs to access resources in a VPC.",
            "stability": "stable",
            "summary": "VPC network to place codebuild network interfaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 618
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/project:CommonProjectProps"
    },
    "@aws-cdk/aws-codebuild.ComputeType": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "Build machine compute type.",
        "example": "declare const vpc: ec2.Vpc;\ndeclare const mySecurityGroup: ec2.SecurityGroup;\nnew pipelines.CodeBuildStep('Synth', {\n  // ...standard ShellStep props...\n  commands: [/* ... */],\n  env: { /* ... */ },\n\n  // If you are using a CodeBuildStep explicitly, set the 'cdk.out' directory\n  // to be the synth step's output.\n  primaryOutputDirectory: 'cdk.out',\n\n  // Control the name of the project\n  projectName: 'MyProject',\n\n  // Control parts of the BuildSpec other than the regular 'build' and 'install' commands\n  partialBuildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    // ...\n  }),\n\n  // Control the build environment\n  buildEnvironment: {\n    computeType: codebuild.ComputeType.LARGE,\n  },\n  timeout: Duration.minutes(90),\n\n  // Control Elastic Network Interface creation\n  vpc: vpc,\n  subnetSelection: { subnetType: ec2.SubnetType.PRIVATE_WITH_NAT },\n  securityGroups: [mySecurityGroup],\n\n  // Additional policy statements for the execution role\n  rolePolicyStatements: [\n    new iam.PolicyStatement({ /* ... */ }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.ComputeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1505
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SMALL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "MEDIUM"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "LARGE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "X2_LARGE"
        }
      ],
      "name": "ComputeType",
      "symbolId": "lib/project:ComputeType"
    },
    "@aws-cdk/aws-codebuild.DockerImageOptions": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The options when creating a CodeBuild Docker build image using {@link LinuxBuildImage.fromDockerRegistry} or {@link WindowsBuildImage.fromDockerRegistry}.",
        "example": "environment: {\n  buildImage: codebuild.LinuxBuildImage.fromDockerRegistry('my-registry/my-repo', {\n    secretsManagerCredentials: secrets,\n  }),\n},",
        "custom": {
          "exampleMetadata": "lit=test/integ.docker-registry.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.DockerImageOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1650
      },
      "name": "DockerImageOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "no credentials will be used (we assume the repository is public)",
            "stability": "stable",
            "summary": "The credentials, stored in Secrets Manager, used for accessing the repository holding the image, if the repository is private."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1658
          },
          "name": "secretsManagerCredentials",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/project:DockerImageOptions"
    },
    "@aws-cdk/aws-codebuild.EfsFileSystemLocationProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link EfsFileSystemLocation}.",
        "example": "new codebuild.Project(this, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  fileSystemLocations: [\n    codebuild.FileSystemLocation.efs({\n      identifier: \"myidentifier2\",\n      location: \"myclodation.mydnsroot.com:/loc\",\n      mountPoint: \"/media\",\n      mountOptions: \"opts\"\n    })\n  ]\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.EfsFileSystemLocationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/file-location.ts",
        "line": 66
      },
      "name": "EfsFileSystemLocationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name used to access a file system created by Amazon EFS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/file-location.ts",
            "line": 70
          },
          "name": "identifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This value looks like `fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory`.",
            "stability": "stable",
            "summary": "A string that specifies the location of the file system, like Amazon EFS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/file-location.ts",
            "line": 77
          },
          "name": "location",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The location in the container where you mount the file system."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/file-location.ts",
            "line": 88
          },
          "name": "mountPoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2'.",
            "stability": "stable",
            "summary": "The mount options for a file system such as Amazon EFS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/file-location.ts",
            "line": 83
          },
          "name": "mountOptions",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/file-location:EfsFileSystemLocationProps"
    },
    "@aws-cdk/aws-codebuild.EventAction": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "The types of webhook event actions.",
        "example": "const gitHubSource = codebuild.Source.gitHub({\n  owner: 'awslabs',\n  repo: 'aws-cdk',\n  webhook: true, // optional, default: true if `webhookFilters` were provided, false otherwise\n  webhookTriggersBatchBuild: true, // optional, default is false\n  webhookFilters: [\n    codebuild.FilterGroup\n      .inEventOf(codebuild.EventAction.PUSH)\n      .andBranchIs('master')\n      .andCommitMessageIs('the commit message'),\n  ], // optional, by default all pushes and Pull Requests will trigger a build\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.EventAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 168
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "A push (of a branch, or a tag) to the repository."
          },
          "name": "PUSH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creating a Pull Request."
          },
          "name": "PULL_REQUEST_CREATED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Updating a Pull Request."
          },
          "name": "PULL_REQUEST_UPDATED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Merging a Pull Request."
          },
          "name": "PULL_REQUEST_MERGED"
        },
        {
          "docs": {
            "remarks": "Note that this event is only supported for GitHub and GitHubEnterprise sources.",
            "stability": "stable",
            "summary": "Re-opening a previously closed Pull Request."
          },
          "name": "PULL_REQUEST_REOPENED"
        }
      ],
      "name": "EventAction",
      "symbolId": "lib/source:EventAction"
    },
    "@aws-cdk/aws-codebuild.FileSystemConfig": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The type returned from {@link IFileSystemLocation#bind}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst fileSystemConfig: codebuild.FileSystemConfig = {\n  location: {\n    identifier: 'identifier',\n    location: 'location',\n    mountPoint: 'mountPoint',\n    type: 'type',\n\n    // the properties below are optional\n    mountOptions: 'mountOptions',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.FileSystemConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/file-location.ts",
        "line": 11
      },
      "name": "FileSystemConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectfilesystemlocation.html",
            "stability": "stable",
            "summary": "File system location wrapper property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/file-location.ts",
            "line": 16
          },
          "name": "location",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectFileSystemLocationProperty"
          }
        }
      ],
      "symbolId": "lib/file-location:FileSystemConfig"
    },
    "@aws-cdk/aws-codebuild.FileSystemLocation": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "FileSystemLocation provider definition for a CodeBuild Project.",
        "example": "new codebuild.Project(this, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  fileSystemLocations: [\n    codebuild.FileSystemLocation.efs({\n      identifier: \"myidentifier2\",\n      location: \"myclodation.mydnsroot.com:/loc\",\n      mountPoint: \"/media\",\n      mountOptions: \"opts\"\n    })\n  ]\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.FileSystemLocation",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/file-location.ts",
        "line": 34
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "EFS file system provider."
          },
          "locationInModule": {
            "filename": "lib/file-location.ts",
            "line": 39
          },
          "name": "efs",
          "parameters": [
            {
              "docs": {
                "summary": "the EFS File System location property."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.EfsFileSystemLocationProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IFileSystemLocation"
            }
          },
          "static": true
        }
      ],
      "name": "FileSystemLocation",
      "symbolId": "lib/file-location:FileSystemLocation"
    },
    "@aws-cdk/aws-codebuild.FilterGroup": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "remarks": "Every condition in a given FilterGroup must be true in order for the whole group to be true.\nYou construct instances of it by calling the {@link #inEventOf} static factory method,\nand then calling various `andXyz` instance methods to create modified instances of it\n(this class is immutable).\n\nYou pass instances of this class to the `webhookFilters` property when constructing a source.",
        "stability": "stable",
        "summary": "An object that represents a group of filter conditions for a webhook.",
        "example": "const gitHubSource = codebuild.Source.gitHub({\n  owner: 'awslabs',\n  repo: 'aws-cdk',\n  webhook: true, // optional, default: true if `webhookFilters` were provided, false otherwise\n  webhookTriggersBatchBuild: true, // optional, default is false\n  webhookFilters: [\n    codebuild.FilterGroup\n      .inEventOf(codebuild.EventAction.PUSH)\n      .andBranchIs('master')\n      .andCommitMessageIs('the commit message'),\n  ], // optional, by default all pushes and Pull Requests will trigger a build\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.FilterGroup",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 213
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new event FilterGroup that triggers on any of the provided actions."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 219
          },
          "name": "inEventOf",
          "parameters": [
            {
              "docs": {
                "summary": "the actions to trigger the webhook on."
              },
              "name": "actions",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.EventAction"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          },
          "static": true,
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the account ID of the actor initiating the event must match the given pattern."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 322
          },
          "name": "andActorAccountIs",
          "parameters": [
            {
              "docs": {
                "summary": "a regular expression."
              },
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the account ID of the actor initiating the event must not match the given pattern."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 332
          },
          "name": "andActorAccountIsNot",
          "parameters": [
            {
              "docs": {
                "summary": "a regular expression."
              },
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "remarks": "Note that you cannot use this method if this Group contains the `PUSH` event action.",
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the Pull Request that is the source of the event must target the given base branch."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 343
          },
          "name": "andBaseBranchIs",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the branch (can be a regular expression)."
              },
              "name": "branchName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "remarks": "Note that you cannot use this method if this Group contains the `PUSH` event action.",
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the Pull Request that is the source of the event must not target the given base branch."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 354
          },
          "name": "andBaseBranchIsNot",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the branch (can be a regular expression)."
              },
              "name": "branchName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "remarks": "Note that you cannot use this method if this Group contains the `PUSH` event action.",
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the Pull Request that is the source of the event must target the given Git reference."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 365
          },
          "name": "andBaseRefIs",
          "parameters": [
            {
              "docs": {
                "summary": "a regular expression."
              },
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "remarks": "Note that you cannot use this method if this Group contains the `PUSH` event action.",
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the Pull Request that is the source of the event must not target the given Git reference."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 376
          },
          "name": "andBaseRefIsNot",
          "parameters": [
            {
              "docs": {
                "summary": "a regular expression."
              },
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the event must affect the given branch."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 240
          },
          "name": "andBranchIs",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the branch (can be a regular expression)."
              },
              "name": "branchName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the event must not affect the given branch."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 250
          },
          "name": "andBranchIsNot",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the branch (can be a regular expression)."
              },
              "name": "branchName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the event must affect a head commit with the given message."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 260
          },
          "name": "andCommitMessageIs",
          "parameters": [
            {
              "docs": {
                "summary": "the commit message (can be a regular expression)."
              },
              "name": "commitMessage",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the event must not affect a head commit with the given message."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 270
          },
          "name": "andCommitMessageIsNot",
          "parameters": [
            {
              "docs": {
                "summary": "the commit message (can be a regular expression)."
              },
              "name": "commitMessage",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "remarks": "Note that you can only use this method if this Group contains only the `PUSH` event action,\nand only for GitHub, Bitbucket and GitHubEnterprise sources.",
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the push that is the source of the event must affect a file that matches the given pattern."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 388
          },
          "name": "andFilePathIs",
          "parameters": [
            {
              "docs": {
                "summary": "a regular expression."
              },
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "remarks": "Note that you can only use this method if this Group contains only the `PUSH` event action,\nand only for GitHub, Bitbucket and GitHubEnterprise sources.",
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the push that is the source of the event must not affect a file that matches the given pattern."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 400
          },
          "name": "andFilePathIsNot",
          "parameters": [
            {
              "docs": {
                "summary": "a regular expression."
              },
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the event must affect a Git reference (ie., a branch or a tag) that matches the given pattern."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 301
          },
          "name": "andHeadRefIs",
          "parameters": [
            {
              "docs": {
                "summary": "a regular expression."
              },
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the event must not affect a Git reference (ie., a branch or a tag) that matches the given pattern."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 312
          },
          "name": "andHeadRefIsNot",
          "parameters": [
            {
              "docs": {
                "summary": "a regular expression."
              },
              "name": "pattern",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the event must affect the given tag."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 280
          },
          "name": "andTagIs",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the tag (can be a regular expression)."
              },
              "name": "tagName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Create a new FilterGroup with an added condition: the event must not affect the given tag."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 290
          },
          "name": "andTagIsNot",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the tag (can be a regular expression)."
              },
              "name": "tagName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
            }
          }
        }
      ],
      "name": "FilterGroup",
      "symbolId": "lib/source:FilterGroup"
    },
    "@aws-cdk/aws-codebuild.GitHubEnterpriseSourceCredentials": {
      "assembly": "@aws-cdk/aws-codebuild",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CodeBuild::SourceCredential",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "**Note**: CodeBuild only allows a single credential for GitHub Enterprise\nto be saved in a given AWS account in a given region -\nany attempt to add more than one will result in an error.",
        "stability": "stable",
        "summary": "The source credentials used when contacting the GitHub Enterprise API.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const secretValue: cdk.SecretValue;\nconst gitHubEnterpriseSourceCredentials = new codebuild.GitHubEnterpriseSourceCredentials(this, 'MyGitHubEnterpriseSourceCredentials', {\n  accessToken: secretValue,\n});"
      },
      "fqn": "@aws-cdk/aws-codebuild.GitHubEnterpriseSourceCredentials",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/source-credentials.ts",
          "line": 57
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.GitHubEnterpriseSourceCredentialsProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/source-credentials.ts",
        "line": 56
      },
      "name": "GitHubEnterpriseSourceCredentials",
      "symbolId": "lib/source-credentials:GitHubEnterpriseSourceCredentials"
    },
    "@aws-cdk/aws-codebuild.GitHubEnterpriseSourceCredentialsProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Creation properties for {@link GitHubEnterpriseSourceCredentials}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const secretValue: cdk.SecretValue;\nconst gitHubEnterpriseSourceCredentialsProps: codebuild.GitHubEnterpriseSourceCredentialsProps = {\n  accessToken: secretValue,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.GitHubEnterpriseSourceCredentialsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source-credentials.ts",
        "line": 39
      },
      "name": "GitHubEnterpriseSourceCredentialsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The personal access token to use when contacting the instance of the GitHub Enterprise API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-credentials.ts",
            "line": 44
          },
          "name": "accessToken",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        }
      ],
      "symbolId": "lib/source-credentials:GitHubEnterpriseSourceCredentialsProps"
    },
    "@aws-cdk/aws-codebuild.GitHubEnterpriseSourceProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link GitHubEnterpriseSource}.",
        "example": "new codebuild.Project(this, 'Project', {\n  source: codebuild.Source.gitHubEnterprise({\n    httpsCloneUrl: 'https://my-github-enterprise.com/owner/repo',\n  }),\n\n  // Enable Docker AND custom caching\n  cache: codebuild.Cache.local(codebuild.LocalCacheMode.DOCKER_LAYER, codebuild.LocalCacheMode.CUSTOM),\n\n  // BuildSpec with a 'cache' section necessary for 'CUSTOM' caching. This can\n  // also come from 'buildspec.yml' in your source.\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: ['...'],\n      },\n    },\n    cache: {\n      paths: [\n        // The '**/*' is required to indicate all files in this directory\n        '/root/cachedir/**/*',\n      ],\n    },\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.GitHubEnterpriseSourceProps",
      "interfaces": [
        "@aws-cdk/aws-codebuild.SourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 743
      },
      "name": "GitHubEnterpriseSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The HTTPS URL of the repository in your GitHub Enterprise installation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 747
          },
          "name": "httpsCloneUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the default branch's HEAD commit ID is used",
            "example": "'mybranch'",
            "stability": "stable",
            "summary": "The commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 124
          },
          "name": "branchOrRef",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"AWS CodeBuild $AWS_REGION ($PROJECT_NAME)\"",
            "example": "\"My build #$CODEBUILD_BUILD_NUMBER\"",
            "remarks": "Can use built-in CodeBuild variables, like $AWS_REGION.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html",
            "stability": "stable",
            "summary": "This parameter is used for the `context` parameter in the GitHub commit status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 667
          },
          "name": "buildStatusContext",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- link to the AWS Console for CodeBuild to a particular build execution",
            "example": "\"$CODEBUILD_PUBLIC_BUILD_URL\"",
            "remarks": "Can use built-in CodeBuild variables, like $AWS_REGION.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html",
            "stability": "stable",
            "summary": "The URL that the build will report back to the source provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 513
          },
          "name": "buildStatusUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Minimum value is 0.\nIf this value is 0, greater than 25, or not provided,\nthen the full history is downloaded with each build of the project.",
            "stability": "stable",
            "summary": "The depth of history to download."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 115
          },
          "name": "cloneDepth",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to fetch submodules while cloning git repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 131
          },
          "name": "fetchSubmodules",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to ignore SSL errors when connecting to the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 754
          },
          "name": "ignoreSslErrors",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to send notifications on your build's start and end."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 476
          },
          "name": "reportBuildStatus",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true if any `webhookFilters` were provided, false otherwise",
            "stability": "stable",
            "summary": "Whether to create a webhook that will trigger a build every time an event happens in the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 483
          },
          "name": "webhook",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "every push and every Pull Request (create or update) triggers a build",
            "remarks": "A build is triggered if any of the provided filter groups match.\nOnly valid if `webhook` was not provided as false.",
            "stability": "stable",
            "summary": "A list of webhook filters that can constraint what events in the repository will trigger a build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 501
          },
          "name": "webhookFilters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Enabling this will enable batch builds on the CodeBuild project.",
            "stability": "stable",
            "summary": "Trigger a batch build from a webhook instead of a standard one."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 492
          },
          "name": "webhookTriggersBatchBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/source:GitHubEnterpriseSourceProps"
    },
    "@aws-cdk/aws-codebuild.GitHubSourceCredentials": {
      "assembly": "@aws-cdk/aws-codebuild",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CodeBuild::SourceCredential",
          "exampleMetadata": "infused"
        },
        "remarks": "**Note**: CodeBuild only allows a single credential for GitHub\nto be saved in a given AWS account in a given region -\nany attempt to add more than one will result in an error.",
        "stability": "stable",
        "summary": "The source credentials used when contacting the GitHub API.",
        "example": "new codebuild.GitHubSourceCredentials(this, 'CodeBuildGitHubCreds', {\n  accessToken: SecretValue.secretsManager('my-token'),\n});\n// GitHub Enterprise is almost the same,\n// except the class is called GitHubEnterpriseSourceCredentials"
      },
      "fqn": "@aws-cdk/aws-codebuild.GitHubSourceCredentials",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/source-credentials.ts",
          "line": 25
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.GitHubSourceCredentialsProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/source-credentials.ts",
        "line": 24
      },
      "name": "GitHubSourceCredentials",
      "symbolId": "lib/source-credentials:GitHubSourceCredentials"
    },
    "@aws-cdk/aws-codebuild.GitHubSourceCredentialsProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Creation properties for {@link GitHubSourceCredentials}.",
        "example": "new codebuild.GitHubSourceCredentials(this, 'CodeBuildGitHubCreds', {\n  accessToken: SecretValue.secretsManager('my-token'),\n});\n// GitHub Enterprise is almost the same,\n// except the class is called GitHubEnterpriseSourceCredentials",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.GitHubSourceCredentialsProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source-credentials.ts",
        "line": 8
      },
      "name": "GitHubSourceCredentialsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The personal access token to use when contacting the GitHub API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source-credentials.ts",
            "line": 12
          },
          "name": "accessToken",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        }
      ],
      "symbolId": "lib/source-credentials:GitHubSourceCredentialsProps"
    },
    "@aws-cdk/aws-codebuild.GitHubSourceProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link GitHubSource} and {@link GitHubEnterpriseSource}.",
        "example": "const gitHubSource = codebuild.Source.gitHub({\n  owner: 'awslabs',\n  repo: 'aws-cdk',\n  webhook: true, // optional, default: true if `webhookFilters` were provided, false otherwise\n  webhookTriggersBatchBuild: true, // optional, default is false\n  webhookFilters: [\n    codebuild.FilterGroup\n      .inEventOf(codebuild.EventAction.PUSH)\n      .andBranchIs('master')\n      .andCommitMessageIs('the commit message'),\n  ], // optional, by default all pushes and Pull Requests will trigger a build\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.GitHubSourceProps",
      "interfaces": [
        "@aws-cdk/aws-codebuild.SourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 699
      },
      "name": "GitHubSourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "'awslabs'",
            "stability": "stable",
            "summary": "The GitHub account/user that owns the repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 705
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "example": "'aws-cdk'",
            "stability": "stable",
            "summary": "The name of the repo (without the username)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 712
          },
          "name": "repo",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the default branch's HEAD commit ID is used",
            "example": "'mybranch'",
            "stability": "stable",
            "summary": "The commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 124
          },
          "name": "branchOrRef",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "\"AWS CodeBuild $AWS_REGION ($PROJECT_NAME)\"",
            "example": "\"My build #$CODEBUILD_BUILD_NUMBER\"",
            "remarks": "Can use built-in CodeBuild variables, like $AWS_REGION.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html",
            "stability": "stable",
            "summary": "This parameter is used for the `context` parameter in the GitHub commit status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 667
          },
          "name": "buildStatusContext",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- link to the AWS Console for CodeBuild to a particular build execution",
            "example": "\"$CODEBUILD_PUBLIC_BUILD_URL\"",
            "remarks": "Can use built-in CodeBuild variables, like $AWS_REGION.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html",
            "stability": "stable",
            "summary": "The URL that the build will report back to the source provider."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 513
          },
          "name": "buildStatusUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Minimum value is 0.\nIf this value is 0, greater than 25, or not provided,\nthen the full history is downloaded with each build of the project.",
            "stability": "stable",
            "summary": "The depth of history to download."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 115
          },
          "name": "cloneDepth",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to fetch submodules while cloning git repo."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 131
          },
          "name": "fetchSubmodules",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to send notifications on your build's start and end."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 476
          },
          "name": "reportBuildStatus",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true if any `webhookFilters` were provided, false otherwise",
            "stability": "stable",
            "summary": "Whether to create a webhook that will trigger a build every time an event happens in the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 483
          },
          "name": "webhook",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "every push and every Pull Request (create or update) triggers a build",
            "remarks": "A build is triggered if any of the provided filter groups match.\nOnly valid if `webhook` was not provided as false.",
            "stability": "stable",
            "summary": "A list of webhook filters that can constraint what events in the repository will trigger a build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 501
          },
          "name": "webhookFilters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.FilterGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Enabling this will enable batch builds on the CodeBuild project.",
            "stability": "stable",
            "summary": "Trigger a batch build from a webhook instead of a standard one."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 492
          },
          "name": "webhookTriggersBatchBuild",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/source:GitHubSourceProps"
    },
    "@aws-cdk/aws-codebuild.IArtifacts": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "remarks": "Implemented by {@link Artifacts}.",
        "stability": "stable",
        "summary": "The abstract interface of a CodeBuild build output."
      },
      "fqn": "@aws-cdk/aws-codebuild.IArtifacts",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/artifacts.ts",
        "line": 23
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Callback when an Artifacts class is used in a CodeBuild Project."
          },
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 41
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "a root Construct that allows creating new Constructs."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "docs": {
                "summary": "the Project this Artifacts is used in."
              },
              "name": "project",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.IProject"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.ArtifactsConfig"
            }
          }
        }
      ],
      "name": "IArtifacts",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CodeBuild type of this artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 33
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This property is required on secondary artifacts.",
            "stability": "stable",
            "summary": "The artifact identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 28
          },
          "name": "identifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/artifacts:IArtifacts"
    },
    "@aws-cdk/aws-codebuild.IBindableBuildImage": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "A variant of {@link IBuildImage} that allows binding to the project."
      },
      "fqn": "@aws-cdk/aws-codebuild.IBindableBuildImage",
      "interfaces": [
        "@aws-cdk/aws-codebuild.IBuildImage"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1640
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Function that allows the build image access to the construct tree."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1642
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "project",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.IProject"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.BuildImageBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BuildImageConfig"
            }
          }
        }
      ],
      "name": "IBindableBuildImage",
      "symbolId": "lib/project:IBindableBuildImage"
    },
    "@aws-cdk/aws-codebuild.IBuildImage": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "remarks": "Use the concrete subclasses, either:\n{@link LinuxBuildImage} or {@link WindowsBuildImage}.",
        "stability": "stable",
        "summary": "Represents a Docker image used for the CodeBuild Project builds."
      },
      "fqn": "@aws-cdk/aws-codebuild.IBuildImage",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1577
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Make a buildspec to run the indicated script."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1627
          },
          "name": "runScriptBuildspec",
          "parameters": [
            {
              "name": "entrypoint",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BuildSpec"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Allows the image a chance to validate whether the passed configuration is correct."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1622
          },
          "name": "validate",
          "parameters": [
            {
              "docs": {
                "summary": "the current build environment."
              },
              "name": "buildEnvironment",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.BuildEnvironment"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "IBuildImage",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The default {@link ComputeType} to use with this image, if one was not specified in {@link BuildEnvironment#computeType} explicitly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1594
          },
          "name": "defaultComputeType",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ComputeType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html",
            "stability": "stable",
            "summary": "The Docker image identifier that the build environment uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1588
          },
          "name": "imageId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of build environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1581
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ImagePullPrincipalType.SERVICE_ROLE",
            "stability": "stable",
            "summary": "The type of principal that CodeBuild will use to pull this build Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1601
          },
          "name": "imagePullPrincipalType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ImagePullPrincipalType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no repository",
            "stability": "stable",
            "summary": "An optional ECR repository that the image is hosted in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1615
          },
          "name": "repository",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecr.IRepository"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no credentials will be used",
            "stability": "stable",
            "summary": "The secretsManagerCredentials for access to a private registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1608
          },
          "name": "secretsManagerCredentials",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/project:IBuildImage"
    },
    "@aws-cdk/aws-codebuild.IFileSystemLocation": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "remarks": "Implemented by {@link EfsFileSystemLocation}.",
        "stability": "stable",
        "summary": "The interface of a CodeBuild FileSystemLocation."
      },
      "fqn": "@aws-cdk/aws-codebuild.IFileSystemLocation",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/file-location.ts",
        "line": 23
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called by the project when a file system is added so it can perform binding operations on this file system location."
          },
          "locationInModule": {
            "filename": "lib/file-location.ts",
            "line": 28
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "project",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.IProject"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.FileSystemConfig"
            }
          }
        }
      ],
      "name": "IFileSystemLocation",
      "symbolId": "lib/file-location:IFileSystemLocation"
    },
    "@aws-cdk/aws-codebuild.IProject": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-codebuild.IProject",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-codestarnotifications.INotificationRuleSource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 68
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 92
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "policyStatement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Returns an object contining the batch service role if batch builds\ncould be enabled.",
            "stability": "stable",
            "summary": "Enable batch builds."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 90
          },
          "name": "enableBatchBuilds",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BatchBuildConfig"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "returns": "a CloudWatch metric associated with this build project.",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 156
          },
          "name": "metric",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the metric."
              },
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Customization properties."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "sum over 5 minutes",
            "remarks": "Units: Count\n\nValid CloudWatch statistics: Sum",
            "stability": "stable",
            "summary": "Measures the number of builds triggered."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 167
          },
          "name": "metricBuilds",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "average over 5 minutes",
            "remarks": "Units: Seconds\n\nValid CloudWatch statistics: Average (recommended), Maximum, Minimum",
            "stability": "stable",
            "summary": "Measures the duration of all builds over time."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 178
          },
          "name": "metricDuration",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "sum over 5 minutes",
            "remarks": "Units: Count\n\nValid CloudWatch statistics: Sum",
            "stability": "stable",
            "summary": "Measures the number of builds that failed because of client error or because of a timeout."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 201
          },
          "name": "metricFailedBuilds",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "sum over 5 minutes",
            "remarks": "Units: Count\n\nValid CloudWatch statistics: Sum",
            "stability": "stable",
            "summary": "Measures the number of successful builds."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 189
          },
          "name": "metricSucceededBuilds",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can also use the methods `notifyOnBuildSucceeded` and\n`notifyOnBuildFailed` to define rules for these specific event emitted.",
            "returns": "CodeStar Notifications rule associated with this build project.",
            "stability": "stable",
            "summary": "Defines a CodeStar Notification rule triggered when the project events emitted by you specified, it very similar to `onEvent` API."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 215
          },
          "name": "notifyOn",
          "parameters": [
            {
              "docs": {
                "summary": "The logical identifier of the CodeStar Notifications rule that will be created."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The target to register for the CodeStar Notifications destination."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "docs": {
                "summary": "Customization options for CodeStar Notifications rule."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.ProjectNotifyOnOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Defines a CodeStar notification rule which triggers when a build fails."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 233
          },
          "name": "notifyOnBuildFailed",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Defines a CodeStar notification rule which triggers when a build completes successfully."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 224
          },
          "name": "notifyOnBuildSucceeded",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Defines an event rule which triggers when a build fails."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 144
          },
          "name": "onBuildFailed",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Defines an event rule which triggers when a build starts."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 139
          },
          "name": "onBuildStarted",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Defines an event rule which triggers when a build completes successfully."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 149
          },
          "name": "onBuildSucceeded",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html",
            "stability": "stable",
            "summary": "Defines a CloudWatch event rule triggered when something happens with this project."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 99
          },
          "name": "onEvent",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html",
            "stability": "stable",
            "summary": "Defines a CloudWatch event rule that triggers upon phase change of this build project."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 134
          },
          "name": "onPhaseChange",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can filter specific build status events using an event\npattern filter on the `build-status` detail field:\n\n    const rule = project.onStateChange('OnBuildStarted', { target });\n    rule.addEventPattern({\n      detail: {\n        'build-status': [\n          \"IN_PROGRESS\",\n          \"SUCCEEDED\",\n          \"FAILED\",\n          \"STOPPED\"\n        ]\n      }\n    });\n\nYou can also use the methods `onBuildFailed` and `onBuildSucceeded` to define rules for\nthese specific state changes.\n\nTo access fields from the event in the event target input,\nuse the static fields on the `StateChangeEvent` class.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html",
            "stability": "stable",
            "summary": "Defines a CloudWatch event rule triggered when the build project state changes."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 126
          },
          "name": "onStateChange",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        }
      ],
      "name": "IProject",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of this Project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 73
          },
          "name": "projectArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The human-visible name of this Project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 79
          },
          "name": "projectName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Undefined for imported Projects.",
            "stability": "stable",
            "summary": "The IAM service Role of this Project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 82
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/project:IProject"
    },
    "@aws-cdk/aws-codebuild.IReportGroup": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "The interface representing the ReportGroup resource - either an existing one, imported using the {@link ReportGroup.fromReportGroupName} method, or a new one, created with the {@link ReportGroup} class."
      },
      "fqn": "@aws-cdk/aws-codebuild.IReportGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/report-group.ts",
        "line": 14
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grants the given entity permissions to write (that is, upload reports to) this report group."
          },
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 34
          },
          "name": "grantWrite",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "IReportGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the ReportGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 20
          },
          "name": "reportGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the ReportGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 27
          },
          "name": "reportGroupName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/report-group:IReportGroup"
    },
    "@aws-cdk/aws-codebuild.ISource": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "remarks": "Implemented by {@link Source}.",
        "stability": "stable",
        "summary": "The abstract interface of a CodeBuild source."
      },
      "fqn": "@aws-cdk/aws-codebuild.ISource",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 38
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 45
          },
          "name": "bind",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "project",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.IProject"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.SourceConfig"
            }
          }
        }
      ],
      "name": "ISource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 43
          },
          "name": "badgeSupported",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 41
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 39
          },
          "name": "identifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/source:ISource"
    },
    "@aws-cdk/aws-codebuild.ImagePullPrincipalType": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "The type of principal CodeBuild will use to pull your build Docker image."
      },
      "fqn": "@aws-cdk/aws-codebuild.ImagePullPrincipalType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1515
      },
      "members": [
        {
          "docs": {
            "remarks": "This means the resource policy of the ECR repository that hosts the image will be modified to trust\nCodeBuild's service principal.\nThis is the required principal type when using CodeBuild's pre-defined images.",
            "stability": "stable",
            "summary": "CODEBUILD specifies that CodeBuild uses its own identity when pulling the image."
          },
          "name": "CODEBUILD"
        },
        {
          "docs": {
            "remarks": "The role will be granted pull permissions on the ECR repository hosting the image.",
            "stability": "stable",
            "summary": "SERVICE_ROLE specifies that AWS CodeBuild uses the project's role when pulling the image."
          },
          "name": "SERVICE_ROLE"
        }
      ],
      "name": "ImagePullPrincipalType",
      "symbolId": "lib/project:ImagePullPrincipalType"
    },
    "@aws-cdk/aws-codebuild.LinuxArmBuildImage": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "remarks": "This class has a bunch of public constants that represent the CodeBuild ARM images.\n\nYou can also specify a custom image using the static method:\n\n- LinuxBuildImage.fromEcrRepository(repo[, tag])",
        "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html",
        "stability": "stable",
        "summary": "A CodeBuild image running aarch64 Linux.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst linuxArmBuildImage = codebuild.LinuxArmBuildImage.fromCodeBuildImageId('id');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.LinuxArmBuildImage",
      "interfaces": [
        "@aws-cdk/aws-codebuild.IBuildImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/linux-arm-build-image.ts",
        "line": 30
      },
      "methods": [
        {
          "docs": {
            "example": "'aws/codebuild/amazonlinux2-aarch64-standard:1.0'",
            "returns": "A Docker image provided by CodeBuild.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html",
            "stability": "stable",
            "summary": "Uses a Docker image provided by CodeBuild."
          },
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 65
          },
          "name": "fromCodeBuildImageId",
          "parameters": [
            {
              "docs": {
                "summary": "The image identifier."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "NOTE: if the repository is external (i.e. imported), then we won't be able to add\na resource policy statement for it so CodeBuild can pull the image.",
            "returns": "An aarch64 Linux build image from an ECR repository.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-ecr.html",
            "stability": "stable",
            "summary": "Returns an ARM image running Linux from an ECR repository."
          },
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 48
          },
          "name": "fromEcrRepository",
          "parameters": [
            {
              "docs": {
                "summary": "The ECR repository."
              },
              "name": "repository",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.IRepository"
              }
            },
            {
              "docs": {
                "summary": "Image tag or digest (default \"latest\", digests must start with `sha256:`)."
              },
              "name": "tagOrDigest",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Make a buildspec to run the indicated script."
          },
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 102
          },
          "name": "runScriptBuildspec",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "parameters": [
            {
              "name": "entrypoint",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BuildSpec"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Validates by checking the BuildEnvironment computeType as aarch64 images only support ComputeType.SMALL and ComputeType.LARGE."
          },
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 91
          },
          "name": "validate",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "parameters": [
            {
              "docs": {
                "summary": "BuildEnvironment."
              },
              "name": "buildEnvironment",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.BuildEnvironment"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "LinuxArmBuildImage",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Image \"aws/codebuild/amazonlinux2-aarch64-standard:1.0\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 32
          },
          "name": "AMAZON_LINUX_2_STANDARD_1_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Image \"aws/codebuild/amazonlinux2-aarch64-standard:2.0\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 34
          },
          "name": "AMAZON_LINUX_2_STANDARD_2_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The default {@link ComputeType} to use with this image, if one was not specified in {@link BuildEnvironment#computeType} explicitly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 73
          },
          "name": "defaultComputeType",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ComputeType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Docker image identifier that the build environment uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 74
          },
          "name": "imageId",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of build environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 72
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of principal that CodeBuild will use to pull this build Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 75
          },
          "name": "imagePullPrincipalType",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ImagePullPrincipalType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An optional ECR repository that the image is hosted in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 77
          },
          "name": "repository",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-ecr.IRepository"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The secretsManagerCredentials for access to a private registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-arm-build-image.ts",
            "line": 76
          },
          "name": "secretsManagerCredentials",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/linux-arm-build-image:LinuxArmBuildImage"
    },
    "@aws-cdk/aws-codebuild.LinuxBuildImage": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "remarks": "This class has a bunch of public constants that represent the most popular images.\n\nYou can also specify a custom image using one of the static methods:\n\n- LinuxBuildImage.fromDockerRegistry(image[, { secretsManagerCredentials }])\n- LinuxBuildImage.fromEcrRepository(repo[, tag])\n- LinuxBuildImage.fromAsset(parent, id, props)",
        "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html",
        "stability": "stable",
        "summary": "A CodeBuild image running x86-64 Linux.",
        "example": "const pipeline = new pipelines.CodePipeline(this, 'Pipeline', {\n  synth: new pipelines.ShellStep('Synth', {\n    input: pipelines.CodePipelineSource.connection('my-org/my-app', 'main', {\n      connectionArn: 'arn:aws:codestar-connections:us-east-1:222222222222:connection/7d2469ff-514a-4e4f-9003-5ca4a43cdc41', // Created using the AWS console * });',\n    }),\n    commands: ['npm ci','npm run build','npx cdk synth'],\n  }),\n\n  // Turn this on because the pipeline uses Docker image assets\n  dockerEnabledForSelfMutation: true,\n});\n\npipeline.addWave('MyWave', {\n  post: [\n    new pipelines.CodeBuildStep('RunApproval', {\n      commands: ['command-from-image'],\n      buildEnvironment: {\n        // The user of a Docker image asset in the pipeline requires turning on\n        // 'dockerEnabledForSelfMutation'.\n        buildImage: codebuild.LinuxBuildImage.fromAsset(this, 'Image', {\n          directory: './docker-image',\n        }),\n      },\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.LinuxBuildImage",
      "interfaces": [
        "@aws-cdk/aws-codebuild.IBuildImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1690
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Uses an Docker image asset as a x86-64 Linux build image."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1806
          },
          "name": "fromAsset",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecr-assets.DockerImageAssetProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "example": "'aws/codebuild/standard:4.0'",
            "returns": "A Docker image provided by CodeBuild.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html",
            "stability": "stable",
            "summary": "Uses a Docker image provided by CodeBuild."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1825
          },
          "name": "fromCodeBuildImageId",
          "parameters": [
            {
              "docs": {
                "summary": "The image identifier."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a x86-64 Linux build image from a Docker Hub image.",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1776
          },
          "name": "fromDockerRegistry",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.DockerImageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "A x86-64 Linux build image from an ECR repository.\n\nNOTE: if the repository is external (i.e. imported), then we won't be able to add\na resource policy statement for it so CodeBuild can pull the image.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-ecr.html",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1795
          },
          "name": "fromEcrRepository",
          "parameters": [
            {
              "docs": {
                "summary": "The ECR repository."
              },
              "name": "repository",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.IRepository"
              }
            },
            {
              "docs": {
                "summary": "Image tag or digest (default \"latest\", digests must start with `sha256:`)."
              },
              "name": "tagOrDigest",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Make a buildspec to run the indicated script."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1854
          },
          "name": "runScriptBuildspec",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "parameters": [
            {
              "name": "entrypoint",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BuildSpec"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows the image a chance to validate whether the passed configuration is correct."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1850
          },
          "name": "validate",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "parameters": [
            {
              "name": "_",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.BuildEnvironment"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "LinuxBuildImage",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1699
          },
          "name": "AMAZON_LINUX_2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1700
          },
          "name": "AMAZON_LINUX_2_2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon Linux 2 x86_64 standard image, version `3.0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1702
          },
          "name": "AMAZON_LINUX_2_3",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use LinuxArmBuildImage.AMAZON_LINUX_2_STANDARD_1_0 instead.",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1705
          },
          "name": "AMAZON_LINUX_2_ARM",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use LinuxArmBuildImage.AMAZON_LINUX_2_STANDARD_2_0 instead.",
            "stability": "deprecated",
            "summary": "Image \"aws/codebuild/amazonlinux2-aarch64-standard:2.0\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1710
          },
          "name": "AMAZON_LINUX_2_ARM_2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1691
          },
          "name": "STANDARD_1_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1692
          },
          "name": "STANDARD_2_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1693
          },
          "name": "STANDARD_3_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The `aws/codebuild/standard:4.0` build image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1695
          },
          "name": "STANDARD_4_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The `aws/codebuild/standard:5.0` build image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1697
          },
          "name": "STANDARD_5_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1715
          },
          "name": "UBUNTU_14_04_ANDROID_JAVA8_24_4_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1717
          },
          "name": "UBUNTU_14_04_ANDROID_JAVA8_26_1_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1713
          },
          "name": "UBUNTU_14_04_BASE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1719
          },
          "name": "UBUNTU_14_04_DOCKER_17_09_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1721
          },
          "name": "UBUNTU_14_04_DOCKER_18_09_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1767
          },
          "name": "UBUNTU_14_04_DOTNET_CORE_1_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1769
          },
          "name": "UBUNTU_14_04_DOTNET_CORE_2_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1771
          },
          "name": "UBUNTU_14_04_DOTNET_CORE_2_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1723
          },
          "name": "UBUNTU_14_04_GOLANG_1_10",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1725
          },
          "name": "UBUNTU_14_04_GOLANG_1_11",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1735
          },
          "name": "UBUNTU_14_04_NODEJS_10_1_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1733
          },
          "name": "UBUNTU_14_04_NODEJS_10_14_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1739
          },
          "name": "UBUNTU_14_04_NODEJS_6_3_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1737
          },
          "name": "UBUNTU_14_04_NODEJS_8_11_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1731
          },
          "name": "UBUNTU_14_04_OPEN_JDK_11",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1727
          },
          "name": "UBUNTU_14_04_OPEN_JDK_8",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1729
          },
          "name": "UBUNTU_14_04_OPEN_JDK_9",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1741
          },
          "name": "UBUNTU_14_04_PHP_5_6",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1743
          },
          "name": "UBUNTU_14_04_PHP_7_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1745
          },
          "name": "UBUNTU_14_04_PHP_7_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1757
          },
          "name": "UBUNTU_14_04_PYTHON_2_7_12",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1755
          },
          "name": "UBUNTU_14_04_PYTHON_3_3_6",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1753
          },
          "name": "UBUNTU_14_04_PYTHON_3_4_5",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1751
          },
          "name": "UBUNTU_14_04_PYTHON_3_5_2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1749
          },
          "name": "UBUNTU_14_04_PYTHON_3_6_5",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1747
          },
          "name": "UBUNTU_14_04_PYTHON_3_7_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1765
          },
          "name": "UBUNTU_14_04_RUBY_2_2_5",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1763
          },
          "name": "UBUNTU_14_04_RUBY_2_3_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1761
          },
          "name": "UBUNTU_14_04_RUBY_2_5_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "deprecated": "Use {@link STANDARD_2_0} and specify runtime in buildspec runtime-versions section",
            "stability": "deprecated"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1759
          },
          "name": "UBUNTU_14_04_RUBY_2_5_3",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The default {@link ComputeType} to use with this image, if one was not specified in {@link BuildEnvironment#computeType} explicitly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1837
          },
          "name": "defaultComputeType",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ComputeType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Docker image identifier that the build environment uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1838
          },
          "name": "imageId",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of build environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1836
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of principal that CodeBuild will use to pull this build Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1839
          },
          "name": "imagePullPrincipalType",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ImagePullPrincipalType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An optional ECR repository that the image is hosted in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1841
          },
          "name": "repository",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-ecr.IRepository"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The secretsManagerCredentials for access to a private registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1840
          },
          "name": "secretsManagerCredentials",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/project:LinuxBuildImage"
    },
    "@aws-cdk/aws-codebuild.LinuxGpuBuildImage": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "remarks": "This class has public constants that represent the most popular GPU images from AWS Deep Learning Containers.",
        "see": "https://aws.amazon.com/releasenotes/available-deep-learning-containers-images",
        "stability": "stable",
        "summary": "A CodeBuild GPU image running Linux.",
        "example": "new codebuild.Project(this, 'Project', {\n  environment: {\n    buildImage: codebuild.LinuxGpuBuildImage.DLC_TENSORFLOW_2_1_0_INFERENCE,\n  },\n  // ...\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.LinuxGpuBuildImage",
      "interfaces": [
        "@aws-cdk/aws-codebuild.IBindableBuildImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/linux-gpu-build-image.ts",
        "line": 22
      },
      "methods": [
        {
          "docs": {
            "see": "https://aws.amazon.com/releasenotes/available-deep-learning-containers-images",
            "stability": "stable",
            "summary": "Returns a Linux GPU build image from AWS Deep Learning Containers."
          },
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 88
          },
          "name": "awsDeepLearningContainersImage",
          "parameters": [
            {
              "docs": {
                "summary": "the name of the repository, for example \"pytorch-inference\"."
              },
              "name": "repositoryName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the tag of the image, for example \"1.5.0-gpu-py36-cu101-ubuntu16.04\"."
              },
              "name": "tag",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "remarks": "In many cases, the CDK can infer that for you, but for some newer region our information\nmight be out of date; in that case, you can specify the region explicitly using this optional parameter",
                "summary": "the AWS account ID where the DLC repository for this region is hosted in."
              },
              "name": "account",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "NOTE: if the repository is external (i.e. imported), then we won't be able to add\na resource policy statement for it so CodeBuild can pull the image.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-ecr.html",
            "stability": "stable",
            "summary": "Returns a GPU image running Linux from an ECR repository."
          },
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 104
          },
          "name": "fromEcrRepository",
          "parameters": [
            {
              "docs": {
                "summary": "The ECR repository."
              },
              "name": "repository",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.IRepository"
              }
            },
            {
              "docs": {
                "summary": "Image tag (default \"latest\")."
              },
              "name": "tag",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Function that allows the build image access to the construct tree."
          },
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 131
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-codebuild.IBindableBuildImage",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "project",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.IProject"
              }
            },
            {
              "name": "_options",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.BuildImageBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BuildImageConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Make a buildspec to run the indicated script."
          },
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 156
          },
          "name": "runScriptBuildspec",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "parameters": [
            {
              "name": "entrypoint",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BuildSpec"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows the image a chance to validate whether the passed configuration is correct."
          },
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 146
          },
          "name": "validate",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "parameters": [
            {
              "name": "buildEnvironment",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.BuildEnvironment"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "LinuxGpuBuildImage",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "MXNet 1.4.1 GPU image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 71
          },
          "name": "DLC_MXNET_1_4_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "MXNet 1.6.0 GPU image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 74
          },
          "name": "DLC_MXNET_1_6_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "PyTorch 1.2.0 GPU image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 52
          },
          "name": "DLC_PYTORCH_1_2_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "PyTorch 1.3.1 GPU image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 55
          },
          "name": "DLC_PYTORCH_1_3_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "PyTorch 1.4.0 GPU inference image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 61
          },
          "name": "DLC_PYTORCH_1_4_0_INFERENCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "PyTorch 1.4.0 GPU training image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 58
          },
          "name": "DLC_PYTORCH_1_4_0_TRAINING",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "PyTorch 1.5.0 GPU inference image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 67
          },
          "name": "DLC_PYTORCH_1_5_0_INFERENCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "PyTorch 1.5.0 GPU training image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 64
          },
          "name": "DLC_PYTORCH_1_5_0_TRAINING",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Tensorflow 1.14.0 GPU image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 24
          },
          "name": "DLC_TENSORFLOW_1_14_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Tensorflow 1.15.0 GPU image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 27
          },
          "name": "DLC_TENSORFLOW_1_15_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Tensorflow 1.15.2 GPU inference image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 33
          },
          "name": "DLC_TENSORFLOW_1_15_2_INFERENCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Tensorflow 1.15.2 GPU training image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 30
          },
          "name": "DLC_TENSORFLOW_1_15_2_TRAINING",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Tensorflow 2.0.0 GPU image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 36
          },
          "name": "DLC_TENSORFLOW_2_0_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Tensorflow 2.0.1 GPU image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 39
          },
          "name": "DLC_TENSORFLOW_2_0_1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Tensorflow 2.1.0 GPU inference image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 45
          },
          "name": "DLC_TENSORFLOW_2_1_0_INFERENCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Tensorflow 2.1.0 GPU training image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 42
          },
          "name": "DLC_TENSORFLOW_2_1_0_TRAINING",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Tensorflow 2.2.0 GPU training image from AWS Deep Learning Containers."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 48
          },
          "name": "DLC_TENSORFLOW_2_2_0_TRAINING",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The default {@link ComputeType} to use with this image, if one was not specified in {@link BuildEnvironment#computeType} explicitly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 109
          },
          "name": "defaultComputeType",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ComputeType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Docker image identifier that the build environment uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 111
          },
          "name": "imageId",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of build environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 108
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of principal that CodeBuild will use to pull this build Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/linux-gpu-build-image.ts",
            "line": 110
          },
          "name": "imagePullPrincipalType",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ImagePullPrincipalType"
          }
        }
      ],
      "symbolId": "lib/linux-gpu-build-image:LinuxGpuBuildImage"
    },
    "@aws-cdk/aws-codebuild.LocalCacheMode": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "Local cache modes to enable for the CodeBuild Project.",
        "example": "new codebuild.Project(this, 'Project', {\n  source: codebuild.Source.gitHubEnterprise({\n    httpsCloneUrl: 'https://my-github-enterprise.com/owner/repo',\n  }),\n\n  // Enable Docker AND custom caching\n  cache: codebuild.Cache.local(codebuild.LocalCacheMode.DOCKER_LAYER, codebuild.LocalCacheMode.CUSTOM),\n\n  // BuildSpec with a 'cache' section necessary for 'CUSTOM' caching. This can\n  // also come from 'buildspec.yml' in your source.\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: ['...'],\n      },\n    },\n    cache: {\n      paths: [\n        // The '**/*' is required to indicate all files in this directory\n        '/root/cachedir/**/*',\n      ],\n    },\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.LocalCacheMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/cache.ts",
        "line": 16
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Caches Git metadata for primary and secondary sources."
          },
          "name": "SOURCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Caches existing Docker layers."
          },
          "name": "DOCKER_LAYER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Caches directories you specify in the buildspec file."
          },
          "name": "CUSTOM"
        }
      ],
      "name": "LocalCacheMode",
      "symbolId": "lib/cache:LocalCacheMode"
    },
    "@aws-cdk/aws-codebuild.LoggingOptions": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "remarks": "A project can create logs in Amazon CloudWatch Logs, an S3 bucket, or both.",
        "stability": "stable",
        "summary": "Information about logs for the build project.",
        "example": "new codebuild.Project(this, 'Project', {\n  logging: {\n    cloudWatch: {\n      logGroup: new logs.LogGroup(this, `MyLogGroup`),\n    }\n  },\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.LoggingOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project-logs.ts",
        "line": 64
      },
      "name": "LoggingOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- enabled",
            "stability": "stable",
            "summary": "Information about Amazon CloudWatch Logs for a build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project-logs.ts",
            "line": 77
          },
          "name": "cloudWatch",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.CloudWatchLoggingOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- disabled",
            "stability": "stable",
            "summary": "Information about logs built to an S3 bucket for a build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project-logs.ts",
            "line": 70
          },
          "name": "s3",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.S3LoggingOptions"
          }
        }
      ],
      "symbolId": "lib/project-logs:LoggingOptions"
    },
    "@aws-cdk/aws-codebuild.PhaseChangeEvent": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html#sample-build-notifications-ref",
        "stability": "stable",
        "summary": "Event fields for the CodeBuild \"phase change\" event."
      },
      "fqn": "@aws-cdk/aws-codebuild.PhaseChangeEvent",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/events.ts",
        "line": 43
      },
      "name": "PhaseChangeEvent",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the build is complete."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/events.ts",
            "line": 82
          },
          "name": "buildComplete",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The triggering build's id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/events.ts",
            "line": 54
          },
          "name": "buildId",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The phase that was just completed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/events.ts",
            "line": 61
          },
          "name": "completedPhase",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The duration of the completed phase."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/events.ts",
            "line": 75
          },
          "name": "completedPhaseDurationSeconds",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The status of the completed phase."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/events.ts",
            "line": 68
          },
          "name": "completedPhaseStatus",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The triggering build's project name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/events.ts",
            "line": 47
          },
          "name": "projectName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/events:PhaseChangeEvent"
    },
    "@aws-cdk/aws-codebuild.PipelineProject": {
      "assembly": "@aws-cdk/aws-codebuild",
      "base": "@aws-cdk/aws-codebuild.Project",
      "docs": {
        "stability": "stable",
        "summary": "A convenience class for CodeBuild Projects that are used in CodePipeline.",
        "example": "// Create a Cloudfront Web Distribution\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\ndeclare const distribution: cloudfront.Distribution;\n\n// Create the build project that will invalidate the cache\nconst invalidateBuildProject = new codebuild.PipelineProject(this, `InvalidateProject`, {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands:[\n          'aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths \"/*\"',\n          // Choose whatever files or paths you'd like, or all files as specified here\n        ],\n      },\n    },\n  }),\n  environmentVariables: {\n    CLOUDFRONT_ID: { value: distribution.distributionId },\n  },\n});\n\n// Add Cloudfront invalidation permissions to the project\nconst distributionArn = `arn:aws:cloudfront::${this.account}:distribution/${distribution.distributionId}`;\ninvalidateBuildProject.addToRolePolicy(new iam.PolicyStatement({\n  resources: [distributionArn],\n  actions: [\n    'cloudfront:CreateInvalidation',\n  ],\n}));\n\n// Create the pipeline (here only the S3 deploy and Invalidate cache build)\nconst deployBucket = new s3.Bucket(this, 'DeployBucket');\nconst deployInput = new codepipeline.Artifact();\nnew codepipeline.Pipeline(this, 'Pipeline', {\n  stages: [\n    // ...\n    {\n      stageName: 'Deploy',\n      actions: [\n        new codepipeline_actions.S3DeployAction({\n          actionName: 'S3Deploy',\n          bucket: deployBucket,\n          input: deployInput,\n          runOrder: 1,\n        }),\n        new codepipeline_actions.CodeBuildAction({\n          actionName: 'InvalidateCache',\n          project: invalidateBuildProject,\n          input: deployInput,\n          runOrder: 2,\n        }),\n      ],\n    },\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.PipelineProject",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/pipeline-project.ts",
          "line": 13
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.PipelineProjectProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/pipeline-project.ts",
        "line": 12
      },
      "name": "PipelineProject",
      "symbolId": "lib/pipeline-project:PipelineProject"
    },
    "@aws-cdk/aws-codebuild.PipelineProjectProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// Create a Cloudfront Web Distribution\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\ndeclare const distribution: cloudfront.Distribution;\n\n// Create the build project that will invalidate the cache\nconst invalidateBuildProject = new codebuild.PipelineProject(this, `InvalidateProject`, {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands:[\n          'aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths \"/*\"',\n          // Choose whatever files or paths you'd like, or all files as specified here\n        ],\n      },\n    },\n  }),\n  environmentVariables: {\n    CLOUDFRONT_ID: { value: distribution.distributionId },\n  },\n});\n\n// Add Cloudfront invalidation permissions to the project\nconst distributionArn = `arn:aws:cloudfront::${this.account}:distribution/${distribution.distributionId}`;\ninvalidateBuildProject.addToRolePolicy(new iam.PolicyStatement({\n  resources: [distributionArn],\n  actions: [\n    'cloudfront:CreateInvalidation',\n  ],\n}));\n\n// Create the pipeline (here only the S3 deploy and Invalidate cache build)\nconst deployBucket = new s3.Bucket(this, 'DeployBucket');\nconst deployInput = new codepipeline.Artifact();\nnew codepipeline.Pipeline(this, 'Pipeline', {\n  stages: [\n    // ...\n    {\n      stageName: 'Deploy',\n      actions: [\n        new codepipeline_actions.S3DeployAction({\n          actionName: 'S3Deploy',\n          bucket: deployBucket,\n          input: deployInput,\n          runOrder: 1,\n        }),\n        new codepipeline_actions.CodeBuildAction({\n          actionName: 'InvalidateCache',\n          project: invalidateBuildProject,\n          input: deployInput,\n          runOrder: 2,\n        }),\n      ],\n    },\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.PipelineProjectProps",
      "interfaces": [
        "@aws-cdk/aws-codebuild.CommonProjectProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/pipeline-project.ts",
        "line": 6
      },
      "name": "PipelineProjectProps",
      "symbolId": "lib/pipeline-project:PipelineProjectProps"
    },
    "@aws-cdk/aws-codebuild.Project": {
      "assembly": "@aws-cdk/aws-codebuild",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A representation of a CodeBuild Project.",
        "example": "declare const bucket: s3.Bucket;\n\nconst project = new codebuild.Project(this, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  artifacts: codebuild.Artifacts.s3({\n      bucket,\n      includeBuildId: false,\n      packageZip: true,\n      path: 'another/path',\n      identifier: 'AddArtifact1',\n    }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.Project",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/project.ts",
          "line": 1015
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.ProjectProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codebuild.IProject"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 751
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 753
          },
          "name": "fromProjectArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "projectArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IProject"
            }
          },
          "static": true
        },
        {
          "docs": {
            "custom": {
              "note": "if you're importing a CodeBuild Project for use\nin a CodePipeline, make sure the existing Project\nhas permissions to access the S3 Bucket of that Pipeline -\notherwise, builds in that Pipeline will always fail."
            },
            "returns": "a reference to the existing Project",
            "stability": "stable",
            "summary": "Import a Project defined either outside the CDK, or in a different CDK Stack (and exported using the {@link export} method)."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 789
          },
          "name": "fromProjectName",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical name of this Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the name of the project to import."
              },
              "name": "projectName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IProject"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "an array of {@link CfnProject.EnvironmentVariableProperty} instances",
            "stability": "stable",
            "summary": "Convert the environment variables map of string to {@link BuildEnvironmentVariable}, which is the customer-facing type, to a list of {@link CfnProject.EnvironmentVariableProperty}, which is the representation of environment variables in CloudFormation."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 823
          },
          "name": "serializeEnvVariables",
          "parameters": [
            {
              "docs": {
                "summary": "the map of string to environment variables."
              },
              "name": "environmentVariables",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-codebuild.BuildEnvironmentVariable"
                  },
                  "kind": "map"
                }
              }
            },
            {
              "docs": {
                "summary": "whether to throw an exception if any of the plain text environment variables contain secrets, defaults to 'false'."
              },
              "name": "validateNoPlainTextSecrets",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "name": "principal",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject.EnvironmentVariableProperty"
                },
                "kind": "array"
              }
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a fileSystemLocation to the Project."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1192
          },
          "name": "addFileSystemLocation",
          "parameters": [
            {
              "docs": {
                "summary": "the fileSystemLocation to add."
              },
              "name": "fileSystemLocation",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.IFileSystemLocation"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-multi-in-out.html",
            "stability": "stable",
            "summary": "Adds a secondary artifact to the Project."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1203
          },
          "name": "addSecondaryArtifact",
          "parameters": [
            {
              "docs": {
                "summary": "the artifact to add as a secondary artifact."
              },
              "name": "secondaryArtifact",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.IArtifacts"
              }
            }
          ]
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-multi-in-out.html",
            "stability": "stable",
            "summary": "Adds a secondary source to the Project."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1173
          },
          "name": "addSecondarySource",
          "parameters": [
            {
              "docs": {
                "summary": "the source to add as a secondary source."
              },
              "name": "secondarySource",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.ISource"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a permission only if there's a policy attached."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 288
          },
          "name": "addToRolePolicy",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "docs": {
                "summary": "The permissions statement to add."
              },
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns a source configuration for notification rule."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 507
          },
          "name": "bindAsNotificationRuleSource",
          "overrides": "@aws-cdk/aws-codestarnotifications.INotificationRuleSource",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleSourceConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A callback invoked when the given project is added to a CodePipeline."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1216
          },
          "name": "bindToCodePipeline",
          "parameters": [
            {
              "docs": {
                "summary": "the construct the binding is taking place in."
              },
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "docs": {
                "summary": "additional options for the binding."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.BindToCodePipelineOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Returns an object contining the batch service role if batch builds\ncould be enabled.",
            "stability": "stable",
            "summary": "Enable batch builds."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1146
          },
          "name": "enableBatchBuilds",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BatchBuildConfig"
            }
          }
        },
        {
          "docs": {
            "returns": "a CloudWatch metric associated with this build project.",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 411
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the metric."
              },
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Customization properties."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "remarks": "Units: Count\n\nValid CloudWatch statistics: Sum",
            "stability": "stable",
            "summary": "Measures the number of builds triggered."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 429
          },
          "name": "metricBuilds",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "average over 5 minutes",
            "remarks": "Units: Seconds\n\nValid CloudWatch statistics: Average (recommended), Maximum, Minimum",
            "stability": "stable",
            "summary": "Measures the duration of all builds over time."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 442
          },
          "name": "metricDuration",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "remarks": "Units: Count\n\nValid CloudWatch statistics: Sum",
            "stability": "stable",
            "summary": "Measures the number of builds that failed because of client error or because of a timeout."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 469
          },
          "name": "metricFailedBuilds",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "default": "sum over 5 minutes",
            "remarks": "Units: Count\n\nValid CloudWatch statistics: Sum",
            "stability": "stable",
            "summary": "Measures the number of successful builds."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 455
          },
          "name": "metricSucceededBuilds",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        },
        {
          "docs": {
            "remarks": "You can also use the methods `notifyOnBuildSucceeded` and\n`notifyOnBuildFailed` to define rules for these specific event emitted.",
            "stability": "stable",
            "summary": "Defines a CodeStar Notification rule triggered when the project events emitted by you specified, it very similar to `onEvent` API."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 473
          },
          "name": "notifyOn",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.ProjectNotifyOnOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines a CodeStar notification rule which triggers when a build fails."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 496
          },
          "name": "notifyOnBuildFailed",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines a CodeStar notification rule which triggers when a build completes successfully."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 485
          },
          "name": "notifyOnBuildSucceeded",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "docs": {
            "remarks": "To access fields from the event in the event target input,\nuse the static fields on the `StateChangeEvent` class.",
            "stability": "stable",
            "summary": "Defines an event rule which triggers when a build fails."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 380
          },
          "name": "onBuildFailed",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "remarks": "To access fields from the event in the event target input,\nuse the static fields on the `StateChangeEvent` class.",
            "stability": "stable",
            "summary": "Defines an event rule which triggers when a build starts."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 364
          },
          "name": "onBuildStarted",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "remarks": "To access fields from the event in the event target input,\nuse the static fields on the `StateChangeEvent` class.",
            "stability": "stable",
            "summary": "Defines an event rule which triggers when a build completes successfully."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 396
          },
          "name": "onBuildSucceeded",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html",
            "stability": "stable",
            "summary": "Defines a CloudWatch event rule triggered when something happens with this project."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 299
          },
          "name": "onEvent",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html",
            "stability": "stable",
            "summary": "Defines a CloudWatch event rule that triggers upon phase change of this build project."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 350
          },
          "name": "onPhaseChange",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "remarks": "You can filter specific build status events using an event\npattern filter on the `build-status` detail field:\n\n    const rule = project.onStateChange('OnBuildStarted', { target });\n    rule.addEventPattern({\n      detail: {\n        'build-status': [\n          \"IN_PROGRESS\",\n          \"SUCCEEDED\",\n          \"FAILED\",\n          \"STOPPED\"\n        ]\n      }\n    });\n\nYou can also use the methods `onBuildFailed` and `onBuildSucceeded` to define rules for\nthese specific state changes.\n\nTo access fields from the event in the event target input,\nuse the static fields on the `StateChangeEvent` class.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html",
            "stability": "stable",
            "summary": "Defines a CloudWatch event rule triggered when the build project state changes."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 336
          },
          "name": "onStateChange",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1235
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Project",
      "properties": [
        {
          "docs": {
            "remarks": "Will fail if this Project does not have a VPC set.",
            "stability": "stable",
            "summary": "Access the Connections object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 273
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 989
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 999
          },
          "name": "projectArn",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1004
          },
          "name": "projectName",
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM role for this project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 994
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IProject",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/project:Project"
    },
    "@aws-cdk/aws-codebuild.ProjectNotificationEvents": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "see": "https://docs.aws.amazon.com/dtconsole/latest/userguide/concepts.html#events-ref-buildproject",
        "stability": "stable",
        "summary": "The list of event types for AWS Codebuild."
      },
      "fqn": "@aws-cdk/aws-codebuild.ProjectNotificationEvents",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 2076
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when project build state failed."
          },
          "name": "BUILD_FAILED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when project build state succeeded."
          },
          "name": "BUILD_SUCCEEDED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when project build state in progress."
          },
          "name": "BUILD_IN_PROGRESS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when project build state stopped."
          },
          "name": "BUILD_STOPPED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when project build phase failure."
          },
          "name": "BUILD_PHASE_FAILED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when project build phase success."
          },
          "name": "BUILD_PHASE_SUCCEEDED"
        }
      ],
      "name": "ProjectNotificationEvents",
      "symbolId": "lib/project:ProjectNotificationEvents"
    },
    "@aws-cdk/aws-codebuild.ProjectNotifyOnOptions": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Additional options to pass to the notification rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nimport * as codestarnotifications from '@aws-cdk/aws-codestarnotifications';\nconst projectNotifyOnOptions: codebuild.ProjectNotifyOnOptions = {\n  events: [codebuild.ProjectNotificationEvents.BUILD_FAILED],\n\n  // the properties below are optional\n  detailType: codestarnotifications.DetailType.BASIC,\n  enabled: false,\n  notificationRuleName: 'notificationRuleName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.ProjectNotifyOnOptions",
      "interfaces": [
        "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 59
      },
      "name": "ProjectNotifyOnOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For a complete list of event types and IDs, see Notification concepts in the Developer Tools Console User Guide.",
            "see": "https://docs.aws.amazon.com/dtconsole/latest/userguide/concepts.html#concepts-api",
            "stability": "stable",
            "summary": "A list of event types associated with this notification rule for CodeBuild Project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 65
          },
          "name": "events",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.ProjectNotificationEvents"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/project:ProjectNotifyOnOptions"
    },
    "@aws-cdk/aws-codebuild.ProjectProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "declare const bucket: s3.Bucket;\n\nconst project = new codebuild.Project(this, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  artifacts: codebuild.Artifacts.s3({\n      bucket,\n      includeBuildId: false,\n      packageZip: true,\n      path: 'another/path',\n      identifier: 'AddArtifact1',\n    }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.ProjectProps",
      "interfaces": [
        "@aws-cdk/aws-codebuild.CommonProjectProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 701
      },
      "name": "ProjectProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "NoArtifacts",
            "remarks": "Could be: PipelineBuildArtifacts, NoArtifacts and S3Artifacts.",
            "stability": "stable",
            "summary": "Defines where build artifacts will be stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 717
          },
          "name": "artifacts",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IArtifacts"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No secondary artifacts.",
            "remarks": "Can also be added after the Project has been created by using the {@link Project#addSecondaryArtifact} method.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-multi-in-out.html",
            "stability": "stable",
            "summary": "The secondary artifacts for the Project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 735
          },
          "name": "secondaryArtifacts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.IArtifacts"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No secondary sources.",
            "remarks": "Can be also added after the Project has been created by using the {@link Project#addSecondarySource} method.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-multi-in-out.html",
            "stability": "stable",
            "summary": "The secondary sources for the Project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 726
          },
          "name": "secondarySources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.ISource"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- NoSource",
            "remarks": "*Note*: if {@link NoSource} is given as the source,\nthen you need to provide an explicit `buildSpec`.",
            "stability": "stable",
            "summary": "The source of the build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 709
          },
          "name": "source",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ISource"
          }
        }
      ],
      "symbolId": "lib/project:ProjectProps"
    },
    "@aws-cdk/aws-codebuild.ReportGroup": {
      "assembly": "@aws-cdk/aws-codebuild",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "The ReportGroup resource class.",
        "example": "declare const source: codebuild.Source;\n\n// create a new ReportGroup\nconst reportGroup = new codebuild.ReportGroup(this, 'ReportGroup');\n\nconst project = new codebuild.Project(this, 'Project', {\n  source,\n  buildSpec: codebuild.BuildSpec.fromObject({\n    // ...\n    reports: {\n      [reportGroup.reportGroupArn]: {\n        files: '**/*',\n        'base-directory': 'build/test-results',\n      },\n    },\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.ReportGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/report-group.ts",
          "line": 122
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.ReportGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codebuild.IReportGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/report-group.ts",
        "line": 101
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference an existing ReportGroup, defined outside of the CDK code, by name."
          },
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 108
          },
          "name": "fromReportGroupName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "reportGroupName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IReportGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grants the given entity permissions to write (that is, upload reports to) this report group."
          },
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 42
          },
          "name": "grantWrite",
          "overrides": "@aws-cdk/aws-codebuild.IReportGroup",
          "parameters": [
            {
              "name": "identity",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        }
      ],
      "name": "ReportGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the ReportGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 118
          },
          "name": "reportGroupArn",
          "overrides": "@aws-cdk/aws-codebuild.IReportGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the ReportGroup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 119
          },
          "name": "reportGroupName",
          "overrides": "@aws-cdk/aws-codebuild.IReportGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 120
          },
          "name": "exportBucket",
          "optional": true,
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        }
      ],
      "symbolId": "lib/report-group:ReportGroup"
    },
    "@aws-cdk/aws-codebuild.ReportGroupProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link ReportGroup}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const bucket: s3.Bucket;\nconst reportGroupProps: codebuild.ReportGroupProps = {\n  exportBucket: bucket,\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  reportGroupName: 'reportGroupName',\n  zipExport: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.ReportGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/report-group.ts",
        "line": 64
      },
      "name": "ReportGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- the reports will not be exported",
            "stability": "stable",
            "summary": "An optional S3 bucket to export the reports to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 77
          },
          "name": "exportBucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.RETAIN",
            "remarks": "As CodeBuild does not allow deleting a ResourceGroup that has reports inside of it,\nthis is set to retain the resource by default.",
            "stability": "stable",
            "summary": "What to do when this resource is deleted from a stack."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 95
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CloudFormation-generated name",
            "stability": "stable",
            "summary": "The physical name of the report group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 70
          },
          "name": "reportGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false (the files will not be ZIPped)",
            "remarks": "Ignored if {@link exportBucket} has not been provided.",
            "stability": "stable",
            "summary": "Whether to output the report files into the export bucket as-is, or create a ZIP from them before doing the export."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/report-group.ts",
            "line": 86
          },
          "name": "zipExport",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/report-group:ReportGroupProps"
    },
    "@aws-cdk/aws-codebuild.S3ArtifactsProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link S3Artifacts}.",
        "example": "declare const bucket: s3.Bucket;\n\nconst project = new codebuild.Project(this, 'MyProject', {\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n  }),\n  artifacts: codebuild.Artifacts.s3({\n      bucket,\n      includeBuildId: false,\n      packageZip: true,\n      path: 'another/path',\n      identifier: 'AddArtifact1',\n    }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.S3ArtifactsProps",
      "interfaces": [
        "@aws-cdk/aws-codebuild.ArtifactsProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/artifacts.ts",
        "line": 83
      },
      "name": "S3ArtifactsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the output bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 87
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true - output will be encrypted",
            "remarks": "This is useful if the artifact to publish a static website or sharing content with others",
            "stability": "stable",
            "summary": "If this is false, build output will not be encrypted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 133
          },
          "name": "encryption",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "If this is set to true,\nthen the build artifact will be stored in \"<path>/<build-id>/<name>\".",
            "stability": "stable",
            "summary": "Indicates if the build ID should be included in the path."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 117
          },
          "name": "includeBuildId",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "undefined, and use the name from the buildspec",
            "remarks": "The full S3 object key will be \"<path>/<build-id>/<name>\" or\n\"<path>/<name>\" depending on whether `includeBuildId` is set to true.\n\nIf not set, `overrideArtifactName` will be set and the name from the\nbuildspec will be used instead.",
            "stability": "stable",
            "summary": "The name of the build output ZIP file or folder inside the bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 109
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true - files will be archived",
            "stability": "stable",
            "summary": "If this is true, all build output will be packaged into a single .zip file. Otherwise, all files will be uploaded to <path>/<name>."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 125
          },
          "name": "packageZip",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the root of the bucket",
            "stability": "stable",
            "summary": "The path inside of the bucket for the build output .zip file or folder. If a value is not specified, then build output will be stored at the root of the bucket (or under the <build-id> directory if `includeBuildId` is set to true)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifacts.ts",
            "line": 96
          },
          "name": "path",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/artifacts:S3ArtifactsProps"
    },
    "@aws-cdk/aws-codebuild.S3LoggingOptions": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Information about logs built to an S3 bucket for a build project.",
        "example": "new codebuild.Project(this, 'Project', {\n  logging: {\n    s3: {\n      bucket: new s3.Bucket(this, `LogBucket`)\n    }\n  },\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.S3LoggingOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/project-logs.ts",
        "line": 7
      },
      "name": "S3LoggingOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The S3 Bucket to send logs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project-logs.ts",
            "line": 18
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "The current status of the logs in Amazon CloudWatch Logs for a build project."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project-logs.ts",
            "line": 32
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Encrypt the S3 build log output."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project-logs.ts",
            "line": 13
          },
          "name": "encrypted",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no prefix",
            "stability": "stable",
            "summary": "The path prefix for S3 logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project-logs.ts",
            "line": 25
          },
          "name": "prefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/project-logs:S3LoggingOptions"
    },
    "@aws-cdk/aws-codebuild.S3SourceProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link S3Source}.",
        "example": "const bucket = new s3.Bucket(this, 'MyBucket');\n\nnew codebuild.Project(this, 'MyProject', {\n  source: codebuild.Source.s3({\n    bucket: bucket,\n    path: 'path/to/file.zip',\n  }),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.S3SourceProps",
      "interfaces": [
        "@aws-cdk/aws-codebuild.SourceProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 611
      },
      "name": "S3SourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 612
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 613
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "latest",
            "stability": "stable",
            "summary": "The version ID of the object that represents the build input ZIP file to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 620
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/source:S3SourceProps"
    },
    "@aws-cdk/aws-codebuild.Source": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "Source provider definition for a CodeBuild Project.",
        "example": "const gitHubSource = codebuild.Source.gitHub({\n  owner: 'awslabs',\n  repo: 'aws-cdk',\n  webhook: true, // optional, default: true if `webhookFilters` were provided, false otherwise\n  webhookTriggersBatchBuild: true, // optional, default is false\n  webhookFilters: [\n    codebuild.FilterGroup\n      .inEventOf(codebuild.EventAction.PUSH)\n      .andBranchIs('master')\n      .andCommitMessageIs('the commit message'),\n  ], // optional, by default all pushes and Pull Requests will trigger a build\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.Source",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/source.ts",
          "line": 87
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.SourceProps"
            }
          }
        ],
        "protected": true
      },
      "interfaces": [
        "@aws-cdk/aws-codebuild.ISource"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 62
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 79
          },
          "name": "bitBucket",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.BitBucketSourceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.ISource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 67
          },
          "name": "codeCommit",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.CodeCommitSourceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.ISource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 71
          },
          "name": "gitHub",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.GitHubSourceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.ISource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 75
          },
          "name": "gitHubEnterprise",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.GitHubEnterpriseSourceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.ISource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 63
          },
          "name": "s3",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.S3SourceProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.ISource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example, it can grant permissions to the\ncode build project to read from the S3 bucket.",
            "stability": "stable",
            "summary": "Called by the project when the source is added so that the source can perform binding operations on the source."
          },
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 96
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-codebuild.ISource",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "_project",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.IProject"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.SourceConfig"
            }
          }
        }
      ],
      "name": "Source",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 85
          },
          "name": "badgeSupported",
          "overrides": "@aws-cdk/aws-codebuild.ISource",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 84
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-codebuild.ISource",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 83
          },
          "name": "identifier",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.ISource",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/source:Source"
    },
    "@aws-cdk/aws-codebuild.SourceConfig": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The type returned from {@link ISource#bind}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst sourceConfig: codebuild.SourceConfig = {\n  sourceProperty: {\n    type: 'type',\n\n    // the properties below are optional\n    auth: {\n      type: 'type',\n\n      // the properties below are optional\n      resource: 'resource',\n    },\n    buildSpec: 'buildSpec',\n    buildStatusConfig: {\n      context: 'context',\n      targetUrl: 'targetUrl',\n    },\n    gitCloneDepth: 123,\n    gitSubmodulesConfig: {\n      fetchSubmodules: false,\n    },\n    insecureSsl: false,\n    location: 'location',\n    reportBuildStatus: false,\n    sourceIdentifier: 'sourceIdentifier',\n  },\n\n  // the properties below are optional\n  buildTriggers: {\n    buildType: 'buildType',\n    filterGroups: [[{\n      pattern: 'pattern',\n      type: 'type',\n\n      // the properties below are optional\n      excludeMatchedPattern: false,\n    }]],\n    webhook: false,\n  },\n  sourceVersion: 'sourceVersion',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.SourceConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 21
      },
      "name": "SourceConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 22
          },
          "name": "sourceProperty",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.CfnProject.SourceProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 24
          },
          "name": "buildTriggers",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.CfnProject.ProjectTriggersProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the latest version",
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html#cfn-codebuild-project-sourceversion",
            "stability": "stable",
            "summary": "`AWS::CodeBuild::Project.SourceVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 31
          },
          "name": "sourceVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/source:SourceConfig"
    },
    "@aws-cdk/aws-codebuild.SourceProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties common to all Source classes.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nconst sourceProps: codebuild.SourceProps = {\n  identifier: 'identifier',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.SourceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/source.ts",
        "line": 51
      },
      "name": "SourceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This property is required on secondary sources.",
            "stability": "stable",
            "summary": "The source identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/source.ts",
            "line": 56
          },
          "name": "identifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/source:SourceProps"
    },
    "@aws-cdk/aws-codebuild.StateChangeEvent": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-build-notifications.html#sample-build-notifications-ref",
        "stability": "stable",
        "summary": "Event fields for the CodeBuild \"state change\" event."
      },
      "fqn": "@aws-cdk/aws-codebuild.StateChangeEvent",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/events.ts",
        "line": 8
      },
      "name": "StateChangeEvent",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the build id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/events.ts",
            "line": 26
          },
          "name": "buildId",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The triggering build's status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/events.ts",
            "line": 12
          },
          "name": "buildStatus",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/events.ts",
            "line": 30
          },
          "name": "currentPhase",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The triggering build's project name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/events.ts",
            "line": 19
          },
          "name": "projectName",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/events:StateChangeEvent"
    },
    "@aws-cdk/aws-codebuild.UntrustedCodeBoundaryPolicy": {
      "assembly": "@aws-cdk/aws-codebuild",
      "base": "@aws-cdk/aws-iam.ManagedPolicy",
      "docs": {
        "example": "declare const project: codebuild.Project;\niam.PermissionsBoundary.of(project).apply(new codebuild.UntrustedCodeBoundaryPolicy(this, 'Boundary'));",
        "remarks": "This class is a Policy, intended to be used as a Permissions Boundary\nfor a CodeBuild project. It allows most of the actions necessary to run\nthe CodeBuild project, but disallows reading from Parameter Store\nand Secrets Manager.\n\nUse this when your CodeBuild project is running untrusted code (for\nexample, if you are using one to automatically build Pull Requests\nthat anyone can submit), and you want to prevent your future self\nfrom accidentally exposing Secrets to this build.\n\n(The reason you might want to do this is because otherwise anyone\nwho can submit a Pull Request to your project can write a script\nto email those secrets to themselves).",
        "stability": "stable",
        "summary": "Permissions Boundary for a CodeBuild Project running untrusted code."
      },
      "fqn": "@aws-cdk/aws-codebuild.UntrustedCodeBoundaryPolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/untrusted-code-boundary-policy.ts",
          "line": 46
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.UntrustedCodeBoundaryPolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/untrusted-code-boundary-policy.ts",
        "line": 45
      },
      "name": "UntrustedCodeBoundaryPolicy",
      "symbolId": "lib/untrusted-code-boundary-policy:UntrustedCodeBoundaryPolicy"
    },
    "@aws-cdk/aws-codebuild.UntrustedCodeBoundaryPolicyProps": {
      "assembly": "@aws-cdk/aws-codebuild",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for UntrustedCodeBoundaryPolicy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codebuild from '@aws-cdk/aws-codebuild';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const policyStatement: iam.PolicyStatement;\nconst untrustedCodeBoundaryPolicyProps: codebuild.UntrustedCodeBoundaryPolicyProps = {\n  additionalStatements: [policyStatement],\n  managedPolicyName: 'managedPolicyName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.UntrustedCodeBoundaryPolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/untrusted-code-boundary-policy.ts",
        "line": 7
      },
      "name": "UntrustedCodeBoundaryPolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No additional statements",
            "stability": "stable",
            "summary": "Additional statements to add to the default set of statements."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/untrusted-code-boundary-policy.ts",
            "line": 20
          },
          "name": "additionalStatements",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A name is automatically generated.",
            "stability": "stable",
            "summary": "The name of the managed policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/untrusted-code-boundary-policy.ts",
            "line": 13
          },
          "name": "managedPolicyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/untrusted-code-boundary-policy:UntrustedCodeBoundaryPolicyProps"
    },
    "@aws-cdk/aws-codebuild.WindowsBuildImage": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "remarks": "This class has a bunch of public constants that represent the most popular images.\n\nYou can also specify a custom image using one of the static methods:\n\n- WindowsBuildImage.fromDockerRegistry(image[, { secretsManagerCredentials }, imageType])\n- WindowsBuildImage.fromEcrRepository(repo[, tag, imageType])\n- WindowsBuildImage.fromAsset(parent, id, props, [, imageType])",
        "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html",
        "stability": "stable",
        "summary": "A CodeBuild image running Windows.",
        "example": "declare const ecrRepository: ecr.Repository;\n\nnew codebuild.Project(this, 'Project', {\n  environment: {\n    buildImage: codebuild.WindowsBuildImage.fromEcrRepository(ecrRepository, 'v1.0', codebuild.WindowsImageType.SERVER_2019),\n    // optional certificate to include in the build image\n    certificate: {\n      bucket: s3.Bucket.fromBucketName(this, 'Bucket', 'my-bucket'),\n      objectKey: 'path/to/cert.pem',\n    },\n  },\n  // ...\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.WindowsBuildImage",
      "interfaces": [
        "@aws-cdk/aws-codebuild.IBuildImage"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1899
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Uses an Docker image asset as a Windows build image."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1972
          },
          "name": "fromAsset",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecr-assets.DockerImageAssetProps"
              }
            },
            {
              "name": "imageType",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.WindowsImageType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "a Windows build image from a Docker Hub image.",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1932
          },
          "name": "fromDockerRegistry",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.DockerImageOptions"
              }
            },
            {
              "name": "imageType",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.WindowsImageType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "A Windows build image from an ECR repository.\n\nNOTE: if the repository is external (i.e. imported), then we won't be able to add\na resource policy statement for it so CodeBuild can pull the image.",
            "see": "https://docs.aws.amazon.com/codebuild/latest/userguide/sample-ecr.html",
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1956
          },
          "name": "fromEcrRepository",
          "parameters": [
            {
              "docs": {
                "summary": "The ECR repository."
              },
              "name": "repository",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.IRepository"
              }
            },
            {
              "docs": {
                "summary": "Image tag or digest (default \"latest\", digests must start with `sha256:`)."
              },
              "name": "tagOrDigest",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "imageType",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.WindowsImageType"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Make a buildspec to run the indicated script."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 2010
          },
          "name": "runScriptBuildspec",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "parameters": [
            {
              "name": "entrypoint",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codebuild.BuildSpec"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows the image a chance to validate whether the passed configuration is correct."
          },
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 2002
          },
          "name": "validate",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "parameters": [
            {
              "name": "buildEnvironment",
              "type": {
                "fqn": "@aws-cdk/aws-codebuild.BuildEnvironment"
              }
            }
          ],
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "WindowsBuildImage",
      "properties": [
        {
          "const": true,
          "docs": {
            "deprecated": "`WindowsBuildImage.WINDOWS_BASE_2_0` should be used instead.",
            "stability": "deprecated",
            "summary": "Corresponds to the standard CodeBuild image `aws/codebuild/windows-base:1.0`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1905
          },
          "name": "WIN_SERVER_CORE_2016_BASE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The standard CodeBuild image `aws/codebuild/windows-base:2019-1.0`, which is based off Windows Server Core 2019."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1923
          },
          "name": "WIN_SERVER_CORE_2019_BASE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The standard CodeBuild image `aws/codebuild/windows-base:2.0`, which is based off Windows Server Core 2016."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1914
          },
          "name": "WINDOWS_BASE_2_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IBuildImage"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The default {@link ComputeType} to use with this image, if one was not specified in {@link BuildEnvironment#computeType} explicitly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1988
          },
          "name": "defaultComputeType",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ComputeType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Docker image identifier that the build environment uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1989
          },
          "name": "imageId",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of build environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1987
          },
          "name": "type",
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The type of principal that CodeBuild will use to pull this build Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1990
          },
          "name": "imagePullPrincipalType",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.ImagePullPrincipalType"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "An optional ECR repository that the image is hosted in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1992
          },
          "name": "repository",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-ecr.IRepository"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The secretsManagerCredentials for access to a private registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/project.ts",
            "line": 1991
          },
          "name": "secretsManagerCredentials",
          "optional": true,
          "overrides": "@aws-cdk/aws-codebuild.IBuildImage",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ],
      "symbolId": "lib/project:WindowsBuildImage"
    },
    "@aws-cdk/aws-codebuild.WindowsImageType": {
      "assembly": "@aws-cdk/aws-codebuild",
      "docs": {
        "stability": "stable",
        "summary": "Environment type for Windows Docker images.",
        "example": "declare const ecrRepository: ecr.Repository;\n\nnew codebuild.Project(this, 'Project', {\n  environment: {\n    buildImage: codebuild.WindowsBuildImage.fromEcrRepository(ecrRepository, 'v1.0', codebuild.WindowsImageType.SERVER_2019),\n    // optional certificate to include in the build image\n    certificate: {\n      bucket: s3.Bucket.fromBucketName(this, 'Bucket', 'my-bucket'),\n      objectKey: 'path/to/cert.pem',\n    },\n  },\n  // ...\n})",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codebuild.WindowsImageType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/project.ts",
        "line": 1862
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The standard environment type, WINDOWS_CONTAINER."
          },
          "name": "STANDARD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The WINDOWS_SERVER_2019_CONTAINER environment type."
          },
          "name": "SERVER_2019"
        }
      ],
      "name": "WindowsImageType",
      "symbolId": "lib/project:WindowsImageType"
    }
  },
  "version": "1.193.0",
  "fingerprint": "**********"
}