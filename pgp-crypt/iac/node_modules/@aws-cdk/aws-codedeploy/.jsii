{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-autoscaling": "1.193.0",
    "@aws-cdk/aws-cloudwatch": "1.193.0",
    "@aws-cdk/aws-ec2": "1.193.0",
    "@aws-cdk/aws-elasticloadbalancing": "1.193.0",
    "@aws-cdk/aws-elasticloadbalancingv2": "1.193.0",
    "@aws-cdk/aws-iam": "1.193.0",
    "@aws-cdk/aws-lambda": "1.193.0",
    "@aws-cdk/aws-s3": "1.193.0",
    "@aws-cdk/core": "1.193.0",
    "@aws-cdk/custom-resources": "1.193.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-acmpca": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ACMPCA",
          "packageId": "Amazon.CDK.AWS.ACMPCA"
        },
        "java": {
          "maven": {
            "artifactId": "acmpca",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.acmpca"
        },
        "js": {
          "npm": "@aws-cdk/aws-acmpca"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-acmpca",
          "module": "aws_cdk.aws_acmpca"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling",
          "packageId": "Amazon.CDK.AWS.AutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling",
          "module": "aws_cdk.aws_autoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::CodeDeploy",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "codedeploy"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-codedeploy",
  "readme": {
    "markdown": "# AWS CodeDeploy Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nAWS CodeDeploy is a deployment service that automates application deployments to\nAmazon EC2 instances, on-premises instances, serverless Lambda functions, or\nAmazon ECS services.\n\nThe CDK currently supports Amazon EC2, on-premise and AWS Lambda applications.\n\n## EC2/on-premise Applications\n\nTo create a new CodeDeploy Application that deploys to EC2/on-premise instances:\n\n```ts\nconst application = new codedeploy.ServerApplication(this, 'CodeDeployApplication', {\n  applicationName: 'MyApplication', // optional property\n});\n```\n\nTo import an already existing Application:\n\n```ts\nconst application = codedeploy.ServerApplication.fromServerApplicationName(\n  this,\n  'ExistingCodeDeployApplication',\n  'MyExistingApplication',\n);\n```\n\n## EC2/on-premise Deployment Groups\n\nTo create a new CodeDeploy Deployment Group that deploys to EC2/on-premise instances:\n\n```ts\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\ndeclare const application: codedeploy.ServerApplication;\ndeclare const asg: autoscaling.AutoScalingGroup;\ndeclare const alarm: cloudwatch.Alarm;\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'CodeDeployDeploymentGroup', {\n  application,\n  deploymentGroupName: 'MyDeploymentGroup',\n  autoScalingGroups: [asg],\n  // adds User Data that installs the CodeDeploy agent on your auto-scaling groups hosts\n  // default: true\n  installAgent: true,\n  // adds EC2 instances matching tags\n  ec2InstanceTags: new codedeploy.InstanceTagSet(\n    {\n      // any instance with tags satisfying\n      // key1=v1 or key1=v2 or key2 (any value) or value v3 (any key)\n      // will match this group\n      'key1': ['v1', 'v2'],\n      'key2': [],\n      '': ['v3'],\n    },\n  ),\n  // adds on-premise instances matching tags\n  onPremiseInstanceTags: new codedeploy.InstanceTagSet(\n    // only instances with tags (key1=v1 or key1=v2) AND key2=v3 will match this set\n    {\n      'key1': ['v1', 'v2'],\n    },\n    {\n      'key2': ['v3'],\n    },\n  ),\n  // CloudWatch alarms\n  alarms: [alarm],\n  // whether to ignore failure to fetch the status of alarms from CloudWatch\n  // default: false\n  ignorePollAlarmsFailure: false,\n  // auto-rollback configuration\n  autoRollback: {\n    failedDeployment: true, // default: true\n    stoppedDeployment: true, // default: false\n    deploymentInAlarm: true, // default: true if you provided any alarms, false otherwise\n  },\n});\n```\n\nAll properties are optional - if you don't provide an Application,\none will be automatically created.\n\nTo import an already existing Deployment Group:\n\n```ts\ndeclare const application: codedeploy.ServerApplication;\nconst deploymentGroup = codedeploy.ServerDeploymentGroup.fromServerDeploymentGroupAttributes(\n  this,\n  'ExistingCodeDeployDeploymentGroup', {\n    application,\n    deploymentGroupName: 'MyExistingDeploymentGroup',\n  },\n);\n```\n\n### Load balancers\n\nYou can [specify a load balancer](https://docs.aws.amazon.com/codedeploy/latest/userguide/integrations-aws-elastic-load-balancing.html)\nwith the `loadBalancer` property when creating a Deployment Group.\n\n`LoadBalancer` is an abstract class with static factory methods that allow you to create instances of it from various sources.\n\nWith Classic Elastic Load Balancer, you provide it directly:\n\n```ts\nimport * as elb from '@aws-cdk/aws-elasticloadbalancing';\n\ndeclare const lb: elb.LoadBalancer;\nlb.addListener({\n  externalPort: 80,\n});\n\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'DeploymentGroup', {\n  loadBalancer: codedeploy.LoadBalancer.classic(lb),\n});\n```\n\nWith Application Load Balancer or Network Load Balancer,\nyou provide a Target Group as the load balancer:\n\n```ts\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const alb: elbv2.ApplicationLoadBalancer;\nconst listener = alb.addListener('Listener', { port: 80 });\nconst targetGroup = listener.addTargets('Fleet', { port: 80 });\n\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'DeploymentGroup', {\n  loadBalancer: codedeploy.LoadBalancer.application(targetGroup),\n});\n```\n\n## Deployment Configurations\n\nYou can also pass a Deployment Configuration when creating the Deployment Group:\n\n```ts\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'CodeDeployDeploymentGroup', {\n  deploymentConfig: codedeploy.ServerDeploymentConfig.ALL_AT_ONCE,\n});\n```\n\nThe default Deployment Configuration is `ServerDeploymentConfig.ONE_AT_A_TIME`.\n\nYou can also create a custom Deployment Configuration:\n\n```ts\nconst deploymentConfig = new codedeploy.ServerDeploymentConfig(this, 'DeploymentConfiguration', {\n  deploymentConfigName: 'MyDeploymentConfiguration', // optional property\n  // one of these is required, but both cannot be specified at the same time\n  minimumHealthyHosts: codedeploy.MinimumHealthyHosts.count(2),\n  // minimumHealthyHosts: codedeploy.MinimumHealthyHosts.percentage(75),\n});\n```\n\nOr import an existing one:\n\n```ts\nconst deploymentConfig = codedeploy.ServerDeploymentConfig.fromServerDeploymentConfigName(\n  this,\n  'ExistingDeploymentConfiguration',\n  'MyExistingDeploymentConfiguration',\n);\n```\n\n## Lambda Applications\n\nTo create a new CodeDeploy Application that deploys to a Lambda function:\n\n```ts\nconst application = new codedeploy.LambdaApplication(this, 'CodeDeployApplication', {\n  applicationName: 'MyApplication', // optional property\n});\n```\n\nTo import an already existing Application:\n\n```ts\nconst application = codedeploy.LambdaApplication.fromLambdaApplicationName(\n  this,\n  'ExistingCodeDeployApplication',\n  'MyExistingApplication',\n);\n```\n\n## Lambda Deployment Groups\n\nTo enable traffic shifting deployments for Lambda functions, CodeDeploy uses Lambda Aliases, which can balance incoming traffic between two different versions of your function.\nBefore deployment, the alias sends 100% of invokes to the version used in production.\nWhen you publish a new version of the function to your stack, CodeDeploy will send a small percentage of traffic to the new version, monitor, and validate before shifting 100% of traffic to the new version.\n\nTo create a new CodeDeploy Deployment Group that deploys to a Lambda function:\n\n```ts\ndeclare const myApplication: codedeploy.LambdaApplication;\ndeclare const func: lambda.Function;\nconst version = func.currentVersion;\nconst version1Alias = new lambda.Alias(this, 'alias', {\n  aliasName: 'prod',\n  version,\n});\n\nconst deploymentGroup = new codedeploy.LambdaDeploymentGroup(this, 'BlueGreenDeployment', {\n  application: myApplication, // optional property: one will be created for you if not provided\n  alias: version1Alias,\n  deploymentConfig: codedeploy.LambdaDeploymentConfig.LINEAR_10PERCENT_EVERY_1MINUTE,\n});\n```\n\nIn order to deploy a new version of this function:\n\n1. Reference the version with the latest changes `const version = func.currentVersion`.\n2. Re-deploy the stack (this will trigger a deployment).\n3. Monitor the CodeDeploy deployment as traffic shifts between the versions.\n\n\n### Create a custom Deployment Config\n\nCodeDeploy for Lambda comes with built-in configurations for traffic shifting.\nIf you want to specify your own strategy,\nyou can do so with the CustomLambdaDeploymentConfig construct,\nletting you specify precisely how fast a new function version is deployed.\n\n```ts\nconst config = new codedeploy.CustomLambdaDeploymentConfig(this, 'CustomConfig', {\n  type: codedeploy.CustomLambdaDeploymentConfigType.CANARY,\n  interval: Duration.minutes(1),\n  percentage: 5,\n});\n\ndeclare const application: codedeploy.LambdaApplication;\ndeclare const alias: lambda.Alias;\nconst deploymentGroup = new codedeploy.LambdaDeploymentGroup(this, 'BlueGreenDeployment', {\n  application,\n  alias,\n  deploymentConfig: config,\n});\n```\n\nYou can specify a custom name for your deployment config, but if you do you will not be able to update the interval/percentage through CDK.\n\n```ts\nconst config = new codedeploy.CustomLambdaDeploymentConfig(this, 'CustomConfig', {\n  type: codedeploy.CustomLambdaDeploymentConfigType.CANARY,\n  interval: Duration.minutes(1),\n  percentage: 5,\n  deploymentConfigName: 'MyDeploymentConfig',\n});\n```\n\n### Rollbacks and Alarms\n\nCodeDeploy will roll back if the deployment fails. You can optionally trigger a rollback when one or more alarms are in a failed state:\n\n```ts\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\ndeclare const alias: lambda.Alias;\nconst alarm = new cloudwatch.Alarm(this, 'Errors', {\n  comparisonOperator: cloudwatch.ComparisonOperator.GREATER_THAN_THRESHOLD,\n  threshold: 1,\n  evaluationPeriods: 1,\n  metric: alias.metricErrors(),\n});\nconst deploymentGroup = new codedeploy.LambdaDeploymentGroup(this, 'BlueGreenDeployment', {\n  alias,\n  deploymentConfig: codedeploy.LambdaDeploymentConfig.LINEAR_10PERCENT_EVERY_1MINUTE,\n  alarms: [\n    // pass some alarms when constructing the deployment group\n    alarm,\n  ],\n});\n\n// or add alarms to an existing group\ndeclare const blueGreenAlias: lambda.Alias;\ndeploymentGroup.addAlarm(new cloudwatch.Alarm(this, 'BlueGreenErrors', {\n  comparisonOperator: cloudwatch.ComparisonOperator.GREATER_THAN_THRESHOLD,\n  threshold: 1,\n  evaluationPeriods: 1,\n  metric: blueGreenAlias.metricErrors(),\n}));\n```\n\n### Pre and Post Hooks\n\nCodeDeploy allows you to run an arbitrary Lambda function before traffic shifting actually starts (PreTraffic Hook) and after it completes (PostTraffic Hook).\nWith either hook, you have the opportunity to run logic that determines whether the deployment must succeed or fail.\nFor example, with PreTraffic hook you could run integration tests against the newly created Lambda version (but not serving traffic). With PostTraffic hook, you could run end-to-end validation checks.\n\n```ts\ndeclare const warmUpUserCache: lambda.Function;\ndeclare const endToEndValidation: lambda.Function;\ndeclare const alias: lambda.Alias;\n\n// pass a hook whe creating the deployment group\nconst deploymentGroup = new codedeploy.LambdaDeploymentGroup(this, 'BlueGreenDeployment', {\n  alias: alias,\n  deploymentConfig: codedeploy.LambdaDeploymentConfig.LINEAR_10PERCENT_EVERY_1MINUTE,\n  preHook: warmUpUserCache,\n});\n\n// or configure one on an existing deployment group\ndeploymentGroup.addPostHook(endToEndValidation);\n```\n\n### Import an existing Deployment Group\n\nTo import an already existing Deployment Group:\n\n```ts\ndeclare const application: codedeploy.LambdaApplication;\nconst deploymentGroup = codedeploy.LambdaDeploymentGroup.fromLambdaDeploymentGroupAttributes(this, 'ExistingCodeDeployDeploymentGroup', {\n  application,\n  deploymentGroupName: 'MyExistingDeploymentGroup',\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-codedeploy",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CodeDeploy",
      "packageId": "Amazon.CDK.AWS.CodeDeploy"
    },
    "java": {
      "maven": {
        "artifactId": "codedeploy",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.codedeploy"
    },
    "js": {
      "npm": "@aws-cdk/aws-codedeploy"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-codedeploy",
      "module": "aws_cdk.aws_codedeploy"
    }
  },
  "types": {
    "@aws-cdk/aws-codedeploy.AutoRollbackConfig": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The configuration for automatically rolling back deployments in a given Deployment Group.",
        "example": "import * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\ndeclare const application: codedeploy.ServerApplication;\ndeclare const asg: autoscaling.AutoScalingGroup;\ndeclare const alarm: cloudwatch.Alarm;\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'CodeDeployDeploymentGroup', {\n  application,\n  deploymentGroupName: 'MyDeploymentGroup',\n  autoScalingGroups: [asg],\n  // adds User Data that installs the CodeDeploy agent on your auto-scaling groups hosts\n  // default: true\n  installAgent: true,\n  // adds EC2 instances matching tags\n  ec2InstanceTags: new codedeploy.InstanceTagSet(\n    {\n      // any instance with tags satisfying\n      // key1=v1 or key1=v2 or key2 (any value) or value v3 (any key)\n      // will match this group\n      'key1': ['v1', 'v2'],\n      'key2': [],\n      '': ['v3'],\n    },\n  ),\n  // adds on-premise instances matching tags\n  onPremiseInstanceTags: new codedeploy.InstanceTagSet(\n    // only instances with tags (key1=v1 or key1=v2) AND key2=v3 will match this set\n    {\n      'key1': ['v1', 'v2'],\n    },\n    {\n      'key2': ['v3'],\n    },\n  ),\n  // CloudWatch alarms\n  alarms: [alarm],\n  // whether to ignore failure to fetch the status of alarms from CloudWatch\n  // default: false\n  ignorePollAlarmsFailure: false,\n  // auto-rollback configuration\n  autoRollback: {\n    failedDeployment: true, // default: true\n    stoppedDeployment: true, // default: false\n    deploymentInAlarm: true, // default: true if you provided any alarms, false otherwise\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.AutoRollbackConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rollback-config.ts",
        "line": 4
      },
      "name": "AutoRollbackConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "true if you've provided any Alarms with the `alarms` property, false otherwise",
            "stability": "stable",
            "summary": "Whether to automatically roll back a deployment during which one of the configured CloudWatch alarms for this Deployment Group went off."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rollback-config.ts",
            "line": 25
          },
          "name": "deploymentInAlarm",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to automatically roll back a deployment that fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rollback-config.ts",
            "line": 10
          },
          "name": "failedDeployment",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to automatically roll back a deployment that was manually stopped."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rollback-config.ts",
            "line": 17
          },
          "name": "stoppedDeployment",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/rollback-config:AutoRollbackConfig"
    },
    "@aws-cdk/aws-codedeploy.CfnApplication": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CodeDeploy::Application",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::CodeDeploy::Application` resource creates an AWS CodeDeploy application. In CodeDeploy , an application is a name that functions as a container to ensure that the correct combination of revision, deployment configuration, and deployment group are referenced during a deployment. You can use the `AWS::CodeDeploy::DeploymentGroup` resource to associate the application with a CodeDeploy deployment group. For more information, see [CodeDeploy Deployments](https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-steps.html) in the *AWS CodeDeploy User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CodeDeploy::Application`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst cfnApplication = new codedeploy.CfnApplication(this, 'MyCfnApplication', /* all optional props */ {\n  applicationName: 'applicationName',\n  computePlatform: 'computePlatform',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnApplication",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CodeDeploy::Application`."
        },
        "locationInModule": {
          "filename": "lib/codedeploy.generated.ts",
          "line": 161
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.CfnApplicationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 106
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 175
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 188
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnApplication",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 110
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 180
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-tags"
            },
            "remarks": "Each tag consists of a key and an optional value, both of which you define.",
            "stability": "external",
            "summary": "The metadata that you apply to CodeDeploy applications to help you organize and categorize them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 152
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-applicationname"
            },
            "remarks": "If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the application name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .\n\n> Updates to `ApplicationName` are not supported.",
            "stability": "external",
            "summary": "A name for the application."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 138
          },
          "name": "applicationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-computeplatform"
            },
            "stability": "external",
            "summary": "The compute platform that CodeDeploy deploys the application to."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 145
          },
          "name": "computePlatform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnApplication"
    },
    "@aws-cdk/aws-codedeploy.CfnApplicationProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnApplication`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst cfnApplicationProps: codedeploy.CfnApplicationProps = {\n  applicationName: 'applicationName',\n  computePlatform: 'computePlatform',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnApplicationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 19
      },
      "name": "CfnApplicationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-applicationname"
            },
            "remarks": "If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the application name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .\n\n> Updates to `ApplicationName` are not supported.",
            "stability": "external",
            "summary": "A name for the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 28
          },
          "name": "applicationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-computeplatform"
            },
            "stability": "external",
            "summary": "The compute platform that CodeDeploy deploys the application to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 35
          },
          "name": "computePlatform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-application.html#cfn-codedeploy-application-tags"
            },
            "remarks": "Each tag consists of a key and an optional value, both of which you define.",
            "stability": "external",
            "summary": "The metadata that you apply to CodeDeploy applications to help you organize and categorize them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 42
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnApplicationProps"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentConfig": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CodeDeploy::DeploymentConfig",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::CodeDeploy::DeploymentConfig` resource creates a set of deployment rules, deployment success conditions, and deployment failure conditions that AWS CodeDeploy uses during a deployment. The deployment configuration specifies, through the use of a `MinimumHealthyHosts` value, the number or percentage of instances that must remain available at any time during a deployment.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CodeDeploy::DeploymentConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst cfnDeploymentConfig = new codedeploy.CfnDeploymentConfig(this, 'MyCfnDeploymentConfig', /* all optional props */ {\n  computePlatform: 'computePlatform',\n  deploymentConfigName: 'deploymentConfigName',\n  minimumHealthyHosts: {\n    type: 'type',\n    value: 123,\n  },\n  trafficRoutingConfig: {\n    type: 'type',\n\n    // the properties below are optional\n    timeBasedCanary: {\n      canaryInterval: 123,\n      canaryPercentage: 123,\n    },\n    timeBasedLinear: {\n      linearInterval: 123,\n      linearPercentage: 123,\n    },\n  },\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CodeDeploy::DeploymentConfig`."
        },
        "locationInModule": {
          "filename": "lib/codedeploy.generated.ts",
          "line": 382
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 309
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 397
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 411
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDeploymentConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 313
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 402
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-computeplatform"
            },
            "stability": "external",
            "summary": "The destination platform type for the deployment ( `Lambda` , `Server` , or `ECS` )."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 339
          },
          "name": "computePlatform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-deploymentconfigname"
            },
            "remarks": "If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the deployment configuration name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .\n\n> If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
            "stability": "external",
            "summary": "A name for the deployment configuration."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 348
          },
          "name": "deploymentConfigName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts"
            },
            "remarks": "There are two parameters expected in the input: type and value.\n\nThe type parameter takes either of the following values:\n\n- HOST_COUNT: The value parameter represents the minimum number of healthy instances as an absolute value.\n- FLEET_PERCENT: The value parameter represents the minimum number of healthy instances as a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.\n\nThe value parameter takes an integer.\n\nFor example, to set a minimum of 95% healthy instance, specify a type of FLEET_PERCENT and a value of 95.\n\nFor more information about instance health, see [CodeDeploy Instance Health](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-health.html) in the AWS CodeDeploy User Guide.",
            "stability": "external",
            "summary": "The minimum number of healthy instances that should be available at any time during the deployment."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 366
          },
          "name": "minimumHealthyHosts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.MinimumHealthyHostsProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-trafficroutingconfig"
            },
            "stability": "external",
            "summary": "The configuration that specifies how the deployment traffic is routed."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 373
          },
          "name": "trafficRoutingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.TrafficRoutingConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentConfig"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.MinimumHealthyHostsProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`MinimumHealthyHosts` is a property of the [DeploymentConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html) resource that defines how many instances must remain healthy during an AWS CodeDeploy deployment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst minimumHealthyHostsProperty: codedeploy.CfnDeploymentConfig.MinimumHealthyHostsProperty = {\n  type: 'type',\n  value: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.MinimumHealthyHostsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 425
      },
      "name": "MinimumHealthyHostsProperty",
      "namespace": "CfnDeploymentConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts-type"
            },
            "remarks": "- HOST_COUNT: The minimum number of healthy instance as an absolute value.\n- FLEET_PERCENT: The minimum number of healthy instance as a percentage of the total number of instance in the deployment.\n\nIn an example of nine instance, if a HOST_COUNT of six is specified, deploy to up to three instances at a time. The deployment is successful if six or more instances are deployed to successfully. Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is specified, deploy to up to five instance at a time. The deployment is successful if four or more instance are deployed to successfully. Otherwise, the deployment fails.\n\n> In a call to `GetDeploymentConfig` , CodeDeployDefault.OneAtATime returns a minimum healthy instance type of MOST_CONCURRENCY and a value of 1. This means a deployment to only one instance at a time. (You cannot set the type to MOST_CONCURRENCY, only to HOST_COUNT or FLEET_PERCENT.) In addition, with CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that all instances but one are kept in a healthy state during the deployment. Although this allows one instance at a time to be taken offline for a new deployment, it also means that if the deployment to the last instance fails, the overall deployment is still successful.\n\nFor more information, see [AWS CodeDeploy Instance Health](https://docs.aws.amazon.com//codedeploy/latest/userguide/instances-health.html) in the *AWS CodeDeploy User Guide* .",
            "stability": "external",
            "summary": "The minimum healthy instance type:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 440
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-minimumhealthyhosts.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts-value"
            },
            "stability": "external",
            "summary": "The minimum healthy instance value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 446
          },
          "name": "value",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentConfig.MinimumHealthyHostsProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.TimeBasedCanaryProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedcanary.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The original and target Lambda function versions or ECS task sets are specified in the deployment's AppSpec file.",
        "stability": "external",
        "summary": "A configuration that shifts traffic from one version of a Lambda function or Amazon ECS task set to another in two increments.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst timeBasedCanaryProperty: codedeploy.CfnDeploymentConfig.TimeBasedCanaryProperty = {\n  canaryInterval: 123,\n  canaryPercentage: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.TimeBasedCanaryProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 512
      },
      "name": "TimeBasedCanaryProperty",
      "namespace": "CfnDeploymentConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedcanary.html#cfn-codedeploy-deploymentconfig-timebasedcanary-canaryinterval"
            },
            "stability": "external",
            "summary": "The number of minutes between the first and second traffic shifts of a `TimeBasedCanary` deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 518
          },
          "name": "canaryInterval",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedcanary.html#cfn-codedeploy-deploymentconfig-timebasedcanary-canarypercentage"
            },
            "stability": "external",
            "summary": "The percentage of traffic to shift in the first increment of a `TimeBasedCanary` deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 524
          },
          "name": "canaryPercentage",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentConfig.TimeBasedCanaryProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.TimeBasedLinearProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedlinear.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The original and target Lambda function versions or ECS task sets are specified in the deployment's AppSpec file.",
        "stability": "external",
        "summary": "A configuration that shifts traffic from one version of a Lambda function or ECS task set to another in equal increments, with an equal number of minutes between each increment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst timeBasedLinearProperty: codedeploy.CfnDeploymentConfig.TimeBasedLinearProperty = {\n  linearInterval: 123,\n  linearPercentage: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.TimeBasedLinearProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 590
      },
      "name": "TimeBasedLinearProperty",
      "namespace": "CfnDeploymentConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedlinear.html#cfn-codedeploy-deploymentconfig-timebasedlinear-linearinterval"
            },
            "stability": "external",
            "summary": "The number of minutes between each incremental traffic shift of a `TimeBasedLinear` deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 596
          },
          "name": "linearInterval",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-timebasedlinear.html#cfn-codedeploy-deploymentconfig-timebasedlinear-linearpercentage"
            },
            "stability": "external",
            "summary": "The percentage of traffic that is shifted at the start of each increment of a `TimeBasedLinear` deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 602
          },
          "name": "linearPercentage",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentConfig.TimeBasedLinearProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.TrafficRoutingConfigProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-trafficroutingconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The configuration that specifies how traffic is shifted from one version of a Lambda function to another version during an AWS Lambda deployment, or from one Amazon ECS task set to another during an Amazon ECS deployment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst trafficRoutingConfigProperty: codedeploy.CfnDeploymentConfig.TrafficRoutingConfigProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  timeBasedCanary: {\n    canaryInterval: 123,\n    canaryPercentage: 123,\n  },\n  timeBasedLinear: {\n    linearInterval: 123,\n    linearPercentage: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.TrafficRoutingConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 668
      },
      "name": "TrafficRoutingConfigProperty",
      "namespace": "CfnDeploymentConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-trafficroutingconfig.html#cfn-codedeploy-deploymentconfig-trafficroutingconfig-type"
            },
            "stability": "external",
            "summary": "The type of traffic shifting ( `TimeBasedCanary` or `TimeBasedLinear` ) used by a deployment configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 686
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-trafficroutingconfig.html#cfn-codedeploy-deploymentconfig-trafficroutingconfig-timebasedcanary"
            },
            "remarks": "The original and target Lambda function versions or ECS task sets are specified in the deployment's AppSpec file.",
            "stability": "external",
            "summary": "A configuration that shifts traffic from one version of a Lambda function or ECS task set to another in two increments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 674
          },
          "name": "timeBasedCanary",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.TimeBasedCanaryProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentconfig-trafficroutingconfig.html#cfn-codedeploy-deploymentconfig-trafficroutingconfig-timebasedlinear"
            },
            "remarks": "The original and target Lambda function versions or Amazon ECS task sets are specified in the deployment's AppSpec file.",
            "stability": "external",
            "summary": "A configuration that shifts traffic from one version of a Lambda function or Amazon ECS task set to another in equal increments, with an equal number of minutes between each increment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 680
          },
          "name": "timeBasedLinear",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.TimeBasedLinearProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentConfig.TrafficRoutingConfigProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentConfigProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnDeploymentConfig`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst cfnDeploymentConfigProps: codedeploy.CfnDeploymentConfigProps = {\n  computePlatform: 'computePlatform',\n  deploymentConfigName: 'deploymentConfigName',\n  minimumHealthyHosts: {\n    type: 'type',\n    value: 123,\n  },\n  trafficRoutingConfig: {\n    type: 'type',\n\n    // the properties below are optional\n    timeBasedCanary: {\n      canaryInterval: 123,\n      canaryPercentage: 123,\n    },\n    timeBasedLinear: {\n      linearInterval: 123,\n      linearPercentage: 123,\n    },\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 201
      },
      "name": "CfnDeploymentConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-computeplatform"
            },
            "stability": "external",
            "summary": "The destination platform type for the deployment ( `Lambda` , `Server` , or `ECS` )."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 208
          },
          "name": "computePlatform",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-deploymentconfigname"
            },
            "remarks": "If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the deployment configuration name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .\n\n> If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
            "stability": "external",
            "summary": "A name for the deployment configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 217
          },
          "name": "deploymentConfigName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts"
            },
            "remarks": "There are two parameters expected in the input: type and value.\n\nThe type parameter takes either of the following values:\n\n- HOST_COUNT: The value parameter represents the minimum number of healthy instances as an absolute value.\n- FLEET_PERCENT: The value parameter represents the minimum number of healthy instances as a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.\n\nThe value parameter takes an integer.\n\nFor example, to set a minimum of 95% healthy instance, specify a type of FLEET_PERCENT and a value of 95.\n\nFor more information about instance health, see [CodeDeploy Instance Health](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-health.html) in the AWS CodeDeploy User Guide.",
            "stability": "external",
            "summary": "The minimum number of healthy instances that should be available at any time during the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 235
          },
          "name": "minimumHealthyHosts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.MinimumHealthyHostsProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-trafficroutingconfig"
            },
            "stability": "external",
            "summary": "The configuration that specifies how the deployment traffic is routed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 242
          },
          "name": "trafficRoutingConfig",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentConfig.TrafficRoutingConfigProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentConfigProps"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CodeDeploy::DeploymentGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::CodeDeploy::DeploymentGroup` resource creates an AWS CodeDeploy deployment group that specifies which instances your application revisions are deployed to, along with other deployment options. For more information, see [CreateDeploymentGroup](https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_CreateDeploymentGroup.html) in the *CodeDeploy API Reference* .\n\n> Amazon ECS blue/green deployments through CodeDeploy do not use the `AWS::CodeDeploy::DeploymentGroup` resource. To perform Amazon ECS blue/green deployments, use the `AWS::CodeDeploy::BlueGreen` hook. See [Perform Amazon ECS blue/green deployments through CodeDeploy using AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/blue-green.html) for more information.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CodeDeploy::DeploymentGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst cfnDeploymentGroup = new codedeploy.CfnDeploymentGroup(this, 'MyCfnDeploymentGroup', {\n  applicationName: 'applicationName',\n  serviceRoleArn: 'serviceRoleArn',\n\n  // the properties below are optional\n  alarmConfiguration: {\n    alarms: [{\n      name: 'name',\n    }],\n    enabled: false,\n    ignorePollAlarmFailure: false,\n  },\n  autoRollbackConfiguration: {\n    enabled: false,\n    events: ['events'],\n  },\n  autoScalingGroups: ['autoScalingGroups'],\n  blueGreenDeploymentConfiguration: {\n    deploymentReadyOption: {\n      actionOnTimeout: 'actionOnTimeout',\n      waitTimeInMinutes: 123,\n    },\n    greenFleetProvisioningOption: {\n      action: 'action',\n    },\n    terminateBlueInstancesOnDeploymentSuccess: {\n      action: 'action',\n      terminationWaitTimeInMinutes: 123,\n    },\n  },\n  deployment: {\n    revision: {\n      gitHubLocation: {\n        commitId: 'commitId',\n        repository: 'repository',\n      },\n      revisionType: 'revisionType',\n      s3Location: {\n        bucket: 'bucket',\n        key: 'key',\n\n        // the properties below are optional\n        bundleType: 'bundleType',\n        eTag: 'eTag',\n        version: 'version',\n      },\n    },\n\n    // the properties below are optional\n    description: 'description',\n    ignoreApplicationStopFailures: false,\n  },\n  deploymentConfigName: 'deploymentConfigName',\n  deploymentGroupName: 'deploymentGroupName',\n  deploymentStyle: {\n    deploymentOption: 'deploymentOption',\n    deploymentType: 'deploymentType',\n  },\n  ec2TagFilters: [{\n    key: 'key',\n    type: 'type',\n    value: 'value',\n  }],\n  ec2TagSet: {\n    ec2TagSetList: [{\n      ec2TagGroup: [{\n        key: 'key',\n        type: 'type',\n        value: 'value',\n      }],\n    }],\n  },\n  ecsServices: [{\n    clusterName: 'clusterName',\n    serviceName: 'serviceName',\n  }],\n  loadBalancerInfo: {\n    elbInfoList: [{\n      name: 'name',\n    }],\n    targetGroupInfoList: [{\n      name: 'name',\n    }],\n    targetGroupPairInfoList: [{\n      prodTrafficRoute: {\n        listenerArns: ['listenerArns'],\n      },\n      targetGroups: [{\n        name: 'name',\n      }],\n      testTrafficRoute: {\n        listenerArns: ['listenerArns'],\n      },\n    }],\n  },\n  onPremisesInstanceTagFilters: [{\n    key: 'key',\n    type: 'type',\n    value: 'value',\n  }],\n  onPremisesTagSet: {\n    onPremisesTagSetList: [{\n      onPremisesTagGroup: [{\n        key: 'key',\n        type: 'type',\n        value: 'value',\n      }],\n    }],\n  },\n  outdatedInstancesStrategy: 'outdatedInstancesStrategy',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  triggerConfigurations: [{\n    triggerEvents: ['triggerEvents'],\n    triggerName: 'triggerName',\n    triggerTargetArn: 'triggerTargetArn',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CodeDeploy::DeploymentGroup`."
        },
        "locationInModule": {
          "filename": "lib/codedeploy.generated.ts",
          "line": 1203
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 1020
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1235
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1264
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDeploymentGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1024
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1240
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-tags"
            },
            "remarks": "Each tag consists of a key and an optional value, both of which you define.",
            "stability": "external",
            "summary": "The metadata that you apply to CodeDeploy deployment groups to help you organize and categorize them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1187
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-applicationname"
            },
            "stability": "external",
            "summary": "The name of an existing CodeDeploy application to associate this deployment group with."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1050
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-servicerolearn"
            },
            "remarks": "For more information, see [Create a Service Role for AWS CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-service-role.html) in the *AWS CodeDeploy User Guide* .\n\n> In some cases, you might need to add a dependency on the service role's policy. For more information, see IAM role policy in [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .",
            "stability": "external",
            "summary": "A service role Amazon Resource Name (ARN) that grants CodeDeploy permission to make calls to AWS services on your behalf."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1059
          },
          "name": "serviceRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-alarmconfiguration"
            },
            "stability": "external",
            "summary": "Information about the Amazon CloudWatch alarms that are associated with the deployment group."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1066
          },
          "name": "alarmConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AlarmConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autorollbackconfiguration"
            },
            "remarks": "If you specify this property, don't specify the `Deployment` property.",
            "stability": "external",
            "summary": "Information about the automatic rollback configuration that is associated with the deployment group."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1073
          },
          "name": "autoRollbackConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AutoRollbackConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autoscalinggroups"
            },
            "remarks": "Duplicates are not allowed.",
            "stability": "external",
            "summary": "A list of associated Auto Scaling groups that CodeDeploy automatically deploys revisions to when new instances are created."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1080
          },
          "name": "autoScalingGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration"
            },
            "stability": "external",
            "summary": "Information about blue/green deployment options for a deployment group."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1087
          },
          "name": "blueGreenDeploymentConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.BlueGreenDeploymentConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deployment"
            },
            "remarks": "If you specify this property, your target application revision is deployed as soon as the provisioning process is complete. If you specify this property, don't specify the `AutoRollbackConfiguration` property.",
            "stability": "external",
            "summary": "The application revision to deploy to this deployment group."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1094
          },
          "name": "deployment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentconfigname"
            },
            "remarks": "With predefined configurations, you can deploy application revisions to one instance at a time ( `CodeDeployDefault.OneAtATime` ), half of the instances at a time ( `CodeDeployDefault.HalfAtATime` ), or all the instances at once ( `CodeDeployDefault.AllAtOnce` ). For more information and valid values, see [Working with Deployment Configurations](https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html) in the *AWS CodeDeploy User Guide* .",
            "stability": "external",
            "summary": "A deployment configuration name or a predefined configuration name."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1101
          },
          "name": "deploymentConfigName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentgroupname"
            },
            "remarks": "If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the deployment group name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .\n\n> If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
            "stability": "external",
            "summary": "A name for the deployment group."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1110
          },
          "name": "deploymentGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentstyle"
            },
            "remarks": "If you specify this property with a blue/green deployment type, don't specify the `AutoScalingGroups` , `LoadBalancerInfo` , or `Deployment` properties.\n\n> For blue/green deployments, AWS CloudFormation supports deployments on Lambda compute platforms only. You can perform Amazon ECS blue/green deployments using `AWS::CodeDeploy::BlueGreen` hook. See [Perform Amazon ECS blue/green deployments through CodeDeploy using AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/blue-green.html) for more information.",
            "stability": "external",
            "summary": "Attributes that determine the type of deployment to run and whether to route deployment traffic behind a load balancer."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1121
          },
          "name": "deploymentStyle",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentStyleProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagfilters"
            },
            "remarks": "CodeDeploy includes all Amazon EC2 instances identified by any of the tags you specify in this deployment group. Duplicates are not allowed.\n\nYou can specify `EC2TagFilters` or `Ec2TagSet` , but not both.",
            "stability": "external",
            "summary": "The Amazon EC2 tags that are already applied to Amazon EC2 instances that you want to include in the deployment group."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1130
          },
          "name": "ec2TagFilters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagset"
            },
            "remarks": "The deployment group includes only Amazon EC2 instances identified by all the tag groups. Cannot be used in the same call as `ec2TagFilter` .",
            "stability": "external",
            "summary": "Information about groups of tags applied to Amazon EC2 instances."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1137
          },
          "name": "ec2TagSet",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagSetProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ecsservices"
            },
            "remarks": "This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format `<clustername>:<servicename>` .",
            "stability": "external",
            "summary": "The target Amazon ECS services in the deployment group."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1144
          },
          "name": "ecsServices",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.ECSServiceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo"
            },
            "remarks": "For more information, see [Integrating CodeDeploy with Elastic Load Balancing](https://docs.aws.amazon.com/codedeploy/latest/userguide/integrations-aws-elastic-load-balancing.html) in the *AWS CodeDeploy User Guide* .",
            "stability": "external",
            "summary": "Information about the load balancer to use in a deployment."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1151
          },
          "name": "loadBalancerInfo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.LoadBalancerInfoProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisesinstancetagfilters"
            },
            "remarks": "CodeDeploy includes all on-premises instances identified by any of the tags you specify in this deployment group. To register on-premises instances with CodeDeploy , see [Working with On-Premises Instances for CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-on-premises.html) in the *AWS CodeDeploy User Guide* . Duplicates are not allowed.\n\nYou can specify `OnPremisesInstanceTagFilters` or `OnPremisesInstanceTagSet` , but not both.",
            "stability": "external",
            "summary": "The on-premises instance tags already applied to on-premises instances that you want to include in the deployment group."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1160
          },
          "name": "onPremisesInstanceTagFilters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisestagset"
            },
            "remarks": "The deployment group includes only on-premises instances identified by all the tag groups.\n\nYou can specify `OnPremisesInstanceTagFilters` or `OnPremisesInstanceTagSet` , but not both.",
            "stability": "external",
            "summary": "Information about groups of tags applied to on-premises instances."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1169
          },
          "name": "onPremisesTagSet",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.OnPremisesTagSetProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-outdatedinstancesstrategy"
            },
            "remarks": "If this option is set to `UPDATE` or is unspecified, CodeDeploy initiates one or more 'auto-update outdated instances' deployments to apply the deployed application revision to the new Amazon EC2 instances.\n\nIf this option is set to `IGNORE` , CodeDeploy does not initiate a deployment to update the new Amazon EC2 instances. This may result in instances having different revisions.",
            "stability": "external",
            "summary": "Indicates what happens when new Amazon EC2 instances are launched mid-deployment and do not receive the deployed application revision."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1180
          },
          "name": "outdatedInstancesStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-triggerconfigurations"
            },
            "remarks": "Duplicates are not allowed",
            "stability": "external",
            "summary": "Information about triggers associated with the deployment group."
          },
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1194
          },
          "name": "triggerConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TriggerConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AlarmConfigurationProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarmconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`AlarmConfiguration` is a property of the [DeploymentGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html) resource.",
        "stability": "external",
        "summary": "The `AlarmConfiguration` property type configures CloudWatch alarms for an AWS CodeDeploy deployment group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst alarmConfigurationProperty: codedeploy.CfnDeploymentGroup.AlarmConfigurationProperty = {\n  alarms: [{\n    name: 'name',\n  }],\n  enabled: false,\n  ignorePollAlarmFailure: false,\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AlarmConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 1345
      },
      "name": "AlarmConfigurationProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarmconfiguration.html#cfn-codedeploy-deploymentgroup-alarmconfiguration-alarms"
            },
            "remarks": "A maximum of 10 alarms can be added.",
            "stability": "external",
            "summary": "A list of alarms configured for the deployment or deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1351
          },
          "name": "alarms",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AlarmProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarmconfiguration.html#cfn-codedeploy-deploymentgroup-alarmconfiguration-enabled"
            },
            "stability": "external",
            "summary": "Indicates whether the alarm configuration is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1357
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarmconfiguration.html#cfn-codedeploy-deploymentgroup-alarmconfiguration-ignorepollalarmfailure"
            },
            "remarks": "The default value is `false` .\n\n- `true` : The deployment proceeds even if alarm status information can't be retrieved from CloudWatch .\n- `false` : The deployment stops if alarm status information can't be retrieved from CloudWatch .",
            "stability": "external",
            "summary": "Indicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from Amazon CloudWatch ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1366
          },
          "name": "ignorePollAlarmFailure",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.AlarmConfigurationProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AlarmProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarm.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `Alarm` property of the [CodeDeploy DeploymentGroup AlarmConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarmconfiguration.html) property contains a list of `Alarm` property types.",
        "stability": "external",
        "summary": "The `Alarm` property type specifies a CloudWatch alarm to use for an AWS CodeDeploy deployment group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst alarmProperty: codedeploy.CfnDeploymentGroup.AlarmProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AlarmProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 1278
      },
      "name": "AlarmProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-alarm.html#cfn-codedeploy-deploymentgroup-alarm-name"
            },
            "remarks": "Maximum length is 255 characters. Each alarm name can be used only once in a list of alarms.",
            "stability": "external",
            "summary": "The name of the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1284
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.AlarmProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AutoRollbackConfigurationProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-autorollbackconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Automatic Rollbacks](https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments-rollback-and-redeploy.html#deployments-rollback-and-redeploy-automatic-rollbacks) in the *AWS CodeDeploy User Guide* .\n\n`AutoRollbackConfiguration` is a property of the [DeploymentGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html) resource.",
        "stability": "external",
        "summary": "The `AutoRollbackConfiguration` property type configures automatic rollback for an AWS CodeDeploy deployment group when a deployment is not completed successfully.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst autoRollbackConfigurationProperty: codedeploy.CfnDeploymentGroup.AutoRollbackConfigurationProperty = {\n  enabled: false,\n  events: ['events'],\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AutoRollbackConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 1435
      },
      "name": "AutoRollbackConfigurationProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-autorollbackconfiguration.html#cfn-codedeploy-deploymentgroup-autorollbackconfiguration-enabled"
            },
            "stability": "external",
            "summary": "Indicates whether a defined automatic rollback configuration is currently enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1441
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-autorollbackconfiguration.html#cfn-codedeploy-deploymentgroup-autorollbackconfiguration-events"
            },
            "remarks": "Valid values are `DEPLOYMENT_FAILURE` , `DEPLOYMENT_STOP_ON_ALARM` , or `DEPLOYMENT_STOP_ON_REQUEST` .",
            "stability": "external",
            "summary": "The event type or types that trigger a rollback."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1447
          },
          "name": "events",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.AutoRollbackConfigurationProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.BlueGreenDeploymentConfigurationProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-bluegreendeploymentconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about blue/green deployment options for a deployment group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst blueGreenDeploymentConfigurationProperty: codedeploy.CfnDeploymentGroup.BlueGreenDeploymentConfigurationProperty = {\n  deploymentReadyOption: {\n    actionOnTimeout: 'actionOnTimeout',\n    waitTimeInMinutes: 123,\n  },\n  greenFleetProvisioningOption: {\n    action: 'action',\n  },\n  terminateBlueInstancesOnDeploymentSuccess: {\n    action: 'action',\n    terminationWaitTimeInMinutes: 123,\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.BlueGreenDeploymentConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 1511
      },
      "name": "BlueGreenDeploymentConfigurationProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-bluegreendeploymentconfiguration.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration-deploymentreadyoption"
            },
            "stability": "external",
            "summary": "Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1517
          },
          "name": "deploymentReadyOption",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentReadyOptionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-bluegreendeploymentconfiguration.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration-greenfleetprovisioningoption"
            },
            "stability": "external",
            "summary": "Information about how instances are provisioned for a replacement environment in a blue/green deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1523
          },
          "name": "greenFleetProvisioningOption",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.GreenFleetProvisioningOptionProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-bluegreendeploymentconfiguration.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration-terminateblueinstancesondeploymentsuccess"
            },
            "stability": "external",
            "summary": "Information about whether to terminate instances in the original fleet during a blue/green deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1529
          },
          "name": "terminateBlueInstancesOnDeploymentSuccess",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.BlueInstanceTerminationOptionProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.BlueGreenDeploymentConfigurationProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.BlueInstanceTerminationOptionProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-blueinstanceterminationoption.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`BlueInstanceTerminationOption` does not apply to Lambda deployments.",
        "stability": "external",
        "summary": "Information about whether instances in the original environment are terminated when a blue/green deployment is successful.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst blueInstanceTerminationOptionProperty: codedeploy.CfnDeploymentGroup.BlueInstanceTerminationOptionProperty = {\n  action: 'action',\n  terminationWaitTimeInMinutes: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.BlueInstanceTerminationOptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 1596
      },
      "name": "BlueInstanceTerminationOptionProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-blueinstanceterminationoption.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration-blueinstanceterminationoption-action"
            },
            "remarks": "- `TERMINATE` : Instances are terminated after a specified wait time.\n- `KEEP_ALIVE` : Instances are left running after they are deregistered from the load balancer and removed from the deployment group.",
            "stability": "external",
            "summary": "The action to take on instances in the original environment after a successful blue/green deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1605
          },
          "name": "action",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-blueinstanceterminationoption.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration-blueinstanceterminationoption-terminationwaittimeinminutes"
            },
            "remarks": "For an Amazon ECS deployment, the number of minutes before deleting the original (blue) task set. During an Amazon ECS deployment, CodeDeploy shifts traffic from the original (blue) task set to a replacement (green) task set.\n\nThe maximum setting is 2880 minutes (2 days).",
            "stability": "external",
            "summary": "For an Amazon EC2 deployment, the number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1615
          },
          "name": "terminationWaitTimeInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.BlueInstanceTerminationOptionProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`Deployment` is a property of the [DeploymentGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html) resource that specifies an AWS CodeDeploy application revision to be deployed to instances in the deployment group. If you specify an application revision, your target revision is deployed as soon as the provisioning process is complete.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst deploymentProperty: codedeploy.CfnDeploymentGroup.DeploymentProperty = {\n  revision: {\n    gitHubLocation: {\n      commitId: 'commitId',\n      repository: 'repository',\n    },\n    revisionType: 'revisionType',\n    s3Location: {\n      bucket: 'bucket',\n      key: 'key',\n\n      // the properties below are optional\n      bundleType: 'bundleType',\n      eTag: 'eTag',\n      version: 'version',\n    },\n  },\n\n  // the properties below are optional\n  description: 'description',\n  ignoreApplicationStopFailures: false,\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 1679
      },
      "name": "DeploymentProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision"
            },
            "stability": "external",
            "summary": "Information about the location of stored application artifacts and the service from which to retrieve them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1703
          },
          "name": "revision",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.RevisionLocationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html#cfn-properties-codedeploy-deploymentgroup-deployment-description"
            },
            "stability": "external",
            "summary": "A comment about the deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1685
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment.html#cfn-properties-codedeploy-deploymentgroup-deployment-ignoreapplicationstopfailures"
            },
            "remarks": "For example, if `ApplicationStop` fails, the deployment continues with DownloadBundle. If `BeforeBlockTraffic` fails, the deployment continues with `BlockTraffic` . If `AfterBlockTraffic` fails, the deployment continues with `ApplicationStop` .\n\nIf false or not specified, then if a lifecycle event fails during a deployment to an instance, that deployment fails. If deployment to that instance is part of an overall deployment and the number of healthy hosts is not less than the minimum number of healthy hosts, then a deployment to the next instance is attempted.\n\nDuring a deployment, the AWS CodeDeploy agent runs the scripts specified for `ApplicationStop` , `BeforeBlockTraffic` , and `AfterBlockTraffic` in the AppSpec file from the previous successful deployment. (All other scripts are run from the AppSpec file in the current deployment.) If one of these scripts contains an error and does not run successfully, the deployment can fail.\n\nIf the cause of the failure is a script from the last successful deployment that will never run successfully, create a new deployment and use `ignoreApplicationStopFailures` to specify that the `ApplicationStop` , `BeforeBlockTraffic` , and `AfterBlockTraffic` failures should be ignored.",
            "stability": "external",
            "summary": "If true, then if an `ApplicationStop` , `BeforeBlockTraffic` , or `AfterBlockTraffic` deployment lifecycle event to an instance fails, then the deployment continues to the next deployment lifecycle event."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1697
          },
          "name": "ignoreApplicationStopFailures",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.DeploymentProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentReadyOptionProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deploymentreadyoption.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about how traffic is rerouted to instances in a replacement environment in a blue/green deployment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst deploymentReadyOptionProperty: codedeploy.CfnDeploymentGroup.DeploymentReadyOptionProperty = {\n  actionOnTimeout: 'actionOnTimeout',\n  waitTimeInMinutes: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentReadyOptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 1771
      },
      "name": "DeploymentReadyOptionProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deploymentreadyoption.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration-deploymentreadyoption-actionontimeout"
            },
            "remarks": "- CONTINUE_DEPLOYMENT: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.\n- STOP_DEPLOYMENT: Do not register new instances with a load balancer unless traffic rerouting is started using [ContinueDeployment](https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_ContinueDeployment.html) . If traffic rerouting is not started before the end of the specified wait period, the deployment status is changed to Stopped.",
            "stability": "external",
            "summary": "Information about when to reroute traffic from an original environment to a replacement environment in a blue/green deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1780
          },
          "name": "actionOnTimeout",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deploymentreadyoption.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration-deploymentreadyoption-waittimeinminutes"
            },
            "remarks": "Applies only to the `STOP_DEPLOYMENT` option for `actionOnTimeout` .",
            "stability": "external",
            "summary": "The number of minutes to wait before the status of a blue/green deployment is changed to Stopped if rerouting is not started manually."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1786
          },
          "name": "waitTimeInMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.DeploymentReadyOptionProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentStyleProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deploymentstyle.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst deploymentStyleProperty: codedeploy.CfnDeploymentGroup.DeploymentStyleProperty = {\n  deploymentOption: 'deploymentOption',\n  deploymentType: 'deploymentType',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentStyleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 1850
      },
      "name": "DeploymentStyleProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deploymentstyle.html#cfn-codedeploy-deploymentgroup-deploymentstyle-deploymentoption"
            },
            "remarks": "> An Amazon EC2 Application Load Balancer or Network Load Balancer is required for an Amazon ECS deployment.",
            "stability": "external",
            "summary": "Indicates whether to route deployment traffic behind a load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1858
          },
          "name": "deploymentOption",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deploymentstyle.html#cfn-codedeploy-deploymentgroup-deploymentstyle-deploymenttype"
            },
            "stability": "external",
            "summary": "Indicates whether to run an in-place or blue/green deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1864
          },
          "name": "deploymentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.DeploymentStyleProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagFilterProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilter.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about using tags and tag groups to help manage your Amazon EC2 instances and on-premises instances, see [Tagging Instances for Deployment Groups in AWS CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-tagging.html) in the *AWS CodeDeploy User Guide* .",
        "stability": "external",
        "summary": "Information about an Amazon EC2 tag filter.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst eC2TagFilterProperty: codedeploy.CfnDeploymentGroup.EC2TagFilterProperty = {\n  key: 'key',\n  type: 'type',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagFilterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 1930
      },
      "name": "EC2TagFilterProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilter.html#cfn-codedeploy-deploymentgroup-ec2tagfilter-key"
            },
            "stability": "external",
            "summary": "The tag filter key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1936
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilter.html#cfn-codedeploy-deploymentgroup-ec2tagfilter-type"
            },
            "remarks": "- `KEY_ONLY` : Key only.\n- `VALUE_ONLY` : Value only.\n- `KEY_AND_VALUE` : Key and value.",
            "stability": "external",
            "summary": "The tag filter type:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1946
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagfilter.html#cfn-codedeploy-deploymentgroup-ec2tagfilter-value"
            },
            "stability": "external",
            "summary": "The tag filter value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 1952
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.EC2TagFilterProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagSetListObjectProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagsetlistobject.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The deployment group includes only Amazon EC2 instances identified by all the tag groups. Cannot be used in the same template as EC2TagFilters.\n\nFor more information about using tags and tag groups to help manage your Amazon EC2 instances and on-premises instances, see [Tagging Instances for Deployment Groups in AWS CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-tagging.html) in the *AWS CodeDeploy User Guide* .\n\n`EC2TagSet` is a property of the [DeploymentGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html) resource type.",
        "stability": "external",
        "summary": "The `EC2TagSet` property type specifies information about groups of tags applied to Amazon EC2 instances.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst eC2TagSetListObjectProperty: codedeploy.CfnDeploymentGroup.EC2TagSetListObjectProperty = {\n  ec2TagGroup: [{\n    key: 'key',\n    type: 'type',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagSetListObjectProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2094
      },
      "name": "EC2TagSetListObjectProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagsetlistobject.html#cfn-codedeploy-deploymentgroup-ec2tagsetlistobject-ec2taggroup"
            },
            "remarks": "For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.",
            "stability": "external",
            "summary": "A list that contains other lists of Amazon EC2 instance tag groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2100
          },
          "name": "ec2TagGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.EC2TagSetListObjectProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagSetProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagset.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The deployment group includes only Amazon EC2 instances identified by all the tag groups. `EC2TagSet` cannot be used in the same template as `EC2TagFilter` .\n\nFor information about using tags and tag groups to help manage your Amazon EC2 instances and on-premises instances, see [Tagging Instances for Deployment Groups in AWS CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-tagging.html) .",
        "stability": "external",
        "summary": "The `EC2TagSet` property type specifies information about groups of tags applied to Amazon EC2 instances.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst eC2TagSetProperty: codedeploy.CfnDeploymentGroup.EC2TagSetProperty = {\n  ec2TagSetList: [{\n    ec2TagGroup: [{\n      key: 'key',\n      type: 'type',\n      value: 'value',\n    }],\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagSetProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2021
      },
      "name": "EC2TagSetProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ec2tagset.html#cfn-codedeploy-deploymentgroup-ec2tagset-ec2tagsetlist"
            },
            "remarks": "CodeDeploy includes all Amazon EC2 instances identified by any of the tags you specify in this deployment group.\n\nDuplicates are not allowed.",
            "stability": "external",
            "summary": "The Amazon EC2 tags that are already applied to Amazon EC2 instances that you want to include in the deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2029
          },
          "name": "ec2TagSetList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagSetListObjectProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.EC2TagSetProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.ECSServiceProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ecsservice.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Contains the service and cluster names used to identify an Amazon ECS deployment's target.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst eCSServiceProperty: codedeploy.CfnDeploymentGroup.ECSServiceProperty = {\n  clusterName: 'clusterName',\n  serviceName: 'serviceName',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.ECSServiceProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2161
      },
      "name": "ECSServiceProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ecsservice.html#cfn-codedeploy-deploymentgroup-ecsservice-clustername"
            },
            "stability": "external",
            "summary": "The name of the cluster that the Amazon ECS service is associated with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2167
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-ecsservice.html#cfn-codedeploy-deploymentgroup-ecsservice-servicename"
            },
            "stability": "external",
            "summary": "The name of the target Amazon ECS service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2173
          },
          "name": "serviceName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.ECSServiceProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.ELBInfoProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-elbinfo.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "If you specify the `ELBInfo` property, the `DeploymentStyle.DeploymentOption` property must be set to `WITH_TRAFFIC_CONTROL` for AWS CodeDeploy to route your traffic using the specified load balancers.\n\n`ELBInfo` is a property of the [AWS CodeDeploy DeploymentGroup LoadBalancerInfo](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-loadbalancerinfo.html) property type.",
        "stability": "external",
        "summary": "The `ELBInfo` property type specifies information about the Elastic Load Balancing load balancer used for an CodeDeploy deployment group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst eLBInfoProperty: codedeploy.CfnDeploymentGroup.ELBInfoProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.ELBInfoProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2243
      },
      "name": "ELBInfoProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-elbinfo.html#cfn-codedeploy-deploymentgroup-elbinfo-name"
            },
            "remarks": "For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment is complete.\n\n> AWS CloudFormation supports blue/green deployments on AWS Lambda compute platforms only.",
            "stability": "external",
            "summary": "For blue/green deployments, the name of the load balancer that is used to route traffic from original instances to replacement instances in a blue/green deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2251
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.ELBInfoProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.GitHubLocationProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`GitHubLocation` is a property of the [CodeDeploy DeploymentGroup Revision](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html) property that specifies the location of an application revision that is stored in GitHub.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst gitHubLocationProperty: codedeploy.CfnDeploymentGroup.GitHubLocationProperty = {\n  commitId: 'commitId',\n  repository: 'repository',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.GitHubLocationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2312
      },
      "name": "GitHubLocationProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-githublocation-commitid"
            },
            "stability": "external",
            "summary": "The SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2318
          },
          "name": "commitId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-githublocation.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-githublocation-repository"
            },
            "remarks": "Specify the value as `account/repository` .",
            "stability": "external",
            "summary": "The GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2326
          },
          "name": "repository",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.GitHubLocationProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.GreenFleetProvisioningOptionProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-greenfleetprovisioningoption.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about the instances that belong to the replacement environment in a blue/green deployment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst greenFleetProvisioningOptionProperty: codedeploy.CfnDeploymentGroup.GreenFleetProvisioningOptionProperty = {\n  action: 'action',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.GreenFleetProvisioningOptionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2392
      },
      "name": "GreenFleetProvisioningOptionProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-greenfleetprovisioningoption.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration-greenfleetprovisioningoption-action"
            },
            "remarks": "- `DISCOVER_EXISTING` : Use instances that already exist or will be created manually.\n- `COPY_AUTO_SCALING_GROUP` : Use settings from a specified Auto Scaling group to define and create instances in a new Auto Scaling group.",
            "stability": "external",
            "summary": "The method used to add instances to a replacement environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2401
          },
          "name": "action",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.GreenFleetProvisioningOptionProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.LoadBalancerInfoProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-loadbalancerinfo.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information, see [Integrating CodeDeploy with Elastic Load Balancing](https://docs.aws.amazon.com/codedeploy/latest/userguide/integrations-aws-elastic-load-balancing.html) in the *AWS CodeDeploy User Guide* .\n\nFor AWS CloudFormation to use the properties specified in `LoadBalancerInfo` , the `DeploymentStyle.DeploymentOption` property must be set to `WITH_TRAFFIC_CONTROL` . If `DeploymentStyle.DeploymentOption` is not set to `WITH_TRAFFIC_CONTROL` , AWS CloudFormation ignores any settings specified in `LoadBalancerInfo` .\n\n> AWS CloudFormation supports blue/green deployments on the AWS Lambda compute platform only.\n\n`LoadBalancerInfo` is a property of the [DeploymentGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html) resource.",
        "stability": "external",
        "summary": "The `LoadBalancerInfo` property type specifies information about the load balancer or target group used for an AWS CodeDeploy deployment group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst loadBalancerInfoProperty: codedeploy.CfnDeploymentGroup.LoadBalancerInfoProperty = {\n  elbInfoList: [{\n    name: 'name',\n  }],\n  targetGroupInfoList: [{\n    name: 'name',\n  }],\n  targetGroupPairInfoList: [{\n    prodTrafficRoute: {\n      listenerArns: ['listenerArns'],\n    },\n    targetGroups: [{\n      name: 'name',\n    }],\n    testTrafficRoute: {\n      listenerArns: ['listenerArns'],\n    },\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.LoadBalancerInfoProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2468
      },
      "name": "LoadBalancerInfoProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-loadbalancerinfo.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo-elbinfolist"
            },
            "remarks": "In Elastic Load Balancing, load balancers are used with Classic Load Balancers.\n\n> Adding more than one load balancer to the array is not supported.",
            "stability": "external",
            "summary": "An array that contains information about the load balancer to use for load balancing in a deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2476
          },
          "name": "elbInfoList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.ELBInfoProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-loadbalancerinfo.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo-targetgroupinfolist"
            },
            "remarks": "In Elastic Load Balancing , target groups are used with Application Load Balancers .\n\n> Adding more than one target group to the array is not supported.",
            "stability": "external",
            "summary": "An array that contains information about the target group to use for load balancing in a deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2484
          },
          "name": "targetGroupInfoList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TargetGroupInfoProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-loadbalancerinfo.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo-targetgrouppairinfolist"
            },
            "remarks": "This is an array of `TargeGroupPairInfo` objects with a maximum size of one.",
            "stability": "external",
            "summary": "The target group pair information."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2490
          },
          "name": "targetGroupPairInfoList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TargetGroupPairInfoProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.LoadBalancerInfoProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.OnPremisesTagSetListObjectProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisestagsetlistobject.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "In order for an instance to be included in the deployment group, it must be identified by all the tag groups in the list.\n\n`OnPremisesTagSetListObject` is a property of the [CodeDeploy DeploymentGroup OnPremisesTagSet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisestagset.html) property type.",
        "stability": "external",
        "summary": "The `OnPremisesTagSetListObject` property type specifies lists of on-premises instance tag groups.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst onPremisesTagSetListObjectProperty: codedeploy.CfnDeploymentGroup.OnPremisesTagSetListObjectProperty = {\n  onPremisesTagGroup: [{\n    key: 'key',\n    type: 'type',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.OnPremisesTagSetListObjectProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2632
      },
      "name": "OnPremisesTagSetListObjectProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisestagsetlistobject.html#cfn-codedeploy-deploymentgroup-onpremisestagsetlistobject-onpremisestaggroup"
            },
            "stability": "external",
            "summary": "Information about groups of on-premises instance tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2638
          },
          "name": "onPremisesTagGroup",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.OnPremisesTagSetListObjectProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.OnPremisesTagSetProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisestagset.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "In order for an instance to be included in the deployment group, it must be identified by all the tag groups in the list.\n\nFor more information about using tags and tag groups to help manage your Amazon EC2 instances and on-premises instances, see [Tagging Instances for Deployment Groups in AWS CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-tagging.html) in the *AWS CodeDeploy User Guide* .\n\n`OnPremisesTagSet` is a property of the [DeploymentGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html) resource.",
        "stability": "external",
        "summary": "The `OnPremisesTagSet` property type specifies a list containing other lists of on-premises instance tag groups.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst onPremisesTagSetProperty: codedeploy.CfnDeploymentGroup.OnPremisesTagSetProperty = {\n  onPremisesTagSetList: [{\n    onPremisesTagGroup: [{\n      key: 'key',\n      type: 'type',\n      value: 'value',\n    }],\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.OnPremisesTagSetProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2561
      },
      "name": "OnPremisesTagSetProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-onpremisestagset.html#cfn-codedeploy-deploymentgroup-onpremisestagset-onpremisestagsetlist"
            },
            "remarks": "For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.\n\nDuplicates are not allowed.",
            "stability": "external",
            "summary": "A list that contains other lists of on-premises instance tag groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2569
          },
          "name": "onPremisesTagSetList",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.OnPremisesTagSetListObjectProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.OnPremisesTagSetProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.RevisionLocationProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`RevisionLocation` is a property that defines the location of the CodeDeploy application revision to deploy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst revisionLocationProperty: codedeploy.CfnDeploymentGroup.RevisionLocationProperty = {\n  gitHubLocation: {\n    commitId: 'commitId',\n    repository: 'repository',\n  },\n  revisionType: 'revisionType',\n  s3Location: {\n    bucket: 'bucket',\n    key: 'key',\n\n    // the properties below are optional\n    bundleType: 'bundleType',\n    eTag: 'eTag',\n    version: 'version',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.RevisionLocationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2699
      },
      "name": "RevisionLocationProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-githublocation"
            },
            "stability": "external",
            "summary": "Information about the location of application artifacts stored in GitHub."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2705
          },
          "name": "gitHubLocation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.GitHubLocationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-revisiontype"
            },
            "remarks": "- S3: An application revision stored in Amazon S3.\n- GitHub: An application revision stored in GitHub (EC2/On-premises deployments only).\n- String: A YAML-formatted or JSON-formatted string ( AWS Lambda deployments only).\n- AppSpecContent: An `AppSpecContent` object that contains the contents of an AppSpec file for an AWS Lambda or Amazon ECS deployment. The content is formatted as JSON or YAML stored as a RawString.",
            "stability": "external",
            "summary": "The type of application revision:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2716
          },
          "name": "revisionType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location"
            },
            "stability": "external",
            "summary": "Information about the location of a revision stored in Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2722
          },
          "name": "s3Location",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.S3LocationProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.RevisionLocationProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.S3LocationProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`S3Location` is a property of the [CodeDeploy DeploymentGroup Revision](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision.html) property that specifies the location of an application revision that is stored in Amazon Simple Storage Service ( Amazon S3 ).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst s3LocationProperty: codedeploy.CfnDeploymentGroup.S3LocationProperty = {\n  bucket: 'bucket',\n  key: 'key',\n\n  // the properties below are optional\n  bundleType: 'bundleType',\n  eTag: 'eTag',\n  version: 'version',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.S3LocationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2789
      },
      "name": "S3LocationProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location-bucket"
            },
            "stability": "external",
            "summary": "The name of the Amazon S3 bucket where the application revision is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2795
          },
          "name": "bucket",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location-key"
            },
            "stability": "external",
            "summary": "The name of the Amazon S3 object that represents the bundled artifacts for the application revision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2821
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location-bundletype"
            },
            "remarks": "- JSON\n- tar: A tar archive file.\n- tgz: A compressed tar archive file.\n- YAML\n- zip: A zip archive file.",
            "stability": "external",
            "summary": "The file type of the application revision. Must be one of the following:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2807
          },
          "name": "bundleType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location-etag"
            },
            "remarks": "If the ETag is not specified as an input parameter, ETag validation of the object is skipped.",
            "stability": "external",
            "summary": "The ETag of the Amazon S3 object that represents the bundled artifacts for the application revision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2815
          },
          "name": "eTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-deployment-revision-s3location.html#cfn-properties-codedeploy-deploymentgroup-deployment-revision-s3location-value"
            },
            "remarks": "If the version is not specified, the system uses the most recent version by default.",
            "stability": "external",
            "summary": "A specific version of the Amazon S3 object that represents the bundled artifacts for the application revision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2829
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.S3LocationProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TagFilterProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-tagfilter.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For more information about using tags and tag groups to help manage your Amazon EC2 instances and on-premises instances, see [Tagging Instances for Deployment Groups in AWS CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-tagging.html) in the *AWS CodeDeploy User Guide* .",
        "stability": "external",
        "summary": "`TagFilter` is a property type of the [AWS::CodeDeploy::DeploymentGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html) resource that specifies which on-premises instances to associate with the deployment group. To register on-premise instances with AWS CodeDeploy , see [Configure Existing On-Premises Instances by Using AWS CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-on-premises.html) in the *AWS CodeDeploy User Guide* .",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst tagFilterProperty: codedeploy.CfnDeploymentGroup.TagFilterProperty = {\n  key: 'key',\n  type: 'type',\n  value: 'value',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TagFilterProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2906
      },
      "name": "TagFilterProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-tagfilter.html#cfn-codedeploy-deploymentgroup-tagfilter-key"
            },
            "stability": "external",
            "summary": "The on-premises instance tag filter key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2912
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-tagfilter.html#cfn-codedeploy-deploymentgroup-tagfilter-type"
            },
            "remarks": "- KEY_ONLY: Key only.\n- VALUE_ONLY: Value only.\n- KEY_AND_VALUE: Key and value.",
            "stability": "external",
            "summary": "The on-premises instance tag filter type:."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2922
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-tagfilter.html#cfn-codedeploy-deploymentgroup-tagfilter-value"
            },
            "stability": "external",
            "summary": "The on-premises instance tag filter value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 2928
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.TagFilterProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TargetGroupInfoProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-targetgroupinfo.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "Instances are registered as targets in a target group, and traffic is routed to the target group. For more information, see [TargetGroupInfo](https://docs.aws.amazon.com/codedeploy/latest/APIReference/API_TargetGroupInfo.html) in the *AWS CodeDeploy API Reference*\n\nIf you specify the `TargetGroupInfo` property, the `DeploymentStyle.DeploymentOption` property must be set to `WITH_TRAFFIC_CONTROL` for CodeDeploy to route your traffic using the specified target groups.\n\n`TargetGroupInfo` is a property of the [LoadBalancerInfo](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-loadbalancerinfo.html) property type.",
        "stability": "external",
        "summary": "The `TargetGroupInfo` property type specifies information about a target group in Elastic Load Balancing to use in a deployment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst targetGroupInfoProperty: codedeploy.CfnDeploymentGroup.TargetGroupInfoProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TargetGroupInfoProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 2999
      },
      "name": "TargetGroupInfoProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-targetgroupinfo.html#cfn-codedeploy-deploymentgroup-targetgroupinfo-name"
            },
            "remarks": "For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes. No duplicates allowed.\n\n> AWS CloudFormation supports blue/green deployments on AWS Lambda compute platforms only.\n\nThis value cannot exceed 32 characters, so you should use the `Name` property of the target group, or the `TargetGroupName` attribute with the `Fn::GetAtt` intrinsic function, as shown in the following example. Don't use the group's Amazon Resource Name (ARN) or `TargetGroupFullName` attribute.",
            "stability": "external",
            "summary": "For blue/green deployments, the name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 3009
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.TargetGroupInfoProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TargetGroupPairInfoProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-targetgrouppairinfo.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "An optional test traffic route can be specified.",
        "stability": "external",
        "summary": "Information about two target groups and how traffic is routed during an Amazon ECS deployment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst targetGroupPairInfoProperty: codedeploy.CfnDeploymentGroup.TargetGroupPairInfoProperty = {\n  prodTrafficRoute: {\n    listenerArns: ['listenerArns'],\n  },\n  targetGroups: [{\n    name: 'name',\n  }],\n  testTrafficRoute: {\n    listenerArns: ['listenerArns'],\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TargetGroupPairInfoProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 3070
      },
      "name": "TargetGroupPairInfoProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-targetgrouppairinfo.html#cfn-codedeploy-deploymentgroup-targetgrouppairinfo-prodtrafficroute"
            },
            "stability": "external",
            "summary": "The path used by a load balancer to route production traffic when an Amazon ECS deployment is complete."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 3076
          },
          "name": "prodTrafficRoute",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TrafficRouteProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-targetgrouppairinfo.html#cfn-codedeploy-deploymentgroup-targetgrouppairinfo-targetgroups"
            },
            "remarks": "One is associated with the original task set. The second is associated with the task set that serves traffic after the deployment is complete.",
            "stability": "external",
            "summary": "One pair of target groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 3082
          },
          "name": "targetGroups",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TargetGroupInfoProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-targetgrouppairinfo.html#cfn-codedeploy-deploymentgroup-targetgrouppairinfo-testtrafficroute"
            },
            "remarks": "Validation can occur while test traffic is served during a deployment.",
            "stability": "external",
            "summary": "An optional path used by a load balancer to route test traffic after an Amazon ECS deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 3088
          },
          "name": "testTrafficRoute",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TrafficRouteProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.TargetGroupPairInfoProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TrafficRouteProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-trafficroute.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The listener contains the path used to route traffic that is received from the load balancer to a target group.",
        "stability": "external",
        "summary": "Information about a listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst trafficRouteProperty: codedeploy.CfnDeploymentGroup.TrafficRouteProperty = {\n  listenerArns: ['listenerArns'],\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TrafficRouteProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 3155
      },
      "name": "TrafficRouteProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-trafficroute.html#cfn-codedeploy-deploymentgroup-trafficroute-listenerarns"
            },
            "remarks": "The listener identifies the route between a target group and a load balancer. This is an array of strings with a maximum size of one.",
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of one listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 3161
          },
          "name": "listenerArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.TrafficRouteProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TriggerConfigProperty": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-triggerconfig.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Information about notification triggers for the deployment group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst triggerConfigProperty: codedeploy.CfnDeploymentGroup.TriggerConfigProperty = {\n  triggerEvents: ['triggerEvents'],\n  triggerName: 'triggerName',\n  triggerTargetArn: 'triggerTargetArn',\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TriggerConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 3222
      },
      "name": "TriggerConfigProperty",
      "namespace": "CfnDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-triggerconfig.html#cfn-codedeploy-deploymentgroup-triggerconfig-triggerevents"
            },
            "stability": "external",
            "summary": "The event type or types that trigger notifications."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 3228
          },
          "name": "triggerEvents",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-triggerconfig.html#cfn-codedeploy-deploymentgroup-triggerconfig-triggername"
            },
            "stability": "external",
            "summary": "The name of the notification trigger."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 3234
          },
          "name": "triggerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codedeploy-deploymentgroup-triggerconfig.html#cfn-codedeploy-deploymentgroup-triggerconfig-triggertargetarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service topic through which notifications about deployment or instance events are sent."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 3240
          },
          "name": "triggerTargetArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroup.TriggerConfigProperty"
    },
    "@aws-cdk/aws-codedeploy.CfnDeploymentGroupProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnDeploymentGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst cfnDeploymentGroupProps: codedeploy.CfnDeploymentGroupProps = {\n  applicationName: 'applicationName',\n  serviceRoleArn: 'serviceRoleArn',\n\n  // the properties below are optional\n  alarmConfiguration: {\n    alarms: [{\n      name: 'name',\n    }],\n    enabled: false,\n    ignorePollAlarmFailure: false,\n  },\n  autoRollbackConfiguration: {\n    enabled: false,\n    events: ['events'],\n  },\n  autoScalingGroups: ['autoScalingGroups'],\n  blueGreenDeploymentConfiguration: {\n    deploymentReadyOption: {\n      actionOnTimeout: 'actionOnTimeout',\n      waitTimeInMinutes: 123,\n    },\n    greenFleetProvisioningOption: {\n      action: 'action',\n    },\n    terminateBlueInstancesOnDeploymentSuccess: {\n      action: 'action',\n      terminationWaitTimeInMinutes: 123,\n    },\n  },\n  deployment: {\n    revision: {\n      gitHubLocation: {\n        commitId: 'commitId',\n        repository: 'repository',\n      },\n      revisionType: 'revisionType',\n      s3Location: {\n        bucket: 'bucket',\n        key: 'key',\n\n        // the properties below are optional\n        bundleType: 'bundleType',\n        eTag: 'eTag',\n        version: 'version',\n      },\n    },\n\n    // the properties below are optional\n    description: 'description',\n    ignoreApplicationStopFailures: false,\n  },\n  deploymentConfigName: 'deploymentConfigName',\n  deploymentGroupName: 'deploymentGroupName',\n  deploymentStyle: {\n    deploymentOption: 'deploymentOption',\n    deploymentType: 'deploymentType',\n  },\n  ec2TagFilters: [{\n    key: 'key',\n    type: 'type',\n    value: 'value',\n  }],\n  ec2TagSet: {\n    ec2TagSetList: [{\n      ec2TagGroup: [{\n        key: 'key',\n        type: 'type',\n        value: 'value',\n      }],\n    }],\n  },\n  ecsServices: [{\n    clusterName: 'clusterName',\n    serviceName: 'serviceName',\n  }],\n  loadBalancerInfo: {\n    elbInfoList: [{\n      name: 'name',\n    }],\n    targetGroupInfoList: [{\n      name: 'name',\n    }],\n    targetGroupPairInfoList: [{\n      prodTrafficRoute: {\n        listenerArns: ['listenerArns'],\n      },\n      targetGroups: [{\n        name: 'name',\n      }],\n      testTrafficRoute: {\n        listenerArns: ['listenerArns'],\n      },\n    }],\n  },\n  onPremisesInstanceTagFilters: [{\n    key: 'key',\n    type: 'type',\n    value: 'value',\n  }],\n  onPremisesTagSet: {\n    onPremisesTagSetList: [{\n      onPremisesTagGroup: [{\n        key: 'key',\n        type: 'type',\n        value: 'value',\n      }],\n    }],\n  },\n  outdatedInstancesStrategy: 'outdatedInstancesStrategy',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n  triggerConfigurations: [{\n    triggerEvents: ['triggerEvents'],\n    triggerName: 'triggerName',\n    triggerTargetArn: 'triggerTargetArn',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codedeploy.generated.ts",
        "line": 753
      },
      "name": "CfnDeploymentGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-applicationname"
            },
            "stability": "external",
            "summary": "The name of an existing CodeDeploy application to associate this deployment group with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 760
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-servicerolearn"
            },
            "remarks": "For more information, see [Create a Service Role for AWS CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-service-role.html) in the *AWS CodeDeploy User Guide* .\n\n> In some cases, you might need to add a dependency on the service role's policy. For more information, see IAM role policy in [DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) .",
            "stability": "external",
            "summary": "A service role Amazon Resource Name (ARN) that grants CodeDeploy permission to make calls to AWS services on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 769
          },
          "name": "serviceRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-alarmconfiguration"
            },
            "stability": "external",
            "summary": "Information about the Amazon CloudWatch alarms that are associated with the deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 776
          },
          "name": "alarmConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AlarmConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autorollbackconfiguration"
            },
            "remarks": "If you specify this property, don't specify the `Deployment` property.",
            "stability": "external",
            "summary": "Information about the automatic rollback configuration that is associated with the deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 783
          },
          "name": "autoRollbackConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.AutoRollbackConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autoscalinggroups"
            },
            "remarks": "Duplicates are not allowed.",
            "stability": "external",
            "summary": "A list of associated Auto Scaling groups that CodeDeploy automatically deploys revisions to when new instances are created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 790
          },
          "name": "autoScalingGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration"
            },
            "stability": "external",
            "summary": "Information about blue/green deployment options for a deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 797
          },
          "name": "blueGreenDeploymentConfiguration",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.BlueGreenDeploymentConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deployment"
            },
            "remarks": "If you specify this property, your target application revision is deployed as soon as the provisioning process is complete. If you specify this property, don't specify the `AutoRollbackConfiguration` property.",
            "stability": "external",
            "summary": "The application revision to deploy to this deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 804
          },
          "name": "deployment",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentconfigname"
            },
            "remarks": "With predefined configurations, you can deploy application revisions to one instance at a time ( `CodeDeployDefault.OneAtATime` ), half of the instances at a time ( `CodeDeployDefault.HalfAtATime` ), or all the instances at once ( `CodeDeployDefault.AllAtOnce` ). For more information and valid values, see [Working with Deployment Configurations](https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html) in the *AWS CodeDeploy User Guide* .",
            "stability": "external",
            "summary": "A deployment configuration name or a predefined configuration name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 811
          },
          "name": "deploymentConfigName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentgroupname"
            },
            "remarks": "If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the deployment group name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html) .\n\n> If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.",
            "stability": "external",
            "summary": "A name for the deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 820
          },
          "name": "deploymentGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentstyle"
            },
            "remarks": "If you specify this property with a blue/green deployment type, don't specify the `AutoScalingGroups` , `LoadBalancerInfo` , or `Deployment` properties.\n\n> For blue/green deployments, AWS CloudFormation supports deployments on Lambda compute platforms only. You can perform Amazon ECS blue/green deployments using `AWS::CodeDeploy::BlueGreen` hook. See [Perform Amazon ECS blue/green deployments through CodeDeploy using AWS CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/blue-green.html) for more information.",
            "stability": "external",
            "summary": "Attributes that determine the type of deployment to run and whether to route deployment traffic behind a load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 831
          },
          "name": "deploymentStyle",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.DeploymentStyleProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagfilters"
            },
            "remarks": "CodeDeploy includes all Amazon EC2 instances identified by any of the tags you specify in this deployment group. Duplicates are not allowed.\n\nYou can specify `EC2TagFilters` or `Ec2TagSet` , but not both.",
            "stability": "external",
            "summary": "The Amazon EC2 tags that are already applied to Amazon EC2 instances that you want to include in the deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 840
          },
          "name": "ec2TagFilters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagset"
            },
            "remarks": "The deployment group includes only Amazon EC2 instances identified by all the tag groups. Cannot be used in the same call as `ec2TagFilter` .",
            "stability": "external",
            "summary": "Information about groups of tags applied to Amazon EC2 instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 847
          },
          "name": "ec2TagSet",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.EC2TagSetProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ecsservices"
            },
            "remarks": "This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format `<clustername>:<servicename>` .",
            "stability": "external",
            "summary": "The target Amazon ECS services in the deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 854
          },
          "name": "ecsServices",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.ECSServiceProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo"
            },
            "remarks": "For more information, see [Integrating CodeDeploy with Elastic Load Balancing](https://docs.aws.amazon.com/codedeploy/latest/userguide/integrations-aws-elastic-load-balancing.html) in the *AWS CodeDeploy User Guide* .",
            "stability": "external",
            "summary": "Information about the load balancer to use in a deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 861
          },
          "name": "loadBalancerInfo",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.LoadBalancerInfoProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisesinstancetagfilters"
            },
            "remarks": "CodeDeploy includes all on-premises instances identified by any of the tags you specify in this deployment group. To register on-premises instances with CodeDeploy , see [Working with On-Premises Instances for CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-on-premises.html) in the *AWS CodeDeploy User Guide* . Duplicates are not allowed.\n\nYou can specify `OnPremisesInstanceTagFilters` or `OnPremisesInstanceTagSet` , but not both.",
            "stability": "external",
            "summary": "The on-premises instance tags already applied to on-premises instances that you want to include in the deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 870
          },
          "name": "onPremisesInstanceTagFilters",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TagFilterProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisestagset"
            },
            "remarks": "The deployment group includes only on-premises instances identified by all the tag groups.\n\nYou can specify `OnPremisesInstanceTagFilters` or `OnPremisesInstanceTagSet` , but not both.",
            "stability": "external",
            "summary": "Information about groups of tags applied to on-premises instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 879
          },
          "name": "onPremisesTagSet",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.OnPremisesTagSetProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-outdatedinstancesstrategy"
            },
            "remarks": "If this option is set to `UPDATE` or is unspecified, CodeDeploy initiates one or more 'auto-update outdated instances' deployments to apply the deployed application revision to the new Amazon EC2 instances.\n\nIf this option is set to `IGNORE` , CodeDeploy does not initiate a deployment to update the new Amazon EC2 instances. This may result in instances having different revisions.",
            "stability": "external",
            "summary": "Indicates what happens when new Amazon EC2 instances are launched mid-deployment and do not receive the deployed application revision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 890
          },
          "name": "outdatedInstancesStrategy",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-tags"
            },
            "remarks": "Each tag consists of a key and an optional value, both of which you define.",
            "stability": "external",
            "summary": "The metadata that you apply to CodeDeploy deployment groups to help you organize and categorize them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 897
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-triggerconfigurations"
            },
            "remarks": "Duplicates are not allowed",
            "stability": "external",
            "summary": "Information about triggers associated with the deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codedeploy.generated.ts",
            "line": 904
          },
          "name": "triggerConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codedeploy.CfnDeploymentGroup.TriggerConfigProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codedeploy.generated:CfnDeploymentGroupProps"
    },
    "@aws-cdk/aws-codedeploy.CustomLambdaDeploymentConfig": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CodeDeploy::DeploymentGroup",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A custom Deployment Configuration for a Lambda Deployment Group.",
        "example": "const config = new codedeploy.CustomLambdaDeploymentConfig(this, 'CustomConfig', {\n  type: codedeploy.CustomLambdaDeploymentConfigType.CANARY,\n  interval: Duration.minutes(1),\n  percentage: 5,\n});\n\ndeclare const application: codedeploy.LambdaApplication;\ndeclare const alias: lambda.Alias;\nconst deploymentGroup = new codedeploy.LambdaDeploymentGroup(this, 'BlueGreenDeployment', {\n  application,\n  alias,\n  deploymentConfig: config,\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.CustomLambdaDeploymentConfig",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/lambda/custom-deployment-config.ts",
          "line": 72
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.CustomLambdaDeploymentConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda/custom-deployment-config.ts",
        "line": 58
      },
      "methods": [
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/lambda/custom-deployment-config.ts",
            "line": 146
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "CustomLambdaDeploymentConfig",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The arn of the deployment config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/custom-deployment-config.ts",
            "line": 70
          },
          "name": "deploymentConfigArn",
          "overrides": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the deployment config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/custom-deployment-config.ts",
            "line": 64
          },
          "name": "deploymentConfigName",
          "overrides": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda/custom-deployment-config:CustomLambdaDeploymentConfig"
    },
    "@aws-cdk/aws-codedeploy.CustomLambdaDeploymentConfigProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of a reference to a CodeDeploy Lambda Deployment Configuration.",
        "example": "const config = new codedeploy.CustomLambdaDeploymentConfig(this, 'CustomConfig', {\n  type: codedeploy.CustomLambdaDeploymentConfigType.CANARY,\n  interval: Duration.minutes(1),\n  percentage: 5,\n});\n\ndeclare const application: codedeploy.LambdaApplication;\ndeclare const alias: lambda.Alias;\nconst deploymentGroup = new codedeploy.LambdaDeploymentGroup(this, 'BlueGreenDeployment', {\n  application,\n  alias,\n  deploymentConfig: config,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.CustomLambdaDeploymentConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/custom-deployment-config.ts",
        "line": 25
      },
      "name": "CustomLambdaDeploymentConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The interval, in number of minutes: - For LINEAR, how frequently additional traffic is shifted - For CANARY, how long to shift traffic before the full deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/custom-deployment-config.ts",
            "line": 44
          },
          "name": "interval",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The integer percentage of traffic to shift: - For LINEAR, the percentage to shift every interval - For CANARY, the percentage to shift until the interval passes, before the full deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/custom-deployment-config.ts",
            "line": 37
          },
          "name": "percentage",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of deployment config, either CANARY or LINEAR."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/custom-deployment-config.ts",
            "line": 30
          },
          "name": "type",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.CustomLambdaDeploymentConfigType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- automatically generated name",
            "remarks": "Must be unique per account/region.\nOther parameters cannot be updated if this name is provided.",
            "stability": "stable",
            "summary": "The verbatim name of the deployment config."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/custom-deployment-config.ts",
            "line": 51
          },
          "name": "deploymentConfigName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda/custom-deployment-config:CustomLambdaDeploymentConfigProps"
    },
    "@aws-cdk/aws-codedeploy.CustomLambdaDeploymentConfigType": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "stability": "stable",
        "summary": "Lambda Deployment config type.",
        "example": "const config = new codedeploy.CustomLambdaDeploymentConfig(this, 'CustomConfig', {\n  type: codedeploy.CustomLambdaDeploymentConfigType.CANARY,\n  interval: Duration.minutes(1),\n  percentage: 5,\n});\n\ndeclare const application: codedeploy.LambdaApplication;\ndeclare const alias: lambda.Alias;\nconst deploymentGroup = new codedeploy.LambdaDeploymentGroup(this, 'BlueGreenDeployment', {\n  application,\n  alias,\n  deploymentConfig: config,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.CustomLambdaDeploymentConfigType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/lambda/custom-deployment-config.ts",
        "line": 10
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Canary deployment type."
          },
          "name": "CANARY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Linear deployment type."
          },
          "name": "LINEAR"
        }
      ],
      "name": "CustomLambdaDeploymentConfigType",
      "symbolId": "lib/lambda/custom-deployment-config:CustomLambdaDeploymentConfigType"
    },
    "@aws-cdk/aws-codedeploy.EcsApplication": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CodeDeploy::Application",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "stable",
        "summary": "A CodeDeploy Application that deploys to an Amazon ECS service.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst ecsApplication = new codedeploy.EcsApplication(this, 'MyEcsApplication', /* all optional props */ {\n  applicationName: 'applicationName',\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.EcsApplication",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/ecs/application.ts",
          "line": 62
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.EcsApplicationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codedeploy.IEcsApplication"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/application.ts",
        "line": 41
      },
      "methods": [
        {
          "docs": {
            "returns": "a Construct representing a reference to an existing Application",
            "stability": "stable",
            "summary": "Import an Application defined either outside the CDK, or in a different CDK Stack."
          },
          "locationInModule": {
            "filename": "lib/ecs/application.ts",
            "line": 50
          },
          "name": "fromEcsApplicationName",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this new Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical ID of this new Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the name of the application to import."
              },
              "name": "ecsApplicationName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.IEcsApplication"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/ecs/application.ts",
            "line": 81
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "EcsApplication",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/application.ts",
            "line": 59
          },
          "name": "applicationArn",
          "overrides": "@aws-cdk/aws-codedeploy.IEcsApplication",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/application.ts",
            "line": 60
          },
          "name": "applicationName",
          "overrides": "@aws-cdk/aws-codedeploy.IEcsApplication",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ecs/application:EcsApplication"
    },
    "@aws-cdk/aws-codedeploy.EcsApplicationProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link EcsApplication}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst ecsApplicationProps: codedeploy.EcsApplicationProps = {\n  applicationName: 'applicationName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.EcsApplicationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/application.ts",
        "line": 27
      },
      "name": "EcsApplicationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "an auto-generated name will be used",
            "stability": "stable",
            "summary": "The physical, human-readable name of the CodeDeploy Application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/application.ts",
            "line": 33
          },
          "name": "applicationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ecs/application:EcsApplicationProps"
    },
    "@aws-cdk/aws-codedeploy.EcsDeploymentConfig": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "custom": {
          "resource": "AWS::CodeDeploy::DeploymentConfig"
        },
        "remarks": "Note: This class currently stands as namespaced container of the default configurations\nuntil CloudFormation supports custom ECS Deployment Configs. Until then it is closed\n(private constructor) and does not extend {@link cdk.Construct}",
        "stability": "stable",
        "summary": "A custom Deployment Configuration for an ECS Deployment Group."
      },
      "fqn": "@aws-cdk/aws-codedeploy.EcsDeploymentConfig",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/deployment-config.ts",
        "line": 27
      },
      "methods": [
        {
          "docs": {
            "returns": "a Construct representing a reference to an existing custom Deployment Configuration",
            "stability": "stable",
            "summary": "Import a custom Deployment Configuration for an ECS Deployment Group defined outside the CDK."
          },
          "locationInModule": {
            "filename": "lib/ecs/deployment-config.ts",
            "line": 38
          },
          "name": "fromEcsDeploymentConfigName",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this new Construct."
              },
              "name": "_scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical ID of this new Construct."
              },
              "name": "_id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the name of the referenced custom Deployment Configuration."
              },
              "name": "ecsDeploymentConfigName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.IEcsDeploymentConfig"
            }
          },
          "static": true
        }
      ],
      "name": "EcsDeploymentConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deployment-config.ts",
            "line": 28
          },
          "name": "ALL_AT_ONCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IEcsDeploymentConfig"
          }
        }
      ],
      "symbolId": "lib/ecs/deployment-config:EcsDeploymentConfig"
    },
    "@aws-cdk/aws-codedeploy.EcsDeploymentGroup": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "custom": {
          "resource": "AWS::CodeDeploy::DeploymentGroup"
        },
        "remarks": "Until then it is closed (private constructor) and does not\nextend {@link cdk.Construct}.",
        "stability": "stable",
        "summary": "Note: This class currently stands as a namespaced container for importing an ECS Deployment Group defined outside the CDK app until CloudFormation supports provisioning ECS Deployment Groups."
      },
      "fqn": "@aws-cdk/aws-codedeploy.EcsDeploymentGroup",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/deployment-group.ts",
        "line": 42
      },
      "methods": [
        {
          "docs": {
            "returns": "a Construct representing a reference to an existing Deployment Group",
            "stability": "stable",
            "summary": "Import an ECS Deployment Group defined outside the CDK app."
          },
          "locationInModule": {
            "filename": "lib/ecs/deployment-group.ts",
            "line": 51
          },
          "name": "fromEcsDeploymentGroupAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this new Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical ID of this new Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the properties of the referenced Deployment Group."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-codedeploy.EcsDeploymentGroupAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.IEcsDeploymentGroup"
            }
          },
          "static": true
        }
      ],
      "name": "EcsDeploymentGroup",
      "symbolId": "lib/ecs/deployment-group:EcsDeploymentGroup"
    },
    "@aws-cdk/aws-codedeploy.EcsDeploymentGroupAttributes": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "see": "EcsDeploymentGroup#fromEcsDeploymentGroupAttributes",
        "stability": "stable",
        "summary": "Properties of a reference to a CodeDeploy ECS Deployment Group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\n\ndeclare const ecsApplication: codedeploy.EcsApplication;\ndeclare const ecsDeploymentConfig: codedeploy.IEcsDeploymentConfig;\nconst ecsDeploymentGroupAttributes: codedeploy.EcsDeploymentGroupAttributes = {\n  application: ecsApplication,\n  deploymentGroupName: 'deploymentGroupName',\n\n  // the properties below are optional\n  deploymentConfig: ecsDeploymentConfig,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.EcsDeploymentGroupAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/deployment-group.ts",
        "line": 68
      },
      "name": "EcsDeploymentGroupAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The reference to the CodeDeploy ECS Application that this Deployment Group belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deployment-group.ts",
            "line": 73
          },
          "name": "application",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IEcsApplication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The physical, human-readable name of the CodeDeploy ECS Deployment Group that we are referencing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deployment-group.ts",
            "line": 79
          },
          "name": "deploymentGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "EcsDeploymentConfig.ALL_AT_ONCE",
            "stability": "stable",
            "summary": "The Deployment Configuration this Deployment Group uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deployment-group.ts",
            "line": 86
          },
          "name": "deploymentConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IEcsDeploymentConfig"
          }
        }
      ],
      "symbolId": "lib/ecs/deployment-group:EcsDeploymentGroupAttributes"
    },
    "@aws-cdk/aws-codedeploy.IEcsApplication": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "remarks": "If you're managing the Application alongside the rest of your CDK resources,\nuse the {@link EcsApplication} class.\n\nIf you want to reference an already existing Application,\nor one defined in a different CDK Stack,\nuse the {@link EcsApplication#fromEcsApplicationName} method.",
        "stability": "stable",
        "summary": "Represents a reference to a CodeDeploy Application deploying to Amazon ECS."
      },
      "fqn": "@aws-cdk/aws-codedeploy.IEcsApplication",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/application.ts",
        "line": 16
      },
      "name": "IEcsApplication",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/application.ts",
            "line": 18
          },
          "name": "applicationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/application.ts",
            "line": 21
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ecs/application:IEcsApplication"
    },
    "@aws-cdk/aws-codedeploy.IEcsDeploymentConfig": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "remarks": "The default, pre-defined Configurations are available as constants on the {@link EcsDeploymentConfig} class\n(for example, `EcsDeploymentConfig.AllAtOnce`).\n\nNote: CloudFormation does not currently support creating custom ECS configs outside\nof using a custom resource. You can import custom deployment config created outside the\nCDK or via a custom resource with {@link EcsDeploymentConfig#fromEcsDeploymentConfigName}.",
        "stability": "stable",
        "summary": "The Deployment Configuration of an ECS Deployment Group."
      },
      "fqn": "@aws-cdk/aws-codedeploy.IEcsDeploymentConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/deployment-config.ts",
        "line": 13
      },
      "name": "IEcsDeploymentConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deployment-config.ts",
            "line": 15
          },
          "name": "deploymentConfigArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deployment-config.ts",
            "line": 14
          },
          "name": "deploymentConfigName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ecs/deployment-config:IEcsDeploymentConfig"
    },
    "@aws-cdk/aws-codedeploy.IEcsDeploymentGroup": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "stability": "stable",
        "summary": "Interface for an ECS deployment group."
      },
      "fqn": "@aws-cdk/aws-codedeploy.IEcsDeploymentGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/deployment-group.ts",
        "line": 10
      },
      "name": "IEcsDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The reference to the CodeDeploy ECS Application that this Deployment Group belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deployment-group.ts",
            "line": 14
          },
          "name": "application",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IEcsApplication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Deployment Configuration this Group uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deployment-group.ts",
            "line": 31
          },
          "name": "deploymentConfig",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IEcsDeploymentConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deployment-group.ts",
            "line": 26
          },
          "name": "deploymentGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The physical name of the CodeDeploy Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/deployment-group.ts",
            "line": 20
          },
          "name": "deploymentGroupName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ecs/deployment-group:IEcsDeploymentGroup"
    },
    "@aws-cdk/aws-codedeploy.ILambdaApplication": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "remarks": "If you're managing the Application alongside the rest of your CDK resources,\nuse the {@link LambdaApplication} class.\n\nIf you want to reference an already existing Application,\nor one defined in a different CDK Stack,\nuse the {@link LambdaApplication#fromLambdaApplicationName} method.",
        "stability": "stable",
        "summary": "Represents a reference to a CodeDeploy Application deploying to AWS Lambda."
      },
      "fqn": "@aws-cdk/aws-codedeploy.ILambdaApplication",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/application.ts",
        "line": 16
      },
      "name": "ILambdaApplication",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/application.ts",
            "line": 18
          },
          "name": "applicationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/application.ts",
            "line": 21
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda/application:ILambdaApplication"
    },
    "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "remarks": "The default, pre-defined Configurations are available as constants on the {@link LambdaDeploymentConfig} class\n(`LambdaDeploymentConfig.AllAtOnce`, `LambdaDeploymentConfig.Canary10Percent30Minutes`, etc.).\n\nNote: CloudFormation does not currently support creating custom lambda configs outside\nof using a custom resource. You can import custom deployment config created outside the\nCDK or via a custom resource with {@link LambdaDeploymentConfig#import}.",
        "stability": "stable",
        "summary": "The Deployment Configuration of a Lambda Deployment Group."
      },
      "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/deployment-config.ts",
        "line": 13
      },
      "name": "ILambdaDeploymentConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 15
          },
          "name": "deploymentConfigArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 14
          },
          "name": "deploymentConfigName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda/deployment-config:ILambdaDeploymentConfig"
    },
    "@aws-cdk/aws-codedeploy.ILambdaDeploymentGroup": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "stability": "stable",
        "summary": "Interface for a Lambda deployment groups."
      },
      "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/deployment-group.ts",
        "line": 15
      },
      "name": "ILambdaDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The reference to the CodeDeploy Lambda Application that this Deployment Group belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 19
          },
          "name": "application",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaApplication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Deployment Configuration this Group uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 36
          },
          "name": "deploymentConfig",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 31
          },
          "name": "deploymentGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The physical name of the CodeDeploy Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 25
          },
          "name": "deploymentGroupName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda/deployment-group:ILambdaDeploymentGroup"
    },
    "@aws-cdk/aws-codedeploy.IServerApplication": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "remarks": "If you're managing the Application alongside the rest of your CDK resources,\nuse the {@link ServerApplication} class.\n\nIf you want to reference an already existing Application,\nor one defined in a different CDK Stack,\nuse the {@link #fromServerApplicationName} method.",
        "stability": "stable",
        "summary": "Represents a reference to a CodeDeploy Application deploying to EC2/on-premise instances."
      },
      "fqn": "@aws-cdk/aws-codedeploy.IServerApplication",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/server/application.ts",
        "line": 16
      },
      "name": "IServerApplication",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/application.ts",
            "line": 18
          },
          "name": "applicationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/application.ts",
            "line": 21
          },
          "name": "applicationName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/server/application:IServerApplication"
    },
    "@aws-cdk/aws-codedeploy.IServerDeploymentConfig": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "remarks": "The default, pre-defined Configurations are available as constants on the {@link ServerDeploymentConfig} class\n(`ServerDeploymentConfig.HALF_AT_A_TIME`, `ServerDeploymentConfig.ALL_AT_ONCE`, etc.).\nTo create a custom Deployment Configuration,\ninstantiate the {@link ServerDeploymentConfig} Construct.",
        "stability": "stable",
        "summary": "The Deployment Configuration of an EC2/on-premise Deployment Group."
      },
      "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/server/deployment-config.ts",
        "line": 13
      },
      "name": "IServerDeploymentConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 22
          },
          "name": "deploymentConfigArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 17
          },
          "name": "deploymentConfigName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/server/deployment-config:IServerDeploymentConfig"
    },
    "@aws-cdk/aws-codedeploy.IServerDeploymentGroup": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/server/deployment-group.ts",
        "line": 16
      },
      "name": "IServerDeploymentGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 17
          },
          "name": "application",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerApplication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 28
          },
          "name": "deploymentConfig",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 27
          },
          "name": "deploymentGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 22
          },
          "name": "deploymentGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 29
          },
          "name": "autoScalingGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 18
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/server/deployment-group:IServerDeploymentGroup"
    },
    "@aws-cdk/aws-codedeploy.InstanceTagSet": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "remarks": "An instance will match a set if it matches all of the groups in the set -\nin other words, sets follow 'and' semantics.\nYou can have a maximum of 3 tag groups inside a set.",
        "stability": "stable",
        "summary": "Represents a set of instance tag groups.",
        "example": "import * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\ndeclare const application: codedeploy.ServerApplication;\ndeclare const asg: autoscaling.AutoScalingGroup;\ndeclare const alarm: cloudwatch.Alarm;\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'CodeDeployDeploymentGroup', {\n  application,\n  deploymentGroupName: 'MyDeploymentGroup',\n  autoScalingGroups: [asg],\n  // adds User Data that installs the CodeDeploy agent on your auto-scaling groups hosts\n  // default: true\n  installAgent: true,\n  // adds EC2 instances matching tags\n  ec2InstanceTags: new codedeploy.InstanceTagSet(\n    {\n      // any instance with tags satisfying\n      // key1=v1 or key1=v2 or key2 (any value) or value v3 (any key)\n      // will match this group\n      'key1': ['v1', 'v2'],\n      'key2': [],\n      '': ['v3'],\n    },\n  ),\n  // adds on-premise instances matching tags\n  onPremiseInstanceTags: new codedeploy.InstanceTagSet(\n    // only instances with tags (key1=v1 or key1=v2) AND key2=v3 will match this set\n    {\n      'key1': ['v1', 'v2'],\n    },\n    {\n      'key2': ['v3'],\n    },\n  ),\n  // CloudWatch alarms\n  alarms: [alarm],\n  // whether to ignore failure to fetch the status of alarms from CloudWatch\n  // default: false\n  ignorePollAlarmsFailure: false,\n  // auto-rollback configuration\n  autoRollback: {\n    failedDeployment: true, // default: true\n    stoppedDeployment: true, // default: false\n    deploymentInAlarm: true, // default: true if you provided any alarms, false otherwise\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.InstanceTagSet",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/server/deployment-group.ts",
          "line": 120
        },
        "parameters": [
          {
            "name": "instanceTagGroups",
            "type": {
              "collection": {
                "elementtype": {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "array"
                  }
                },
                "kind": "map"
              }
            },
            "variadic": true
          }
        ],
        "variadic": true
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/server/deployment-group.ts",
        "line": 117
      },
      "name": "InstanceTagSet",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 128
          },
          "name": "instanceTagGroups",
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "collection": {
                      "elementtype": {
                        "primitive": "string"
                      },
                      "kind": "array"
                    }
                  },
                  "kind": "map"
                }
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/server/deployment-group:InstanceTagSet"
    },
    "@aws-cdk/aws-codedeploy.LambdaApplication": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CodeDeploy::Application",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A CodeDeploy Application that deploys to an AWS Lambda function.",
        "example": "const application = new codedeploy.LambdaApplication(this, 'CodeDeployApplication', {\n  applicationName: 'MyApplication', // optional property\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.LambdaApplication",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/lambda/application.ts",
          "line": 62
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.LambdaApplicationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codedeploy.ILambdaApplication"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda/application.ts",
        "line": 41
      },
      "methods": [
        {
          "docs": {
            "returns": "a Construct representing a reference to an existing Application",
            "stability": "stable",
            "summary": "Import an Application defined either outside the CDK, or in a different CDK Stack."
          },
          "locationInModule": {
            "filename": "lib/lambda/application.ts",
            "line": 50
          },
          "name": "fromLambdaApplicationName",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this new Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical ID of this new Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the name of the application to import."
              },
              "name": "lambdaApplicationName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.ILambdaApplication"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/lambda/application.ts",
            "line": 81
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "LambdaApplication",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/application.ts",
            "line": 59
          },
          "name": "applicationArn",
          "overrides": "@aws-cdk/aws-codedeploy.ILambdaApplication",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/application.ts",
            "line": 60
          },
          "name": "applicationName",
          "overrides": "@aws-cdk/aws-codedeploy.ILambdaApplication",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda/application:LambdaApplication"
    },
    "@aws-cdk/aws-codedeploy.LambdaApplicationProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link LambdaApplication}.",
        "example": "const application = new codedeploy.LambdaApplication(this, 'CodeDeployApplication', {\n  applicationName: 'MyApplication', // optional property\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.LambdaApplicationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/application.ts",
        "line": 27
      },
      "name": "LambdaApplicationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "an auto-generated name will be used",
            "stability": "stable",
            "summary": "The physical, human-readable name of the CodeDeploy Application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/application.ts",
            "line": 33
          },
          "name": "applicationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda/application:LambdaApplicationProps"
    },
    "@aws-cdk/aws-codedeploy.LambdaDeploymentConfig": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "custom": {
          "resource": "AWS::CodeDeploy::DeploymentConfig",
          "exampleMetadata": "infused"
        },
        "remarks": "Note: This class currently stands as namespaced container of the default configurations\nuntil CloudFormation supports custom Lambda Deployment Configs. Until then it is closed\n(private constructor) and does not extend {@link cdk.Construct}",
        "stability": "stable",
        "summary": "A custom Deployment Configuration for a Lambda Deployment Group.",
        "example": "declare const myApplication: codedeploy.LambdaApplication;\ndeclare const func: lambda.Function;\nconst version = func.currentVersion;\nconst version1Alias = new lambda.Alias(this, 'alias', {\n  aliasName: 'prod',\n  version,\n});\n\nconst deploymentGroup = new codedeploy.LambdaDeploymentGroup(this, 'BlueGreenDeployment', {\n  application: myApplication, // optional property: one will be created for you if not provided\n  alias: version1Alias,\n  deploymentConfig: codedeploy.LambdaDeploymentConfig.LINEAR_10PERCENT_EVERY_1MINUTE,\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.LambdaDeploymentConfig",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda/deployment-config.ts",
        "line": 40
      },
      "methods": [
        {
          "docs": {
            "returns": "a Construct representing a reference to an existing custom Deployment Configuration",
            "stability": "stable",
            "summary": "Import a custom Deployment Configuration for a Lambda Deployment Group defined outside the CDK."
          },
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 59
          },
          "name": "import",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this new Construct."
              },
              "name": "_scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical ID of this new Construct."
              },
              "name": "_id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the properties of the referenced custom Deployment Configuration."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-codedeploy.LambdaDeploymentConfigImportProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
            }
          },
          "static": true
        }
      ],
      "name": "LambdaDeploymentConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 41
          },
          "name": "ALL_AT_ONCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 44
          },
          "name": "CANARY_10PERCENT_10MINUTES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 45
          },
          "name": "CANARY_10PERCENT_15MINUTES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 42
          },
          "name": "CANARY_10PERCENT_30MINUTES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 43
          },
          "name": "CANARY_10PERCENT_5MINUTES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 46
          },
          "name": "LINEAR_10PERCENT_EVERY_10MINUTES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 47
          },
          "name": "LINEAR_10PERCENT_EVERY_1MINUTE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 48
          },
          "name": "LINEAR_10PERCENT_EVERY_2MINUTES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 49
          },
          "name": "LINEAR_10PERCENT_EVERY_3MINUTES",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        }
      ],
      "symbolId": "lib/lambda/deployment-config:LambdaDeploymentConfig"
    },
    "@aws-cdk/aws-codedeploy.LambdaDeploymentConfigImportProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "see": "LambdaDeploymentConfig#import",
        "stability": "stable",
        "summary": "Properties of a reference to a CodeDeploy Lambda Deployment Configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codedeploy from '@aws-cdk/aws-codedeploy';\nconst lambdaDeploymentConfigImportProps: codedeploy.LambdaDeploymentConfigImportProps = {\n  deploymentConfigName: 'deploymentConfigName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.LambdaDeploymentConfigImportProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/deployment-config.ts",
        "line": 23
      },
      "name": "LambdaDeploymentConfigImportProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The physical, human-readable name of the custom CodeDeploy Lambda Deployment Configuration that we are referencing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-config.ts",
            "line": 28
          },
          "name": "deploymentConfigName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda/deployment-config:LambdaDeploymentConfigImportProps"
    },
    "@aws-cdk/aws-codedeploy.LambdaDeploymentGroup": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CodeDeploy::DeploymentGroup",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "example": "const config = new codedeploy.CustomLambdaDeploymentConfig(this, 'CustomConfig', {\n  type: codedeploy.CustomLambdaDeploymentConfigType.CANARY,\n  interval: Duration.minutes(1),\n  percentage: 5,\n});\n\ndeclare const application: codedeploy.LambdaApplication;\ndeclare const alias: lambda.Alias;\nconst deploymentGroup = new codedeploy.LambdaDeploymentGroup(this, 'BlueGreenDeployment', {\n  application,\n  alias,\n  deploymentConfig: config,\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.LambdaDeploymentGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/lambda/deployment-group.ts",
          "line": 149
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.LambdaDeploymentGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codedeploy.ILambdaDeploymentGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda/deployment-group.ts",
        "line": 123
      },
      "methods": [
        {
          "docs": {
            "returns": "a Construct representing a reference to an existing Deployment Group",
            "stability": "stable",
            "summary": "Import an Lambda Deployment Group defined either outside the CDK app, or in a different AWS region."
          },
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 132
          },
          "name": "fromLambdaDeploymentGroupAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this new Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical ID of this new Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the properties of the referenced Deployment Group."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-codedeploy.LambdaDeploymentGroupAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Associates an additional alarm with this Deployment Group."
          },
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 213
          },
          "name": "addAlarm",
          "parameters": [
            {
              "docs": {
                "summary": "the alarm to associate with this Deployment Group."
              },
              "name": "alarm",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarm"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "throws": "an error if a post-hook function is already configured"
            },
            "stability": "stable",
            "summary": "Associate a function to run after deployment completes."
          },
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 236
          },
          "name": "addPostHook",
          "parameters": [
            {
              "docs": {
                "summary": "function to run after deployment completes."
              },
              "name": "postHook",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IFunction"
              }
            }
          ]
        },
        {
          "docs": {
            "custom": {
              "throws": "an error if a pre-hook function is already configured"
            },
            "stability": "stable",
            "summary": "Associate a function to run before deployment begins."
          },
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 222
          },
          "name": "addPreHook",
          "parameters": [
            {
              "docs": {
                "summary": "function to run before deployment beings."
              },
              "name": "preHook",
              "type": {
                "fqn": "@aws-cdk/aws-lambda.IFunction"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant a principal permission to codedeploy:PutLifecycleEventHookExecutionStatus on this deployment group resource."
          },
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 250
          },
          "name": "grantPutLifecycleEventHookExecutionStatus",
          "parameters": [
            {
              "docs": {
                "summary": "to grant permission to."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 258
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "LambdaDeploymentGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The reference to the CodeDeploy Lambda Application that this Deployment Group belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 139
          },
          "name": "application",
          "overrides": "@aws-cdk/aws-codedeploy.ILambdaDeploymentGroup",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaApplication"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Deployment Configuration this Group uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 142
          },
          "name": "deploymentConfig",
          "overrides": "@aws-cdk/aws-codedeploy.ILambdaDeploymentGroup",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 141
          },
          "name": "deploymentGroupArn",
          "overrides": "@aws-cdk/aws-codedeploy.ILambdaDeploymentGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The physical name of the CodeDeploy Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 140
          },
          "name": "deploymentGroupName",
          "overrides": "@aws-cdk/aws-codedeploy.ILambdaDeploymentGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 143
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lambda/deployment-group:LambdaDeploymentGroup"
    },
    "@aws-cdk/aws-codedeploy.LambdaDeploymentGroupAttributes": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "see": "LambdaDeploymentGroup#fromLambdaDeploymentGroupAttributes",
        "stability": "stable",
        "summary": "Properties of a reference to a CodeDeploy Lambda Deployment Group.",
        "example": "declare const application: codedeploy.LambdaApplication;\nconst deploymentGroup = codedeploy.LambdaDeploymentGroup.fromLambdaDeploymentGroupAttributes(this, 'ExistingCodeDeployDeploymentGroup', {\n  application,\n  deploymentGroupName: 'MyExistingDeploymentGroup',\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.LambdaDeploymentGroupAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/deployment-group.ts",
        "line": 268
      },
      "name": "LambdaDeploymentGroupAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The reference to the CodeDeploy Lambda Application that this Deployment Group belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 273
          },
          "name": "application",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaApplication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The physical, human-readable name of the CodeDeploy Lambda Deployment Group that we are referencing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 279
          },
          "name": "deploymentGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "LambdaDeploymentConfig.CANARY_10PERCENT_5MINUTES",
            "stability": "stable",
            "summary": "The Deployment Configuration this Deployment Group uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 286
          },
          "name": "deploymentConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        }
      ],
      "symbolId": "lib/lambda/deployment-group:LambdaDeploymentGroupAttributes"
    },
    "@aws-cdk/aws-codedeploy.LambdaDeploymentGroupProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link LambdaDeploymentGroup}.",
        "example": "const config = new codedeploy.CustomLambdaDeploymentConfig(this, 'CustomConfig', {\n  type: codedeploy.CustomLambdaDeploymentConfigType.CANARY,\n  interval: Duration.minutes(1),\n  percentage: 5,\n});\n\ndeclare const application: codedeploy.LambdaApplication;\ndeclare const alias: lambda.Alias;\nconst deploymentGroup = new codedeploy.LambdaDeploymentGroup(this, 'BlueGreenDeployment', {\n  application,\n  alias,\n  deploymentConfig: config,\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.LambdaDeploymentGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/deployment-group.ts",
        "line": 42
      },
      "name": "LambdaDeploymentGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "[disable-awslint:ref-via-interface] since we need to modify the alias CFN resource update policy",
            "stability": "stable",
            "summary": "Lambda Alias to shift traffic. Updating the version of the alias will trigger a CodeDeploy deployment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 89
          },
          "name": "alias",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Alias"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "CodeDeploy will stop (and optionally roll back)\na deployment if during it any of the alarms trigger.\n\nAlarms can also be added after the Deployment Group is created using the {@link #addAlarm} method.",
            "see": "https://docs.aws.amazon.com/codedeploy/latest/userguide/monitoring-create-alarms.html",
            "stability": "stable",
            "summary": "The CloudWatch alarms associated with this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 74
          },
          "name": "alarms",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarm"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- One will be created for you.",
            "stability": "stable",
            "summary": "The reference to the CodeDeploy Lambda Application that this Deployment Group belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 48
          },
          "name": "application",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaApplication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default AutoRollbackConfig.",
            "stability": "stable",
            "summary": "The auto-rollback configuration for this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 117
          },
          "name": "autoRollback",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.AutoRollbackConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "LambdaDeploymentConfig.CANARY_10PERCENT_5MINUTES",
            "stability": "stable",
            "summary": "The Deployment Configuration this Deployment Group uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 62
          },
          "name": "deploymentConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.ILambdaDeploymentConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- An auto-generated name will be used.",
            "stability": "stable",
            "summary": "The physical, human-readable name of the CodeDeploy Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 55
          },
          "name": "deploymentGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to continue a deployment even if fetching the alarm status from CloudWatch failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 110
          },
          "name": "ignorePollAlarmsFailure",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "The Lambda function to run after traffic routing starts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 103
          },
          "name": "postHook",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "stability": "stable",
            "summary": "The Lambda function to run before traffic routing starts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 96
          },
          "name": "preHook",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new Role will be created.",
            "stability": "stable",
            "summary": "The service Role of this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/deployment-group.ts",
            "line": 81
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/lambda/deployment-group:LambdaDeploymentGroupProps"
    },
    "@aws-cdk/aws-codedeploy.LoadBalancer": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "remarks": "Create instances using the static factory methods:\n{@link #classic}, {@link #application} and {@link #network}.",
        "stability": "stable",
        "summary": "An interface of an abstract load balancer, as needed by CodeDeploy.",
        "example": "import * as elb from '@aws-cdk/aws-elasticloadbalancing';\n\ndeclare const lb: elb.LoadBalancer;\nlb.addListener({\n  externalPort: 80,\n});\n\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'DeploymentGroup', {\n  loadBalancer: codedeploy.LoadBalancer.classic(lb),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.LoadBalancer",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/server/load-balancer.ts",
        "line": 24
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new CodeDeploy load balancer from an Application Load Balancer Target Group."
          },
          "locationInModule": {
            "filename": "lib/server/load-balancer.ts",
            "line": 44
          },
          "name": "application",
          "parameters": [
            {
              "docs": {
                "summary": "an ALB Target Group."
              },
              "name": "albTargetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.IApplicationTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.LoadBalancer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new CodeDeploy load balancer from a Classic ELB Load Balancer."
          },
          "locationInModule": {
            "filename": "lib/server/load-balancer.ts",
            "line": 30
          },
          "name": "classic",
          "parameters": [
            {
              "docs": {
                "summary": "a classic ELB Load Balancer."
              },
              "name": "loadBalancer",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancing.LoadBalancer"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.LoadBalancer"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates a new CodeDeploy load balancer from a Network Load Balancer Target Group."
          },
          "locationInModule": {
            "filename": "lib/server/load-balancer.ts",
            "line": 58
          },
          "name": "network",
          "parameters": [
            {
              "docs": {
                "summary": "an NLB Target Group."
              },
              "name": "nlbTargetGroup",
              "type": {
                "fqn": "@aws-cdk/aws-elasticloadbalancingv2.INetworkTargetGroup"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.LoadBalancer"
            }
          },
          "static": true
        }
      ],
      "name": "LoadBalancer",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/load-balancer.ts",
            "line": 67
          },
          "name": "generation",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.LoadBalancerGeneration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/load-balancer.ts",
            "line": 68
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/server/load-balancer:LoadBalancer"
    },
    "@aws-cdk/aws-codedeploy.LoadBalancerGeneration": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "stability": "stable",
        "summary": "The generations of AWS load balancing solutions."
      },
      "fqn": "@aws-cdk/aws-codedeploy.LoadBalancerGeneration",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/server/load-balancer.ts",
        "line": 7
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The first generation (ELB Classic)."
          },
          "name": "FIRST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The second generation (ALB and NLB)."
          },
          "name": "SECOND"
        }
      ],
      "name": "LoadBalancerGeneration",
      "symbolId": "lib/server/load-balancer:LoadBalancerGeneration"
    },
    "@aws-cdk/aws-codedeploy.MinimumHealthyHosts": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "docs": {
        "stability": "stable",
        "summary": "Minimum number of healthy hosts for a server deployment.",
        "example": "const deploymentConfig = new codedeploy.ServerDeploymentConfig(this, 'DeploymentConfiguration', {\n  deploymentConfigName: 'MyDeploymentConfiguration', // optional property\n  // one of these is required, but both cannot be specified at the same time\n  minimumHealthyHosts: codedeploy.MinimumHealthyHosts.count(2),\n  // minimumHealthyHosts: codedeploy.MinimumHealthyHosts.percentage(75),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.MinimumHealthyHosts",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/server/deployment-config.ts",
        "line": 28
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The minimum healhty hosts threshold expressed as an absolute number."
          },
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 33
          },
          "name": "count",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.MinimumHealthyHosts"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The minmum healhty hosts threshold expressed as a percentage of the fleet."
          },
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 43
          },
          "name": "percentage",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.MinimumHealthyHosts"
            }
          },
          "static": true
        }
      ],
      "name": "MinimumHealthyHosts",
      "symbolId": "lib/server/deployment-config:MinimumHealthyHosts"
    },
    "@aws-cdk/aws-codedeploy.ServerApplication": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CodeDeploy::Application",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A CodeDeploy Application that deploys to EC2/on-premise instances.",
        "example": "const application = new codedeploy.ServerApplication(this, 'CodeDeployApplication', {\n  applicationName: 'MyApplication', // optional property\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.ServerApplication",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/server/application.ts",
          "line": 63
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.ServerApplicationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codedeploy.IServerApplication"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/server/application.ts",
        "line": 41
      },
      "methods": [
        {
          "docs": {
            "returns": "a Construct representing a reference to an existing Application",
            "stability": "stable",
            "summary": "Import an Application defined either outside the CDK app, or in a different region."
          },
          "locationInModule": {
            "filename": "lib/server/application.ts",
            "line": 50
          },
          "name": "fromServerApplicationName",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this new Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical ID of this new Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the name of the application to import."
              },
              "name": "serverApplicationName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.IServerApplication"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/server/application.ts",
            "line": 82
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "ServerApplication",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/application.ts",
            "line": 60
          },
          "name": "applicationArn",
          "overrides": "@aws-cdk/aws-codedeploy.IServerApplication",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/application.ts",
            "line": 61
          },
          "name": "applicationName",
          "overrides": "@aws-cdk/aws-codedeploy.IServerApplication",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/server/application:ServerApplication"
    },
    "@aws-cdk/aws-codedeploy.ServerApplicationProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link ServerApplication}.",
        "example": "const application = new codedeploy.ServerApplication(this, 'CodeDeployApplication', {\n  applicationName: 'MyApplication', // optional property\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.ServerApplicationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/server/application.ts",
        "line": 27
      },
      "name": "ServerApplicationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "an auto-generated name will be used",
            "stability": "stable",
            "summary": "The physical, human-readable name of the CodeDeploy Application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/application.ts",
            "line": 33
          },
          "name": "applicationName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/server/application:ServerApplicationProps"
    },
    "@aws-cdk/aws-codedeploy.ServerDeploymentConfig": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CodeDeploy::DeploymentConfig",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A custom Deployment Configuration for an EC2/on-premise Deployment Group.",
        "example": "const deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'CodeDeployDeploymentGroup', {\n  deploymentConfig: codedeploy.ServerDeploymentConfig.ALL_AT_ONCE,\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.ServerDeploymentConfig",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/server/deployment-config.ts",
          "line": 109
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.ServerDeploymentConfigProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codedeploy.IServerDeploymentConfig"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/server/deployment-config.ts",
        "line": 82
      },
      "methods": [
        {
          "docs": {
            "returns": "a Construct representing a reference to an existing custom Deployment Configuration",
            "stability": "stable",
            "summary": "Import a custom Deployment Configuration for an EC2/on-premise Deployment Group defined either outside the CDK app, or in a different region."
          },
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 96
          },
          "name": "fromServerDeploymentConfigName",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this new Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical ID of this new Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the properties of the referenced custom Deployment Configuration."
              },
              "name": "serverDeploymentConfigName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 123
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "ServerDeploymentConfig",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 85
          },
          "name": "ALL_AT_ONCE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 84
          },
          "name": "HALF_AT_A_TIME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 83
          },
          "name": "ONE_AT_A_TIME",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 107
          },
          "name": "deploymentConfigArn",
          "overrides": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 106
          },
          "name": "deploymentConfigName",
          "overrides": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/server/deployment-config:ServerDeploymentConfig"
    },
    "@aws-cdk/aws-codedeploy.ServerDeploymentConfigProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of {@link ServerDeploymentConfig}.",
        "example": "const deploymentConfig = new codedeploy.ServerDeploymentConfig(this, 'DeploymentConfiguration', {\n  deploymentConfigName: 'MyDeploymentConfiguration', // optional property\n  // one of these is required, but both cannot be specified at the same time\n  minimumHealthyHosts: codedeploy.MinimumHealthyHosts.count(2),\n  // minimumHealthyHosts: codedeploy.MinimumHealthyHosts.percentage(75),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.ServerDeploymentConfigProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/server/deployment-config.ts",
        "line": 63
      },
      "name": "ServerDeploymentConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Minimum number of healthy hosts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 74
          },
          "name": "minimumHealthyHosts",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.MinimumHealthyHosts"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a name will be auto-generated",
            "stability": "stable",
            "summary": "The physical, human-readable name of the Deployment Configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-config.ts",
            "line": 69
          },
          "name": "deploymentConfigName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/server/deployment-config:ServerDeploymentConfigProps"
    },
    "@aws-cdk/aws-codedeploy.ServerDeploymentGroup": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::CodeDeploy::DeploymentGroup",
          "exampleMetadata": "infused"
        },
        "stability": "stable",
        "summary": "A CodeDeploy Deployment Group that deploys to EC2/on-premise instances.",
        "example": "import * as elb from '@aws-cdk/aws-elasticloadbalancing';\n\ndeclare const lb: elb.LoadBalancer;\nlb.addListener({\n  externalPort: 80,\n});\n\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'DeploymentGroup', {\n  loadBalancer: codedeploy.LoadBalancer.classic(lb),\n});"
      },
      "fqn": "@aws-cdk/aws-codedeploy.ServerDeploymentGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/server/deployment-group.ts",
          "line": 268
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.ServerDeploymentGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codedeploy.IServerDeploymentGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/server/deployment-group.ts",
        "line": 241
      },
      "methods": [
        {
          "docs": {
            "returns": "a Construct representing a reference to an existing Deployment Group",
            "stability": "stable",
            "summary": "Import an EC2/on-premise Deployment Group defined either outside the CDK app, or in a different region."
          },
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 251
          },
          "name": "fromServerDeploymentGroupAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the parent Construct for this new Construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical ID of this new Construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the properties of the referenced Deployment Group."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-codedeploy.ServerDeploymentGroupAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Associates an additional alarm with this Deployment Group."
          },
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 336
          },
          "name": "addAlarm",
          "parameters": [
            {
              "docs": {
                "summary": "the alarm to associate with this Deployment Group."
              },
              "name": "alarm",
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarm"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds an additional auto-scaling group to this Deployment Group."
          },
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 326
          },
          "name": "addAutoScalingGroup",
          "parameters": [
            {
              "docs": {
                "remarks": "[disable-awslint:ref-via-interface] is needed in order to install the code\ndeploy agent by updating the ASGs user data.",
                "summary": "the auto-scaling group to add to this Deployment Group."
              },
              "name": "asg",
              "type": {
                "fqn": "@aws-cdk/aws-autoscaling.AutoScalingGroup"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "stable",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 344
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "ServerDeploymentGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 258
          },
          "name": "application",
          "overrides": "@aws-cdk/aws-codedeploy.IServerDeploymentGroup",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerApplication"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 73
          },
          "name": "deploymentConfig",
          "overrides": "@aws-cdk/aws-codedeploy.IServerDeploymentGroup",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 260
          },
          "name": "deploymentGroupArn",
          "overrides": "@aws-cdk/aws-codedeploy.IServerDeploymentGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 261
          },
          "name": "deploymentGroupName",
          "overrides": "@aws-cdk/aws-codedeploy.IServerDeploymentGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 340
          },
          "name": "autoScalingGroups",
          "optional": true,
          "overrides": "@aws-cdk/aws-codedeploy.IServerDeploymentGroup",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 259
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-codedeploy.IServerDeploymentGroup",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/server/deployment-group:ServerDeploymentGroup"
    },
    "@aws-cdk/aws-codedeploy.ServerDeploymentGroupAttributes": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "see": "ServerDeploymentGroup#import",
        "stability": "stable",
        "summary": "Properties of a reference to a CodeDeploy EC2/on-premise Deployment Group.",
        "example": "declare const application: codedeploy.ServerApplication;\nconst deploymentGroup = codedeploy.ServerDeploymentGroup.fromServerDeploymentGroupAttributes(\n  this,\n  'ExistingCodeDeployDeploymentGroup', {\n    application,\n    deploymentGroupName: 'MyExistingDeploymentGroup',\n  },\n);",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.ServerDeploymentGroupAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/server/deployment-group.ts",
        "line": 37
      },
      "name": "ServerDeploymentGroupAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The reference to the CodeDeploy EC2/on-premise Application that this Deployment Group belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 42
          },
          "name": "application",
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerApplication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The physical, human-readable name of the CodeDeploy EC2/on-premise Deployment Group that we are referencing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 48
          },
          "name": "deploymentGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ServerDeploymentConfig#OneAtATime",
            "stability": "stable",
            "summary": "The Deployment Configuration this Deployment Group uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 55
          },
          "name": "deploymentConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig"
          }
        }
      ],
      "symbolId": "lib/server/deployment-group:ServerDeploymentGroupAttributes"
    },
    "@aws-cdk/aws-codedeploy.ServerDeploymentGroupProps": {
      "assembly": "@aws-cdk/aws-codedeploy",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link ServerDeploymentGroup}.",
        "example": "import * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\ndeclare const alb: elbv2.ApplicationLoadBalancer;\nconst listener = alb.addListener('Listener', { port: 80 });\nconst targetGroup = listener.addTargets('Fleet', { port: 80 });\n\nconst deploymentGroup = new codedeploy.ServerDeploymentGroup(this, 'DeploymentGroup', {\n  loadBalancer: codedeploy.LoadBalancer.application(targetGroup),\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codedeploy.ServerDeploymentGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/server/deployment-group.ts",
        "line": 136
      },
      "name": "ServerDeploymentGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "CodeDeploy will stop (and optionally roll back)\na deployment if during it any of the alarms trigger.\n\nAlarms can also be added after the Deployment Group is created using the {@link #addAlarm} method.",
            "see": "https://docs.aws.amazon.com/codedeploy/latest/userguide/monitoring-create-alarms.html",
            "stability": "stable",
            "summary": "The CloudWatch alarms associated with this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 220
          },
          "name": "alarms",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudwatch.IAlarm"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new Application will be created.",
            "stability": "stable",
            "summary": "The CodeDeploy EC2/on-premise Application this Deployment Group belongs to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 142
          },
          "name": "application",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerApplication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default AutoRollbackConfig.",
            "stability": "stable",
            "summary": "The auto-rollback configuration for this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 234
          },
          "name": "autoRollback",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.AutoRollbackConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "remarks": "Auto-scaling groups can also be added after the Deployment Group is created\nusing the {@link #addAutoScalingGroup} method.\n\n[disable-awslint:ref-via-interface] is needed because we update userdata\nfor ASGs to install the codedeploy agent.",
            "stability": "stable",
            "summary": "The auto-scaling groups belonging to this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 176
          },
          "name": "autoScalingGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-autoscaling.IAutoScalingGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ServerDeploymentConfig#OneAtATime",
            "stability": "stable",
            "summary": "The EC2/on-premise Deployment Configuration to use for this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 163
          },
          "name": "deploymentConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.IServerDeploymentConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- An auto-generated name will be used.",
            "stability": "stable",
            "summary": "The physical, human-readable name of the CodeDeploy Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 156
          },
          "name": "deploymentGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional EC2 instances will be added to the Deployment Group.",
            "stability": "stable",
            "summary": "All EC2 instances matching the given set of tags when a deployment occurs will be added to this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 201
          },
          "name": "ec2InstanceTags",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.InstanceTagSet"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether to continue a deployment even if fetching the alarm status from CloudWatch failed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 227
          },
          "name": "ignorePollAlarmsFailure",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "see": "https://docs.aws.amazon.com/codedeploy/latest/userguide/codedeploy-agent-operations-install.html",
            "stability": "stable",
            "summary": "If you've provided any auto-scaling groups with the {@link #autoScalingGroups} property, you can set this property to add User Data that installs the CodeDeploy agent on the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 185
          },
          "name": "installAgent",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Deployment Group will not have a load balancer defined.",
            "remarks": "Can be created from either a classic Elastic Load Balancer,\nor an Application Load Balancer / Network Load Balancer Target Group.",
            "stability": "stable",
            "summary": "The load balancer to place in front of this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 194
          },
          "name": "loadBalancer",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.LoadBalancer"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No additional on-premise instances will be added to the Deployment Group.",
            "stability": "stable",
            "summary": "All on-premise instances matching the given set of tags when a deployment occurs will be added to this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 208
          },
          "name": "onPremiseInstanceTags",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codedeploy.InstanceTagSet"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new Role will be created.",
            "stability": "stable",
            "summary": "The service Role of this Deployment Group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/server/deployment-group.ts",
            "line": 149
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/server/deployment-group:ServerDeploymentGroupProps"
    }
  },
  "version": "1.193.0",
  "fingerprint": "**********"
}