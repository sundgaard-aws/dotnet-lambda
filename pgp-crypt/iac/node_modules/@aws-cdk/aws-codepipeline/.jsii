{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-codestarnotifications": "1.193.0",
    "@aws-cdk/aws-events": "1.193.0",
    "@aws-cdk/aws-iam": "1.193.0",
    "@aws-cdk/aws-kms": "1.193.0",
    "@aws-cdk/aws-s3": "1.193.0",
    "@aws-cdk/core": "1.193.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "Better interface to AWS Code Pipeline",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "codepipeline",
    "pipeline"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-codepipeline",
  "readme": {
    "markdown": "# AWS CodePipeline Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n## Pipeline\n\nTo construct an empty Pipeline:\n\n```ts\n// Construct an empty Pipeline\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline');\n```\n\nTo give the Pipeline a nice, human-readable name:\n\n```ts\n// Give the Pipeline a nice, human-readable name\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  pipelineName: 'MyPipeline',\n});\n```\n\nBe aware that in the default configuration, the `Pipeline` construct creates\nan AWS Key Management Service (AWS KMS) Customer Master Key (CMK) for you to\nencrypt the artifacts in the artifact bucket, which incurs a cost of\n**$1/month**. This default configuration is necessary to allow cross-account\nactions.\n\nIf you do not intend to perform cross-account deployments, you can disable\nthe creation of the Customer Master Keys by passing `crossAccountKeys: false`\nwhen defining the Pipeline:\n\n```ts\n// Don't create Customer Master Keys\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  crossAccountKeys: false,\n});\n```\n\nIf you want to enable key rotation for the generated KMS keys,\nyou can configure it by passing `enableKeyRotation: true` when creating the pipeline.\nNote that key rotation will incur an additional cost of **$1/month**.\n\n```ts\n// Enable key rotation for the generated KMS key\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  // ...\n  enableKeyRotation: true,\n});\n```\n\n## Stages\n\nYou can provide Stages when creating the Pipeline:\n\n```ts\n// Provide a Stage when creating a pipeline\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  stages: [\n    {\n      stageName: 'Source',\n      actions: [\n        // see below...\n      ],\n    },\n  ],\n});\n```\n\nOr append a Stage to an existing Pipeline:\n\n```ts\n// Append a Stage to an existing Pipeline\ndeclare const pipeline: codepipeline.Pipeline;\nconst sourceStage = pipeline.addStage({\n  stageName: 'Source',\n  actions: [ // optional property\n    // see below...\n  ],\n});\n```\n\nYou can insert the new Stage at an arbitrary point in the Pipeline:\n\n```ts\n// Insert a new Stage at an arbitrary point\ndeclare const pipeline: codepipeline.Pipeline;\ndeclare const anotherStage: codepipeline.IStage;\ndeclare const yetAnotherStage: codepipeline.IStage;\n\nconst someStage = pipeline.addStage({\n  stageName: 'SomeStage',\n  placement: {\n    // note: you can only specify one of the below properties\n    rightBefore: anotherStage,\n    justAfter: yetAnotherStage,\n  }\n});\n```\n\nYou can disable transition to a Stage:\n\n```ts\n// Disable transition to a stage\ndeclare const pipeline: codepipeline.Pipeline;\n\nconst someStage = pipeline.addStage({\n  stageName: 'SomeStage',\n  transitionToEnabled: false,\n  transitionDisabledReason: 'Manual transition only', // optional reason\n})\n```\n\nThis is useful if you don't want every executions of the pipeline to flow into\nthis stage automatically. The transition can then be \"manually\" enabled later on.\n\n## Actions\n\nActions live in a separate package, `@aws-cdk/aws-codepipeline-actions`.\n\nTo add an Action to a Stage, you can provide it when creating the Stage,\nin the `actions` property,\nor you can use the `IStage.addAction()` method to mutate an existing Stage:\n\n```ts\n// Use the `IStage.addAction()` method to mutate an existing Stage.\ndeclare const sourceStage: codepipeline.IStage;\ndeclare const someAction: codepipeline.Action;\nsourceStage.addAction(someAction);\n```\n\n## Custom Action Registration\n\nTo make your own custom CodePipeline Action requires registering the action provider. Look to the `JenkinsProvider` in `@aws-cdk/aws-codepipeline-actions` for an implementation example.\n\n```ts\n// Make a custom CodePipeline Action\nnew codepipeline.CustomActionRegistration(this, 'GenericGitSourceProviderResource', {\n  category: codepipeline.ActionCategory.SOURCE,\n  artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 1 },\n  provider: 'GenericGitSource',\n  version: '1',\n  entityUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  executionUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  actionProperties: [\n    {\n      name: 'Branch',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'Git branch to pull',\n      type: 'String',\n    },\n    {\n      name: 'GitUrl',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'SSH git clone URL',\n      type: 'String',\n    },\n  ],\n});\n```\n\n## Cross-account CodePipelines\n\n> Cross-account Pipeline actions require that the Pipeline has *not* been\n> created with `crossAccountKeys: false`.\n\nMost pipeline Actions accept an AWS resource object to operate on. For example:\n\n* `S3DeployAction` accepts an `s3.IBucket`.\n* `CodeBuildAction` accepts a `codebuild.IProject`.\n* etc.\n\nThese resources can be either newly defined (`new s3.Bucket(...)`) or imported\n(`s3.Bucket.fromBucketAttributes(...)`) and identify the resource that should\nbe changed.\n\nThese resources can be in different accounts than the pipeline itself. For\nexample, the following action deploys to an imported S3 bucket from a\ndifferent account:\n\n```ts\n// Deploy an imported S3 bucket from a different account\ndeclare const stage: codepipeline.IStage;\ndeclare const input: codepipeline.Artifact;\nstage.addAction(new codepipeline_actions.S3DeployAction({\n  bucket: s3.Bucket.fromBucketAttributes(this, 'Bucket', {\n    account: '123456789012',\n    // ...\n  }),\n  input: input,\n  actionName: 's3-deploy-action',\n  // ...\n}));\n```\n\nActions that don't accept a resource object accept an explicit `account` parameter:\n\n```ts\n// Actions that don't accept a resource objet accept an explicit `account` parameter\ndeclare const stage: codepipeline.IStage;\ndeclare const templatePath: codepipeline.ArtifactPath;\nstage.addAction(new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  account: '123456789012',\n  templatePath,\n  adminPermissions: false,\n  stackName: Stack.of(this).stackName,\n  actionName: 'cloudformation-create-update',\n  // ...\n}));\n```\n\nThe `Pipeline` construct automatically defines an **IAM Role** for you in the\ntarget account which the pipeline will assume to perform that action. This\nRole will be defined in a **support stack** named\n`<PipelineStackName>-support-<account>`, that will automatically be deployed\nbefore the stack containing the pipeline.\n\nIf you do not want to use the generated role, you can also explicitly pass a\n`role` when creating the action. In that case, the action will operate in the\naccount the role belongs to:\n\n```ts\n// Explicitly pass in a `role` when creating an action.\ndeclare const stage: codepipeline.IStage;\ndeclare const templatePath: codepipeline.ArtifactPath;\nstage.addAction(new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  templatePath,\n  adminPermissions: false,\n  stackName: Stack.of(this).stackName,\n  actionName: 'cloudformation-create-update',\n  // ...\n  role: iam.Role.fromRoleArn(this, 'ActionRole', '...'),\n}));\n```\n\n## Cross-region CodePipelines\n\nSimilar to how you set up a cross-account Action, the AWS resource object you\npass to actions can also be in different *Regions*. For example, the\nfollowing Action deploys to an imported S3 bucket from a different Region:\n\n```ts\n// Deploy to an imported S3 bucket from a different Region.\ndeclare const stage: codepipeline.IStage;\ndeclare const input: codepipeline.Artifact;\nstage.addAction(new codepipeline_actions.S3DeployAction({\n  bucket: s3.Bucket.fromBucketAttributes(this, 'Bucket', {\n    region: 'us-west-1',\n    // ...\n  }),\n  input: input,\n  actionName: 's3-deploy-action',\n  // ...\n}));\n```\n\nActions that don't take an AWS resource will accept an explicit `region`\nparameter:\n\n```ts\n// Actions that don't take an AWS resource will accept an explicit `region` parameter.\ndeclare const stage: codepipeline.IStage;\ndeclare const templatePath: codepipeline.ArtifactPath;\nstage.addAction(new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  templatePath,\n  adminPermissions: false,\n  stackName: Stack.of(this).stackName,\n  actionName: 'cloudformation-create-update',\n  // ...\n  region: 'us-west-1',\n}));\n```\n\nThe `Pipeline` construct automatically defines a **replication bucket** for\nyou in the target region, which the pipeline will replicate artifacts to and\nfrom. This Bucket will be defined in a **support stack** named\n`<PipelineStackName>-support-<region>`, that will automatically be deployed\nbefore the stack containing the pipeline.\n\nIf you don't want to use these support stacks, and already have buckets in\nplace to serve as replication buckets, you can supply these at Pipeline definition\ntime using the `crossRegionReplicationBuckets` parameter. Example:\n\n```ts\n// Supply replication buckets for the Pipeline instead of using the generated support stack\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  // ...\n\n  crossRegionReplicationBuckets: {\n    // note that a physical name of the replication Bucket must be known at synthesis time\n    'us-west-1': s3.Bucket.fromBucketAttributes(this, 'UsWest1ReplicationBucket', {\n      bucketName: 'my-us-west-1-replication-bucket',\n      // optional KMS key\n      encryptionKey: kms.Key.fromKeyArn(this, 'UsWest1ReplicationKey',\n        'arn:aws:kms:us-west-1:123456789012:key/1234-5678-9012'\n      ),\n    }),\n  },\n});\n```\n\nSee [the AWS docs here](https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-cross-region.html)\nfor more information on cross-region CodePipelines.\n\n### Creating an encrypted replication bucket\n\nIf you're passing a replication bucket created in a different stack,\nlike this:\n\n```ts\n// Passing a replication bucket created in a different stack.\nconst app = new App();\nconst replicationStack = new Stack(app, 'ReplicationStack', {\n  env: {\n    region: 'us-west-1',\n  },\n});\nconst key = new kms.Key(replicationStack, 'ReplicationKey');\nconst replicationBucket = new s3.Bucket(replicationStack, 'ReplicationBucket', {\n  // like was said above - replication buckets need a set physical name\n  bucketName: PhysicalName.GENERATE_IF_NEEDED,\n  encryptionKey: key, // does not work!\n});\n\n// later...\nnew codepipeline.Pipeline(replicationStack, 'Pipeline', {\n  crossRegionReplicationBuckets: {\n    'us-west-1': replicationBucket,\n  },\n});\n```\n\nWhen trying to encrypt it\n(and note that if any of the cross-region actions happen to be cross-account as well,\nthe bucket *has to* be encrypted - otherwise the pipeline will fail at runtime),\nyou cannot use a key directly - KMS keys don't have physical names,\nand so you can't reference them across environments.\n\nIn this case, you need to use an alias in place of the key when creating the bucket:\n\n```ts\n// Passing an encrypted replication bucket created in a different stack.\nconst app = new App();\nconst replicationStack = new Stack(app, 'ReplicationStack', {\n  env: {\n    region: 'us-west-1',\n  },\n});\nconst key = new kms.Key(replicationStack, 'ReplicationKey');\nconst alias = new kms.Alias(replicationStack, 'ReplicationAlias', {\n  // aliasName is required\n  aliasName: PhysicalName.GENERATE_IF_NEEDED,\n  targetKey: key,\n});\nconst replicationBucket = new s3.Bucket(replicationStack, 'ReplicationBucket', {\n  bucketName: PhysicalName.GENERATE_IF_NEEDED,\n  encryptionKey: alias,\n});\n```\n\n## Variables\n\nThe library supports the CodePipeline Variables feature.\nEach action class that emits variables has a separate variables interface,\naccessed as a property of the action instance called `variables`.\nYou instantiate the action class and assign it to a local variable;\nwhen you want to use a variable in the configuration of a different action,\nyou access the appropriate property of the interface returned from `variables`,\nwhich represents a single variable.\nExample:\n\n```ts fixture=action\n// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  actionName: 'myAction',\n});\nnew OtherAction({\n  // ...\n  config: myAction.variables.myVariable,\n  actionName: 'otherAction',\n});\n```\n\nThe namespace name that will be used will be automatically generated by the pipeline construct,\nbased on the stage and action name;\nyou can pass a custom name when creating the action instance:\n\n```ts fixture=action\n// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  variablesNamespace: 'MyNamespace',\n  actionName: 'myAction',\n});\n```\n\nThere are also global variables available,\nnot tied to any action;\nthese are accessed through static properties of the `GlobalVariables` class:\n\n```ts fixture=action\n// OtherAction is some action type that produces variables, like EcrSourceAction\nnew OtherAction({\n  // ...\n  config: codepipeline.GlobalVariables.executionId,\n  actionName: 'otherAction',\n});\n```\n\nCheck the documentation of the `@aws-cdk/aws-codepipeline-actions`\nfor details on how to use the variables for each action class.\n\nSee the [CodePipeline documentation](https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-variables.html)\nfor more details on how to use the variables feature.\n\n## Events\n\n### Using a pipeline as an event target\n\nA pipeline can be used as a target for a CloudWatch event rule:\n\n```ts\n// A pipeline being used as a target for a CloudWatch event rule.\nimport * as targets from '@aws-cdk/aws-events-targets';\nimport * as events from '@aws-cdk/aws-events';\n\n// kick off the pipeline every day\nconst rule = new events.Rule(this, 'Daily', {\n  schedule: events.Schedule.rate(Duration.days(1)),\n});\n\ndeclare const pipeline: codepipeline.Pipeline;\nrule.addTarget(new targets.CodePipeline(pipeline));\n```\n\nWhen a pipeline is used as an event target, the\n\"codepipeline:StartPipelineExecution\" permission is granted to the AWS\nCloudWatch Events service.\n\n### Event sources\n\nPipelines emit CloudWatch events. To define event rules for events emitted by\nthe pipeline, stages or action, use the `onXxx` methods on the respective\nconstruct:\n\n```ts\n// Define event rules for events emitted by the pipeline\nimport * as events from '@aws-cdk/aws-events';\n\ndeclare const myPipeline: codepipeline.Pipeline;\ndeclare const myStage: codepipeline.IStage;\ndeclare const myAction: codepipeline.Action;\ndeclare const target: events.IRuleTarget;\nmyPipeline.onStateChange('MyPipelineStateChange', { target: target } );\nmyStage.onStateChange('MyStageStateChange', target);\nmyAction.onStateChange('MyActionStateChange', target);\n```\n\n## CodeStar Notifications\n\nTo define CodeStar Notification rules for Pipelines, use one of the `notifyOnXxx()` methods.\nThey are very similar to `onXxx()` methods for CloudWatch events:\n\n```ts\n// Define CodeStar Notification rules for Pipelines\nimport * as chatbot from '@aws-cdk/aws-chatbot';\nconst target = new chatbot.SlackChannelConfiguration(this, 'MySlackChannel', {\n  slackChannelConfigurationName: 'YOUR_CHANNEL_NAME',\n  slackWorkspaceId: 'YOUR_SLACK_WORKSPACE_ID',\n  slackChannelId: 'YOUR_SLACK_CHANNEL_ID',\n});\n\ndeclare const pipeline: codepipeline.Pipeline;\nconst rule = pipeline.notifyOnExecutionStateChange('NotifyOnExecutionStateChange', target);\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-codepipeline",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CodePipeline",
      "packageId": "Amazon.CDK.AWS.CodePipeline"
    },
    "java": {
      "maven": {
        "artifactId": "codepipeline",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.codepipeline"
    },
    "js": {
      "npm": "@aws-cdk/aws-codepipeline"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-codepipeline",
      "module": "aws_cdk.aws_codepipeline"
    }
  },
  "types": {
    "@aws-cdk/aws-codepipeline.Action": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-codepipeline",
      "docs": {
        "remarks": "Contains some common logic that can be re-used by all {@link IAction} implementations.\nIf you're writing your own Action class,\nfeel free to extend this class.",
        "stability": "stable",
        "summary": "Low-level class for generic CodePipeline Actions implementing the {@link IAction} interface."
      },
      "fqn": "@aws-cdk/aws-codepipeline.Action",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/action.ts",
          "line": 371
        }
      },
      "interfaces": [
        "@aws-cdk/aws-codepipeline.IAction"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 355
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The callback invoked when this Action is added to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 403
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-codepipeline.IAction",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "This is a renamed version of the {@link IAction.bind} method."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 439
          },
          "name": "bound",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Creates an Event that will be triggered whenever the state of this Action changes."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 416
          },
          "name": "onStateChange",
          "overrides": "@aws-cdk/aws-codepipeline.IAction",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.IRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.RuleProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 431
          },
          "name": "variableExpression",
          "parameters": [
            {
              "name": "variableName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Action",
      "properties": [
        {
          "docs": {
            "remarks": "Note that this accessor will be called before the {@link bind} callback.",
            "stability": "stable",
            "summary": "The simple properties of the Action, like its Owner, name, etc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 389
          },
          "name": "actionProperties",
          "overrides": "@aws-cdk/aws-codepipeline.IAction",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ActionProperties"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "This is a renamed version of the {@link IAction.actionProperties} property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 359
          },
          "name": "providedActionProperties",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ActionProperties"
          }
        }
      ],
      "symbolId": "lib/action:Action"
    },
    "@aws-cdk/aws-codepipeline.ActionArtifactBounds": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "remarks": "The constraints for each action type are documented on the\n{@link https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html Pipeline Structure Reference} page.",
        "stability": "stable",
        "summary": "Specifies the constraints on the number of input and output artifacts an action can have.",
        "example": "// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  actionName: 'myAction',\n});\nnew OtherAction({\n  // ...\n  config: myAction.variables.myVariable,\n  actionName: 'otherAction',\n});",
        "custom": {
          "exampleMetadata": "fixture=action infused"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 28
      },
      "name": "ActionArtifactBounds",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 30
          },
          "name": "maxInputs",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 32
          },
          "name": "maxOutputs",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 29
          },
          "name": "minInputs",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 31
          },
          "name": "minOutputs",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/action:ActionArtifactBounds"
    },
    "@aws-cdk/aws-codepipeline.ActionBindOptions": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\ndeclare const role: iam.Role;\nconst actionBindOptions: codepipeline.ActionBindOptions = {\n  bucket: bucket,\n  role: role,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 112
      },
      "name": "ActionBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 115
          },
          "name": "bucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 113
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/action:ActionBindOptions"
    },
    "@aws-cdk/aws-codepipeline.ActionCategory": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "docs": {
        "stability": "stable",
        "example": "// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  actionName: 'myAction',\n});\nnew OtherAction({\n  // ...\n  config: myAction.variables.myVariable,\n  actionName: 'otherAction',\n});",
        "custom": {
          "exampleMetadata": "fixture=action infused"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.ActionCategory",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 12
      },
      "members": [
        {
          "docs": {
            "stability": "stable"
          },
          "name": "SOURCE"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "BUILD"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "TEST"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "APPROVAL"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "DEPLOY"
        },
        {
          "docs": {
            "stability": "stable"
          },
          "name": "INVOKE"
        }
      ],
      "name": "ActionCategory",
      "symbolId": "lib/action:ActionCategory"
    },
    "@aws-cdk/aws-codepipeline.ActionConfig": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\nconst actionConfig: codepipeline.ActionConfig = {\n  configuration: configuration,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.ActionConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 118
      },
      "name": "ActionConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 119
          },
          "name": "configuration",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/action:ActionConfig"
    },
    "@aws-cdk/aws-codepipeline.ActionProperties": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const artifact: codepipeline.Artifact;\ndeclare const resource: cdk.Resource;\ndeclare const role: iam.Role;\nconst actionProperties: codepipeline.ActionProperties = {\n  actionName: 'actionName',\n  artifactBounds: {\n    maxInputs: 123,\n    maxOutputs: 123,\n    minInputs: 123,\n    minOutputs: 123,\n  },\n  category: codepipeline.ActionCategory.SOURCE,\n  provider: 'provider',\n\n  // the properties below are optional\n  account: 'account',\n  inputs: [artifact],\n  outputs: [artifact],\n  owner: 'owner',\n  region: 'region',\n  resource: resource,\n  role: role,\n  runOrder: 123,\n  variablesNamespace: 'variablesNamespace',\n  version: 'version',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.ActionProperties",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 46
      },
      "name": "ActionProperties",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 47
          },
          "name": "actionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 100
          },
          "name": "artifactBounds",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ActionArtifactBounds"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The category defines which action type the owner\n(the entity that performs the action) performs.",
            "stability": "stable",
            "summary": "The category of the action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 84
          },
          "name": "category",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ActionCategory"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The service provider that the action calls."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 89
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For Actions backed by resources,\nthis is inferred from the Stack {@link resource} is part of.\nHowever, some Actions, like the CloudFormation ones,\nare not backed by any resource, and they still might want to be cross-account.\nIn general, a concrete Action class should specify either {@link resource},\nor {@link account} - but not both.",
            "stability": "stable",
            "summary": "The account the Action is supposed to live in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 70
          },
          "name": "account",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 101
          },
          "name": "inputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 102
          },
          "name": "outputs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.Artifact"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 90
          },
          "name": "owner",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the Action resides in the same region as the Pipeline",
            "remarks": "Note that a cross-region Pipeline requires replication buckets to function correctly.\nYou can provide their names with the {@link PipelineProps#crossRegionReplicationBuckets} property.\nIf you don't, the CodePipeline Construct will create new Stacks in your CDK app containing those buckets,\nthat you will need to `cdk deploy` before deploying the main, Pipeline-containing Stack.",
            "stability": "stable",
            "summary": "The AWS region the given Action resides in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 59
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is used for automatically handling Actions backed by\nresources from a different account and/or region.",
            "stability": "stable",
            "summary": "The optional resource that is backing this Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 77
          },
          "name": "resource",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.IResource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 48
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements",
            "stability": "stable",
            "summary": "The order in which AWS CodePipeline runs this action. For more information, see the AWS CodePipeline User Guide."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 99
          },
          "name": "runOrder",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a name will be generated, based on the stage and action names",
            "stability": "stable",
            "summary": "The name of the namespace to use for variables emitted by this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 109
          },
          "name": "variablesNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 91
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/action:ActionProperties"
    },
    "@aws-cdk/aws-codepipeline.Artifact": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "docs": {
        "remarks": "Artifacts can be used as input by some actions.",
        "stability": "stable",
        "summary": "An output artifact of an action.",
        "example": "const lambdaInvokeAction = new codepipeline_actions.LambdaInvokeAction({\n  actionName: 'Lambda',\n  lambda: new lambda.Function(this, 'Func', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n    handler: 'index.handler',\n    code: lambda.Code.fromInline(`\n        const AWS = require('aws-sdk');\n\n        exports.handler = async function(event, context) {\n            const codepipeline = new AWS.CodePipeline();\n            await codepipeline.putJobSuccessResult({\n                jobId: event['CodePipeline.job'].id,\n                outputVariables: {\n                    MY_VAR: \"some value\",\n                },\n            }).promise();\n        }\n    `),\n  }),\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\n\n// later:\ndeclare const project: codebuild.PipelineProject;\nconst sourceOutput = new codepipeline.Artifact();\nnew codepipeline_actions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput,\n  environmentVariables: {\n    MyVar: {\n      value: lambdaInvokeAction.variable('MY_VAR'),\n    },\n  },\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.Artifact",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/artifact.ts",
          "line": 22
        },
        "parameters": [
          {
            "name": "artifactName",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/artifact.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "remarks": "Mainly meant to be used from `decdk`.",
            "stability": "stable",
            "summary": "A static factory method used to create instances of the Artifact class."
          },
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 15
          },
          "name": "artifact",
          "parameters": [
            {
              "docs": {
                "summary": "the (required) name of the Artifact."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.Artifact"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "CfnOutput is in the form \"<artifact-name>::<file-name>\"",
            "stability": "stable",
            "summary": "Returns an ArtifactPath for a file within this artifact."
          },
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 37
          },
          "name": "atPath",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the file."
              },
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
            }
          }
        },
        {
          "docs": {
            "remarks": "If there is no metadata stored under the given key,\nnull will be returned.",
            "stability": "stable",
            "summary": "Retrieve the metadata stored in this artifact under the given key."
          },
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 99
          },
          "name": "getMetadata",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns a token for a value inside a JSON file within this artifact."
          },
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 69
          },
          "name": "getParam",
          "parameters": [
            {
              "docs": {
                "summary": "The JSON file name."
              },
              "name": "jsonFile",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The hash key."
              },
              "name": "keyName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "remarks": "This can be used by CodePipeline actions to communicate data between themselves.\nIf metadata was already present under the given key,\nit will be overwritten with the new value.",
            "stability": "stable",
            "summary": "Add arbitrary extra payload to the artifact under a given key."
          },
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 90
          },
          "name": "setMetadata",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "any"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 103
          },
          "name": "toString",
          "returns": {
            "optional": true,
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Artifact",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The artifact attribute for the name of the S3 bucket where the artifact is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 44
          },
          "name": "bucketName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The artifact attribute for The name of the .zip file that contains the artifact that is generated by AWS CodePipeline, such as 1ABCyZZ.zip."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 52
          },
          "name": "objectKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the location of the .zip file in S3 that this Artifact represents. Used by Lambda's `CfnParametersCode` when being deployed in a CodePipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 77
          },
          "name": "s3Location",
          "type": {
            "fqn": "@aws-cdk/aws-s3.Location"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The artifact attribute of the Amazon Simple Storage Service (Amazon S3) URL of the artifact, such as https://s3-us-west-2.amazonaws.com/artifactstorebucket-yivczw8jma0c/test/TemplateSo/1ABCyZZ.zip."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 60
          },
          "name": "url",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 28
          },
          "name": "artifactName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/artifact:Artifact"
    },
    "@aws-cdk/aws-codepipeline.ArtifactPath": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "docs": {
        "remarks": "The most common use case for this is specifying the template file\nfor a CloudFormation action.",
        "stability": "stable",
        "summary": "A specific file within an output artifact.",
        "example": "// Source stage: read from repository\nconst repo = new codecommit.Repository(stack, 'TemplateRepo', {\n  repositoryName: 'template-repo',\n});\nconst sourceOutput = new codepipeline.Artifact('SourceArtifact');\nconst source = new cpactions.CodeCommitSourceAction({\n  actionName: 'Source',\n  repository: repo,\n  output: sourceOutput,\n  trigger: cpactions.CodeCommitTrigger.POLL,\n});\nconst sourceStage = {\n  stageName: 'Source',\n  actions: [source],\n};\n\n// Deployment stage: create and deploy changeset with manual approval\nconst stackName = 'OurStack';\nconst changeSetName = 'StagedChangeSet';\n\nconst prodStage = {\n  stageName: 'Deploy',\n  actions: [\n    new cpactions.CloudFormationCreateReplaceChangeSetAction({\n      actionName: 'PrepareChanges',\n      stackName,\n      changeSetName,\n      adminPermissions: true,\n      templatePath: sourceOutput.atPath('template.yaml'),\n      runOrder: 1,\n    }),\n    new cpactions.ManualApprovalAction({\n      actionName: 'ApproveChanges',\n      runOrder: 2,\n    }),\n    new cpactions.CloudFormationExecuteChangeSetAction({\n      actionName: 'ExecuteChanges',\n      stackName,\n      changeSetName,\n      runOrder: 3,\n    }),\n  ],\n};\n\nnew codepipeline.Pipeline(stack, 'Pipeline', {\n  stages: [\n    sourceStage,\n    prodStage,\n  ],\n});",
        "custom": {
          "exampleMetadata": "lit=test/integ.cfn-template-from-repo.lit.ts infused"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/artifact.ts",
          "line": 128
        },
        "parameters": [
          {
            "name": "artifact",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.Artifact"
            }
          },
          {
            "name": "fileName",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/artifact.ts",
        "line": 123
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 124
          },
          "name": "artifactPath",
          "parameters": [
            {
              "name": "artifactName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "fileName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
            }
          },
          "static": true
        }
      ],
      "name": "ArtifactPath",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 128
          },
          "name": "artifact",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.Artifact"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 128
          },
          "name": "fileName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/artifact.ts",
            "line": 132
          },
          "name": "location",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/artifact:ArtifactPath"
    },
    "@aws-cdk/aws-codepipeline.CfnCustomActionType": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CodePipeline::CustomActionType",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::CodePipeline::CustomActionType` resource creates a custom action for activities that aren't included in the CodePipeline default actions, such as running an internally developed build process or a test suite. You can use these custom actions in the stage of a pipeline. For more information, see [Create and Add a Custom Action in AWS CodePipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html) in the *AWS CodePipeline User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CodePipeline::CustomActionType`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst cfnCustomActionType = new codepipeline.CfnCustomActionType(this, 'MyCfnCustomActionType', {\n  category: 'category',\n  inputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  outputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  provider: 'provider',\n  version: 'version',\n\n  // the properties below are optional\n  configurationProperties: [{\n    key: false,\n    name: 'name',\n    required: false,\n    secret: false,\n\n    // the properties below are optional\n    description: 'description',\n    queryable: false,\n    type: 'type',\n  }],\n  settings: {\n    entityUrlTemplate: 'entityUrlTemplate',\n    executionUrlTemplate: 'executionUrlTemplate',\n    revisionUrlTemplate: 'revisionUrlTemplate',\n    thirdPartyConfigurationUrl: 'thirdPartyConfigurationUrl',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CodePipeline::CustomActionType`."
        },
        "locationInModule": {
          "filename": "lib/codepipeline.generated.ts",
          "line": 257
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionTypeProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 161
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 282
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 300
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnCustomActionType",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 165
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Id"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 190
          },
          "name": "attrId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 287
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-tags"
            },
            "stability": "external",
            "summary": "The tags for the custom action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 248
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-category"
            },
            "stability": "external",
            "summary": "The category of the custom action, such as a build action or a test action."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 197
          },
          "name": "category",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-inputartifactdetails"
            },
            "stability": "external",
            "summary": "The details of the input artifact for the action, such as its commit ID."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 204
          },
          "name": "inputArtifactDetails",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.ArtifactDetailsProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-outputartifactdetails"
            },
            "stability": "external",
            "summary": "The details of the output artifact of the action, such as its commit ID."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 211
          },
          "name": "outputArtifactDetails",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.ArtifactDetailsProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-provider"
            },
            "stability": "external",
            "summary": "The provider of the service used in the custom action, such as CodeDeploy."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 218
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-version"
            },
            "stability": "external",
            "summary": "The version identifier of the custom action."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 225
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-configurationproperties"
            },
            "remarks": "> You can refer to a name in the configuration properties of the custom action within the URL templates by following the format of {Config:name}, as long as the configuration property is both required and not secret. For more information, see [Create a Custom Action for a Pipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html) .",
            "stability": "external",
            "summary": "The configuration properties for the custom action."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 234
          },
          "name": "configurationProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-settings"
            },
            "stability": "external",
            "summary": "URLs that provide users information about this custom action."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 241
          },
          "name": "settings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.SettingsProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnCustomActionType"
    },
    "@aws-cdk/aws-codepipeline.CfnCustomActionType.ArtifactDetailsProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-artifactdetails.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Returns information about the details of an artifact.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst artifactDetailsProperty: codepipeline.CfnCustomActionType.ArtifactDetailsProperty = {\n  maximumCount: 123,\n  minimumCount: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.ArtifactDetailsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 314
      },
      "name": "ArtifactDetailsProperty",
      "namespace": "CfnCustomActionType",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-artifactdetails.html#cfn-codepipeline-customactiontype-artifactdetails-maximumcount"
            },
            "stability": "external",
            "summary": "The maximum number of artifacts allowed for the action type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 320
          },
          "name": "maximumCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-artifactdetails.html#cfn-codepipeline-customactiontype-artifactdetails-minimumcount"
            },
            "stability": "external",
            "summary": "The minimum number of artifacts allowed for the action type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 326
          },
          "name": "minimumCount",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnCustomActionType.ArtifactDetailsProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-configurationproperties.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> You can refer to a name in the configuration properties of the custom action within the URL templates by following the format of {Config:name}, as long as the configuration property is both required and not secret. For more information, see [Create a Custom Action for a Pipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html) .",
        "stability": "external",
        "summary": "The configuration properties for the custom action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst configurationPropertiesProperty: codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty = {\n  key: false,\n  name: 'name',\n  required: false,\n  secret: false,\n\n  // the properties below are optional\n  description: 'description',\n  queryable: false,\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 394
      },
      "name": "ConfigurationPropertiesProperty",
      "namespace": "CfnCustomActionType",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-key"
            },
            "stability": "external",
            "summary": "Whether the configuration property is a key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 406
          },
          "name": "key",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-name"
            },
            "stability": "external",
            "summary": "The name of the action configuration property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 412
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-required"
            },
            "stability": "external",
            "summary": "Whether the configuration property is a required value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 426
          },
          "name": "required",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-secret"
            },
            "remarks": "Secrets are hidden from all calls except for `GetJobDetails` , `GetThirdPartyJobDetails` , `PollForJobs` , and `PollForThirdPartyJobs` .\n\nWhen updating a pipeline, passing * * * * * without changing any other values of the action preserves the previous value of the secret.",
            "stability": "external",
            "summary": "Whether the configuration property is secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 434
          },
          "name": "secret",
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-description"
            },
            "stability": "external",
            "summary": "The description of the action configuration property that is displayed to users."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 400
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-queryable"
            },
            "remarks": "When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.\n\nIf you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.",
            "stability": "external",
            "summary": "Indicates that the property is used with `PollForJobs` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 420
          },
          "name": "queryable",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-type"
            },
            "stability": "external",
            "summary": "The type of the configuration property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 440
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnCustomActionType.ConfigurationPropertiesProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnCustomActionType.SettingsProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-settings.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "`Settings` is a property of the `AWS::CodePipeline::CustomActionType` resource that provides URLs that users can access to view information about the CodePipeline custom action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst settingsProperty: codepipeline.CfnCustomActionType.SettingsProperty = {\n  entityUrlTemplate: 'entityUrlTemplate',\n  executionUrlTemplate: 'executionUrlTemplate',\n  revisionUrlTemplate: 'revisionUrlTemplate',\n  thirdPartyConfigurationUrl: 'thirdPartyConfigurationUrl',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.SettingsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 523
      },
      "name": "SettingsProperty",
      "namespace": "CfnCustomActionType",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-settings.html#cfn-codepipeline-customactiontype-settings-entityurltemplate"
            },
            "remarks": "This link is provided as part of the action display in the pipeline.",
            "stability": "external",
            "summary": "The URL returned to the CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for a CodeDeploy deployment group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 529
          },
          "name": "entityUrlTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-settings.html#cfn-codepipeline-customactiontype-settings-executionurltemplate"
            },
            "remarks": "This link is shown on the pipeline view page in the CodePipeline console and provides a link to the execution entity of the external action.",
            "stability": "external",
            "summary": "The URL returned to the CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for CodeDeploy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 535
          },
          "name": "executionUrlTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-settings.html#cfn-codepipeline-customactiontype-settings-revisionurltemplate"
            },
            "stability": "external",
            "summary": "The URL returned to the CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 541
          },
          "name": "revisionUrlTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-customactiontype-settings.html#cfn-codepipeline-customactiontype-settings-thirdpartyconfigurationurl"
            },
            "stability": "external",
            "summary": "The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 547
          },
          "name": "thirdPartyConfigurationUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnCustomActionType.SettingsProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnCustomActionTypeProps": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnCustomActionType`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst cfnCustomActionTypeProps: codepipeline.CfnCustomActionTypeProps = {\n  category: 'category',\n  inputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  outputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  provider: 'provider',\n  version: 'version',\n\n  // the properties below are optional\n  configurationProperties: [{\n    key: false,\n    name: 'name',\n    required: false,\n    secret: false,\n\n    // the properties below are optional\n    description: 'description',\n    queryable: false,\n    type: 'type',\n  }],\n  settings: {\n    entityUrlTemplate: 'entityUrlTemplate',\n    executionUrlTemplate: 'executionUrlTemplate',\n    revisionUrlTemplate: 'revisionUrlTemplate',\n    thirdPartyConfigurationUrl: 'thirdPartyConfigurationUrl',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionTypeProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 19
      },
      "name": "CfnCustomActionTypeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-category"
            },
            "stability": "external",
            "summary": "The category of the custom action, such as a build action or a test action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 26
          },
          "name": "category",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-inputartifactdetails"
            },
            "stability": "external",
            "summary": "The details of the input artifact for the action, such as its commit ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 33
          },
          "name": "inputArtifactDetails",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.ArtifactDetailsProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-outputartifactdetails"
            },
            "stability": "external",
            "summary": "The details of the output artifact of the action, such as its commit ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 40
          },
          "name": "outputArtifactDetails",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.ArtifactDetailsProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-provider"
            },
            "stability": "external",
            "summary": "The provider of the service used in the custom action, such as CodeDeploy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 47
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-version"
            },
            "stability": "external",
            "summary": "The version identifier of the custom action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 54
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-configurationproperties"
            },
            "remarks": "> You can refer to a name in the configuration properties of the custom action within the URL templates by following the format of {Config:name}, as long as the configuration property is both required and not secret. For more information, see [Create a Custom Action for a Pipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html) .",
            "stability": "external",
            "summary": "The configuration properties for the custom action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 63
          },
          "name": "configurationProperties",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-settings"
            },
            "stability": "external",
            "summary": "URLs that provide users information about this custom action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 70
          },
          "name": "settings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.SettingsProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype.html#cfn-codepipeline-customactiontype-tags"
            },
            "stability": "external",
            "summary": "The tags for the custom action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 77
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnCustomActionTypeProps"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CodePipeline::Pipeline",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::CodePipeline::Pipeline` resource creates a CodePipeline pipeline that describes how software changes go through a release process. For more information, see [What Is CodePipeline?](https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html) in the *AWS CodePipeline User Guide* .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CodePipeline::Pipeline`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\nconst cfnPipeline = new codepipeline.CfnPipeline(this, 'MyCfnPipeline', {\n  roleArn: 'roleArn',\n  stages: [{\n    actions: [{\n      actionTypeId: {\n        category: 'category',\n        owner: 'owner',\n        provider: 'provider',\n        version: 'version',\n      },\n      name: 'name',\n\n      // the properties below are optional\n      configuration: configuration,\n      inputArtifacts: [{\n        name: 'name',\n      }],\n      namespace: 'namespace',\n      outputArtifacts: [{\n        name: 'name',\n      }],\n      region: 'region',\n      roleArn: 'roleArn',\n      runOrder: 123,\n    }],\n    name: 'name',\n\n    // the properties below are optional\n    blockers: [{\n      name: 'name',\n      type: 'type',\n    }],\n  }],\n\n  // the properties below are optional\n  artifactStore: {\n    location: 'location',\n    type: 'type',\n\n    // the properties below are optional\n    encryptionKey: {\n      id: 'id',\n      type: 'type',\n    },\n  },\n  artifactStores: [{\n    artifactStore: {\n      location: 'location',\n      type: 'type',\n\n      // the properties below are optional\n      encryptionKey: {\n        id: 'id',\n        type: 'type',\n      },\n    },\n    region: 'region',\n  }],\n  disableInboundStageTransitions: [{\n    reason: 'reason',\n    stageName: 'stageName',\n  }],\n  name: 'name',\n  restartExecutionOnUpdate: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CodePipeline::Pipeline`."
        },
        "locationInModule": {
          "filename": "lib/codepipeline.generated.ts",
          "line": 857
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.CfnPipelineProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 757
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 879
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 897
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnPipeline",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 761
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Version"
            },
            "remarks": "> A new pipeline is always assigned a version number of 1. This number increments when a pipeline is updated.",
            "stability": "external",
            "summary": "The version of the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 788
          },
          "name": "attrVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 884
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-tags"
            },
            "stability": "external",
            "summary": "Specifies the tags applied to the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 848
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-rolearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) for CodePipeline to use to either perform actions with no `actionRoleArn` , or to use to assume roles for actions with an `actionRoleArn` ."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 795
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-stages"
            },
            "stability": "external",
            "summary": "Represents information about a stage and its definition."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 802
          },
          "name": "stages",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.StageDeclarationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-artifactstore"
            },
            "remarks": "> You must include either `artifactStore` or `artifactStores` in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use `artifactStores` .",
            "stability": "external",
            "summary": "The S3 bucket where artifacts for the pipeline are stored."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 811
          },
          "name": "artifactStore",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-artifactstores"
            },
            "remarks": "There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.\n\n> You must include either `artifactStore` or `artifactStores` in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use `artifactStores` .",
            "stability": "external",
            "summary": "A mapping of `artifactStore` objects and their corresponding AWS Regions."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 820
          },
          "name": "artifactStores",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreMapProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-disableinboundstagetransitions"
            },
            "stability": "external",
            "summary": "Represents the input of a `DisableStageTransition` action."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 827
          },
          "name": "disableInboundStageTransitions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.StageTransitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-name"
            },
            "stability": "external",
            "summary": "The name of the pipeline."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 834
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-restartexecutiononupdate"
            },
            "stability": "external",
            "summary": "Indicates whether to rerun the CodePipeline pipeline after you update it."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 841
          },
          "name": "restartExecutionOnUpdate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline.ActionDeclarationProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Represents information about an action declaration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\nconst actionDeclarationProperty: codepipeline.CfnPipeline.ActionDeclarationProperty = {\n  actionTypeId: {\n    category: 'category',\n    owner: 'owner',\n    provider: 'provider',\n    version: 'version',\n  },\n  name: 'name',\n\n  // the properties below are optional\n  configuration: configuration,\n  inputArtifacts: [{\n    name: 'name',\n  }],\n  namespace: 'namespace',\n  outputArtifacts: [{\n    name: 'name',\n  }],\n  region: 'region',\n  roleArn: 'roleArn',\n  runOrder: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ActionDeclarationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 911
      },
      "name": "ActionDeclarationProperty",
      "namespace": "CfnPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-actiontypeid"
            },
            "stability": "external",
            "summary": "Specifies the action type and the provider of the action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 917
          },
          "name": "actionTypeId",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ActionTypeIdProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-name"
            },
            "stability": "external",
            "summary": "The action declaration's name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 943
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-configuration"
            },
            "remarks": "These are key-value pairs that specify input values for an action. For more information, see [Action Structure Requirements in CodePipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) . For the list of configuration properties for the AWS CloudFormation action type in CodePipeline, see [Configuration Properties Reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-action-reference.html) in the *AWS CloudFormation User Guide* . For template snippets with examples, see [Using Parameter Override Functions with CodePipeline Pipelines](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-parameter-override-functions.html) in the *AWS CloudFormation User Guide* .\n\nThe values can be represented in either JSON or YAML format. For example, the JSON configuration item format is as follows:\n\n*JSON:*\n\n`\"Configuration\" : { Key : Value },`",
            "stability": "external",
            "summary": "The action's configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 929
          },
          "name": "configuration",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-inputartifacts"
            },
            "remarks": "While the field is not a required parameter, most actions have an action configuration that requires a specified quantity of input artifacts. To refer to the action configuration specification by action provider, see the [Action structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) in the *AWS CodePipeline User Guide* .\n\n> For a CodeBuild action with multiple input artifacts, one of your input sources must be designated the PrimarySource. For more information, see the [CodeBuild action reference page](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodeBuild.html) in the *AWS CodePipeline User Guide* .",
            "stability": "external",
            "summary": "The name or ID of the artifact consumed by the action, such as a test or build artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 937
          },
          "name": "inputArtifacts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.InputArtifactProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-actiondeclaration-namespace"
            },
            "remarks": "All variables produced as output by this action fall under this namespace.",
            "stability": "external",
            "summary": "The variable namespace associated with the action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 949
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-outputartifacts"
            },
            "remarks": "While the field is not a required parameter, most actions have an action configuration that requires a specified quantity of output artifacts. To refer to the action configuration specification by action provider, see the [Action structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) in the *AWS CodePipeline User Guide* .",
            "stability": "external",
            "summary": "The name or ID of the result of the action declaration, such as a test or build artifact."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 955
          },
          "name": "outputArtifacts",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.OutputArtifactProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-region"
            },
            "stability": "external",
            "summary": "The action declaration's AWS Region, such as us-east-1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 961
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-rolearn"
            },
            "remarks": "This is assumed through the roleArn for the pipeline.",
            "stability": "external",
            "summary": "The ARN of the IAM service role that performs the declared action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 967
          },
          "name": "roleArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions.html#cfn-codepipeline-pipeline-stages-actions-runorder"
            },
            "stability": "external",
            "summary": "The order in which actions are run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 973
          },
          "name": "runOrder",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline.ActionDeclarationProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline.ActionTypeIdProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Represents information about an action type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst actionTypeIdProperty: codepipeline.CfnPipeline.ActionTypeIdProperty = {\n  category: 'category',\n  owner: 'owner',\n  provider: 'provider',\n  version: 'version',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ActionTypeIdProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1060
      },
      "name": "ActionTypeIdProperty",
      "namespace": "CfnPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html#cfn-codepipeline-pipeline-stages-actions-actiontypeid-category"
            },
            "remarks": "Valid categories are limited to one of the values below.\n\n- `Source`\n- `Build`\n- `Test`\n- `Deploy`\n- `Invoke`\n- `Approval`",
            "stability": "external",
            "summary": "A category defines what kind of action can be taken in the stage, and constrains the provider type for the action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1073
          },
          "name": "category",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html#cfn-codepipeline-pipeline-stages-actions-actiontypeid-owner"
            },
            "remarks": "There are three valid values for the `Owner` field in the action category section within your pipeline structure: `AWS` , `ThirdParty` , and `Custom` . For more information, see [Valid Action Types and Providers in CodePipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers) .",
            "stability": "external",
            "summary": "The creator of the action being called."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1079
          },
          "name": "owner",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html#cfn-codepipeline-pipeline-stages-actions-actiontypeid-provider"
            },
            "remarks": "Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of CodeDeploy, which would be specified as `CodeDeploy` . For more information, see [Valid Action Types and Providers in CodePipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers) .",
            "stability": "external",
            "summary": "The provider of the service being called by the action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1085
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html#cfn-codepipeline-pipeline-stages-actions-actiontypeid-version"
            },
            "stability": "external",
            "summary": "A string that describes the action version."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1091
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline.ActionTypeIdProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreMapProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstoremap.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.\n\n> You must include either `artifactStore` or `artifactStores` in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use `artifactStores` .",
        "stability": "external",
        "summary": "A mapping of `artifactStore` objects and their corresponding AWS Regions.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst artifactStoreMapProperty: codepipeline.CfnPipeline.ArtifactStoreMapProperty = {\n  artifactStore: {\n    location: 'location',\n    type: 'type',\n\n    // the properties below are optional\n    encryptionKey: {\n      id: 'id',\n      type: 'type',\n    },\n  },\n  region: 'region',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreMapProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1256
      },
      "name": "ArtifactStoreMapProperty",
      "namespace": "CfnPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstoremap.html#cfn-codepipeline-pipeline-artifactstoremap-artifactstore"
            },
            "remarks": "> You must include either `artifactStore` or `artifactStores` in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use `artifactStores` .",
            "stability": "external",
            "summary": "Represents information about the S3 bucket where artifacts are stored for the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1264
          },
          "name": "artifactStore",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstoremap.html#cfn-codepipeline-pipeline-artifactstoremap-region"
            },
            "stability": "external",
            "summary": "The action declaration's AWS Region, such as us-east-1."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1270
          },
          "name": "region",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline.ArtifactStoreMapProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "> You must include either `artifactStore` or `artifactStores` in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use `artifactStores` .",
        "stability": "external",
        "summary": "The S3 bucket where artifacts for the pipeline are stored.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst artifactStoreProperty: codepipeline.CfnPipeline.ArtifactStoreProperty = {\n  location: 'location',\n  type: 'type',\n\n  // the properties below are optional\n  encryptionKey: {\n    id: 'id',\n    type: 'type',\n  },\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1167
      },
      "name": "ArtifactStoreProperty",
      "namespace": "CfnPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore.html#cfn-codepipeline-pipeline-artifactstore-location"
            },
            "remarks": "You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.",
            "stability": "external",
            "summary": "The S3 bucket used for storing the artifacts for a pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1179
          },
          "name": "location",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore.html#cfn-codepipeline-pipeline-artifactstore-type"
            },
            "stability": "external",
            "summary": "The type of the artifact store, such as S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1185
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore.html#cfn-codepipeline-pipeline-artifactstore-encryptionkey"
            },
            "remarks": "If this is undefined, the default key for Amazon S3 is used. To see an example artifact store encryption key field, see the example structure here: [AWS::CodePipeline::Pipeline](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html) .",
            "stability": "external",
            "summary": "The encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service ( AWS KMS) key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1173
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.EncryptionKeyProperty"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline.ArtifactStoreProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline.BlockerDeclarationProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-blockers.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Reserved for future use.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst blockerDeclarationProperty: codepipeline.CfnPipeline.BlockerDeclarationProperty = {\n  name: 'name',\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.BlockerDeclarationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1336
      },
      "name": "BlockerDeclarationProperty",
      "namespace": "CfnPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-blockers.html#cfn-codepipeline-pipeline-stages-blockers-name"
            },
            "stability": "external",
            "summary": "Reserved for future use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1342
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-blockers.html#cfn-codepipeline-pipeline-stages-blockers-type"
            },
            "stability": "external",
            "summary": "Reserved for future use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1348
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline.BlockerDeclarationProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline.EncryptionKeyProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore-encryptionkey.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "`EncryptionKey` is a property of the [ArtifactStore](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore.html) property type.",
        "stability": "external",
        "summary": "Represents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service ( AWS KMS) key.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst encryptionKeyProperty: codepipeline.CfnPipeline.EncryptionKeyProperty = {\n  id: 'id',\n  type: 'type',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.EncryptionKeyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1416
      },
      "name": "EncryptionKeyProperty",
      "namespace": "CfnPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore-encryptionkey.html#cfn-codepipeline-pipeline-artifactstore-encryptionkey-id"
            },
            "remarks": "For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\n> Aliases are recognized only in the account that created the AWS KMS key. For cross-account actions, you can only use the key ID or key ARN to identify the key. Cross-account actions involve using the role from the other account (AccountB), so specifying the key ID will use the key from the other account (AccountB).",
            "stability": "external",
            "summary": "The ID used to identify the key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1424
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-artifactstore-encryptionkey.html#cfn-codepipeline-pipeline-artifactstore-encryptionkey-type"
            },
            "remarks": "When creating or updating a pipeline, the value must be set to 'KMS'.",
            "stability": "external",
            "summary": "The type of encryption key, such as an AWS KMS key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1430
          },
          "name": "type",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline.EncryptionKeyProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline.InputArtifactProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-inputartifacts.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Represents information about an artifact to be worked on, such as a test or build artifact.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst inputArtifactProperty: codepipeline.CfnPipeline.InputArtifactProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.InputArtifactProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1496
      },
      "name": "InputArtifactProperty",
      "namespace": "CfnPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-inputartifacts.html#cfn-codepipeline-pipeline-stages-actions-inputartifacts-name"
            },
            "remarks": "Artifacts are the files that are worked on by actions in the pipeline. See the action configuration for each action for details about artifact parameters. For example, the S3 source action input artifact is a file name (or file path), and the files are generally provided as a ZIP file. Example artifact name: SampleApp_Windows.zip\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.",
            "stability": "external",
            "summary": "The name of the artifact to be worked on (for example, \"My App\")."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1506
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline.InputArtifactProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline.OutputArtifactProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-outputartifacts.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Represents information about the output of an action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst outputArtifactProperty: codepipeline.CfnPipeline.OutputArtifactProperty = {\n  name: 'name',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.OutputArtifactProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1568
      },
      "name": "OutputArtifactProperty",
      "namespace": "CfnPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-outputartifacts.html#cfn-codepipeline-pipeline-stages-actions-outputartifacts-name"
            },
            "remarks": "The output artifact name must exactly match the input artifact declared for a downstream action. However, the downstream action's input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nOutput artifact names must be unique within a pipeline.",
            "stability": "external",
            "summary": "The name of the output of an artifact, such as \"My App\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1578
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline.OutputArtifactProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline.StageDeclarationProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Represents information about a stage and its definition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\nconst stageDeclarationProperty: codepipeline.CfnPipeline.StageDeclarationProperty = {\n  actions: [{\n    actionTypeId: {\n      category: 'category',\n      owner: 'owner',\n      provider: 'provider',\n      version: 'version',\n    },\n    name: 'name',\n\n    // the properties below are optional\n    configuration: configuration,\n    inputArtifacts: [{\n      name: 'name',\n    }],\n    namespace: 'namespace',\n    outputArtifacts: [{\n      name: 'name',\n    }],\n    region: 'region',\n    roleArn: 'roleArn',\n    runOrder: 123,\n  }],\n  name: 'name',\n\n  // the properties below are optional\n  blockers: [{\n    name: 'name',\n    type: 'type',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.StageDeclarationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1640
      },
      "name": "StageDeclarationProperty",
      "namespace": "CfnPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html#cfn-codepipeline-pipeline-stages-actions"
            },
            "stability": "external",
            "summary": "The actions included in a stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1646
          },
          "name": "actions",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ActionDeclarationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html#cfn-codepipeline-pipeline-stages-name"
            },
            "stability": "external",
            "summary": "The name of the stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1658
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages.html#cfn-codepipeline-pipeline-stages-blockers"
            },
            "stability": "external",
            "summary": "Reserved for future use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1652
          },
          "name": "blockers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.BlockerDeclarationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline.StageDeclarationProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnPipeline.StageTransitionProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-disableinboundstagetransitions.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The name of the pipeline in which you want to disable the flow of artifacts from one stage to another.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst stageTransitionProperty: codepipeline.CfnPipeline.StageTransitionProperty = {\n  reason: 'reason',\n  stageName: 'stageName',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.StageTransitionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1727
      },
      "name": "StageTransitionProperty",
      "namespace": "CfnPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-disableinboundstagetransitions.html#cfn-codepipeline-pipeline-disableinboundstagetransitions-reason"
            },
            "remarks": "This message is displayed in the pipeline console UI.",
            "stability": "external",
            "summary": "The reason given to the user that a stage is disabled, such as waiting for manual approval or manual tests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1733
          },
          "name": "reason",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-disableinboundstagetransitions.html#cfn-codepipeline-pipeline-disableinboundstagetransitions-stagename"
            },
            "stability": "external",
            "summary": "The name of the stage where you want to disable the inbound or outbound transition of artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1739
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipeline.StageTransitionProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnPipelineProps": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnPipeline`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\nconst cfnPipelineProps: codepipeline.CfnPipelineProps = {\n  roleArn: 'roleArn',\n  stages: [{\n    actions: [{\n      actionTypeId: {\n        category: 'category',\n        owner: 'owner',\n        provider: 'provider',\n        version: 'version',\n      },\n      name: 'name',\n\n      // the properties below are optional\n      configuration: configuration,\n      inputArtifacts: [{\n        name: 'name',\n      }],\n      namespace: 'namespace',\n      outputArtifacts: [{\n        name: 'name',\n      }],\n      region: 'region',\n      roleArn: 'roleArn',\n      runOrder: 123,\n    }],\n    name: 'name',\n\n    // the properties below are optional\n    blockers: [{\n      name: 'name',\n      type: 'type',\n    }],\n  }],\n\n  // the properties below are optional\n  artifactStore: {\n    location: 'location',\n    type: 'type',\n\n    // the properties below are optional\n    encryptionKey: {\n      id: 'id',\n      type: 'type',\n    },\n  },\n  artifactStores: [{\n    artifactStore: {\n      location: 'location',\n      type: 'type',\n\n      // the properties below are optional\n      encryptionKey: {\n        id: 'id',\n        type: 'type',\n      },\n    },\n    region: 'region',\n  }],\n  disableInboundStageTransitions: [{\n    reason: 'reason',\n    stageName: 'stageName',\n  }],\n  name: 'name',\n  restartExecutionOnUpdate: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnPipelineProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 616
      },
      "name": "CfnPipelineProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-rolearn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) for CodePipeline to use to either perform actions with no `actionRoleArn` , or to use to assume roles for actions with an `actionRoleArn` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 623
          },
          "name": "roleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-stages"
            },
            "stability": "external",
            "summary": "Represents information about a stage and its definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 630
          },
          "name": "stages",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.StageDeclarationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-artifactstore"
            },
            "remarks": "> You must include either `artifactStore` or `artifactStores` in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use `artifactStores` .",
            "stability": "external",
            "summary": "The S3 bucket where artifacts for the pipeline are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 639
          },
          "name": "artifactStore",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-artifactstores"
            },
            "remarks": "There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.\n\n> You must include either `artifactStore` or `artifactStores` in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use `artifactStores` .",
            "stability": "external",
            "summary": "A mapping of `artifactStore` objects and their corresponding AWS Regions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 648
          },
          "name": "artifactStores",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreMapProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-disableinboundstagetransitions"
            },
            "stability": "external",
            "summary": "Represents the input of a `DisableStageTransition` action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 655
          },
          "name": "disableInboundStageTransitions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.StageTransitionProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-name"
            },
            "stability": "external",
            "summary": "The name of the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 662
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-restartexecutiononupdate"
            },
            "stability": "external",
            "summary": "Indicates whether to rerun the CodePipeline pipeline after you update it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 669
          },
          "name": "restartExecutionOnUpdate",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-pipeline.html#cfn-codepipeline-pipeline-tags"
            },
            "stability": "external",
            "summary": "Specifies the tags applied to the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 676
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnPipelineProps"
    },
    "@aws-cdk/aws-codepipeline.CfnWebhook": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::CodePipeline::Webhook",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::CodePipeline::Webhook` resource creates and registers your webhook. After the webhook is created and registered, it triggers your pipeline to start every time an external event occurs. For more information, see [Configure Your GitHub Pipelines to Use Webhooks for Change Detection](https://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-webhooks-migration.html) in the *AWS CodePipeline User Guide* .\n\nWe strongly recommend that you use AWS Secrets Manager to store your credentials. If you use Secrets Manager, you must have already configured and stored your secret parameters in Secrets Manager. For more information, see [Using Dynamic References to Specify Template Values](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html#dynamic-references-secretsmanager) .\n\n> When passing secret parameters, do not enter the value directly into the template. The value is rendered as plaintext and is therefore readable. For security reasons, do not use plaintext in your AWS CloudFormation template to store your credentials.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::CodePipeline::Webhook`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst cfnWebhook = new codepipeline.CfnWebhook(this, 'MyCfnWebhook', {\n  authentication: 'authentication',\n  authenticationConfiguration: {\n    allowedIpRange: 'allowedIpRange',\n    secretToken: 'secretToken',\n  },\n  filters: [{\n    jsonPath: 'jsonPath',\n\n    // the properties below are optional\n    matchEquals: 'matchEquals',\n  }],\n  targetAction: 'targetAction',\n  targetPipeline: 'targetPipeline',\n  targetPipelineVersion: 123,\n\n  // the properties below are optional\n  name: 'name',\n  registerWithThirdParty: false,\n});"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnWebhook",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::CodePipeline::Webhook`."
        },
        "locationInModule": {
          "filename": "lib/codepipeline.generated.ts",
          "line": 2063
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.CfnWebhookProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1959
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2089
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2107
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnWebhook",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1963
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Url"
            },
            "stability": "external",
            "summary": "The webhook URL generated by AWS CodePipeline , such as `https://eu-central-1.webhooks.aws/trigger123456` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1988
          },
          "name": "attrUrl",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2094
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-authentication"
            },
            "remarks": "- For information about the authentication scheme implemented by GITHUB_HMAC, see [Securing your webhooks](https://docs.aws.amazon.com/https://developer.github.com/webhooks/securing/) on the GitHub Developer website.\n- IP rejects webhooks trigger requests unless they originate from an IP address in the IP range whitelisted in the authentication configuration.\n- UNAUTHENTICATED accepts all webhook trigger requests regardless of origin.",
            "stability": "external",
            "summary": "Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1999
          },
          "name": "authentication",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-authenticationconfiguration"
            },
            "remarks": "The required properties depend on the authentication type. For GITHUB_HMAC, only the `SecretToken` property must be set. For IP, only the `AllowedIPRange` property must be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.",
            "stability": "external",
            "summary": "Properties that configure the authentication applied to incoming webhook trigger requests."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2006
          },
          "name": "authenticationConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookAuthConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-filters"
            },
            "remarks": "All defined rules must pass for the request to be accepted and the pipeline started.",
            "stability": "external",
            "summary": "A list of rules applied to the body/payload sent in the POST request to a webhook URL."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2013
          },
          "name": "filters",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookFilterRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-targetaction"
            },
            "remarks": "The action must be from the source (first) stage of the pipeline.",
            "stability": "external",
            "summary": "The name of the action in a pipeline you want to connect to the webhook."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2020
          },
          "name": "targetAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-targetpipeline"
            },
            "stability": "external",
            "summary": "The name of the pipeline you want to connect to the webhook."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2027
          },
          "name": "targetPipeline",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-targetpipelineversion"
            },
            "remarks": "Required: Yes\n\nType: Integer\n\nUpdate requires: [No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
            "stability": "external",
            "summary": "The version number of the pipeline to be connected to the trigger request."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2040
          },
          "name": "targetPipelineVersion",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-name"
            },
            "stability": "external",
            "summary": "The name of the webhook."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2047
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-registerwiththirdparty"
            },
            "stability": "external",
            "summary": "Configures a connection between the webhook that was created and the external tool with events to be detected."
          },
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2054
          },
          "name": "registerWithThirdParty",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnWebhook"
    },
    "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookAuthConfigurationProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-webhook-webhookauthconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The authentication applied to incoming webhook trigger requests.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst webhookAuthConfigurationProperty: codepipeline.CfnWebhook.WebhookAuthConfigurationProperty = {\n  allowedIpRange: 'allowedIpRange',\n  secretToken: 'secretToken',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookAuthConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 2121
      },
      "name": "WebhookAuthConfigurationProperty",
      "namespace": "CfnWebhook",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-webhook-webhookauthconfiguration.html#cfn-codepipeline-webhook-webhookauthconfiguration-allowediprange"
            },
            "remarks": "For IP, only the `AllowedIPRange` property must be set. This property must be set to a valid CIDR range.",
            "stability": "external",
            "summary": "The property used to configure acceptance of webhooks in an IP address range."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2127
          },
          "name": "allowedIpRange",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-webhook-webhookauthconfiguration.html#cfn-codepipeline-webhook-webhookauthconfiguration-secrettoken"
            },
            "remarks": "For GITHUB_HMAC, only the `SecretToken` property must be set.",
            "stability": "external",
            "summary": "The property used to configure GitHub authentication."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2133
          },
          "name": "secretToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnWebhook.WebhookAuthConfigurationProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookFilterRuleProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-webhook-webhookfilterrule.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "The event criteria that specify when a webhook notification is sent to your URL.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst webhookFilterRuleProperty: codepipeline.CfnWebhook.WebhookFilterRuleProperty = {\n  jsonPath: 'jsonPath',\n\n  // the properties below are optional\n  matchEquals: 'matchEquals',\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookFilterRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 2197
      },
      "name": "WebhookFilterRuleProperty",
      "namespace": "CfnWebhook",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-webhook-webhookfilterrule.html#cfn-codepipeline-webhook-webhookfilterrule-jsonpath"
            },
            "remarks": "The value selected by the JsonPath expression must match the value specified in the `MatchEquals` field. Otherwise, the request is ignored. For more information, see [Java JsonPath implementation](https://docs.aws.amazon.com/https://github.com/json-path/JsonPath) in GitHub.",
            "stability": "external",
            "summary": "A JsonPath expression that is applied to the body/payload of the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2203
          },
          "name": "jsonPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-webhook-webhookfilterrule.html#cfn-codepipeline-webhook-webhookfilterrule-matchequals"
            },
            "remarks": "Otherwise, the request is ignored. Properties from the target action configuration can be included as placeholders in this value by surrounding the action configuration key with curly brackets. For example, if the value supplied here is \"refs/heads/{Branch}\" and the target action has an action configuration property called \"Branch\" with a value of \"main\", the `MatchEquals` value is evaluated as \"refs/heads/main\". For a list of action configuration properties for built-in action types, see [Pipeline Structure Reference Action Requirements](https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements) .",
            "stability": "external",
            "summary": "The value selected by the `JsonPath` expression must match what is supplied in the `MatchEquals` field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 2209
          },
          "name": "matchEquals",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnWebhook.WebhookFilterRuleProperty"
    },
    "@aws-cdk/aws-codepipeline.CfnWebhookProps": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnWebhook`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst cfnWebhookProps: codepipeline.CfnWebhookProps = {\n  authentication: 'authentication',\n  authenticationConfiguration: {\n    allowedIpRange: 'allowedIpRange',\n    secretToken: 'secretToken',\n  },\n  filters: [{\n    jsonPath: 'jsonPath',\n\n    // the properties below are optional\n    matchEquals: 'matchEquals',\n  }],\n  targetAction: 'targetAction',\n  targetPipeline: 'targetPipeline',\n  targetPipelineVersion: 123,\n\n  // the properties below are optional\n  name: 'name',\n  registerWithThirdParty: false,\n};"
      },
      "fqn": "@aws-cdk/aws-codepipeline.CfnWebhookProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codepipeline.generated.ts",
        "line": 1804
      },
      "name": "CfnWebhookProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-authentication"
            },
            "remarks": "- For information about the authentication scheme implemented by GITHUB_HMAC, see [Securing your webhooks](https://docs.aws.amazon.com/https://developer.github.com/webhooks/securing/) on the GitHub Developer website.\n- IP rejects webhooks trigger requests unless they originate from an IP address in the IP range whitelisted in the authentication configuration.\n- UNAUTHENTICATED accepts all webhook trigger requests regardless of origin.",
            "stability": "external",
            "summary": "Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1815
          },
          "name": "authentication",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-authenticationconfiguration"
            },
            "remarks": "The required properties depend on the authentication type. For GITHUB_HMAC, only the `SecretToken` property must be set. For IP, only the `AllowedIPRange` property must be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.",
            "stability": "external",
            "summary": "Properties that configure the authentication applied to incoming webhook trigger requests."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1822
          },
          "name": "authenticationConfiguration",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookAuthConfigurationProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-filters"
            },
            "remarks": "All defined rules must pass for the request to be accepted and the pipeline started.",
            "stability": "external",
            "summary": "A list of rules applied to the body/payload sent in the POST request to a webhook URL."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1829
          },
          "name": "filters",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookFilterRuleProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-targetaction"
            },
            "remarks": "The action must be from the source (first) stage of the pipeline.",
            "stability": "external",
            "summary": "The name of the action in a pipeline you want to connect to the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1836
          },
          "name": "targetAction",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-targetpipeline"
            },
            "stability": "external",
            "summary": "The name of the pipeline you want to connect to the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1843
          },
          "name": "targetPipeline",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-targetpipelineversion"
            },
            "remarks": "Required: Yes\n\nType: Integer\n\nUpdate requires: [No interruption](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-no-interrupt)",
            "stability": "external",
            "summary": "The version number of the pipeline to be connected to the trigger request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1856
          },
          "name": "targetPipelineVersion",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-name"
            },
            "stability": "external",
            "summary": "The name of the webhook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1863
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-webhook.html#cfn-codepipeline-webhook-registerwiththirdparty"
            },
            "stability": "external",
            "summary": "Configures a connection between the webhook that was created and the external tool with events to be detected."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codepipeline.generated.ts",
            "line": 1870
          },
          "name": "registerWithThirdParty",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        }
      ],
      "symbolId": "lib/codepipeline.generated:CfnWebhookProps"
    },
    "@aws-cdk/aws-codepipeline.CommonActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Common properties shared by all Actions.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst commonActionProps: codepipeline.CommonActionProps = {\n  actionName: 'actionName',\n\n  // the properties below are optional\n  runOrder: 123,\n  variablesNamespace: 'variablesNamespace',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.CommonActionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 305
      },
      "name": "CommonActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that Action names must be unique within a single Stage.",
            "stability": "stable",
            "summary": "The physical, human-readable name of the Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 310
          },
          "name": "actionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "RunOrder determines the relative order in which multiple Actions in the same Stage execute.",
            "see": "https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html",
            "stability": "stable",
            "summary": "The runOrder property for this Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 319
          },
          "name": "runOrder",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a name will be generated, based on the stage and action names,\nif any of the action's variables were referenced - otherwise,\nno namespace will be set",
            "stability": "stable",
            "summary": "The name of the namespace to use for variables emitted by this action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 328
          },
          "name": "variablesNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/action:CommonActionProps"
    },
    "@aws-cdk/aws-codepipeline.CommonAwsActionProps": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Common properties shared by all Actions whose {@link ActionProperties.owner} field is 'AWS' (or unset, as 'AWS' is the default).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\nconst commonAwsActionProps: codepipeline.CommonAwsActionProps = {\n  actionName: 'actionName',\n\n  // the properties below are optional\n  role: role,\n  runOrder: 123,\n  variablesNamespace: 'variablesNamespace',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.CommonAwsActionProps",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.CommonActionProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 335
      },
      "name": "CommonAwsActionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "a new Role will be generated",
            "remarks": "The Pipeline's Role will assume this Role\n(the required permissions for that will be granted automatically)\nright before executing this Action.\nThis Action will be passed into your {@link IAction.bind}\nmethod in the {@link ActionBindOptions.role} property.",
            "stability": "stable",
            "summary": "The Role in which context's this Action will be executing in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 346
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ],
      "symbolId": "lib/action:CommonAwsActionProps"
    },
    "@aws-cdk/aws-codepipeline.CrossRegionSupport": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "remarks": "You get instances of this interface from the {@link Pipeline#crossRegionSupport} property.",
        "stability": "stable",
        "summary": "An interface representing resources generated in order to support the cross-region capabilities of CodePipeline.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const bucket: s3.Bucket;\ndeclare const stack: cdk.Stack;\nconst crossRegionSupport: codepipeline.CrossRegionSupport = {\n  replicationBucket: bucket,\n  stack: stack,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.CrossRegionSupport",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/pipeline.ts",
        "line": 1086
      },
      "name": "CrossRegionSupport",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Belongs to {@link stack}.",
            "stability": "stable",
            "summary": "The replication Bucket used by CodePipeline to operate in this region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 1097
          },
          "name": "replicationBucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Stack that has been created to house the replication Bucket required for this  region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 1091
          },
          "name": "stack",
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        }
      ],
      "symbolId": "lib/pipeline:CrossRegionSupport"
    },
    "@aws-cdk/aws-codepipeline.CustomActionProperty": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The creation attributes used for defining a configuration property of a custom Action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst customActionProperty: codepipeline.CustomActionProperty = {\n  name: 'name',\n  required: false,\n\n  // the properties below are optional\n  description: 'description',\n  key: false,\n  queryable: false,\n  secret: false,\n  type: 'type',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.CustomActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/custom-action-registration.ts",
        "line": 13
      },
      "name": "CustomActionProperty",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You use this name in the `configuration` attribute when defining your custom Action class.",
            "stability": "stable",
            "summary": "The name of the property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 18
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Whether this property is required."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 47
          },
          "name": "required",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "the description will be empty",
            "stability": "stable",
            "summary": "The description of the property."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 25
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-key",
            "stability": "stable",
            "summary": "Whether this property is a key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 33
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "Note that only a single property of a custom Action can be queryable.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codepipeline-customactiontype-configurationproperties.html#cfn-codepipeline-customactiontype-configurationproperties-queryable",
            "stability": "stable",
            "summary": "Whether this property is queryable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 42
          },
          "name": "queryable",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether this property is secret, like a password, or access key."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 55
          },
          "name": "secret",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'String'",
            "stability": "stable",
            "summary": "The type of the property, like 'String', 'Number', or 'Boolean'."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 63
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/custom-action-registration:CustomActionProperty"
    },
    "@aws-cdk/aws-codepipeline.CustomActionRegistration": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "remarks": "For the Action to be usable, it has to be registered for every region and every account it's used in.\nIn addition to this class, you should most likely also provide your clients a class\nrepresenting your custom Action, extending the Action class,\nand taking the `actionProperties` as properly typed, construction properties.",
        "stability": "stable",
        "summary": "The resource representing registering a custom Action with CodePipeline.",
        "example": "// Make a custom CodePipeline Action\nnew codepipeline.CustomActionRegistration(this, 'GenericGitSourceProviderResource', {\n  category: codepipeline.ActionCategory.SOURCE,\n  artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 1 },\n  provider: 'GenericGitSource',\n  version: '1',\n  entityUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  executionUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  actionProperties: [\n    {\n      name: 'Branch',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'Git branch to pull',\n      type: 'String',\n    },\n    {\n      name: 'GitUrl',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'SSH git clone URL',\n      type: 'String',\n    },\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.CustomActionRegistration",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/custom-action-registration.ts",
          "line": 121
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.CustomActionRegistrationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/custom-action-registration.ts",
        "line": 120
      },
      "name": "CustomActionRegistration",
      "symbolId": "lib/custom-action-registration:CustomActionRegistration"
    },
    "@aws-cdk/aws-codepipeline.CustomActionRegistrationProps": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties of registering a custom Action.",
        "example": "// Make a custom CodePipeline Action\nnew codepipeline.CustomActionRegistration(this, 'GenericGitSourceProviderResource', {\n  category: codepipeline.ActionCategory.SOURCE,\n  artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 1 },\n  provider: 'GenericGitSource',\n  version: '1',\n  entityUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  executionUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  actionProperties: [\n    {\n      name: 'Branch',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'Git branch to pull',\n      type: 'String',\n    },\n    {\n      name: 'GitUrl',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'SSH git clone URL',\n      type: 'String',\n    },\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.CustomActionRegistrationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/custom-action-registration.ts",
        "line": 69
      },
      "name": "CustomActionRegistrationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The artifact bounds of the Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 78
          },
          "name": "artifactBounds",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ActionArtifactBounds"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The category of the Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 73
          },
          "name": "category",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ActionCategory"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, `'MyCustomActionProvider'`",
            "stability": "stable",
            "summary": "The provider of the Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 84
          },
          "name": "provider",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[]",
            "stability": "stable",
            "summary": "The properties used for customizing the instance of your Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 110
          },
          "name": "actionProperties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.CustomActionProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "The URL shown for the entire Action in the Pipeline UI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 97
          },
          "name": "entityUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "stable",
            "summary": "The URL shown for a particular execution of an Action in the Pipeline UI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 103
          },
          "name": "executionUrl",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'1'",
            "stability": "stable",
            "summary": "The version of your Action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/custom-action-registration.ts",
            "line": 91
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/custom-action-registration:CustomActionRegistrationProps"
    },
    "@aws-cdk/aws-codepipeline.GlobalVariables": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "docs": {
        "remarks": "This class defines a bunch of static fields that represent the different variables.\nThese can be used can be used in any action configuration.",
        "stability": "stable",
        "summary": "The CodePipeline variables that are global, not bound to a specific action.",
        "example": "// OtherAction is some action type that produces variables, like EcrSourceAction\nnew OtherAction({\n  // ...\n  config: codepipeline.GlobalVariables.executionId,\n  actionName: 'otherAction',\n});",
        "custom": {
          "exampleMetadata": "fixture=action infused"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.GlobalVariables",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 41
      },
      "name": "GlobalVariables",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "The identifier of the current pipeline execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 43
          },
          "name": "executionId",
          "static": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/action:GlobalVariables"
    },
    "@aws-cdk/aws-codepipeline.IAction": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "docs": {
        "remarks": "If you want to implement this interface,\nconsider extending the {@link Action} class,\nwhich contains some common logic.",
        "stability": "stable",
        "summary": "A Pipeline Action."
      },
      "fqn": "@aws-cdk/aws-codepipeline.IAction",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 140
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The callback invoked when this Action is added to a Pipeline."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 156
          },
          "name": "bind",
          "parameters": [
            {
              "docs": {
                "summary": "the Construct tree scope the Action can use if it needs to create any resources."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "docs": {
                "summary": "the {@link IStage} this Action is being added to."
              },
              "name": "stage",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              }
            },
            {
              "docs": {
                "summary": "additional options the Action can use, like the artifact Bucket of the pipeline it's being added to."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Creates an Event that will be triggered whenever the state of this Action changes."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 165
          },
          "name": "onStateChange",
          "parameters": [
            {
              "docs": {
                "summary": "the name to use for the new Event."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the optional target for the Event."
              },
              "name": "target",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.IRuleTarget"
              }
            },
            {
              "docs": {
                "summary": "additional options that can be used to customize the created Event."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.RuleProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        }
      ],
      "name": "IAction",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Note that this accessor will be called before the {@link bind} callback.",
            "stability": "stable",
            "summary": "The simple properties of the Action, like its Owner, name, etc."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 146
          },
          "name": "actionProperties",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.ActionProperties"
          }
        }
      ],
      "symbolId": "lib/action:IAction"
    },
    "@aws-cdk/aws-codepipeline.IPipeline": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "docs": {
        "remarks": "It extends {@link events.IRuleTarget},\nso this interface can be used as a Target for CloudWatch Events.",
        "stability": "stable",
        "summary": "The abstract view of an AWS CodePipeline as required and used by Actions."
      },
      "fqn": "@aws-cdk/aws-codepipeline.IPipeline",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-codestarnotifications.INotificationRuleSource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 173
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "remarks": "You can also use the methods `notifyOnExecutionStateChange`, `notifyOnAnyStageStateChange`,\n`notifyOnAnyActionStateChange` and `notifyOnAnyManualApprovalStateChange`\nto define rules for these specific event emitted.",
            "returns": "CodeStar notification rule associated with this build project.",
            "stability": "stable",
            "summary": "Defines a CodeStar notification rule triggered when the pipeline events emitted by you specified, it very similar to `onEvent` API."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 218
          },
          "name": "notifyOn",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the CodeStar notification rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The target to register for the CodeStar Notifications destination."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "docs": {
                "summary": "Customization options for CodeStar notification rule."
              },
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.PipelineNotifyOnOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/dtconsole/latest/userguide/concepts.html#events-ref-pipeline",
            "stability": "stable",
            "summary": "Define an notification rule triggered by the set of the \"Action execution\" events emitted from this pipeline."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 260
          },
          "name": "notifyOnAnyActionStateChange",
          "parameters": [
            {
              "docs": {
                "summary": "Identifier for this notification handler."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The target to register for the CodeStar Notifications destination."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "docs": {
                "summary": "Additional options to pass to the notification rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/dtconsole/latest/userguide/concepts.html#events-ref-pipeline",
            "stability": "stable",
            "summary": "Define an notification rule triggered by the set of the \"Manual approval\" events emitted from this pipeline."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 274
          },
          "name": "notifyOnAnyManualApprovalStateChange",
          "parameters": [
            {
              "docs": {
                "summary": "Identifier for this notification handler."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The target to register for the CodeStar Notifications destination."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "docs": {
                "summary": "Additional options to pass to the notification rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/dtconsole/latest/userguide/concepts.html#events-ref-pipeline",
            "stability": "stable",
            "summary": "Define an notification rule triggered by the set of the \"Stage execution\" events emitted from this pipeline."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 246
          },
          "name": "notifyOnAnyStageStateChange",
          "parameters": [
            {
              "docs": {
                "summary": "Identifier for this notification handler."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The target to register for the CodeStar Notifications destination."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "docs": {
                "summary": "Additional options to pass to the notification rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/dtconsole/latest/userguide/concepts.html#events-ref-pipeline",
            "stability": "stable",
            "summary": "Define an notification rule triggered by the set of the \"Pipeline execution\" events emitted from this pipeline."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 232
          },
          "name": "notifyOnExecutionStateChange",
          "parameters": [
            {
              "docs": {
                "summary": "Identifier for this notification handler."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The target to register for the CodeStar Notifications destination."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "docs": {
                "summary": "Additional options to pass to the notification rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Define an event rule triggered by this CodePipeline."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 194
          },
          "name": "onEvent",
          "parameters": [
            {
              "docs": {
                "summary": "Identifier for this event handler."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options to pass to the event rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Define an event rule triggered by the \"CodePipeline Pipeline Execution State Change\" event emitted from this pipeline."
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 203
          },
          "name": "onStateChange",
          "parameters": [
            {
              "docs": {
                "summary": "Identifier for this event handler."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options to pass to the event rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        }
      ],
      "name": "IPipeline",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the Pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 186
          },
          "name": "pipelineArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the Pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 179
          },
          "name": "pipelineName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/action:IPipeline"
    },
    "@aws-cdk/aws-codepipeline.IStage": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "docs": {
        "stability": "stable",
        "summary": "The abstract interface of a Pipeline Stage that is used by Actions."
      },
      "fqn": "@aws-cdk/aws-codepipeline.IStage",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 284
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 297
          },
          "name": "addAction",
          "parameters": [
            {
              "name": "action",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.IAction"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 299
          },
          "name": "onStateChange",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.IRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.RuleProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        }
      ],
      "name": "IStage",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The actions belonging to this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 295
          },
          "name": "actions",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.IAction"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 290
          },
          "name": "pipeline",
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.IPipeline"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The physical, human-readable name of this Pipeline Stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 288
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/action:IStage"
    },
    "@aws-cdk/aws-codepipeline.Pipeline": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "example": "// create a pipeline\nimport * as codecommit from '@aws-cdk/aws-codecommit';\n\nconst pipeline = new codepipeline.Pipeline(this, 'Pipeline');\n\n// add a stage\nconst sourceStage = pipeline.addStage({ stageName: 'Source' });\n\n// add a source action to the stage\ndeclare const repo: codecommit.Repository;\ndeclare const sourceArtifact: codepipeline.Artifact;\nsourceStage.addAction(new codepipeline_actions.CodeCommitSourceAction({\nactionName: 'Source',\noutput: sourceArtifact,\nrepository: repo,\n}));\n\n// ... add more stages",
        "stability": "stable",
        "summary": "An AWS CodePipeline pipeline with its associated IAM role and S3 bucket."
      },
      "fqn": "@aws-cdk/aws-codepipeline.Pipeline",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/pipeline.ts",
          "line": 370
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.PipelineProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-codepipeline.IPipeline"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/pipeline.ts",
        "line": 316
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a pipeline into this app."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 324
          },
          "name": "fromPipelineArn",
          "parameters": [
            {
              "docs": {
                "summary": "the scope into which to import this pipeline."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the logical ID of the returned pipeline construct."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The ARN of the pipeline (e.g. `arn:aws:codepipeline:us-east-1:123456789012:MyDemoPipeline`)."
              },
              "name": "pipelineArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.IPipeline"
            }
          },
          "static": true
        },
        {
          "docs": {
            "returns": "the newly created Stage",
            "stability": "stable",
            "summary": "Creates a new Stage, and adds it to this Pipeline."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 472
          },
          "name": "addStage",
          "parameters": [
            {
              "docs": {
                "summary": "the creation properties of the new Stage."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.StageOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.IStage"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a statement to the pipeline role."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 492
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns a source configuration for notification rule."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 208
          },
          "name": "bindAsNotificationRuleSource",
          "overrides": "@aws-cdk/aws-codestarnotifications.INotificationRuleSource",
          "parameters": [
            {
              "name": "_scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleSourceConfig"
            }
          }
        },
        {
          "docs": {
            "remarks": "You can also use the methods `notifyOnExecutionStateChange`, `notifyOnAnyStageStateChange`,\n`notifyOnAnyActionStateChange` and `notifyOnAnyManualApprovalStateChange`\nto define rules for these specific event emitted.",
            "stability": "stable",
            "summary": "Defines a CodeStar notification rule triggered when the pipeline events emitted by you specified, it very similar to `onEvent` API."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 214
          },
          "name": "notifyOn",
          "overrides": "@aws-cdk/aws-codepipeline.IPipeline",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-codepipeline.PipelineNotifyOnOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Define an notification rule triggered by the set of the \"Action execution\" events emitted from this pipeline."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 261
          },
          "name": "notifyOnAnyActionStateChange",
          "overrides": "@aws-cdk/aws-codepipeline.IPipeline",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Define an notification rule triggered by the set of the \"Manual approval\" events emitted from this pipeline."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 277
          },
          "name": "notifyOnAnyManualApprovalStateChange",
          "overrides": "@aws-cdk/aws-codepipeline.IPipeline",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Define an notification rule triggered by the set of the \"Stage execution\" events emitted from this pipeline."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 244
          },
          "name": "notifyOnAnyStageStateChange",
          "overrides": "@aws-cdk/aws-codepipeline.IPipeline",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Define an notification rule triggered by the set of the \"Pipeline execution\" events emitted from this pipeline."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 226
          },
          "name": "notifyOnExecutionStateChange",
          "overrides": "@aws-cdk/aws-codepipeline.IPipeline",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codestarnotifications.INotificationRule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines an event rule triggered by this CodePipeline."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 183
          },
          "name": "onEvent",
          "overrides": "@aws-cdk/aws-codepipeline.IPipeline",
          "parameters": [
            {
              "docs": {
                "summary": "Identifier for this event handler."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options to pass to the event rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines an event rule triggered by the \"CodePipeline Pipeline Execution State Change\" event emitted from this pipeline."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 200
          },
          "name": "onStateChange",
          "overrides": "@aws-cdk/aws-codepipeline.IPipeline",
          "parameters": [
            {
              "docs": {
                "summary": "Identifier for this event handler."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Additional options to pass to the event rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Access one of the pipeline's stages by stage name."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 518
          },
          "name": "stage",
          "parameters": [
            {
              "name": "stageName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-codepipeline.IStage"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "remarks": "Validation happens according to the rules documented at\n\nhttps://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#pipeline-requirements",
            "stability": "stable",
            "summary": "Validate the pipeline structure."
          },
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 579
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "Pipeline",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Bucket used to store output artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 359
          },
          "name": "artifactBucket",
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns all of the {@link CrossRegionSupportStack}s that were generated automatically when dealing with Actions that reside in a different region than the Pipeline itself."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 532
          },
          "name": "crossRegionSupport",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.CrossRegionSupport"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "ARN of this pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 342
          },
          "name": "pipelineArn",
          "overrides": "@aws-cdk/aws-codepipeline.IPipeline",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 347
          },
          "name": "pipelineName",
          "overrides": "@aws-cdk/aws-codepipeline.IPipeline",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The version of the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 354
          },
          "name": "pipelineVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM role AWS CodePipeline will use to perform actions or assume roles for actions with a more specific IAM role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 337
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Get the number of Stages in this Pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 499
          },
          "name": "stageCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "remarks": "**Note**: the returned array is a defensive copy,\nso adding elements to it has no effect.\nInstead, use the {@link addStage} method if you want to add more stages\nto the pipeline.",
            "stability": "stable",
            "summary": "Returns the stages that comprise the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 511
          },
          "name": "stages",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.IStage"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/pipeline:Pipeline"
    },
    "@aws-cdk/aws-codepipeline.PipelineNotificationEvents": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "docs": {
        "see": "https://docs.aws.amazon.com/dtconsole/latest/userguide/concepts.html#events-ref-pipeline",
        "stability": "stable",
        "summary": "The list of event types for AWS Codepipeline Pipeline."
      },
      "fqn": "@aws-cdk/aws-codepipeline.PipelineNotificationEvents",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 475
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline execution failed."
          },
          "name": "PIPELINE_EXECUTION_FAILED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline execution canceled."
          },
          "name": "PIPELINE_EXECUTION_CANCELED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline execution started."
          },
          "name": "PIPELINE_EXECUTION_STARTED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline execution resumed."
          },
          "name": "PIPELINE_EXECUTION_RESUMED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline execution succeeded."
          },
          "name": "PIPELINE_EXECUTION_SUCCEEDED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline execution superseded."
          },
          "name": "PIPELINE_EXECUTION_SUPERSEDED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline stage execution started."
          },
          "name": "STAGE_EXECUTION_STARTED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline stage execution succeeded."
          },
          "name": "STAGE_EXECUTION_SUCCEEDED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline stage execution resumed."
          },
          "name": "STAGE_EXECUTION_RESUMED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline stage execution canceled."
          },
          "name": "STAGE_EXECUTION_CANCELED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline stage execution failed."
          },
          "name": "STAGE_EXECUTION_FAILED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline action execution succeeded."
          },
          "name": "ACTION_EXECUTION_SUCCEEDED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline action execution failed."
          },
          "name": "ACTION_EXECUTION_FAILED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline action execution canceled."
          },
          "name": "ACTION_EXECUTION_CANCELED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline action execution started."
          },
          "name": "ACTION_EXECUTION_STARTED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline manual approval failed."
          },
          "name": "MANUAL_APPROVAL_FAILED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline manual approval needed."
          },
          "name": "MANUAL_APPROVAL_NEEDED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Trigger notification when pipeline manual approval succeeded."
          },
          "name": "MANUAL_APPROVAL_SUCCEEDED"
        }
      ],
      "name": "PipelineNotificationEvents",
      "symbolId": "lib/action:PipelineNotificationEvents"
    },
    "@aws-cdk/aws-codepipeline.PipelineNotifyOnOptions": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Additional options to pass to the notification rule.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codestarnotifications from '@aws-cdk/aws-codestarnotifications';\nconst pipelineNotifyOnOptions: codepipeline.PipelineNotifyOnOptions = {\n  events: [codepipeline.PipelineNotificationEvents.PIPELINE_EXECUTION_FAILED],\n\n  // the properties below are optional\n  detailType: codestarnotifications.DetailType.BASIC,\n  enabled: false,\n  notificationRuleName: 'notificationRuleName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.PipelineNotifyOnOptions",
      "interfaces": [
        "@aws-cdk/aws-codestarnotifications.NotificationRuleOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/action.ts",
        "line": 125
      },
      "name": "PipelineNotifyOnOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For a complete list of event types and IDs, see Notification concepts in the Developer Tools Console User Guide.",
            "see": "https://docs.aws.amazon.com/dtconsole/latest/userguide/concepts.html#concepts-api",
            "stability": "stable",
            "summary": "A list of event types associated with this notification rule for CodePipeline Pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/action.ts",
            "line": 131
          },
          "name": "events",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.PipelineNotificationEvents"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/action:PipelineNotifyOnOptions"
    },
    "@aws-cdk/aws-codepipeline.PipelineProps": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "declare const project: codebuild.PipelineProject;\nconst repository = new codecommit.Repository(this, 'MyRepository', {\n  repositoryName: 'MyRepository',\n});\nconst project = new codebuild.PipelineProject(this, 'MyProject');\n\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  actionName: 'CodeCommit',\n  repository,\n  output: sourceOutput,\n});\nconst buildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput,\n  outputs: [new codepipeline.Artifact()], // optional\n  executeBatchBuild: true, // optional, defaults to false\n  combineBatchBuildArtifacts: true, // optional, defaults to false\n});\n\nnew codepipeline.Pipeline(this, 'MyPipeline', {\n  stages: [\n    {\n      stageName: 'Source',\n      actions: [sourceAction],\n    },\n    {\n      stageName: 'Build',\n      actions: [buildAction],\n    },\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.PipelineProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/pipeline.ts",
        "line": 90
      },
      "name": "PipelineProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- A new S3 bucket will be created.",
            "stability": "stable",
            "summary": "The S3 bucket used by this Pipeline to store artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 96
          },
          "name": "artifactBucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This controls whether the pipeline is enabled for cross-account deployments.\n\nBy default cross-account deployments are enabled, but this feature requires\nthat KMS Customer Master Keys are created which have a cost of $1/month.\n\nIf you do not need cross-account deployments, you can set this to `false` to\nnot create those keys and save on that cost (the artifact bucket will be\nencrypted with an AWS-managed key). However, cross-account deployments will\nno longer be possible.",
            "stability": "stable",
            "summary": "Create KMS keys for cross-account deployments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 153
          },
          "name": "crossAccountKeys",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "remarks": "For every Action that you specify targeting a different region than the Pipeline itself,\nif you don't provide an explicit Bucket for that region using this property,\nthe construct will automatically create a Stack containing an S3 Bucket in that region.",
            "stability": "stable",
            "summary": "A map of region to S3 bucket name used for cross-region CodePipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 127
          },
          "name": "crossRegionReplicationBuckets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false (key rotation is disabled)",
            "remarks": "By default KMS key rotation is disabled, but will add an additional $1/month\nfor each year the key exists when enabled.",
            "stability": "stable",
            "summary": "Enable KMS key rotation for the generated KMS keys."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 163
          },
          "name": "enableKeyRotation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AWS CloudFormation generates an ID and uses that for the pipeline name.",
            "stability": "stable",
            "summary": "Name of the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 117
          },
          "name": "pipelineName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Indicates whether to rerun the AWS CodePipeline pipeline after you update it."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 110
          },
          "name": "restartExecutionOnUpdate",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- true (Use the same support stack for all pipelines in App)",
            "stability": "stable",
            "summary": "Reuse the same cross region support stack for all pipelines in the App."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 170
          },
          "name": "reuseCrossRegionSupportStacks",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a new IAM role will be created.",
            "stability": "stable",
            "summary": "The IAM role to be assumed by this Pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 103
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None.",
            "remarks": "You can always add more Stages later by calling {@link Pipeline#addStage}.",
            "stability": "stable",
            "summary": "The list of Stages, in order, to create this Pipeline with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 136
          },
          "name": "stages",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.StageProps"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/pipeline:PipelineProps"
    },
    "@aws-cdk/aws-codepipeline.StageOptions": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "example": "import * as stepfunctions from '@aws-cdk/aws-stepfunctions';\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst inputArtifact = new codepipeline.Artifact();\nconst startState = new stepfunctions.Pass(this, 'StartState');\nconst simpleStateMachine  = new stepfunctions.StateMachine(this, 'SimpleStateMachine', {\n  definition: startState,\n});\nconst stepFunctionAction = new codepipeline_actions.StepFunctionInvokeAction({\n  actionName: 'Invoke',\n  stateMachine: simpleStateMachine,\n  stateMachineInput: codepipeline_actions.StateMachineInput.filePath(inputArtifact.atPath('assets/input.json')),\n});\npipeline.addStage({\n  stageName: 'StepFunctions',\n  actions: [stepFunctionAction],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.StageOptions",
      "interfaces": [
        "@aws-cdk/aws-codepipeline.StageProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/pipeline.ts",
        "line": 86
      },
      "name": "StageOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 87
          },
          "name": "placement",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.StagePlacement"
          }
        }
      ],
      "symbolId": "lib/pipeline:StageOptions"
    },
    "@aws-cdk/aws-codepipeline.StagePlacement": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "remarks": "Note that you can provide only one of the below properties -\nspecifying more than one will result in a validation error.",
        "see": "#justAfter",
        "stability": "stable",
        "summary": "Allows you to control where to place a new Stage when it's added to the Pipeline.",
        "example": "// Insert a new Stage at an arbitrary point\ndeclare const pipeline: codepipeline.Pipeline;\ndeclare const anotherStage: codepipeline.IStage;\ndeclare const yetAnotherStage: codepipeline.IStage;\n\nconst someStage = pipeline.addStage({\n  stageName: 'SomeStage',\n  placement: {\n    // note: you can only specify one of the below properties\n    rightBefore: anotherStage,\n    justAfter: yetAnotherStage,\n  }\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.StagePlacement",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/pipeline.ts",
        "line": 41
      },
      "name": "StagePlacement",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Inserts the new Stage as a child of the given Stage (changing its current child Stage, if it had one)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 52
          },
          "name": "justAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.IStage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Inserts the new Stage as a parent of the given Stage (changing its current parent Stage, if it had one)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 46
          },
          "name": "rightBefore",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-codepipeline.IStage"
          }
        }
      ],
      "symbolId": "lib/pipeline:StagePlacement"
    },
    "@aws-cdk/aws-codepipeline.StageProps": {
      "assembly": "@aws-cdk/aws-codepipeline",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties of a Pipeline Stage.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const action: codepipeline.Action;\nconst stageProps: codepipeline.StageProps = {\n  stageName: 'stageName',\n\n  // the properties below are optional\n  actions: [action],\n  transitionDisabledReason: 'transitionDisabledReason',\n  transitionToEnabled: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-codepipeline.StageProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/pipeline.ts",
        "line": 58
      },
      "name": "StageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The physical, human-readable name to assign to this Pipeline Stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 62
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "You can always add more Actions later by calling {@link IStage#addAction}.",
            "stability": "stable",
            "summary": "The list of Actions to create this Stage with."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 68
          },
          "name": "actions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codepipeline.IAction"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'Transition disabled'",
            "remarks": "Only applicable\nif `transitionToEnabled` is set to `false`.",
            "stability": "stable",
            "summary": "The reason for disabling transition to this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 83
          },
          "name": "transitionDisabledReason",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Whether to enable transition to this stage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/pipeline.ts",
            "line": 75
          },
          "name": "transitionToEnabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/pipeline:StageProps"
    }
  },
  "version": "1.193.0",
  "fingerprint": "**********"
}