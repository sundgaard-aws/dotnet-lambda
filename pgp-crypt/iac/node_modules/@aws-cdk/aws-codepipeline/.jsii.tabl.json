{
  "version": "2",
  "toolVersion": "1.74.0",
  "snippets": {
    "5fac1b539d56a150905432607a7d469bca187a04d35044382be575dfcbb0f844": {
      "translations": {
        "python": {
          "source": "# Construct an empty Pipeline\npipeline = codepipeline.Pipeline(self, \"MyFirstPipeline\")",
          "version": "2"
        },
        "csharp": {
          "source": "// Construct an empty Pipeline\nPipeline pipeline = new Pipeline(this, \"MyFirstPipeline\");",
          "version": "1"
        },
        "java": {
          "source": "// Construct an empty Pipeline\nPipeline pipeline = new Pipeline(this, \"MyFirstPipeline\");",
          "version": "1"
        },
        "go": {
          "source": "// Construct an empty Pipeline\npipeline := codepipeline.NewPipeline(this, jsii.String(\"MyFirstPipeline\"))",
          "version": "1"
        },
        "$": {
          "source": "// Construct an empty Pipeline\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 18
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.Pipeline",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Construct an empty Pipeline\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline');\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 3,
        "104": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1
      },
      "fqnsFingerprint": "00705596dbeae9d0017ab13493cca2f2f0568e6d58259a7a8194772dc7e28889"
    },
    "44105e65d59a02b965c3e94a77a2d59a8f39d3143ec6ba2a6ce52a0088428e10": {
      "translations": {
        "python": {
          "source": "# Give the Pipeline a nice, human-readable name\npipeline = codepipeline.Pipeline(self, \"MyFirstPipeline\",\n    pipeline_name=\"MyPipeline\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Give the Pipeline a nice, human-readable name\nPipeline pipeline = new Pipeline(this, \"MyFirstPipeline\", new PipelineProps {\n    PipelineName = \"MyPipeline\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// Give the Pipeline a nice, human-readable name\nPipeline pipeline = Pipeline.Builder.create(this, \"MyFirstPipeline\")\n        .pipelineName(\"MyPipeline\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Give the Pipeline a nice, human-readable name\npipeline := codepipeline.NewPipeline(this, jsii.String(\"MyFirstPipeline\"), &pipelineProps{\n\tpipelineName: jsii.String(\"MyPipeline\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// Give the Pipeline a nice, human-readable name\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  pipelineName: 'MyPipeline',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 25
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.PipelineProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Give the Pipeline a nice, human-readable name\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  pipelineName: 'MyPipeline',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 4,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "6c2753b40ad0009e2ab80dac90ea76e4ce6053485e6c9c450b607e3e0d62db61"
    },
    "f26a57d39a111e5b3350c5e50bf1238539097d28c75d05a9dfb34fe89b86f3a5": {
      "translations": {
        "python": {
          "source": "# Don't create Customer Master Keys\npipeline = codepipeline.Pipeline(self, \"MyFirstPipeline\",\n    cross_account_keys=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Don't create Customer Master Keys\nPipeline pipeline = new Pipeline(this, \"MyFirstPipeline\", new PipelineProps {\n    CrossAccountKeys = false\n});",
          "version": "1"
        },
        "java": {
          "source": "// Don't create Customer Master Keys\nPipeline pipeline = Pipeline.Builder.create(this, \"MyFirstPipeline\")\n        .crossAccountKeys(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Don't create Customer Master Keys\npipeline := codepipeline.NewPipeline(this, jsii.String(\"MyFirstPipeline\"), &pipelineProps{\n\tcrossAccountKeys: jsii.Boolean(false),\n})",
          "version": "1"
        },
        "$": {
          "source": "// Don't create Customer Master Keys\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  crossAccountKeys: false,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 42
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.PipelineProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Don't create Customer Master Keys\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  crossAccountKeys: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "91": 1,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "6c2753b40ad0009e2ab80dac90ea76e4ce6053485e6c9c450b607e3e0d62db61"
    },
    "3f5fa4d98ba6a77c458523ecedca0bef56a82778a43a293bb35682adbe32a1b7": {
      "translations": {
        "python": {
          "source": "# Enable key rotation for the generated KMS key\npipeline = codepipeline.Pipeline(self, \"MyFirstPipeline\",\n    # ...\n    enable_key_rotation=True\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Enable key rotation for the generated KMS key\nPipeline pipeline = new Pipeline(this, \"MyFirstPipeline\", new PipelineProps {\n    // ...\n    EnableKeyRotation = true\n});",
          "version": "1"
        },
        "java": {
          "source": "// Enable key rotation for the generated KMS key\nPipeline pipeline = Pipeline.Builder.create(this, \"MyFirstPipeline\")\n        // ...\n        .enableKeyRotation(true)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Enable key rotation for the generated KMS key\npipeline := codepipeline.NewPipeline(this, jsii.String(\"MyFirstPipeline\"), &pipelineProps{\n\t// ...\n\tenableKeyRotation: jsii.Boolean(true),\n})",
          "version": "1"
        },
        "$": {
          "source": "// Enable key rotation for the generated KMS key\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  // ...\n  enableKeyRotation: true,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 53
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.PipelineProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Enable key rotation for the generated KMS key\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  // ...\n  enableKeyRotation: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "104": 1,
        "106": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "6c2753b40ad0009e2ab80dac90ea76e4ce6053485e6c9c450b607e3e0d62db61"
    },
    "53928bc79224f01b776d3051fdc6108cbb80bfa95dbf65a2388e4ea97c641890": {
      "translations": {
        "python": {
          "source": "# Provide a Stage when creating a pipeline\npipeline = codepipeline.Pipeline(self, \"MyFirstPipeline\",\n    stages=[codepipeline.StageProps(\n        stage_name=\"Source\",\n        actions=[]\n    )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Provide a Stage when creating a pipeline\nPipeline pipeline = new Pipeline(this, \"MyFirstPipeline\", new PipelineProps {\n    Stages = new [] { new StageProps {\n        StageName = \"Source\",\n        Actions = new [] {  }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Provide a Stage when creating a pipeline\nPipeline pipeline = Pipeline.Builder.create(this, \"MyFirstPipeline\")\n        .stages(List.of(StageProps.builder()\n                .stageName(\"Source\")\n                .actions(List.of())\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Provide a Stage when creating a pipeline\npipeline := codepipeline.NewPipeline(this, jsii.String(\"MyFirstPipeline\"), &pipelineProps{\n\tstages: []stageProps{\n\t\t&stageProps{\n\t\t\tstageName: jsii.String(\"Source\"),\n\t\t\tactions: []iAction{\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Provide a Stage when creating a pipeline\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  stages: [\n    {\n      stageName: 'Source',\n      actions: [\n        // see below...\n      ],\n    },\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 65
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.PipelineProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Provide a Stage when creating a pipeline\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  stages: [\n    {\n      stageName: 'Source',\n      actions: [\n        // see below...\n      ],\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "104": 1,
        "192": 2,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "6c2753b40ad0009e2ab80dac90ea76e4ce6053485e6c9c450b607e3e0d62db61"
    },
    "12d4687d21523a676f509b5610c6b7c1d3d6f4406fa176ed6b8ed035c1065e93": {
      "translations": {
        "python": {
          "source": "# Append a Stage to an existing Pipeline\n# pipeline: codepipeline.Pipeline\n\nsource_stage = pipeline.add_stage(\n    stage_name=\"Source\",\n    actions=[]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Append a Stage to an existing Pipeline\nPipeline pipeline;\n\nIStage sourceStage = pipeline.AddStage(new StageOptions {\n    StageName = \"Source\",\n    Actions = new [] {  }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Append a Stage to an existing Pipeline\nPipeline pipeline;\n\nIStage sourceStage = pipeline.addStage(StageOptions.builder()\n        .stageName(\"Source\")\n        .actions(List.of())\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Append a Stage to an existing Pipeline\nvar pipeline pipeline\n\nsourceStage := pipeline.addStage(&stageOptions{\n\tstageName: jsii.String(\"Source\"),\n\tactions: []iAction{\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Append a Stage to an existing Pipeline\ndeclare const pipeline: codepipeline.Pipeline;\nconst sourceStage = pipeline.addStage({\n  stageName: 'Source',\n  actions: [ // optional property\n    // see below...\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 81
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.IStage",
        "@aws-cdk/aws-codepipeline.Pipeline#addStage",
        "@aws-cdk/aws-codepipeline.StageOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Append a Stage to an existing Pipeline\ndeclare const pipeline: codepipeline.Pipeline;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst sourceStage = pipeline.addStage({\n  stageName: 'Source',\n  actions: [ // optional property\n    // see below...\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 8,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "d268c5a4986d00bbf76289fbf7871d5582e3c7d58271f530375b801b8a44602c"
    },
    "9278a26de27ae5a57108b76d4f32757e86f956d43e29cfbb34a487a8b8840394": {
      "translations": {
        "python": {
          "source": "# Insert a new Stage at an arbitrary point\n# pipeline: codepipeline.Pipeline\n# another_stage: codepipeline.IStage\n# yet_another_stage: codepipeline.IStage\n\n\nsome_stage = pipeline.add_stage(\n    stage_name=\"SomeStage\",\n    placement=codepipeline.StagePlacement(\n        # note: you can only specify one of the below properties\n        right_before=another_stage,\n        just_after=yet_another_stage\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Insert a new Stage at an arbitrary point\nPipeline pipeline;\nIStage anotherStage;\nIStage yetAnotherStage;\n\n\nIStage someStage = pipeline.AddStage(new StageOptions {\n    StageName = \"SomeStage\",\n    Placement = new StagePlacement {\n        // note: you can only specify one of the below properties\n        RightBefore = anotherStage,\n        JustAfter = yetAnotherStage\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Insert a new Stage at an arbitrary point\nPipeline pipeline;\nIStage anotherStage;\nIStage yetAnotherStage;\n\n\nIStage someStage = pipeline.addStage(StageOptions.builder()\n        .stageName(\"SomeStage\")\n        .placement(StagePlacement.builder()\n                // note: you can only specify one of the below properties\n                .rightBefore(anotherStage)\n                .justAfter(yetAnotherStage)\n                .build())\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Insert a new Stage at an arbitrary point\nvar pipeline pipeline\nvar anotherStage iStage\nvar yetAnotherStage iStage\n\n\nsomeStage := pipeline.addStage(&stageOptions{\n\tstageName: jsii.String(\"SomeStage\"),\n\tplacement: &stagePlacement{\n\t\t// note: you can only specify one of the below properties\n\t\trightBefore: anotherStage,\n\t\tjustAfter: yetAnotherStage,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Insert a new Stage at an arbitrary point\ndeclare const pipeline: codepipeline.Pipeline;\ndeclare const anotherStage: codepipeline.IStage;\ndeclare const yetAnotherStage: codepipeline.IStage;\n\nconst someStage = pipeline.addStage({\n  stageName: 'SomeStage',\n  placement: {\n    // note: you can only specify one of the below properties\n    rightBefore: anotherStage,\n    justAfter: yetAnotherStage,\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 94
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.IStage",
        "@aws-cdk/aws-codepipeline.Pipeline#addStage",
        "@aws-cdk/aws-codepipeline.StageOptions",
        "@aws-cdk/aws-codepipeline.StagePlacement"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Insert a new Stage at an arbitrary point\ndeclare const pipeline: codepipeline.Pipeline;\ndeclare const anotherStage: codepipeline.IStage;\ndeclare const yetAnotherStage: codepipeline.IStage;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst someStage = pipeline.addStage({\n  stageName: 'SomeStage',\n  placement: {\n    // note: you can only specify one of the below properties\n    rightBefore: anotherStage,\n    justAfter: yetAnotherStage,\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 18,
        "130": 3,
        "153": 3,
        "169": 3,
        "193": 2,
        "194": 1,
        "196": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "3a0bc57bdc622d2a5d70113f838d2ae1320d3edc0ebbca138caece2ba32c91d4"
    },
    "a88e999e77551c949e7366197ac2bcf9800b7dc02a85f1c1785714941e1a8275": {
      "translations": {
        "python": {
          "source": "# Disable transition to a stage\n# pipeline: codepipeline.Pipeline\n\n\nsome_stage = pipeline.add_stage(\n    stage_name=\"SomeStage\",\n    transition_to_enabled=False,\n    transition_disabled_reason=\"Manual transition only\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Disable transition to a stage\nPipeline pipeline;\n\n\nIStage someStage = pipeline.AddStage(new StageOptions {\n    StageName = \"SomeStage\",\n    TransitionToEnabled = false,\n    TransitionDisabledReason = \"Manual transition only\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// Disable transition to a stage\nPipeline pipeline;\n\n\nIStage someStage = pipeline.addStage(StageOptions.builder()\n        .stageName(\"SomeStage\")\n        .transitionToEnabled(false)\n        .transitionDisabledReason(\"Manual transition only\")\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Disable transition to a stage\nvar pipeline pipeline\n\n\nsomeStage := pipeline.addStage(&stageOptions{\n\tstageName: jsii.String(\"SomeStage\"),\n\ttransitionToEnabled: jsii.Boolean(false),\n\ttransitionDisabledReason: jsii.String(\"Manual transition only\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// Disable transition to a stage\ndeclare const pipeline: codepipeline.Pipeline;\n\nconst someStage = pipeline.addStage({\n  stageName: 'SomeStage',\n  transitionToEnabled: false,\n  transitionDisabledReason: 'Manual transition only', // optional reason\n})",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 112
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.IStage",
        "@aws-cdk/aws-codepipeline.Pipeline#addStage",
        "@aws-cdk/aws-codepipeline.StageOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Disable transition to a stage\ndeclare const pipeline: codepipeline.Pipeline;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst someStage = pipeline.addStage({\n  stageName: 'SomeStage',\n  transitionToEnabled: false,\n  transitionDisabledReason: 'Manual transition only', // optional reason\n})\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "91": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "d268c5a4986d00bbf76289fbf7871d5582e3c7d58271f530375b801b8a44602c"
    },
    "0e2f1d7737d7cb21c3c5f9413590cf10777ae8927281d95d8615ab741617eeae": {
      "translations": {
        "python": {
          "source": "# Use the `IStage.addAction()` method to mutate an existing Stage.\n# source_stage: codepipeline.IStage\n# some_action: codepipeline.Action\n\nsource_stage.add_action(some_action)",
          "version": "2"
        },
        "csharp": {
          "source": "// Use the `IStage.addAction()` method to mutate an existing Stage.\nIStage sourceStage;\nAction someAction;\n\nsourceStage.AddAction(someAction);",
          "version": "1"
        },
        "java": {
          "source": "// Use the `IStage.addAction()` method to mutate an existing Stage.\nIStage sourceStage;\nAction someAction;\n\nsourceStage.addAction(someAction);",
          "version": "1"
        },
        "go": {
          "source": "// Use the `IStage.addAction()` method to mutate an existing Stage.\nvar sourceStage iStage\nvar someAction action\n\nsourceStage.addAction(someAction)",
          "version": "1"
        },
        "$": {
          "source": "// Use the `IStage.addAction()` method to mutate an existing Stage.\ndeclare const sourceStage: codepipeline.IStage;\ndeclare const someAction: codepipeline.Action;\nsourceStage.addAction(someAction);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 134
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.IAction",
        "@aws-cdk/aws-codepipeline.IStage#addAction"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Use the `IStage.addAction()` method to mutate an existing Stage.\ndeclare const sourceStage: codepipeline.IStage;\ndeclare const someAction: codepipeline.Action;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nsourceStage.addAction(someAction);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "75": 9,
        "130": 2,
        "153": 2,
        "169": 2,
        "194": 1,
        "196": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "290": 1
      },
      "fqnsFingerprint": "b222176ac2d32dd07138ca90136df912c475adfedc35e6009d7039dfb7dc08f6"
    },
    "ca5f0d22c2bb8cd5cb25da1a4047578336128af7d568562864691ddaf56e4f4d": {
      "translations": {
        "python": {
          "source": "# Make a custom CodePipeline Action\ncodepipeline.CustomActionRegistration(self, \"GenericGitSourceProviderResource\",\n    category=codepipeline.ActionCategory.SOURCE,\n    artifact_bounds=codepipeline.ActionArtifactBounds(min_inputs=0, max_inputs=0, min_outputs=1, max_outputs=1),\n    provider=\"GenericGitSource\",\n    version=\"1\",\n    entity_url=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    execution_url=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    action_properties=[codepipeline.CustomActionProperty(\n        name=\"Branch\",\n        required=True,\n        key=False,\n        secret=False,\n        queryable=False,\n        description=\"Git branch to pull\",\n        type=\"String\"\n    ), codepipeline.CustomActionProperty(\n        name=\"GitUrl\",\n        required=True,\n        key=False,\n        secret=False,\n        queryable=False,\n        description=\"SSH git clone URL\",\n        type=\"String\"\n    )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Make a custom CodePipeline Action\n// Make a custom CodePipeline Action\nnew CustomActionRegistration(this, \"GenericGitSourceProviderResource\", new CustomActionRegistrationProps {\n    Category = ActionCategory.SOURCE,\n    ArtifactBounds = new ActionArtifactBounds { MinInputs = 0, MaxInputs = 0, MinOutputs = 1, MaxOutputs = 1 },\n    Provider = \"GenericGitSource\",\n    Version = \"1\",\n    EntityUrl = \"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    ExecutionUrl = \"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    ActionProperties = new [] { new CustomActionProperty {\n        Name = \"Branch\",\n        Required = true,\n        Key = false,\n        Secret = false,\n        Queryable = false,\n        Description = \"Git branch to pull\",\n        Type = \"String\"\n    }, new CustomActionProperty {\n        Name = \"GitUrl\",\n        Required = true,\n        Key = false,\n        Secret = false,\n        Queryable = false,\n        Description = \"SSH git clone URL\",\n        Type = \"String\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Make a custom CodePipeline Action\n// Make a custom CodePipeline Action\nCustomActionRegistration.Builder.create(this, \"GenericGitSourceProviderResource\")\n        .category(ActionCategory.SOURCE)\n        .artifactBounds(ActionArtifactBounds.builder().minInputs(0).maxInputs(0).minOutputs(1).maxOutputs(1).build())\n        .provider(\"GenericGitSource\")\n        .version(\"1\")\n        .entityUrl(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\")\n        .executionUrl(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\")\n        .actionProperties(List.of(CustomActionProperty.builder()\n                .name(\"Branch\")\n                .required(true)\n                .key(false)\n                .secret(false)\n                .queryable(false)\n                .description(\"Git branch to pull\")\n                .type(\"String\")\n                .build(), CustomActionProperty.builder()\n                .name(\"GitUrl\")\n                .required(true)\n                .key(false)\n                .secret(false)\n                .queryable(false)\n                .description(\"SSH git clone URL\")\n                .type(\"String\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Make a custom CodePipeline Action\n// Make a custom CodePipeline Action\ncodepipeline.NewCustomActionRegistration(this, jsii.String(\"GenericGitSourceProviderResource\"), &customActionRegistrationProps{\n\tcategory: codepipeline.actionCategory_SOURCE,\n\tartifactBounds: &actionArtifactBounds{\n\t\tminInputs: jsii.Number(0),\n\t\tmaxInputs: jsii.Number(0),\n\t\tminOutputs: jsii.Number(1),\n\t\tmaxOutputs: jsii.Number(1),\n\t},\n\tprovider: jsii.String(\"GenericGitSource\"),\n\tversion: jsii.String(\"1\"),\n\tentityUrl: jsii.String(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\"),\n\texecutionUrl: jsii.String(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\"),\n\tactionProperties: []customActionProperty{\n\t\t&customActionProperty{\n\t\t\tname: jsii.String(\"Branch\"),\n\t\t\trequired: jsii.Boolean(true),\n\t\t\tkey: jsii.Boolean(false),\n\t\t\tsecret: jsii.Boolean(false),\n\t\t\tqueryable: jsii.Boolean(false),\n\t\t\tdescription: jsii.String(\"Git branch to pull\"),\n\t\t\ttype: jsii.String(\"String\"),\n\t\t},\n\t\t&customActionProperty{\n\t\t\tname: jsii.String(\"GitUrl\"),\n\t\t\trequired: jsii.Boolean(true),\n\t\t\tkey: jsii.Boolean(false),\n\t\t\tsecret: jsii.Boolean(false),\n\t\t\tqueryable: jsii.Boolean(false),\n\t\t\tdescription: jsii.String(\"SSH git clone URL\"),\n\t\t\ttype: jsii.String(\"String\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Make a custom CodePipeline Action\nnew codepipeline.CustomActionRegistration(this, 'GenericGitSourceProviderResource', {\n  category: codepipeline.ActionCategory.SOURCE,\n  artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 1 },\n  provider: 'GenericGitSource',\n  version: '1',\n  entityUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  executionUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  actionProperties: [\n    {\n      name: 'Branch',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'Git branch to pull',\n      type: 'String',\n    },\n    {\n      name: 'GitUrl',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'SSH git clone URL',\n      type: 'String',\n    },\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 145
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
        "@aws-cdk/aws-codepipeline.ActionCategory",
        "@aws-cdk/aws-codepipeline.ActionCategory#SOURCE",
        "@aws-cdk/aws-codepipeline.CustomActionRegistration",
        "@aws-cdk/aws-codepipeline.CustomActionRegistrationProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Make a custom CodePipeline Action\nnew codepipeline.CustomActionRegistration(this, 'GenericGitSourceProviderResource', {\n  category: codepipeline.ActionCategory.SOURCE,\n  artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 1 },\n  provider: 'GenericGitSource',\n  version: '1',\n  entityUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  executionUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  actionProperties: [\n    {\n      name: 'Branch',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'Git branch to pull',\n      type: 'String',\n    },\n    {\n      name: 'GitUrl',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'SSH git clone URL',\n      type: 'String',\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 11,
        "75": 30,
        "91": 6,
        "104": 1,
        "106": 2,
        "192": 1,
        "193": 4,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 25
      },
      "fqnsFingerprint": "94f0358df251f375ced77527b5a7df2641a640033e554f954bd7c3da719e63ce"
    },
    "8055ec17ba9fe6f0b415bfbdb20192d42005010e738ae316212c9577120ac355": {
      "translations": {
        "python": {
          "source": "# Deploy an imported S3 bucket from a different account\n# stage: codepipeline.IStage\n# input: codepipeline.Artifact\n\nstage.add_action(codepipeline_actions.S3DeployAction(\n    bucket=s3.Bucket.from_bucket_attributes(self, \"Bucket\",\n        account=\"123456789012\"\n    ),\n    input=input,\n    action_name=\"s3-deploy-action\"\n))",
          "version": "2"
        },
        "csharp": {
          "source": "// Deploy an imported S3 bucket from a different account\nIStage stage;\nArtifact input;\n\nstage.AddAction(new S3DeployAction(new S3DeployActionProps {\n    Bucket = Bucket.FromBucketAttributes(this, \"Bucket\", new BucketAttributes {\n        Account = \"123456789012\"\n    }),\n    Input = input,\n    ActionName = \"s3-deploy-action\"\n}));",
          "version": "1"
        },
        "java": {
          "source": "// Deploy an imported S3 bucket from a different account\nIStage stage;\nArtifact input;\n\nstage.addAction(S3DeployAction.Builder.create()\n        .bucket(Bucket.fromBucketAttributes(this, \"Bucket\", BucketAttributes.builder()\n                .account(\"123456789012\")\n                .build()))\n        .input(input)\n        .actionName(\"s3-deploy-action\")\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Deploy an imported S3 bucket from a different account\nvar stage iStage\nvar input artifact\n\nstage.addAction(codepipeline_actions.NewS3DeployAction(&s3DeployActionProps{\n\tbucket: s3.bucket.fromBucketAttributes(this, jsii.String(\"Bucket\"), &bucketAttributes{\n\t\taccount: jsii.String(\"123456789012\"),\n\t}),\n\tinput: input,\n\tactionName: jsii.String(\"s3-deploy-action\"),\n}))",
          "version": "1"
        },
        "$": {
          "source": "// Deploy an imported S3 bucket from a different account\ndeclare const stage: codepipeline.IStage;\ndeclare const input: codepipeline.Artifact;\nstage.addAction(new codepipeline_actions.S3DeployAction({\n  bucket: s3.Bucket.fromBucketAttributes(this, 'Bucket', {\n    account: '123456789012',\n    // ...\n  }),\n  input: input,\n  actionName: 's3-deploy-action',\n  // ...\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 196
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline-actions.S3DeployAction",
        "@aws-cdk/aws-codepipeline-actions.S3DeployActionProps",
        "@aws-cdk/aws-codepipeline.Artifact",
        "@aws-cdk/aws-codepipeline.IAction",
        "@aws-cdk/aws-codepipeline.IStage#addAction",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#fromBucketAttributes",
        "@aws-cdk/aws-s3.BucketAttributes",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Deploy an imported S3 bucket from a different account\ndeclare const stage: codepipeline.IStage;\ndeclare const input: codepipeline.Artifact;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nstage.addAction(new codepipeline_actions.S3DeployAction({\n  bucket: s3.Bucket.fromBucketAttributes(this, 'Bucket', {\n    account: '123456789012',\n    // ...\n  }),\n  input: input,\n  actionName: 's3-deploy-action',\n  // ...\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 18,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 2,
        "194": 4,
        "196": 2,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "3103566eae687cdb770a787828d31ecfde6136715f183eb6146ed50be3874463"
    },
    "f6d2825212a27edb95e9707bf5774f7de947a9caf7f68338ce27f58d3104d13f": {
      "translations": {
        "python": {
          "source": "# Actions that don't accept a resource objet accept an explicit `account` parameter\n# stage: codepipeline.IStage\n# template_path: codepipeline.ArtifactPath\n\nstage.add_action(codepipeline_actions.CloudFormationCreateUpdateStackAction(\n    account=\"123456789012\",\n    template_path=template_path,\n    admin_permissions=False,\n    stack_name=Stack.of(self).stack_name,\n    action_name=\"cloudformation-create-update\"\n))",
          "version": "2"
        },
        "csharp": {
          "source": "// Actions that don't accept a resource objet accept an explicit `account` parameter\nIStage stage;\nArtifactPath templatePath;\n\nstage.AddAction(new CloudFormationCreateUpdateStackAction(new CloudFormationCreateUpdateStackActionProps {\n    Account = \"123456789012\",\n    TemplatePath = templatePath,\n    AdminPermissions = false,\n    StackName = Stack.Of(this).StackName,\n    ActionName = \"cloudformation-create-update\"\n}));",
          "version": "1"
        },
        "java": {
          "source": "// Actions that don't accept a resource objet accept an explicit `account` parameter\nIStage stage;\nArtifactPath templatePath;\n\nstage.addAction(CloudFormationCreateUpdateStackAction.Builder.create()\n        .account(\"123456789012\")\n        .templatePath(templatePath)\n        .adminPermissions(false)\n        .stackName(Stack.of(this).getStackName())\n        .actionName(\"cloudformation-create-update\")\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Actions that don't accept a resource objet accept an explicit `account` parameter\nvar stage iStage\nvar templatePath artifactPath\n\nstage.addAction(codepipeline_actions.NewCloudFormationCreateUpdateStackAction(&cloudFormationCreateUpdateStackActionProps{\n\taccount: jsii.String(\"123456789012\"),\n\ttemplatePath: templatePath,\n\tadminPermissions: jsii.Boolean(false),\n\tstackName: *awscdkcore.*stack.of(this).stackName,\n\tactionName: jsii.String(\"cloudformation-create-update\"),\n}))",
          "version": "1"
        },
        "$": {
          "source": "// Actions that don't accept a resource objet accept an explicit `account` parameter\ndeclare const stage: codepipeline.IStage;\ndeclare const templatePath: codepipeline.ArtifactPath;\nstage.addAction(new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  account: '123456789012',\n  templatePath,\n  adminPermissions: false,\n  stackName: Stack.of(this).stackName,\n  actionName: 'cloudformation-create-update',\n  // ...\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 213
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackAction",
        "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackActionProps",
        "@aws-cdk/aws-codepipeline.ArtifactPath",
        "@aws-cdk/aws-codepipeline.IAction",
        "@aws-cdk/aws-codepipeline.IStage#addAction",
        "@aws-cdk/core.Stack#of",
        "constructs.IConstruct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Actions that don't accept a resource objet accept an explicit `account` parameter\ndeclare const stage: codepipeline.IStage;\ndeclare const templatePath: codepipeline.ArtifactPath;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nstage.addAction(new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  account: '123456789012',\n  templatePath,\n  adminPermissions: false,\n  stackName: Stack.of(this).stackName,\n  actionName: 'cloudformation-create-update',\n  // ...\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "91": 1,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 4,
        "196": 2,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 4,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "ced77f5b0ae9936b1a8330554502c1bce915e5470a693dff5c573b7af6483866"
    },
    "f36fbc2d0fbb275e4177f3fe5875269fafebade4d8606afda7bea763f690572e": {
      "translations": {
        "python": {
          "source": "# Explicitly pass in a `role` when creating an action.\n# stage: codepipeline.IStage\n# template_path: codepipeline.ArtifactPath\n\nstage.add_action(codepipeline_actions.CloudFormationCreateUpdateStackAction(\n    template_path=template_path,\n    admin_permissions=False,\n    stack_name=Stack.of(self).stack_name,\n    action_name=\"cloudformation-create-update\",\n    # ...\n    role=iam.Role.from_role_arn(self, \"ActionRole\", \"...\")\n))",
          "version": "2"
        },
        "csharp": {
          "source": "// Explicitly pass in a `role` when creating an action.\nIStage stage;\nArtifactPath templatePath;\n\nstage.AddAction(new CloudFormationCreateUpdateStackAction(new CloudFormationCreateUpdateStackActionProps {\n    TemplatePath = templatePath,\n    AdminPermissions = false,\n    StackName = Stack.Of(this).StackName,\n    ActionName = \"cloudformation-create-update\",\n    // ...\n    Role = Role.FromRoleArn(this, \"ActionRole\", \"...\")\n}));",
          "version": "1"
        },
        "java": {
          "source": "// Explicitly pass in a `role` when creating an action.\nIStage stage;\nArtifactPath templatePath;\n\nstage.addAction(CloudFormationCreateUpdateStackAction.Builder.create()\n        .templatePath(templatePath)\n        .adminPermissions(false)\n        .stackName(Stack.of(this).getStackName())\n        .actionName(\"cloudformation-create-update\")\n        // ...\n        .role(Role.fromRoleArn(this, \"ActionRole\", \"...\"))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Explicitly pass in a `role` when creating an action.\nvar stage iStage\nvar templatePath artifactPath\n\nstage.addAction(codepipeline_actions.NewCloudFormationCreateUpdateStackAction(&cloudFormationCreateUpdateStackActionProps{\n\ttemplatePath: templatePath,\n\tadminPermissions: jsii.Boolean(false),\n\tstackName: *awscdkcore.*stack.of(this).stackName,\n\tactionName: jsii.String(\"cloudformation-create-update\"),\n\t// ...\n\trole: iam.role.fromRoleArn(this, jsii.String(\"ActionRole\"), jsii.String(\"...\")),\n}))",
          "version": "1"
        },
        "$": {
          "source": "// Explicitly pass in a `role` when creating an action.\ndeclare const stage: codepipeline.IStage;\ndeclare const templatePath: codepipeline.ArtifactPath;\nstage.addAction(new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  templatePath,\n  adminPermissions: false,\n  stackName: Stack.of(this).stackName,\n  actionName: 'cloudformation-create-update',\n  // ...\n  role: iam.Role.fromRoleArn(this, 'ActionRole', '...'),\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 237
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackAction",
        "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackActionProps",
        "@aws-cdk/aws-codepipeline.ArtifactPath",
        "@aws-cdk/aws-codepipeline.IAction",
        "@aws-cdk/aws-codepipeline.IStage#addAction",
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.Role#fromRoleArn",
        "@aws-cdk/core.Stack#of",
        "constructs.Construct",
        "constructs.IConstruct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Explicitly pass in a `role` when creating an action.\ndeclare const stage: codepipeline.IStage;\ndeclare const templatePath: codepipeline.ArtifactPath;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nstage.addAction(new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  templatePath,\n  adminPermissions: false,\n  stackName: Stack.of(this).stackName,\n  actionName: 'cloudformation-create-update',\n  // ...\n  role: iam.Role.fromRoleArn(this, 'ActionRole', '...'),\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 21,
        "91": 1,
        "104": 2,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 6,
        "196": 3,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 4,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "305daf59c7dbf78b5989459cf1ad9764e1c7e16ebaafb930f0d301fdc9059375"
    },
    "75b11b915d913d5bdf324d863d35c8798b1e58e7889ff10402ec25a7cbaff320": {
      "translations": {
        "python": {
          "source": "# Deploy to an imported S3 bucket from a different Region.\n# stage: codepipeline.IStage\n# input: codepipeline.Artifact\n\nstage.add_action(codepipeline_actions.S3DeployAction(\n    bucket=s3.Bucket.from_bucket_attributes(self, \"Bucket\",\n        region=\"us-west-1\"\n    ),\n    input=input,\n    action_name=\"s3-deploy-action\"\n))",
          "version": "2"
        },
        "csharp": {
          "source": "// Deploy to an imported S3 bucket from a different Region.\nIStage stage;\nArtifact input;\n\nstage.AddAction(new S3DeployAction(new S3DeployActionProps {\n    Bucket = Bucket.FromBucketAttributes(this, \"Bucket\", new BucketAttributes {\n        Region = \"us-west-1\"\n    }),\n    Input = input,\n    ActionName = \"s3-deploy-action\"\n}));",
          "version": "1"
        },
        "java": {
          "source": "// Deploy to an imported S3 bucket from a different Region.\nIStage stage;\nArtifact input;\n\nstage.addAction(S3DeployAction.Builder.create()\n        .bucket(Bucket.fromBucketAttributes(this, \"Bucket\", BucketAttributes.builder()\n                .region(\"us-west-1\")\n                .build()))\n        .input(input)\n        .actionName(\"s3-deploy-action\")\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Deploy to an imported S3 bucket from a different Region.\nvar stage iStage\nvar input artifact\n\nstage.addAction(codepipeline_actions.NewS3DeployAction(&s3DeployActionProps{\n\tbucket: s3.bucket.fromBucketAttributes(this, jsii.String(\"Bucket\"), &bucketAttributes{\n\t\tregion: jsii.String(\"us-west-1\"),\n\t}),\n\tinput: input,\n\tactionName: jsii.String(\"s3-deploy-action\"),\n}))",
          "version": "1"
        },
        "$": {
          "source": "// Deploy to an imported S3 bucket from a different Region.\ndeclare const stage: codepipeline.IStage;\ndeclare const input: codepipeline.Artifact;\nstage.addAction(new codepipeline_actions.S3DeployAction({\n  bucket: s3.Bucket.fromBucketAttributes(this, 'Bucket', {\n    region: 'us-west-1',\n    // ...\n  }),\n  input: input,\n  actionName: 's3-deploy-action',\n  // ...\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 257
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline-actions.S3DeployAction",
        "@aws-cdk/aws-codepipeline-actions.S3DeployActionProps",
        "@aws-cdk/aws-codepipeline.Artifact",
        "@aws-cdk/aws-codepipeline.IAction",
        "@aws-cdk/aws-codepipeline.IStage#addAction",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#fromBucketAttributes",
        "@aws-cdk/aws-s3.BucketAttributes",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Deploy to an imported S3 bucket from a different Region.\ndeclare const stage: codepipeline.IStage;\ndeclare const input: codepipeline.Artifact;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nstage.addAction(new codepipeline_actions.S3DeployAction({\n  bucket: s3.Bucket.fromBucketAttributes(this, 'Bucket', {\n    region: 'us-west-1',\n    // ...\n  }),\n  input: input,\n  actionName: 's3-deploy-action',\n  // ...\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 18,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 2,
        "194": 4,
        "196": 2,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "3103566eae687cdb770a787828d31ecfde6136715f183eb6146ed50be3874463"
    },
    "8425fe0543551727dc36eaa8cdf8fe06adec4b34d75ac534f3741da9fcbbc7e9": {
      "translations": {
        "python": {
          "source": "# Actions that don't take an AWS resource will accept an explicit `region` parameter.\n# stage: codepipeline.IStage\n# template_path: codepipeline.ArtifactPath\n\nstage.add_action(codepipeline_actions.CloudFormationCreateUpdateStackAction(\n    template_path=template_path,\n    admin_permissions=False,\n    stack_name=Stack.of(self).stack_name,\n    action_name=\"cloudformation-create-update\",\n    # ...\n    region=\"us-west-1\"\n))",
          "version": "2"
        },
        "csharp": {
          "source": "// Actions that don't take an AWS resource will accept an explicit `region` parameter.\nIStage stage;\nArtifactPath templatePath;\n\nstage.AddAction(new CloudFormationCreateUpdateStackAction(new CloudFormationCreateUpdateStackActionProps {\n    TemplatePath = templatePath,\n    AdminPermissions = false,\n    StackName = Stack.Of(this).StackName,\n    ActionName = \"cloudformation-create-update\",\n    // ...\n    Region = \"us-west-1\"\n}));",
          "version": "1"
        },
        "java": {
          "source": "// Actions that don't take an AWS resource will accept an explicit `region` parameter.\nIStage stage;\nArtifactPath templatePath;\n\nstage.addAction(CloudFormationCreateUpdateStackAction.Builder.create()\n        .templatePath(templatePath)\n        .adminPermissions(false)\n        .stackName(Stack.of(this).getStackName())\n        .actionName(\"cloudformation-create-update\")\n        // ...\n        .region(\"us-west-1\")\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Actions that don't take an AWS resource will accept an explicit `region` parameter.\nvar stage iStage\nvar templatePath artifactPath\n\nstage.addAction(codepipeline_actions.NewCloudFormationCreateUpdateStackAction(&cloudFormationCreateUpdateStackActionProps{\n\ttemplatePath: templatePath,\n\tadminPermissions: jsii.Boolean(false),\n\tstackName: *awscdkcore.*stack.of(this).stackName,\n\tactionName: jsii.String(\"cloudformation-create-update\"),\n\t// ...\n\tregion: jsii.String(\"us-west-1\"),\n}))",
          "version": "1"
        },
        "$": {
          "source": "// Actions that don't take an AWS resource will accept an explicit `region` parameter.\ndeclare const stage: codepipeline.IStage;\ndeclare const templatePath: codepipeline.ArtifactPath;\nstage.addAction(new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  templatePath,\n  adminPermissions: false,\n  stackName: Stack.of(this).stackName,\n  actionName: 'cloudformation-create-update',\n  // ...\n  region: 'us-west-1',\n}));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 275
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackAction",
        "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateUpdateStackActionProps",
        "@aws-cdk/aws-codepipeline.ArtifactPath",
        "@aws-cdk/aws-codepipeline.IAction",
        "@aws-cdk/aws-codepipeline.IStage#addAction",
        "@aws-cdk/core.Stack#of",
        "constructs.IConstruct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Actions that don't take an AWS resource will accept an explicit `region` parameter.\ndeclare const stage: codepipeline.IStage;\ndeclare const templatePath: codepipeline.ArtifactPath;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nstage.addAction(new codepipeline_actions.CloudFormationCreateUpdateStackAction({\n  templatePath,\n  adminPermissions: false,\n  stackName: Stack.of(this).stackName,\n  actionName: 'cloudformation-create-update',\n  // ...\n  region: 'us-west-1',\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "91": 1,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 4,
        "196": 2,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 4,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "ced77f5b0ae9936b1a8330554502c1bce915e5470a693dff5c573b7af6483866"
    },
    "c5cd44b874c54c738ffbe264287102dd4c1c142327002506b8185d0cbef1f91a": {
      "translations": {
        "python": {
          "source": "# Supply replication buckets for the Pipeline instead of using the generated support stack\npipeline = codepipeline.Pipeline(self, \"MyFirstPipeline\",\n    # ...\n\n    cross_region_replication_buckets={\n        # note that a physical name of the replication Bucket must be known at synthesis time\n        \"us-west-1\": s3.Bucket.from_bucket_attributes(self, \"UsWest1ReplicationBucket\",\n            bucket_name=\"my-us-west-1-replication-bucket\",\n            # optional KMS key\n            encryption_key=kms.Key.from_key_arn(self, \"UsWest1ReplicationKey\", \"arn:aws:kms:us-west-1:123456789012:key/1234-5678-9012\")\n        )\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Supply replication buckets for the Pipeline instead of using the generated support stack\nPipeline pipeline = new Pipeline(this, \"MyFirstPipeline\", new PipelineProps {\n    // ...\n\n    CrossRegionReplicationBuckets = new Dictionary<string, IBucket> {\n        // note that a physical name of the replication Bucket must be known at synthesis time\n        { \"us-west-1\", Bucket.FromBucketAttributes(this, \"UsWest1ReplicationBucket\", new BucketAttributes {\n            BucketName = \"my-us-west-1-replication-bucket\",\n            // optional KMS key\n            EncryptionKey = Key.FromKeyArn(this, \"UsWest1ReplicationKey\", \"arn:aws:kms:us-west-1:123456789012:key/1234-5678-9012\")\n        }) }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Supply replication buckets for the Pipeline instead of using the generated support stack\nPipeline pipeline = Pipeline.Builder.create(this, \"MyFirstPipeline\")\n        // ...\n\n        .crossRegionReplicationBuckets(Map.of(\n                // note that a physical name of the replication Bucket must be known at synthesis time\n                \"us-west-1\", Bucket.fromBucketAttributes(this, \"UsWest1ReplicationBucket\", BucketAttributes.builder()\n                        .bucketName(\"my-us-west-1-replication-bucket\")\n                        // optional KMS key\n                        .encryptionKey(Key.fromKeyArn(this, \"UsWest1ReplicationKey\", \"arn:aws:kms:us-west-1:123456789012:key/1234-5678-9012\"))\n                        .build())))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Supply replication buckets for the Pipeline instead of using the generated support stack\npipeline := codepipeline.NewPipeline(this, jsii.String(\"MyFirstPipeline\"), &pipelineProps{\n\t// ...\n\n\tcrossRegionReplicationBuckets: map[string]iBucket{\n\t\t// note that a physical name of the replication Bucket must be known at synthesis time\n\t\t\"us-west-1\": s3.Bucket.fromBucketAttributes(this, jsii.String(\"UsWest1ReplicationBucket\"), &BucketAttributes{\n\t\t\t\"bucketName\": jsii.String(\"my-us-west-1-replication-bucket\"),\n\t\t\t// optional KMS key\n\t\t\t\"encryptionKey\": kms.Key.fromKeyArn(this, jsii.String(\"UsWest1ReplicationKey\"), jsii.String(\"arn:aws:kms:us-west-1:123456789012:key/1234-5678-9012\")),\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Supply replication buckets for the Pipeline instead of using the generated support stack\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  // ...\n\n  crossRegionReplicationBuckets: {\n    // note that a physical name of the replication Bucket must be known at synthesis time\n    'us-west-1': s3.Bucket.fromBucketAttributes(this, 'UsWest1ReplicationBucket', {\n      bucketName: 'my-us-west-1-replication-bucket',\n      // optional KMS key\n      encryptionKey: kms.Key.fromKeyArn(this, 'UsWest1ReplicationKey',\n        'arn:aws:kms:us-west-1:123456789012:key/1234-5678-9012'\n      ),\n    }),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 299
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.PipelineProps",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-kms.Key#fromKeyArn",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.Bucket#fromBucketAttributes",
        "@aws-cdk/aws-s3.BucketAttributes",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Supply replication buckets for the Pipeline instead of using the generated support stack\nconst pipeline = new codepipeline.Pipeline(this, 'MyFirstPipeline', {\n  // ...\n\n  crossRegionReplicationBuckets: {\n    // note that a physical name of the replication Bucket must be known at synthesis time\n    'us-west-1': s3.Bucket.fromBucketAttributes(this, 'UsWest1ReplicationBucket', {\n      bucketName: 'my-us-west-1-replication-bucket',\n      // optional KMS key\n      encryptionKey: kms.Key.fromKeyArn(this, 'UsWest1ReplicationKey',\n        'arn:aws:kms:us-west-1:123456789012:key/1234-5678-9012'\n      ),\n    }),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 12,
        "104": 3,
        "193": 3,
        "194": 5,
        "196": 2,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 4
      },
      "fqnsFingerprint": "06e134f13a0e36301a95a6a412fac3217d8cec6a0ae68222853d83027a4de52b"
    },
    "1390d5791cde3c9c023e1ae277afd9692f7c350327eba250f6534ca83a12ed74": {
      "translations": {
        "python": {
          "source": "# Passing a replication bucket created in a different stack.\napp = App()\nreplication_stack = Stack(app, \"ReplicationStack\",\n    env=Environment(\n        region=\"us-west-1\"\n    )\n)\nkey = kms.Key(replication_stack, \"ReplicationKey\")\nreplication_bucket = s3.Bucket(replication_stack, \"ReplicationBucket\",\n    # like was said above - replication buckets need a set physical name\n    bucket_name=PhysicalName.GENERATE_IF_NEEDED,\n    encryption_key=key\n)\n\n# later...\ncodepipeline.Pipeline(replication_stack, \"Pipeline\",\n    cross_region_replication_buckets={\n        \"us-west-1\": replication_bucket\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Passing a replication bucket created in a different stack.\nApp app = new App();\nStack replicationStack = new Stack(app, \"ReplicationStack\", new StackProps {\n    Env = new Environment {\n        Region = \"us-west-1\"\n    }\n});\nKey key = new Key(replicationStack, \"ReplicationKey\");\nBucket replicationBucket = new Bucket(replicationStack, \"ReplicationBucket\", new BucketProps {\n    // like was said above - replication buckets need a set physical name\n    BucketName = PhysicalName.GENERATE_IF_NEEDED,\n    EncryptionKey = key\n});\n\n// later...\n// later...\nnew Pipeline(replicationStack, \"Pipeline\", new PipelineProps {\n    CrossRegionReplicationBuckets = new Dictionary<string, IBucket> {\n        { \"us-west-1\", replicationBucket }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Passing a replication bucket created in a different stack.\nApp app = new App();\nStack replicationStack = Stack.Builder.create(app, \"ReplicationStack\")\n        .env(Environment.builder()\n                .region(\"us-west-1\")\n                .build())\n        .build();\nKey key = new Key(replicationStack, \"ReplicationKey\");\nBucket replicationBucket = Bucket.Builder.create(replicationStack, \"ReplicationBucket\")\n        // like was said above - replication buckets need a set physical name\n        .bucketName(PhysicalName.GENERATE_IF_NEEDED)\n        .encryptionKey(key)\n        .build();\n\n// later...\n// later...\nPipeline.Builder.create(replicationStack, \"Pipeline\")\n        .crossRegionReplicationBuckets(Map.of(\n                \"us-west-1\", replicationBucket))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Passing a replication bucket created in a different stack.\napp := awscdkcore.NewApp()\nreplicationStack := awscdkcore.Newstack(app, jsii.String(\"ReplicationStack\"), &stackProps{\n\tenv: &environment{\n\t\tregion: jsii.String(\"us-west-1\"),\n\t},\n})\nkey := kms.NewKey(replicationStack, jsii.String(\"ReplicationKey\"))\nreplicationBucket := s3.NewBucket(replicationStack, jsii.String(\"ReplicationBucket\"), &bucketProps{\n\t// like was said above - replication buckets need a set physical name\n\tbucketName: *awscdkcore.PhysicalName_GENERATE_IF_NEEDED(),\n\tencryptionKey: key,\n})\n\n// later...\n// later...\ncodepipeline.NewPipeline(replicationStack, jsii.String(\"Pipeline\"), &pipelineProps{\n\tcrossRegionReplicationBuckets: map[string]iBucket{\n\t\t\"us-west-1\": replicationBucket,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Passing a replication bucket created in a different stack.\nconst app = new App();\nconst replicationStack = new Stack(app, 'ReplicationStack', {\n  env: {\n    region: 'us-west-1',\n  },\n});\nconst key = new kms.Key(replicationStack, 'ReplicationKey');\nconst replicationBucket = new s3.Bucket(replicationStack, 'ReplicationBucket', {\n  // like was said above - replication buckets need a set physical name\n  bucketName: PhysicalName.GENERATE_IF_NEEDED,\n  encryptionKey: key, // does not work!\n});\n\n// later...\nnew codepipeline.Pipeline(replicationStack, 'Pipeline', {\n  crossRegionReplicationBuckets: {\n    'us-west-1': replicationBucket,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 325
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.PipelineProps",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Environment",
        "@aws-cdk/core.PhysicalName#GENERATE_IF_NEEDED",
        "@aws-cdk/core.Stack",
        "@aws-cdk/core.StackProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Passing a replication bucket created in a different stack.\nconst app = new App();\nconst replicationStack = new Stack(app, 'ReplicationStack', {\n  env: {\n    region: 'us-west-1',\n  },\n});\nconst key = new kms.Key(replicationStack, 'ReplicationKey');\nconst replicationBucket = new s3.Bucket(replicationStack, 'ReplicationBucket', {\n  // like was said above - replication buckets need a set physical name\n  bucketName: PhysicalName.GENERATE_IF_NEEDED,\n  encryptionKey: key, // does not work!\n});\n\n// later...\nnew codepipeline.Pipeline(replicationStack, 'Pipeline', {\n  crossRegionReplicationBuckets: {\n    'us-west-1': replicationBucket,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 25,
        "193": 5,
        "194": 4,
        "197": 5,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "281": 6
      },
      "fqnsFingerprint": "87c246a54a9495af6a14729e67e872f48eabd1279188bf58cd319fc61bb6481c"
    },
    "e09b18dd3624c0c4f4481f59fdd2b6711978bc49f1f7a2599251dbe2bd8ab660": {
      "translations": {
        "python": {
          "source": "# Passing an encrypted replication bucket created in a different stack.\napp = App()\nreplication_stack = Stack(app, \"ReplicationStack\",\n    env=Environment(\n        region=\"us-west-1\"\n    )\n)\nkey = kms.Key(replication_stack, \"ReplicationKey\")\nalias = kms.Alias(replication_stack, \"ReplicationAlias\",\n    # aliasName is required\n    alias_name=PhysicalName.GENERATE_IF_NEEDED,\n    target_key=key\n)\nreplication_bucket = s3.Bucket(replication_stack, \"ReplicationBucket\",\n    bucket_name=PhysicalName.GENERATE_IF_NEEDED,\n    encryption_key=alias\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Passing an encrypted replication bucket created in a different stack.\nApp app = new App();\nStack replicationStack = new Stack(app, \"ReplicationStack\", new StackProps {\n    Env = new Environment {\n        Region = \"us-west-1\"\n    }\n});\nKey key = new Key(replicationStack, \"ReplicationKey\");\nAlias alias = new Alias(replicationStack, \"ReplicationAlias\", new AliasProps {\n    // aliasName is required\n    AliasName = PhysicalName.GENERATE_IF_NEEDED,\n    TargetKey = key\n});\nBucket replicationBucket = new Bucket(replicationStack, \"ReplicationBucket\", new BucketProps {\n    BucketName = PhysicalName.GENERATE_IF_NEEDED,\n    EncryptionKey = alias\n});",
          "version": "1"
        },
        "java": {
          "source": "// Passing an encrypted replication bucket created in a different stack.\nApp app = new App();\nStack replicationStack = Stack.Builder.create(app, \"ReplicationStack\")\n        .env(Environment.builder()\n                .region(\"us-west-1\")\n                .build())\n        .build();\nKey key = new Key(replicationStack, \"ReplicationKey\");\nAlias alias = Alias.Builder.create(replicationStack, \"ReplicationAlias\")\n        // aliasName is required\n        .aliasName(PhysicalName.GENERATE_IF_NEEDED)\n        .targetKey(key)\n        .build();\nBucket replicationBucket = Bucket.Builder.create(replicationStack, \"ReplicationBucket\")\n        .bucketName(PhysicalName.GENERATE_IF_NEEDED)\n        .encryptionKey(alias)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Passing an encrypted replication bucket created in a different stack.\napp := awscdkcore.NewApp()\nreplicationStack := awscdkcore.Newstack(app, jsii.String(\"ReplicationStack\"), &stackProps{\n\tenv: &environment{\n\t\tregion: jsii.String(\"us-west-1\"),\n\t},\n})\nkey := kms.NewKey(replicationStack, jsii.String(\"ReplicationKey\"))\nalias := kms.NewAlias(replicationStack, jsii.String(\"ReplicationAlias\"), &aliasProps{\n\t// aliasName is required\n\taliasName: *awscdkcore.PhysicalName_GENERATE_IF_NEEDED(),\n\ttargetKey: key,\n})\nreplicationBucket := s3.NewBucket(replicationStack, jsii.String(\"ReplicationBucket\"), &bucketProps{\n\tbucketName: *awscdkcore.PhysicalName_GENERATE_IF_NEEDED(),\n\tencryptionKey: alias,\n})",
          "version": "1"
        },
        "$": {
          "source": "// Passing an encrypted replication bucket created in a different stack.\nconst app = new App();\nconst replicationStack = new Stack(app, 'ReplicationStack', {\n  env: {\n    region: 'us-west-1',\n  },\n});\nconst key = new kms.Key(replicationStack, 'ReplicationKey');\nconst alias = new kms.Alias(replicationStack, 'ReplicationAlias', {\n  // aliasName is required\n  aliasName: PhysicalName.GENERATE_IF_NEEDED,\n  targetKey: key,\n});\nconst replicationBucket = new s3.Bucket(replicationStack, 'ReplicationBucket', {\n  bucketName: PhysicalName.GENERATE_IF_NEEDED,\n  encryptionKey: alias,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 356
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kms.Alias",
        "@aws-cdk/aws-kms.AliasProps",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Environment",
        "@aws-cdk/core.PhysicalName#GENERATE_IF_NEEDED",
        "@aws-cdk/core.Stack",
        "@aws-cdk/core.StackProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Passing an encrypted replication bucket created in a different stack.\nconst app = new App();\nconst replicationStack = new Stack(app, 'ReplicationStack', {\n  env: {\n    region: 'us-west-1',\n  },\n});\nconst key = new kms.Key(replicationStack, 'ReplicationKey');\nconst alias = new kms.Alias(replicationStack, 'ReplicationAlias', {\n  // aliasName is required\n  aliasName: PhysicalName.GENERATE_IF_NEEDED,\n  targetKey: key,\n});\nconst replicationBucket = new s3.Bucket(replicationStack, 'ReplicationBucket', {\n  bucketName: PhysicalName.GENERATE_IF_NEEDED,\n  encryptionKey: alias,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 29,
        "193": 4,
        "194": 5,
        "197": 5,
        "225": 5,
        "242": 5,
        "243": 5,
        "281": 6
      },
      "fqnsFingerprint": "2d48719e0d496742cfc083acd40ed56b694a7203eb571c89489f1cdffd1cbb79"
    },
    "fb8459a0e639dc8a0716d74dc37318b4282da88110b1040b98b52b5311dc6ba2": {
      "translations": {
        "python": {
          "source": "# MyAction is some action type that produces variables, like EcrSourceAction\nmy_action = MyAction(\n    # ...\n    action_name=\"myAction\"\n)\nOtherAction(\n    # ...\n    config=my_action.variables.my_variable,\n    action_name=\"otherAction\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nMyAction myAction = new MyAction(new MyActionProps {\n    // ...\n    ActionName = \"myAction\"\n});\nnew OtherAction(new OtherActionProps {\n    // ...\n    Config = myAction.Variables.MyVariable,\n    ActionName = \"otherAction\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nMyAction myAction = new MyAction(new MyActionProps()\n        // ...\n        .actionName(\"myAction\")\n        );\nnew OtherAction(new OtherActionProps()\n        // ...\n        .config(myAction.getVariables().getMyVariable())\n        .actionName(\"otherAction\")\n        );",
          "version": "1"
        },
        "go": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nmyAction := NewMyAction(&myActionProps{\n\t// ...\n\tactionName: jsii.String(\"myAction\"),\n})\nNewOtherAction(&otherActionProps{\n\t// ...\n\tconfig: myAction.variables.myVariable,\n\tactionName: jsii.String(\"otherAction\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  actionName: 'myAction',\n});\nnew OtherAction({\n  // ...\n  config: myAction.variables.myVariable,\n  actionName: 'otherAction',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 387
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
        "@aws-cdk/aws-codepipeline.ActionCategory"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ninterface MyActionProps {\n  variablesNamespace?: string;\n  actionName: string;\n}\n\nclass MyAction extends codepipeline.Action {\n  public variables: { [key: string]: string };\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: MyActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n    this.variables = { 'myVariable': 'var' };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\ninterface OtherActionProps {\n  config: string;\n  actionName: string;\n}\n\nclass OtherAction extends codepipeline.Action {\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: OtherActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  actionName: 'myAction',\n});\nnew OtherAction({\n  // ...\n  config: myAction.variables.myVariable,\n  actionName: 'otherAction',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "45daaa4526f37e043ab06dca805904324e8107ae984f478c11093568d0dabcc5"
    },
    "7215ba2537883c46522ef5ffda03290ca59796f07f82a2b35d54e9df04ed33ba": {
      "translations": {
        "python": {
          "source": "# MyAction is some action type that produces variables, like EcrSourceAction\nmy_action = MyAction(\n    # ...\n    variables_namespace=\"MyNamespace\",\n    action_name=\"myAction\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nMyAction myAction = new MyAction(new MyActionProps {\n    // ...\n    VariablesNamespace = \"MyNamespace\",\n    ActionName = \"myAction\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nMyAction myAction = new MyAction(new MyActionProps()\n        // ...\n        .variablesNamespace(\"MyNamespace\")\n        .actionName(\"myAction\")\n        );",
          "version": "1"
        },
        "go": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nmyAction := NewMyAction(&myActionProps{\n\t// ...\n\tvariablesNamespace: jsii.String(\"MyNamespace\"),\n\tactionName: jsii.String(\"myAction\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  variablesNamespace: 'MyNamespace',\n  actionName: 'myAction',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 404
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
        "@aws-cdk/aws-codepipeline.ActionCategory"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ninterface MyActionProps {\n  variablesNamespace?: string;\n  actionName: string;\n}\n\nclass MyAction extends codepipeline.Action {\n  public variables: { [key: string]: string };\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: MyActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n    this.variables = { 'myVariable': 'var' };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\ninterface OtherActionProps {\n  config: string;\n  actionName: string;\n}\n\nclass OtherAction extends codepipeline.Action {\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: OtherActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  variablesNamespace: 'MyNamespace',\n  actionName: 'myAction',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 4,
        "193": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 2
      },
      "fqnsFingerprint": "45daaa4526f37e043ab06dca805904324e8107ae984f478c11093568d0dabcc5"
    },
    "ab59452a5debfdc622403f6a4ae3f467715321ce7877697cd49a205f4ac7c071": {
      "translations": {
        "python": {
          "source": "# OtherAction is some action type that produces variables, like EcrSourceAction\nOtherAction(\n    # ...\n    config=codepipeline.GlobalVariables.execution_id,\n    action_name=\"otherAction\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// OtherAction is some action type that produces variables, like EcrSourceAction\n// OtherAction is some action type that produces variables, like EcrSourceAction\nnew OtherAction(new OtherActionProps {\n    // ...\n    Config = GlobalVariables.ExecutionId,\n    ActionName = \"otherAction\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// OtherAction is some action type that produces variables, like EcrSourceAction\n// OtherAction is some action type that produces variables, like EcrSourceAction\nnew OtherAction(new OtherActionProps()\n        // ...\n        .config(GlobalVariables.executionId)\n        .actionName(\"otherAction\")\n        );",
          "version": "1"
        },
        "go": {
          "source": "// OtherAction is some action type that produces variables, like EcrSourceAction\n// OtherAction is some action type that produces variables, like EcrSourceAction\nNewOtherAction(&otherActionProps{\n\t// ...\n\tconfig: codepipeline.globalVariables_ExecutionId(),\n\tactionName: jsii.String(\"otherAction\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// OtherAction is some action type that produces variables, like EcrSourceAction\nnew OtherAction({\n  // ...\n  config: codepipeline.GlobalVariables.executionId,\n  actionName: 'otherAction',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 417
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
        "@aws-cdk/aws-codepipeline.ActionCategory",
        "@aws-cdk/aws-codepipeline.GlobalVariables",
        "@aws-cdk/aws-codepipeline.GlobalVariables#executionId"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ninterface MyActionProps {\n  variablesNamespace?: string;\n  actionName: string;\n}\n\nclass MyAction extends codepipeline.Action {\n  public variables: { [key: string]: string };\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: MyActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n    this.variables = { 'myVariable': 'var' };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\ninterface OtherActionProps {\n  config: string;\n  actionName: string;\n}\n\nclass OtherAction extends codepipeline.Action {\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: OtherActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// OtherAction is some action type that produces variables, like EcrSourceAction\nnew OtherAction({\n  // ...\n  config: codepipeline.GlobalVariables.executionId,\n  actionName: 'otherAction',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "193": 1,
        "194": 2,
        "197": 1,
        "226": 1,
        "281": 2
      },
      "fqnsFingerprint": "cb5fc4d2cb5a0cb2347b9c61585afb4ddd7c8ee4fb63d73d5b12f2252f240dd7"
    },
    "7464f00ebfa66ff69fc5003053bedca0e9051774da279b59913bbd06c3cb2fd7": {
      "translations": {
        "python": {
          "source": "# A pipeline being used as a target for a CloudWatch event rule.\nimport aws_cdk.aws_events_targets as targets\nimport aws_cdk.aws_events as events\n\n# pipeline: codepipeline.Pipeline\n\n\n# kick off the pipeline every day\nrule = events.Rule(self, \"Daily\",\n    schedule=events.Schedule.rate(Duration.days(1))\n)\nrule.add_target(targets.CodePipeline(pipeline))",
          "version": "2"
        },
        "csharp": {
          "source": "// A pipeline being used as a target for a CloudWatch event rule.\nusing Amazon.CDK.AWS.Events.Targets;\nusing Amazon.CDK.AWS.Events;\n\nPipeline pipeline;\n\n\n// kick off the pipeline every day\nRule rule = new Rule(this, \"Daily\", new RuleProps {\n    Schedule = Schedule.Rate(Duration.Days(1))\n});\nrule.AddTarget(new CodePipeline(pipeline));",
          "version": "1"
        },
        "java": {
          "source": "// A pipeline being used as a target for a CloudWatch event rule.\nimport software.amazon.awscdk.services.events.targets.*;\nimport software.amazon.awscdk.services.events.*;\n\nPipeline pipeline;\n\n\n// kick off the pipeline every day\nRule rule = Rule.Builder.create(this, \"Daily\")\n        .schedule(Schedule.rate(Duration.days(1)))\n        .build();\nrule.addTarget(new CodePipeline(pipeline));",
          "version": "1"
        },
        "go": {
          "source": "// A pipeline being used as a target for a CloudWatch event rule.\nimport targets \"github.com/aws-samples/dummy/awscdkawseventstargets\"\nimport events \"github.com/aws-samples/dummy/awscdkawsevents\"\n\nvar pipeline pipeline\n\n\n// kick off the pipeline every day\nrule := events.NewRule(this, jsii.String(\"Daily\"), &ruleProps{\n\tschedule: events.schedule.rate(*awscdkcore.Duration.days(jsii.Number(1))),\n})\nrule.addTarget(targets.NewCodePipeline(pipeline))",
          "version": "1"
        },
        "$": {
          "source": "// A pipeline being used as a target for a CloudWatch event rule.\nimport * as targets from '@aws-cdk/aws-events-targets';\nimport * as events from '@aws-cdk/aws-events';\n\n// kick off the pipeline every day\nconst rule = new events.Rule(this, 'Daily', {\n  schedule: events.Schedule.rate(Duration.days(1)),\n});\n\ndeclare const pipeline: codepipeline.Pipeline;\nrule.addTarget(new targets.CodePipeline(pipeline));",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 438
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.IPipeline",
        "@aws-cdk/aws-events-targets.CodePipeline",
        "@aws-cdk/aws-events.IRuleTarget",
        "@aws-cdk/aws-events.Rule",
        "@aws-cdk/aws-events.Rule#addTarget",
        "@aws-cdk/aws-events.RuleProps",
        "@aws-cdk/aws-events.Schedule",
        "@aws-cdk/aws-events.Schedule#rate",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#days",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// A pipeline being used as a target for a CloudWatch event rule.\nimport * as targets from '@aws-cdk/aws-events-targets';\nimport * as events from '@aws-cdk/aws-events';\n\ndeclare const pipeline: codepipeline.Pipeline;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// kick off the pipeline every day\nconst rule = new events.Rule(this, 'Daily', {\n  schedule: events.Schedule.rate(Duration.days(1)),\n});\nrule.addTarget(new targets.CodePipeline(pipeline));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 19,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 6,
        "196": 3,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "60f66e4ae7cdda2692f7f0fb5756d128df585d9cb7b96563b879798c411d52b5"
    },
    "09979ca059bfcf562175c227c44e8b19198cb699670b24d9e907667e6c2c0170": {
      "translations": {
        "python": {
          "source": "# Define event rules for events emitted by the pipeline\nimport aws_cdk.aws_events as events\n\n# my_pipeline: codepipeline.Pipeline\n# my_stage: codepipeline.IStage\n# my_action: codepipeline.Action\n# target: events.IRuleTarget\n\nmy_pipeline.on_state_change(\"MyPipelineStateChange\", target=target)\nmy_stage.on_state_change(\"MyStageStateChange\", target)\nmy_action.on_state_change(\"MyActionStateChange\", target)",
          "version": "2"
        },
        "csharp": {
          "source": "// Define event rules for events emitted by the pipeline\nusing Amazon.CDK.AWS.Events;\n\nPipeline myPipeline;\nIStage myStage;\nAction myAction;\nIRuleTarget target;\n\nmyPipeline.OnStateChange(\"MyPipelineStateChange\", new OnEventOptions { Target = target });\nmyStage.OnStateChange(\"MyStageStateChange\", target);\nmyAction.OnStateChange(\"MyActionStateChange\", target);",
          "version": "1"
        },
        "java": {
          "source": "// Define event rules for events emitted by the pipeline\nimport software.amazon.awscdk.services.events.*;\n\nPipeline myPipeline;\nIStage myStage;\nAction myAction;\nIRuleTarget target;\n\nmyPipeline.onStateChange(\"MyPipelineStateChange\", OnEventOptions.builder().target(target).build());\nmyStage.onStateChange(\"MyStageStateChange\", target);\nmyAction.onStateChange(\"MyActionStateChange\", target);",
          "version": "1"
        },
        "go": {
          "source": "// Define event rules for events emitted by the pipeline\nimport events \"github.com/aws-samples/dummy/awscdkawsevents\"\n\nvar myPipeline pipeline\nvar myStage iStage\nvar myAction action\nvar target iRuleTarget\n\nmyPipeline.onStateChange(jsii.String(\"MyPipelineStateChange\"), &onEventOptions{\n\ttarget: target,\n})\nmyStage.onStateChange(jsii.String(\"MyStageStateChange\"), target)\nmyAction.onStateChange(jsii.String(\"MyActionStateChange\"), target)",
          "version": "1"
        },
        "$": {
          "source": "// Define event rules for events emitted by the pipeline\nimport * as events from '@aws-cdk/aws-events';\n\ndeclare const myPipeline: codepipeline.Pipeline;\ndeclare const myStage: codepipeline.IStage;\ndeclare const myAction: codepipeline.Action;\ndeclare const target: events.IRuleTarget;\nmyPipeline.onStateChange('MyPipelineStateChange', { target: target } );\nmyStage.onStateChange('MyStageStateChange', target);\nmyAction.onStateChange('MyActionStateChange', target);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 462
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.Action#onStateChange",
        "@aws-cdk/aws-codepipeline.IStage#onStateChange",
        "@aws-cdk/aws-events.IRuleTarget",
        "@aws-cdk/aws-events.OnEventOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Define event rules for events emitted by the pipeline\nimport * as events from '@aws-cdk/aws-events';\n\ndeclare const myPipeline: codepipeline.Pipeline;\ndeclare const myStage: codepipeline.IStage;\ndeclare const myAction: codepipeline.Action;\ndeclare const target: events.IRuleTarget;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nmyPipeline.onStateChange('MyPipelineStateChange', { target: target } );\nmyStage.onStateChange('MyStageStateChange', target);\nmyAction.onStateChange('MyActionStateChange', target);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 23,
        "130": 4,
        "153": 4,
        "169": 4,
        "193": 1,
        "194": 3,
        "196": 3,
        "225": 4,
        "226": 3,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "5d1d9b03ee8eb53495c50374c4df3dac88cf16c1bc9f499e21184d338ef4f064"
    },
    "f8a52fd095b3ea71dbe4373d99183ab660a38929140a0b352a7d4b6f80e38f8f": {
      "translations": {
        "python": {
          "source": "# Define CodeStar Notification rules for Pipelines\nimport aws_cdk.aws_chatbot as chatbot\n\n# pipeline: codepipeline.Pipeline\n\ntarget = chatbot.SlackChannelConfiguration(self, \"MySlackChannel\",\n    slack_channel_configuration_name=\"YOUR_CHANNEL_NAME\",\n    slack_workspace_id=\"YOUR_SLACK_WORKSPACE_ID\",\n    slack_channel_id=\"YOUR_SLACK_CHANNEL_ID\"\n)\nrule = pipeline.notify_on_execution_state_change(\"NotifyOnExecutionStateChange\", target)",
          "version": "2"
        },
        "csharp": {
          "source": "// Define CodeStar Notification rules for Pipelines\nusing Amazon.CDK.AWS.Chatbot;\n\nPipeline pipeline;\n\nSlackChannelConfiguration target = new SlackChannelConfiguration(this, \"MySlackChannel\", new SlackChannelConfigurationProps {\n    SlackChannelConfigurationName = \"YOUR_CHANNEL_NAME\",\n    SlackWorkspaceId = \"YOUR_SLACK_WORKSPACE_ID\",\n    SlackChannelId = \"YOUR_SLACK_CHANNEL_ID\"\n});\nINotificationRule rule = pipeline.NotifyOnExecutionStateChange(\"NotifyOnExecutionStateChange\", target);",
          "version": "1"
        },
        "java": {
          "source": "// Define CodeStar Notification rules for Pipelines\nimport software.amazon.awscdk.services.chatbot.*;\n\nPipeline pipeline;\n\nSlackChannelConfiguration target = SlackChannelConfiguration.Builder.create(this, \"MySlackChannel\")\n        .slackChannelConfigurationName(\"YOUR_CHANNEL_NAME\")\n        .slackWorkspaceId(\"YOUR_SLACK_WORKSPACE_ID\")\n        .slackChannelId(\"YOUR_SLACK_CHANNEL_ID\")\n        .build();\nINotificationRule rule = pipeline.notifyOnExecutionStateChange(\"NotifyOnExecutionStateChange\", target);",
          "version": "1"
        },
        "go": {
          "source": "// Define CodeStar Notification rules for Pipelines\nimport chatbot \"github.com/aws-samples/dummy/awscdkawschatbot\"\n\nvar pipeline pipeline\n\ntarget := chatbot.NewSlackChannelConfiguration(this, jsii.String(\"MySlackChannel\"), &slackChannelConfigurationProps{\n\tslackChannelConfigurationName: jsii.String(\"YOUR_CHANNEL_NAME\"),\n\tslackWorkspaceId: jsii.String(\"YOUR_SLACK_WORKSPACE_ID\"),\n\tslackChannelId: jsii.String(\"YOUR_SLACK_CHANNEL_ID\"),\n})\nrule := pipeline.notifyOnExecutionStateChange(jsii.String(\"NotifyOnExecutionStateChange\"), target)",
          "version": "1"
        },
        "$": {
          "source": "// Define CodeStar Notification rules for Pipelines\nimport * as chatbot from '@aws-cdk/aws-chatbot';\nconst target = new chatbot.SlackChannelConfiguration(this, 'MySlackChannel', {\n  slackChannelConfigurationName: 'YOUR_CHANNEL_NAME',\n  slackWorkspaceId: 'YOUR_SLACK_WORKSPACE_ID',\n  slackChannelId: 'YOUR_SLACK_CHANNEL_ID',\n});\n\ndeclare const pipeline: codepipeline.Pipeline;\nconst rule = pipeline.notifyOnExecutionStateChange('NotifyOnExecutionStateChange', target);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-codepipeline"
        },
        "field": {
          "field": "markdown",
          "line": 480
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-chatbot.SlackChannelConfiguration",
        "@aws-cdk/aws-chatbot.SlackChannelConfigurationProps",
        "@aws-cdk/aws-codestarnotifications.INotificationRule",
        "@aws-cdk/aws-codestarnotifications.INotificationRuleTarget",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Define CodeStar Notification rules for Pipelines\nimport * as chatbot from '@aws-cdk/aws-chatbot';\n\ndeclare const pipeline: codepipeline.Pipeline;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst target = new chatbot.SlackChannelConfiguration(this, 'MySlackChannel', {\n  slackChannelConfigurationName: 'YOUR_CHANNEL_NAME',\n  slackWorkspaceId: 'YOUR_SLACK_WORKSPACE_ID',\n  slackChannelId: 'YOUR_SLACK_CHANNEL_ID',\n});\nconst rule = pipeline.notifyOnExecutionStateChange('NotifyOnExecutionStateChange', target);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 14,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 2,
        "196": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "bd5fd4764ac2c329f4154692c056824a75a031816023195cd8394a5f45785701"
    },
    "5da79a46b24c12456a21137b1380c8de06d102381960d512384dd7a96cf8b98f": {
      "translations": {
        "python": {
          "source": "# MyAction is some action type that produces variables, like EcrSourceAction\nmy_action = MyAction(\n    # ...\n    action_name=\"myAction\"\n)\nOtherAction(\n    # ...\n    config=my_action.variables.my_variable,\n    action_name=\"otherAction\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nMyAction myAction = new MyAction(new MyActionProps {\n    // ...\n    ActionName = \"myAction\"\n});\nnew OtherAction(new OtherActionProps {\n    // ...\n    Config = myAction.Variables.MyVariable,\n    ActionName = \"otherAction\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nMyAction myAction = new MyAction(new MyActionProps()\n        // ...\n        .actionName(\"myAction\")\n        );\nnew OtherAction(new OtherActionProps()\n        // ...\n        .config(myAction.getVariables().getMyVariable())\n        .actionName(\"otherAction\")\n        );",
          "version": "1"
        },
        "go": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nmyAction := NewMyAction(&myActionProps{\n\t// ...\n\tactionName: jsii.String(\"myAction\"),\n})\nNewOtherAction(&otherActionProps{\n\t// ...\n\tconfig: myAction.variables.myVariable,\n\tactionName: jsii.String(\"otherAction\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  actionName: 'myAction',\n});\nnew OtherAction({\n  // ...\n  config: myAction.variables.myVariable,\n  actionName: 'otherAction',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.ActionArtifactBounds"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
        "@aws-cdk/aws-codepipeline.ActionCategory"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ninterface MyActionProps {\n  variablesNamespace?: string;\n  actionName: string;\n}\n\nclass MyAction extends codepipeline.Action {\n  public variables: { [key: string]: string };\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: MyActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n    this.variables = { 'myVariable': 'var' };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\ninterface OtherActionProps {\n  config: string;\n  actionName: string;\n}\n\nclass OtherAction extends codepipeline.Action {\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: OtherActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  actionName: 'myAction',\n});\nnew OtherAction({\n  // ...\n  config: myAction.variables.myVariable,\n  actionName: 'otherAction',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "45daaa4526f37e043ab06dca805904324e8107ae984f478c11093568d0dabcc5"
    },
    "bcdb3387214d6e22029ec175ef0f973a0eaa95f5e99795a40fa77df199d33ae9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_s3 as s3\n\n# bucket: s3.Bucket\n# role: iam.Role\n\naction_bind_options = codepipeline.ActionBindOptions(\n    bucket=bucket,\n    role=role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.S3;\n\nBucket bucket;\nRole role;\n\nActionBindOptions actionBindOptions = new ActionBindOptions {\n    Bucket = bucket,\n    Role = role\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.s3.*;\n\nBucket bucket;\nRole role;\n\nActionBindOptions actionBindOptions = ActionBindOptions.builder()\n        .bucket(bucket)\n        .role(role)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar bucket bucket\nvar role role\n\nactionBindOptions := &actionBindOptions{\n\tbucket: bucket,\n\trole: role,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\ndeclare const role: iam.Role;\nconst actionBindOptions: codepipeline.ActionBindOptions = {\n  bucket: bucket,\n  role: role,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.ActionBindOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionBindOptions",
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionBindOptions: codepipeline.ActionBindOptions = {\n  bucket: bucket,\n  role: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 16,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "29e8a45cd0b9ab6afdef9924e02ae474a6814c9df29248bf0ae538e3a17678e4"
    },
    "ca80f56c7e22abe3c8c2278d77d208c852a499c075bb8a89d301257635f48666": {
      "translations": {
        "python": {
          "source": "# MyAction is some action type that produces variables, like EcrSourceAction\nmy_action = MyAction(\n    # ...\n    action_name=\"myAction\"\n)\nOtherAction(\n    # ...\n    config=my_action.variables.my_variable,\n    action_name=\"otherAction\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nMyAction myAction = new MyAction(new MyActionProps {\n    // ...\n    ActionName = \"myAction\"\n});\nnew OtherAction(new OtherActionProps {\n    // ...\n    Config = myAction.Variables.MyVariable,\n    ActionName = \"otherAction\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nMyAction myAction = new MyAction(new MyActionProps()\n        // ...\n        .actionName(\"myAction\")\n        );\nnew OtherAction(new OtherActionProps()\n        // ...\n        .config(myAction.getVariables().getMyVariable())\n        .actionName(\"otherAction\")\n        );",
          "version": "1"
        },
        "go": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nmyAction := NewMyAction(&myActionProps{\n\t// ...\n\tactionName: jsii.String(\"myAction\"),\n})\nNewOtherAction(&otherActionProps{\n\t// ...\n\tconfig: myAction.variables.myVariable,\n\tactionName: jsii.String(\"otherAction\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  actionName: 'myAction',\n});\nnew OtherAction({\n  // ...\n  config: myAction.variables.myVariable,\n  actionName: 'otherAction',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.ActionCategory"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
        "@aws-cdk/aws-codepipeline.ActionCategory"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ninterface MyActionProps {\n  variablesNamespace?: string;\n  actionName: string;\n}\n\nclass MyAction extends codepipeline.Action {\n  public variables: { [key: string]: string };\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: MyActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n    this.variables = { 'myVariable': 'var' };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\ninterface OtherActionProps {\n  config: string;\n  actionName: string;\n}\n\nclass OtherAction extends codepipeline.Action {\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: OtherActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// MyAction is some action type that produces variables, like EcrSourceAction\nconst myAction = new MyAction({\n  // ...\n  actionName: 'myAction',\n});\nnew OtherAction({\n  // ...\n  config: myAction.variables.myVariable,\n  actionName: 'otherAction',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 3
      },
      "fqnsFingerprint": "45daaa4526f37e043ab06dca805904324e8107ae984f478c11093568d0dabcc5"
    },
    "d42835c04a0d77b603c861b8b081b7761581f5a74883d9abf10316c21e7e290f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\n# configuration: Any\n\naction_config = codepipeline.ActionConfig(\n    configuration=configuration\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nvar configuration;\n\nActionConfig actionConfig = new ActionConfig {\n    Configuration = configuration\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nObject configuration;\n\nActionConfig actionConfig = ActionConfig.builder()\n        .configuration(configuration)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nvar configuration interface{}\n\nactionConfig := &actionConfig{\n\tconfiguration: configuration,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\nconst actionConfig: codepipeline.ActionConfig = {\n  configuration: configuration,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.ActionConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionConfig"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionConfig: codepipeline.ActionConfig = {\n  configuration: configuration,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 7,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "d578584a69d543b5cd0239cc12aac0055118739fe3f84f8a3df7e5508fe0d4b2"
    },
    "007b70dbf48c33bc17bc007fef0605dba01320de39bf3114251abc03d2b054a5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.core as cdk\n\n# artifact: codepipeline.Artifact\n# resource: cdk.Resource\n# role: iam.Role\n\naction_properties = codepipeline.ActionProperties(\n    action_name=\"actionName\",\n    artifact_bounds=codepipeline.ActionArtifactBounds(\n        max_inputs=123,\n        max_outputs=123,\n        min_inputs=123,\n        min_outputs=123\n    ),\n    category=codepipeline.ActionCategory.SOURCE,\n    provider=\"provider\",\n\n    # the properties below are optional\n    account=\"account\",\n    inputs=[artifact],\n    outputs=[artifact],\n    owner=\"owner\",\n    region=\"region\",\n    resource=resource,\n    role=role,\n    run_order=123,\n    variables_namespace=\"variablesNamespace\",\n    version=\"version\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK;\n\nArtifact artifact;\nResource resource;\nRole role;\nActionProperties actionProperties = new ActionProperties {\n    ActionName = \"actionName\",\n    ArtifactBounds = new ActionArtifactBounds {\n        MaxInputs = 123,\n        MaxOutputs = 123,\n        MinInputs = 123,\n        MinOutputs = 123\n    },\n    Category = ActionCategory.SOURCE,\n    Provider = \"provider\",\n\n    // the properties below are optional\n    Account = \"account\",\n    Inputs = new [] { artifact },\n    Outputs = new [] { artifact },\n    Owner = \"owner\",\n    Region = \"region\",\n    Resource = resource,\n    Role = role,\n    RunOrder = 123,\n    VariablesNamespace = \"variablesNamespace\",\n    Version = \"version\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.core.*;\n\nArtifact artifact;\nResource resource;\nRole role;\n\nActionProperties actionProperties = ActionProperties.builder()\n        .actionName(\"actionName\")\n        .artifactBounds(ActionArtifactBounds.builder()\n                .maxInputs(123)\n                .maxOutputs(123)\n                .minInputs(123)\n                .minOutputs(123)\n                .build())\n        .category(ActionCategory.SOURCE)\n        .provider(\"provider\")\n\n        // the properties below are optional\n        .account(\"account\")\n        .inputs(List.of(artifact))\n        .outputs(List.of(artifact))\n        .owner(\"owner\")\n        .region(\"region\")\n        .resource(resource)\n        .role(role)\n        .runOrder(123)\n        .variablesNamespace(\"variablesNamespace\")\n        .version(\"version\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar artifact artifact\nvar resource resource\nvar role role\n\nactionProperties := &actionProperties{\n\tactionName: jsii.String(\"actionName\"),\n\tartifactBounds: &actionArtifactBounds{\n\t\tmaxInputs: jsii.Number(123),\n\t\tmaxOutputs: jsii.Number(123),\n\t\tminInputs: jsii.Number(123),\n\t\tminOutputs: jsii.Number(123),\n\t},\n\tcategory: codepipeline.actionCategory_SOURCE,\n\tprovider: jsii.String(\"provider\"),\n\n\t// the properties below are optional\n\taccount: jsii.String(\"account\"),\n\tinputs: []*artifact{\n\t\tartifact,\n\t},\n\toutputs: []*artifact{\n\t\tartifact,\n\t},\n\towner: jsii.String(\"owner\"),\n\tregion: jsii.String(\"region\"),\n\tresource: resource,\n\trole: role,\n\trunOrder: jsii.Number(123),\n\tvariablesNamespace: jsii.String(\"variablesNamespace\"),\n\tversion: jsii.String(\"version\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const artifact: codepipeline.Artifact;\ndeclare const resource: cdk.Resource;\ndeclare const role: iam.Role;\nconst actionProperties: codepipeline.ActionProperties = {\n  actionName: 'actionName',\n  artifactBounds: {\n    maxInputs: 123,\n    maxOutputs: 123,\n    minInputs: 123,\n    minOutputs: 123,\n  },\n  category: codepipeline.ActionCategory.SOURCE,\n  provider: 'provider',\n\n  // the properties below are optional\n  account: 'account',\n  inputs: [artifact],\n  outputs: [artifact],\n  owner: 'owner',\n  region: 'region',\n  resource: resource,\n  role: role,\n  runOrder: 123,\n  variablesNamespace: 'variablesNamespace',\n  version: 'version',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.ActionProperties"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
        "@aws-cdk/aws-codepipeline.ActionCategory",
        "@aws-cdk/aws-codepipeline.ActionCategory#SOURCE",
        "@aws-cdk/aws-codepipeline.ActionProperties",
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/core.IResource"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const artifact: codepipeline.Artifact;\ndeclare const resource: cdk.Resource;\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionProperties: codepipeline.ActionProperties = {\n  actionName: 'actionName',\n  artifactBounds: {\n    maxInputs: 123,\n    maxOutputs: 123,\n    minInputs: 123,\n    minOutputs: 123,\n  },\n  category: codepipeline.ActionCategory.SOURCE,\n  provider: 'provider',\n\n  // the properties below are optional\n  account: 'account',\n  inputs: [artifact],\n  outputs: [artifact],\n  owner: 'owner',\n  region: 'region',\n  resource: resource,\n  role: role,\n  runOrder: 123,\n  variablesNamespace: 'variablesNamespace',\n  version: 'version',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 10,
        "75": 40,
        "130": 3,
        "153": 4,
        "169": 4,
        "192": 2,
        "193": 2,
        "194": 2,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "e4cf13bda802ab78bd7905e9de931f4ff1d95bd82fb02021f2b4b5f09ad7c914"
    },
    "bc22712d0a046b6ba5066e6f841c5e7bb63c67f5bd7fbc48a3b051282613cb22": {
      "translations": {
        "python": {
          "source": "# later:\n# project: codebuild.PipelineProject\nlambda_invoke_action = codepipeline_actions.LambdaInvokeAction(\n    action_name=\"Lambda\",\n    lambda_=lambda_.Function(self, \"Func\",\n        runtime=lambda_.Runtime.NODEJS_14_X,\n        handler=\"index.handler\",\n        code=lambda_.Code.from_inline(\"\"\"\n                    const AWS = require('aws-sdk');\n\n                    exports.handler = async function(event, context) {\n                        const codepipeline = new AWS.CodePipeline();\n                        await codepipeline.putJobSuccessResult({\n                            jobId: event['CodePipeline.job'].id,\n                            outputVariables: {\n                                MY_VAR: \"some value\",\n                            },\n                        }).promise();\n                    }\n                \"\"\")\n    ),\n    variables_namespace=\"MyNamespace\"\n)\nsource_output = codepipeline.Artifact()\ncodepipeline_actions.CodeBuildAction(\n    action_name=\"CodeBuild\",\n    project=project,\n    input=source_output,\n    environment_variables={\n        \"MyVar\": codebuild.BuildEnvironmentVariable(\n            value=lambda_invoke_action.variable(\"MY_VAR\")\n        )\n    }\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// later:\nPipelineProject project;\nLambdaInvokeAction lambdaInvokeAction = new LambdaInvokeAction(new LambdaInvokeActionProps {\n    ActionName = \"Lambda\",\n    Lambda = new Function(this, \"Func\", new FunctionProps {\n        Runtime = Runtime.NODEJS_14_X,\n        Handler = \"index.handler\",\n        Code = Code.FromInline(@\"\n                const AWS = require('aws-sdk');\n\n                exports.handler = async function(event, context) {\n                    const codepipeline = new AWS.CodePipeline();\n                    await codepipeline.putJobSuccessResult({\n                        jobId: event['CodePipeline.job'].id,\n                        outputVariables: {\n                            MY_VAR: \"\"some value\"\",\n                        },\n                    }).promise();\n                }\n            \")\n    }),\n    VariablesNamespace = \"MyNamespace\"\n});\nArtifact sourceOutput = new Artifact();\nnew CodeBuildAction(new CodeBuildActionProps {\n    ActionName = \"CodeBuild\",\n    Project = project,\n    Input = sourceOutput,\n    EnvironmentVariables = new Dictionary<string, BuildEnvironmentVariable> {\n        { \"MyVar\", new BuildEnvironmentVariable {\n            Value = lambdaInvokeAction.Variable(\"MY_VAR\")\n        } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// later:\nPipelineProject project;\nLambdaInvokeAction lambdaInvokeAction = LambdaInvokeAction.Builder.create()\n        .actionName(\"Lambda\")\n        .lambda(Function.Builder.create(this, \"Func\")\n                .runtime(Runtime.NODEJS_14_X)\n                .handler(\"index.handler\")\n                .code(Code.fromInline(\"\\n        const AWS = require('aws-sdk');\\n\\n        exports.handler = async function(event, context) {\\n            const codepipeline = new AWS.CodePipeline();\\n            await codepipeline.putJobSuccessResult({\\n                jobId: event['CodePipeline.job'].id,\\n                outputVariables: {\\n                    MY_VAR: \\\"some value\\\",\\n                },\\n            }).promise();\\n        }\\n    \"))\n                .build())\n        .variablesNamespace(\"MyNamespace\")\n        .build();\nArtifact sourceOutput = new Artifact();\nCodeBuildAction.Builder.create()\n        .actionName(\"CodeBuild\")\n        .project(project)\n        .input(sourceOutput)\n        .environmentVariables(Map.of(\n                \"MyVar\", BuildEnvironmentVariable.builder()\n                        .value(lambdaInvokeAction.variable(\"MY_VAR\"))\n                        .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// later:\nvar project pipelineProject\nlambdaInvokeAction := codepipeline_actions.NewLambdaInvokeAction(&lambdaInvokeActionProps{\n\tactionName: jsii.String(\"Lambda\"),\n\tlambda: lambda.NewFunction(this, jsii.String(\"Func\"), &functionProps{\n\t\truntime: lambda.runtime_NODEJS_14_X(),\n\t\thandler: jsii.String(\"index.handler\"),\n\t\tcode: lambda.code.fromInline(jsii.String(\"\\n        const AWS = require('aws-sdk');\\n\\n        exports.handler = async function(event, context) {\\n            const codepipeline = new AWS.CodePipeline();\\n            await codepipeline.putJobSuccessResult({\\n                jobId: event['CodePipeline.job'].id,\\n                outputVariables: {\\n                    MY_VAR: \\\"some value\\\",\\n                },\\n            }).promise();\\n        }\\n    \")),\n\t}),\n\tvariablesNamespace: jsii.String(\"MyNamespace\"),\n})\nsourceOutput := codepipeline.NewArtifact()\ncodepipeline_actions.NewCodeBuildAction(&codeBuildActionProps{\n\tactionName: jsii.String(\"CodeBuild\"),\n\tproject: project,\n\tinput: sourceOutput,\n\tenvironmentVariables: map[string]buildEnvironmentVariable{\n\t\t\"MyVar\": &buildEnvironmentVariable{\n\t\t\t\"value\": lambdaInvokeAction.variable(jsii.String(\"MY_VAR\")),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const lambdaInvokeAction = new codepipeline_actions.LambdaInvokeAction({\n  actionName: 'Lambda',\n  lambda: new lambda.Function(this, 'Func', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n    handler: 'index.handler',\n    code: lambda.Code.fromInline(`\n        const AWS = require('aws-sdk');\n\n        exports.handler = async function(event, context) {\n            const codepipeline = new AWS.CodePipeline();\n            await codepipeline.putJobSuccessResult({\n                jobId: event['CodePipeline.job'].id,\n                outputVariables: {\n                    MY_VAR: \"some value\",\n                },\n            }).promise();\n        }\n    `),\n  }),\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\n\n// later:\ndeclare const project: codebuild.PipelineProject;\nconst sourceOutput = new codepipeline.Artifact();\nnew codepipeline_actions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput,\n  environmentVariables: {\n    MyVar: {\n      value: lambdaInvokeAction.variable('MY_VAR'),\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.Artifact"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codebuild.BuildEnvironmentVariable",
        "@aws-cdk/aws-codebuild.IProject",
        "@aws-cdk/aws-codepipeline-actions.CodeBuildAction",
        "@aws-cdk/aws-codepipeline-actions.CodeBuildActionProps",
        "@aws-cdk/aws-codepipeline-actions.LambdaInvokeAction",
        "@aws-cdk/aws-codepipeline-actions.LambdaInvokeAction#variable",
        "@aws-cdk/aws-codepipeline-actions.LambdaInvokeActionProps",
        "@aws-cdk/aws-codepipeline.Artifact",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromInline",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_14_X",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n\n\n// later:\ndeclare const project: codebuild.PipelineProject;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Arn, Construct, Duration, SecretValue, Stack } from '@aws-cdk/core';\nimport codebuild = require('@aws-cdk/aws-codebuild');\nimport codedeploy = require('@aws-cdk/aws-codedeploy');\nimport codepipeline = require('@aws-cdk/aws-codepipeline');\nimport codepipeline_actions = require('@aws-cdk/aws-codepipeline-actions');\nimport codecommit = require('@aws-cdk/aws-codecommit');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3 = require('@aws-cdk/aws-s3');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\nconst lambdaInvokeAction = new codepipeline_actions.LambdaInvokeAction({\n  actionName: 'Lambda',\n  lambda: new lambda.Function(this, 'Func', {\n    runtime: lambda.Runtime.NODEJS_14_X,\n    handler: 'index.handler',\n    code: lambda.Code.fromInline(`\n        const AWS = require('aws-sdk');\n\n        exports.handler = async function(event, context) {\n            const codepipeline = new AWS.CodePipeline();\n            await codepipeline.putJobSuccessResult({\n                jobId: event['CodePipeline.job'].id,\n                outputVariables: {\n                    MY_VAR: \"some value\",\n                },\n            }).promise();\n        }\n    `),\n  }),\n  variablesNamespace: 'MyNamespace', // optional - by default, a name will be generated for you\n});\nconst sourceOutput = new codepipeline.Artifact();\nnew codepipeline_actions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput,\n  environmentVariables: {\n    MyVar: {\n      value: lambdaInvokeAction.variable('MY_VAR'),\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "14": 1,
        "75": 34,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 5,
        "194": 9,
        "196": 2,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 11,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "36d2b67b186e507711a75a348555d6e637486e1af9e20d61d3da9087a2162c19"
    },
    "05bfde50d30992e3485a478d4b0850749aedf38a17f3ec376540465d3c925ed3": {
      "translations": {
        "python": {
          "source": "# Source stage: read from repository\nrepo = codecommit.Repository(stack, \"TemplateRepo\",\n    repository_name=\"template-repo\"\n)\nsource_output = codepipeline.Artifact(\"SourceArtifact\")\nsource = cpactions.CodeCommitSourceAction(\n    action_name=\"Source\",\n    repository=repo,\n    output=source_output,\n    trigger=cpactions.CodeCommitTrigger.POLL\n)\nsource_stage = {\n    \"stage_name\": \"Source\",\n    \"actions\": [source]\n}\n\n# Deployment stage: create and deploy changeset with manual approval\nstack_name = \"OurStack\"\nchange_set_name = \"StagedChangeSet\"\n\nprod_stage = {\n    \"stage_name\": \"Deploy\",\n    \"actions\": [\n        cpactions.CloudFormationCreateReplaceChangeSetAction(\n            action_name=\"PrepareChanges\",\n            stack_name=stack_name,\n            change_set_name=change_set_name,\n            admin_permissions=True,\n            template_path=source_output.at_path(\"template.yaml\"),\n            run_order=1\n        ),\n        cpactions.ManualApprovalAction(\n            action_name=\"ApproveChanges\",\n            run_order=2\n        ),\n        cpactions.CloudFormationExecuteChangeSetAction(\n            action_name=\"ExecuteChanges\",\n            stack_name=stack_name,\n            change_set_name=change_set_name,\n            run_order=3\n        )\n    ]\n}\n\ncodepipeline.Pipeline(stack, \"Pipeline\",\n    stages=[source_stage, prod_stage\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Source stage: read from repository\nRepository repo = new Repository(stack, \"TemplateRepo\", new RepositoryProps {\n    RepositoryName = \"template-repo\"\n});\nArtifact sourceOutput = new Artifact(\"SourceArtifact\");\nCodeCommitSourceAction source = new CodeCommitSourceAction(new CodeCommitSourceActionProps {\n    ActionName = \"Source\",\n    Repository = repo,\n    Output = sourceOutput,\n    Trigger = CodeCommitTrigger.POLL\n});\nIDictionary<string, object> sourceStage = new Dictionary<string, object> {\n    { \"stageName\", \"Source\" },\n    { \"actions\", new [] { source } }\n};\n\n// Deployment stage: create and deploy changeset with manual approval\nstring stackName = \"OurStack\";\nstring changeSetName = \"StagedChangeSet\";\n\nIDictionary<string, object> prodStage = new Dictionary<string, object> {\n    { \"stageName\", \"Deploy\" },\n    { \"actions\", new [] {\n        new CloudFormationCreateReplaceChangeSetAction(new CloudFormationCreateReplaceChangeSetActionProps {\n            ActionName = \"PrepareChanges\",\n            StackName = stackName,\n            ChangeSetName = changeSetName,\n            AdminPermissions = true,\n            TemplatePath = sourceOutput.AtPath(\"template.yaml\"),\n            RunOrder = 1\n        }),\n        new ManualApprovalAction(new ManualApprovalActionProps {\n            ActionName = \"ApproveChanges\",\n            RunOrder = 2\n        }),\n        new CloudFormationExecuteChangeSetAction(new CloudFormationExecuteChangeSetActionProps {\n            ActionName = \"ExecuteChanges\",\n            StackName = stackName,\n            ChangeSetName = changeSetName,\n            RunOrder = 3\n        }) } }\n};\n\nnew Pipeline(stack, \"Pipeline\", new PipelineProps {\n    Stages = new [] { sourceStage, prodStage }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Source stage: read from repository\nRepository repo = Repository.Builder.create(stack, \"TemplateRepo\")\n        .repositoryName(\"template-repo\")\n        .build();\nArtifact sourceOutput = new Artifact(\"SourceArtifact\");\nCodeCommitSourceAction source = CodeCommitSourceAction.Builder.create()\n        .actionName(\"Source\")\n        .repository(repo)\n        .output(sourceOutput)\n        .trigger(CodeCommitTrigger.POLL)\n        .build();\nMap<String, Object> sourceStage = Map.of(\n        \"stageName\", \"Source\",\n        \"actions\", List.of(source));\n\n// Deployment stage: create and deploy changeset with manual approval\nString stackName = \"OurStack\";\nString changeSetName = \"StagedChangeSet\";\n\nMap<String, Object> prodStage = Map.of(\n        \"stageName\", \"Deploy\",\n        \"actions\", List.of(\n            CloudFormationCreateReplaceChangeSetAction.Builder.create()\n                    .actionName(\"PrepareChanges\")\n                    .stackName(stackName)\n                    .changeSetName(changeSetName)\n                    .adminPermissions(true)\n                    .templatePath(sourceOutput.atPath(\"template.yaml\"))\n                    .runOrder(1)\n                    .build(),\n            ManualApprovalAction.Builder.create()\n                    .actionName(\"ApproveChanges\")\n                    .runOrder(2)\n                    .build(),\n            CloudFormationExecuteChangeSetAction.Builder.create()\n                    .actionName(\"ExecuteChanges\")\n                    .stackName(stackName)\n                    .changeSetName(changeSetName)\n                    .runOrder(3)\n                    .build()));\n\nPipeline.Builder.create(stack, \"Pipeline\")\n        .stages(List.of(sourceStage, prodStage))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Source stage: read from repository\nrepo := codecommit.NewRepository(stack, jsii.String(\"TemplateRepo\"), &repositoryProps{\n\trepositoryName: jsii.String(\"template-repo\"),\n})\nsourceOutput := codepipeline.NewArtifact(jsii.String(\"SourceArtifact\"))\nsource := cpactions.NewCodeCommitSourceAction(&codeCommitSourceActionProps{\n\tactionName: jsii.String(\"Source\"),\n\trepository: repo,\n\toutput: sourceOutput,\n\ttrigger: cpactions.codeCommitTrigger_POLL,\n})\nsourceStage := map[string]interface{}{\n\t\"stageName\": jsii.String(\"Source\"),\n\t\"actions\": []CodeCommitSourceAction{\n\t\tsource,\n\t},\n}\n\n// Deployment stage: create and deploy changeset with manual approval\nstackName := \"OurStack\"\nchangeSetName := \"StagedChangeSet\"\n\nprodStage := map[string]interface{}{\n\t\"stageName\": jsii.String(\"Deploy\"),\n\t\"actions\": []interface{}{\n\t\tcpactions.NewCloudFormationCreateReplaceChangeSetAction(&CloudFormationCreateReplaceChangeSetActionProps{\n\t\t\t\"actionName\": jsii.String(\"PrepareChanges\"),\n\t\t\t\"stackName\": jsii.String(stackName),\n\t\t\t\"changeSetName\": jsii.String(changeSetName),\n\t\t\t\"adminPermissions\": jsii.Boolean(true),\n\t\t\t\"templatePath\": sourceOutput.atPath(jsii.String(\"template.yaml\")),\n\t\t\t\"runOrder\": jsii.Number(1),\n\t\t}),\n\t\tcpactions.NewManualApprovalAction(&ManualApprovalActionProps{\n\t\t\t\"actionName\": jsii.String(\"ApproveChanges\"),\n\t\t\t\"runOrder\": jsii.Number(2),\n\t\t}),\n\t\tcpactions.NewCloudFormationExecuteChangeSetAction(&CloudFormationExecuteChangeSetActionProps{\n\t\t\t\"actionName\": jsii.String(\"ExecuteChanges\"),\n\t\t\t\"stackName\": jsii.String(stackName),\n\t\t\t\"changeSetName\": jsii.String(changeSetName),\n\t\t\t\"runOrder\": jsii.Number(3),\n\t\t}),\n\t},\n}\n\ncodepipeline.NewPipeline(stack, jsii.String(\"Pipeline\"), &pipelineProps{\n\tstages: []stageProps{\n\t\tsourceStage,\n\t\tprodStage,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Source stage: read from repository\nconst repo = new codecommit.Repository(stack, 'TemplateRepo', {\n  repositoryName: 'template-repo',\n});\nconst sourceOutput = new codepipeline.Artifact('SourceArtifact');\nconst source = new cpactions.CodeCommitSourceAction({\n  actionName: 'Source',\n  repository: repo,\n  output: sourceOutput,\n  trigger: cpactions.CodeCommitTrigger.POLL,\n});\nconst sourceStage = {\n  stageName: 'Source',\n  actions: [source],\n};\n\n// Deployment stage: create and deploy changeset with manual approval\nconst stackName = 'OurStack';\nconst changeSetName = 'StagedChangeSet';\n\nconst prodStage = {\n  stageName: 'Deploy',\n  actions: [\n    new cpactions.CloudFormationCreateReplaceChangeSetAction({\n      actionName: 'PrepareChanges',\n      stackName,\n      changeSetName,\n      adminPermissions: true,\n      templatePath: sourceOutput.atPath('template.yaml'),\n      runOrder: 1,\n    }),\n    new cpactions.ManualApprovalAction({\n      actionName: 'ApproveChanges',\n      runOrder: 2,\n    }),\n    new cpactions.CloudFormationExecuteChangeSetAction({\n      actionName: 'ExecuteChanges',\n      stackName,\n      changeSetName,\n      runOrder: 3,\n    }),\n  ],\n};\n\nnew codepipeline.Pipeline(stack, 'Pipeline', {\n  stages: [\n    sourceStage,\n    prodStage,\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.ArtifactPath"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codecommit.IRepository",
        "@aws-cdk/aws-codecommit.Repository",
        "@aws-cdk/aws-codecommit.RepositoryProps",
        "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateReplaceChangeSetAction",
        "@aws-cdk/aws-codepipeline-actions.CloudFormationCreateReplaceChangeSetActionProps",
        "@aws-cdk/aws-codepipeline-actions.CloudFormationExecuteChangeSetAction",
        "@aws-cdk/aws-codepipeline-actions.CloudFormationExecuteChangeSetActionProps",
        "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceAction",
        "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceActionProps",
        "@aws-cdk/aws-codepipeline-actions.CodeCommitTrigger",
        "@aws-cdk/aws-codepipeline-actions.CodeCommitTrigger#POLL",
        "@aws-cdk/aws-codepipeline-actions.ManualApprovalAction",
        "@aws-cdk/aws-codepipeline-actions.ManualApprovalActionProps",
        "@aws-cdk/aws-codepipeline.Artifact",
        "@aws-cdk/aws-codepipeline.Artifact#atPath",
        "@aws-cdk/aws-codepipeline.ArtifactPath",
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.PipelineProps",
        "constructs.Construct"
      ],
      "fullSource": "import * as codecommit from '@aws-cdk/aws-codecommit';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as cdk from '@aws-cdk/core';\nimport * as cpactions from '../lib';\n\nconst app = new cdk.App();\nconst stack = new cdk.Stack(app, 'aws-cdk-codepipeline-cloudformation');\n\n/// !show\n// Source stage: read from repository\nconst repo = new codecommit.Repository(stack, 'TemplateRepo', {\n  repositoryName: 'template-repo',\n});\nconst sourceOutput = new codepipeline.Artifact('SourceArtifact');\nconst source = new cpactions.CodeCommitSourceAction({\n  actionName: 'Source',\n  repository: repo,\n  output: sourceOutput,\n  trigger: cpactions.CodeCommitTrigger.POLL,\n});\nconst sourceStage = {\n  stageName: 'Source',\n  actions: [source],\n};\n\n// Deployment stage: create and deploy changeset with manual approval\nconst stackName = 'OurStack';\nconst changeSetName = 'StagedChangeSet';\n\nconst prodStage = {\n  stageName: 'Deploy',\n  actions: [\n    new cpactions.CloudFormationCreateReplaceChangeSetAction({\n      actionName: 'PrepareChanges',\n      stackName,\n      changeSetName,\n      adminPermissions: true,\n      templatePath: sourceOutput.atPath('template.yaml'),\n      runOrder: 1,\n    }),\n    new cpactions.ManualApprovalAction({\n      actionName: 'ApproveChanges',\n      runOrder: 2,\n    }),\n    new cpactions.CloudFormationExecuteChangeSetAction({\n      actionName: 'ExecuteChanges',\n      stackName,\n      changeSetName,\n      runOrder: 3,\n    }),\n  ],\n};\n\nnew codepipeline.Pipeline(stack, 'Pipeline', {\n  stages: [\n    sourceStage,\n    prodStage,\n  ],\n});\n/// !hide\n\napp.synth();\n",
      "syntaxKindCounter": {
        "8": 3,
        "10": 13,
        "75": 55,
        "106": 1,
        "192": 3,
        "193": 8,
        "194": 10,
        "196": 1,
        "197": 7,
        "225": 7,
        "226": 1,
        "242": 7,
        "243": 7,
        "281": 18,
        "282": 4
      },
      "fqnsFingerprint": "28e4db265b973b8bde800cb9f7bdba720785d22803f342b00f0a6591012b7393"
    },
    "12042ea74bed5ea8b2d7caac1ea58177e82eb431bfb4822dec5fa66a60449369": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\ncfn_custom_action_type = codepipeline.CfnCustomActionType(self, \"MyCfnCustomActionType\",\n    category=\"category\",\n    input_artifact_details=codepipeline.CfnCustomActionType.ArtifactDetailsProperty(\n        maximum_count=123,\n        minimum_count=123\n    ),\n    output_artifact_details=codepipeline.CfnCustomActionType.ArtifactDetailsProperty(\n        maximum_count=123,\n        minimum_count=123\n    ),\n    provider=\"provider\",\n    version=\"version\",\n\n    # the properties below are optional\n    configuration_properties=[codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty(\n        key=False,\n        name=\"name\",\n        required=False,\n        secret=False,\n\n        # the properties below are optional\n        description=\"description\",\n        queryable=False,\n        type=\"type\"\n    )],\n    settings=codepipeline.CfnCustomActionType.SettingsProperty(\n        entity_url_template=\"entityUrlTemplate\",\n        execution_url_template=\"executionUrlTemplate\",\n        revision_url_template=\"revisionUrlTemplate\",\n        third_party_configuration_url=\"thirdPartyConfigurationUrl\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nCfnCustomActionType cfnCustomActionType = new CfnCustomActionType(this, \"MyCfnCustomActionType\", new CfnCustomActionTypeProps {\n    Category = \"category\",\n    InputArtifactDetails = new ArtifactDetailsProperty {\n        MaximumCount = 123,\n        MinimumCount = 123\n    },\n    OutputArtifactDetails = new ArtifactDetailsProperty {\n        MaximumCount = 123,\n        MinimumCount = 123\n    },\n    Provider = \"provider\",\n    Version = \"version\",\n\n    // the properties below are optional\n    ConfigurationProperties = new [] { new ConfigurationPropertiesProperty {\n        Key = false,\n        Name = \"name\",\n        Required = false,\n        Secret = false,\n\n        // the properties below are optional\n        Description = \"description\",\n        Queryable = false,\n        Type = \"type\"\n    } },\n    Settings = new SettingsProperty {\n        EntityUrlTemplate = \"entityUrlTemplate\",\n        ExecutionUrlTemplate = \"executionUrlTemplate\",\n        RevisionUrlTemplate = \"revisionUrlTemplate\",\n        ThirdPartyConfigurationUrl = \"thirdPartyConfigurationUrl\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nCfnCustomActionType cfnCustomActionType = CfnCustomActionType.Builder.create(this, \"MyCfnCustomActionType\")\n        .category(\"category\")\n        .inputArtifactDetails(ArtifactDetailsProperty.builder()\n                .maximumCount(123)\n                .minimumCount(123)\n                .build())\n        .outputArtifactDetails(ArtifactDetailsProperty.builder()\n                .maximumCount(123)\n                .minimumCount(123)\n                .build())\n        .provider(\"provider\")\n        .version(\"version\")\n\n        // the properties below are optional\n        .configurationProperties(List.of(ConfigurationPropertiesProperty.builder()\n                .key(false)\n                .name(\"name\")\n                .required(false)\n                .secret(false)\n\n                // the properties below are optional\n                .description(\"description\")\n                .queryable(false)\n                .type(\"type\")\n                .build()))\n        .settings(SettingsProperty.builder()\n                .entityUrlTemplate(\"entityUrlTemplate\")\n                .executionUrlTemplate(\"executionUrlTemplate\")\n                .revisionUrlTemplate(\"revisionUrlTemplate\")\n                .thirdPartyConfigurationUrl(\"thirdPartyConfigurationUrl\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\ncfnCustomActionType := codepipeline.NewCfnCustomActionType(this, jsii.String(\"MyCfnCustomActionType\"), &cfnCustomActionTypeProps{\n\tcategory: jsii.String(\"category\"),\n\tinputArtifactDetails: &artifactDetailsProperty{\n\t\tmaximumCount: jsii.Number(123),\n\t\tminimumCount: jsii.Number(123),\n\t},\n\toutputArtifactDetails: &artifactDetailsProperty{\n\t\tmaximumCount: jsii.Number(123),\n\t\tminimumCount: jsii.Number(123),\n\t},\n\tprovider: jsii.String(\"provider\"),\n\tversion: jsii.String(\"version\"),\n\n\t// the properties below are optional\n\tconfigurationProperties: []interface{}{\n\t\t&configurationPropertiesProperty{\n\t\t\tkey: jsii.Boolean(false),\n\t\t\tname: jsii.String(\"name\"),\n\t\t\trequired: jsii.Boolean(false),\n\t\t\tsecret: jsii.Boolean(false),\n\n\t\t\t// the properties below are optional\n\t\t\tdescription: jsii.String(\"description\"),\n\t\t\tqueryable: jsii.Boolean(false),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\tsettings: &settingsProperty{\n\t\tentityUrlTemplate: jsii.String(\"entityUrlTemplate\"),\n\t\texecutionUrlTemplate: jsii.String(\"executionUrlTemplate\"),\n\t\trevisionUrlTemplate: jsii.String(\"revisionUrlTemplate\"),\n\t\tthirdPartyConfigurationUrl: jsii.String(\"thirdPartyConfigurationUrl\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst cfnCustomActionType = new codepipeline.CfnCustomActionType(this, 'MyCfnCustomActionType', {\n  category: 'category',\n  inputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  outputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  provider: 'provider',\n  version: 'version',\n\n  // the properties below are optional\n  configurationProperties: [{\n    key: false,\n    name: 'name',\n    required: false,\n    secret: false,\n\n    // the properties below are optional\n    description: 'description',\n    queryable: false,\n    type: 'type',\n  }],\n  settings: {\n    entityUrlTemplate: 'entityUrlTemplate',\n    executionUrlTemplate: 'executionUrlTemplate',\n    revisionUrlTemplate: 'revisionUrlTemplate',\n    thirdPartyConfigurationUrl: 'thirdPartyConfigurationUrl',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnCustomActionType",
        "@aws-cdk/aws-codepipeline.CfnCustomActionTypeProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCustomActionType = new codepipeline.CfnCustomActionType(this, 'MyCfnCustomActionType', {\n  category: 'category',\n  inputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  outputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  provider: 'provider',\n  version: 'version',\n\n  // the properties below are optional\n  configurationProperties: [{\n    key: false,\n    name: 'name',\n    required: false,\n    secret: false,\n\n    // the properties below are optional\n    description: 'description',\n    queryable: false,\n    type: 'type',\n  }],\n  settings: {\n    entityUrlTemplate: 'entityUrlTemplate',\n    executionUrlTemplate: 'executionUrlTemplate',\n    revisionUrlTemplate: 'revisionUrlTemplate',\n    thirdPartyConfigurationUrl: 'thirdPartyConfigurationUrl',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 14,
        "75": 29,
        "91": 4,
        "104": 1,
        "192": 2,
        "193": 6,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 25,
        "290": 1
      },
      "fqnsFingerprint": "85c411b2713ffb25e98038afc283de298d0df287eca745ea92f353c09565be03"
    },
    "2336de53a20df6a2172d4dafdd2945fe697d247c149b39bdece8a8a8ee460ba1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\nartifact_details_property = codepipeline.CfnCustomActionType.ArtifactDetailsProperty(\n    maximum_count=123,\n    minimum_count=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nArtifactDetailsProperty artifactDetailsProperty = new ArtifactDetailsProperty {\n    MaximumCount = 123,\n    MinimumCount = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nArtifactDetailsProperty artifactDetailsProperty = ArtifactDetailsProperty.builder()\n        .maximumCount(123)\n        .minimumCount(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nartifactDetailsProperty := &artifactDetailsProperty{\n\tmaximumCount: jsii.Number(123),\n\tminimumCount: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst artifactDetailsProperty: codepipeline.CfnCustomActionType.ArtifactDetailsProperty = {\n  maximumCount: 123,\n  minimumCount: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.ArtifactDetailsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnCustomActionType.ArtifactDetailsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst artifactDetailsProperty: codepipeline.CfnCustomActionType.ArtifactDetailsProperty = {\n  maximumCount: 123,\n  minimumCount: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "dd7ccc06fd8bb47bf0b40ca523c20f0d35ba959924bd8cf3598b1f1ca3f3c076"
    },
    "02db359f7666ade75c78fb72c7aac765dc054ae45ed7e268c3cf3e42cee2d30d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\nconfiguration_properties_property = codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty(\n    key=False,\n    name=\"name\",\n    required=False,\n    secret=False,\n\n    # the properties below are optional\n    description=\"description\",\n    queryable=False,\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nConfigurationPropertiesProperty configurationPropertiesProperty = new ConfigurationPropertiesProperty {\n    Key = false,\n    Name = \"name\",\n    Required = false,\n    Secret = false,\n\n    // the properties below are optional\n    Description = \"description\",\n    Queryable = false,\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nConfigurationPropertiesProperty configurationPropertiesProperty = ConfigurationPropertiesProperty.builder()\n        .key(false)\n        .name(\"name\")\n        .required(false)\n        .secret(false)\n\n        // the properties below are optional\n        .description(\"description\")\n        .queryable(false)\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nconfigurationPropertiesProperty := &configurationPropertiesProperty{\n\tkey: jsii.Boolean(false),\n\tname: jsii.String(\"name\"),\n\trequired: jsii.Boolean(false),\n\tsecret: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tqueryable: jsii.Boolean(false),\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst configurationPropertiesProperty: codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty = {\n  key: false,\n  name: 'name',\n  required: false,\n  secret: false,\n\n  // the properties below are optional\n  description: 'description',\n  queryable: false,\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst configurationPropertiesProperty: codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty = {\n  key: false,\n  name: 'name',\n  required: false,\n  secret: false,\n\n  // the properties below are optional\n  description: 'description',\n  queryable: false,\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 12,
        "91": 4,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "bc440f0dec8437e8fed930f7decfa38637647cbdfadbaf3bf03014beff802bed"
    },
    "d8ee9dee8a92544a01dd04302fa33036415fd800ed4085baa0e4dddb6b629c0d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\nsettings_property = codepipeline.CfnCustomActionType.SettingsProperty(\n    entity_url_template=\"entityUrlTemplate\",\n    execution_url_template=\"executionUrlTemplate\",\n    revision_url_template=\"revisionUrlTemplate\",\n    third_party_configuration_url=\"thirdPartyConfigurationUrl\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nSettingsProperty settingsProperty = new SettingsProperty {\n    EntityUrlTemplate = \"entityUrlTemplate\",\n    ExecutionUrlTemplate = \"executionUrlTemplate\",\n    RevisionUrlTemplate = \"revisionUrlTemplate\",\n    ThirdPartyConfigurationUrl = \"thirdPartyConfigurationUrl\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nSettingsProperty settingsProperty = SettingsProperty.builder()\n        .entityUrlTemplate(\"entityUrlTemplate\")\n        .executionUrlTemplate(\"executionUrlTemplate\")\n        .revisionUrlTemplate(\"revisionUrlTemplate\")\n        .thirdPartyConfigurationUrl(\"thirdPartyConfigurationUrl\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nsettingsProperty := &settingsProperty{\n\tentityUrlTemplate: jsii.String(\"entityUrlTemplate\"),\n\texecutionUrlTemplate: jsii.String(\"executionUrlTemplate\"),\n\trevisionUrlTemplate: jsii.String(\"revisionUrlTemplate\"),\n\tthirdPartyConfigurationUrl: jsii.String(\"thirdPartyConfigurationUrl\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst settingsProperty: codepipeline.CfnCustomActionType.SettingsProperty = {\n  entityUrlTemplate: 'entityUrlTemplate',\n  executionUrlTemplate: 'executionUrlTemplate',\n  revisionUrlTemplate: 'revisionUrlTemplate',\n  thirdPartyConfigurationUrl: 'thirdPartyConfigurationUrl',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionType.SettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnCustomActionType.SettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst settingsProperty: codepipeline.CfnCustomActionType.SettingsProperty = {\n  entityUrlTemplate: 'entityUrlTemplate',\n  executionUrlTemplate: 'executionUrlTemplate',\n  revisionUrlTemplate: 'revisionUrlTemplate',\n  thirdPartyConfigurationUrl: 'thirdPartyConfigurationUrl',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "de0587af8d6f06cbf57441667a0d3b9cb4fde8d482c97ea28135f73d86e2a1de"
    },
    "9b7d92ff49288971b04e8f37b2388bc008c50d125ef647d79efab5537266715a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\ncfn_custom_action_type_props = codepipeline.CfnCustomActionTypeProps(\n    category=\"category\",\n    input_artifact_details=codepipeline.CfnCustomActionType.ArtifactDetailsProperty(\n        maximum_count=123,\n        minimum_count=123\n    ),\n    output_artifact_details=codepipeline.CfnCustomActionType.ArtifactDetailsProperty(\n        maximum_count=123,\n        minimum_count=123\n    ),\n    provider=\"provider\",\n    version=\"version\",\n\n    # the properties below are optional\n    configuration_properties=[codepipeline.CfnCustomActionType.ConfigurationPropertiesProperty(\n        key=False,\n        name=\"name\",\n        required=False,\n        secret=False,\n\n        # the properties below are optional\n        description=\"description\",\n        queryable=False,\n        type=\"type\"\n    )],\n    settings=codepipeline.CfnCustomActionType.SettingsProperty(\n        entity_url_template=\"entityUrlTemplate\",\n        execution_url_template=\"executionUrlTemplate\",\n        revision_url_template=\"revisionUrlTemplate\",\n        third_party_configuration_url=\"thirdPartyConfigurationUrl\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nCfnCustomActionTypeProps cfnCustomActionTypeProps = new CfnCustomActionTypeProps {\n    Category = \"category\",\n    InputArtifactDetails = new ArtifactDetailsProperty {\n        MaximumCount = 123,\n        MinimumCount = 123\n    },\n    OutputArtifactDetails = new ArtifactDetailsProperty {\n        MaximumCount = 123,\n        MinimumCount = 123\n    },\n    Provider = \"provider\",\n    Version = \"version\",\n\n    // the properties below are optional\n    ConfigurationProperties = new [] { new ConfigurationPropertiesProperty {\n        Key = false,\n        Name = \"name\",\n        Required = false,\n        Secret = false,\n\n        // the properties below are optional\n        Description = \"description\",\n        Queryable = false,\n        Type = \"type\"\n    } },\n    Settings = new SettingsProperty {\n        EntityUrlTemplate = \"entityUrlTemplate\",\n        ExecutionUrlTemplate = \"executionUrlTemplate\",\n        RevisionUrlTemplate = \"revisionUrlTemplate\",\n        ThirdPartyConfigurationUrl = \"thirdPartyConfigurationUrl\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nCfnCustomActionTypeProps cfnCustomActionTypeProps = CfnCustomActionTypeProps.builder()\n        .category(\"category\")\n        .inputArtifactDetails(ArtifactDetailsProperty.builder()\n                .maximumCount(123)\n                .minimumCount(123)\n                .build())\n        .outputArtifactDetails(ArtifactDetailsProperty.builder()\n                .maximumCount(123)\n                .minimumCount(123)\n                .build())\n        .provider(\"provider\")\n        .version(\"version\")\n\n        // the properties below are optional\n        .configurationProperties(List.of(ConfigurationPropertiesProperty.builder()\n                .key(false)\n                .name(\"name\")\n                .required(false)\n                .secret(false)\n\n                // the properties below are optional\n                .description(\"description\")\n                .queryable(false)\n                .type(\"type\")\n                .build()))\n        .settings(SettingsProperty.builder()\n                .entityUrlTemplate(\"entityUrlTemplate\")\n                .executionUrlTemplate(\"executionUrlTemplate\")\n                .revisionUrlTemplate(\"revisionUrlTemplate\")\n                .thirdPartyConfigurationUrl(\"thirdPartyConfigurationUrl\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\ncfnCustomActionTypeProps := &cfnCustomActionTypeProps{\n\tcategory: jsii.String(\"category\"),\n\tinputArtifactDetails: &artifactDetailsProperty{\n\t\tmaximumCount: jsii.Number(123),\n\t\tminimumCount: jsii.Number(123),\n\t},\n\toutputArtifactDetails: &artifactDetailsProperty{\n\t\tmaximumCount: jsii.Number(123),\n\t\tminimumCount: jsii.Number(123),\n\t},\n\tprovider: jsii.String(\"provider\"),\n\tversion: jsii.String(\"version\"),\n\n\t// the properties below are optional\n\tconfigurationProperties: []interface{}{\n\t\t&configurationPropertiesProperty{\n\t\t\tkey: jsii.Boolean(false),\n\t\t\tname: jsii.String(\"name\"),\n\t\t\trequired: jsii.Boolean(false),\n\t\t\tsecret: jsii.Boolean(false),\n\n\t\t\t// the properties below are optional\n\t\t\tdescription: jsii.String(\"description\"),\n\t\t\tqueryable: jsii.Boolean(false),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\tsettings: &settingsProperty{\n\t\tentityUrlTemplate: jsii.String(\"entityUrlTemplate\"),\n\t\texecutionUrlTemplate: jsii.String(\"executionUrlTemplate\"),\n\t\trevisionUrlTemplate: jsii.String(\"revisionUrlTemplate\"),\n\t\tthirdPartyConfigurationUrl: jsii.String(\"thirdPartyConfigurationUrl\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst cfnCustomActionTypeProps: codepipeline.CfnCustomActionTypeProps = {\n  category: 'category',\n  inputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  outputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  provider: 'provider',\n  version: 'version',\n\n  // the properties below are optional\n  configurationProperties: [{\n    key: false,\n    name: 'name',\n    required: false,\n    secret: false,\n\n    // the properties below are optional\n    description: 'description',\n    queryable: false,\n    type: 'type',\n  }],\n  settings: {\n    entityUrlTemplate: 'entityUrlTemplate',\n    executionUrlTemplate: 'executionUrlTemplate',\n    revisionUrlTemplate: 'revisionUrlTemplate',\n    thirdPartyConfigurationUrl: 'thirdPartyConfigurationUrl',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnCustomActionTypeProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnCustomActionTypeProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCustomActionTypeProps: codepipeline.CfnCustomActionTypeProps = {\n  category: 'category',\n  inputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  outputArtifactDetails: {\n    maximumCount: 123,\n    minimumCount: 123,\n  },\n  provider: 'provider',\n  version: 'version',\n\n  // the properties below are optional\n  configurationProperties: [{\n    key: false,\n    name: 'name',\n    required: false,\n    secret: false,\n\n    // the properties below are optional\n    description: 'description',\n    queryable: false,\n    type: 'type',\n  }],\n  settings: {\n    entityUrlTemplate: 'entityUrlTemplate',\n    executionUrlTemplate: 'executionUrlTemplate',\n    revisionUrlTemplate: 'revisionUrlTemplate',\n    thirdPartyConfigurationUrl: 'thirdPartyConfigurationUrl',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 13,
        "75": 29,
        "91": 4,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 25,
        "290": 1
      },
      "fqnsFingerprint": "8c0b1f266cf6a635143bf26073fa2265cd1a53c0536ef6970bf54519bdfaa099"
    },
    "bc29b268d14d3ad66dcf5ffa33e2f0af1f16c00181015607c5d1c7d87e6ad1e9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\n# configuration: Any\n\ncfn_pipeline = codepipeline.CfnPipeline(self, \"MyCfnPipeline\",\n    role_arn=\"roleArn\",\n    stages=[codepipeline.CfnPipeline.StageDeclarationProperty(\n        actions=[codepipeline.CfnPipeline.ActionDeclarationProperty(\n            action_type_id=codepipeline.CfnPipeline.ActionTypeIdProperty(\n                category=\"category\",\n                owner=\"owner\",\n                provider=\"provider\",\n                version=\"version\"\n            ),\n            name=\"name\",\n\n            # the properties below are optional\n            configuration=configuration,\n            input_artifacts=[codepipeline.CfnPipeline.InputArtifactProperty(\n                name=\"name\"\n            )],\n            namespace=\"namespace\",\n            output_artifacts=[codepipeline.CfnPipeline.OutputArtifactProperty(\n                name=\"name\"\n            )],\n            region=\"region\",\n            role_arn=\"roleArn\",\n            run_order=123\n        )],\n        name=\"name\",\n\n        # the properties below are optional\n        blockers=[codepipeline.CfnPipeline.BlockerDeclarationProperty(\n            name=\"name\",\n            type=\"type\"\n        )]\n    )],\n\n    # the properties below are optional\n    artifact_store=codepipeline.CfnPipeline.ArtifactStoreProperty(\n        location=\"location\",\n        type=\"type\",\n\n        # the properties below are optional\n        encryption_key=codepipeline.CfnPipeline.EncryptionKeyProperty(\n            id=\"id\",\n            type=\"type\"\n        )\n    ),\n    artifact_stores=[codepipeline.CfnPipeline.ArtifactStoreMapProperty(\n        artifact_store=codepipeline.CfnPipeline.ArtifactStoreProperty(\n            location=\"location\",\n            type=\"type\",\n\n            # the properties below are optional\n            encryption_key=codepipeline.CfnPipeline.EncryptionKeyProperty(\n                id=\"id\",\n                type=\"type\"\n            )\n        ),\n        region=\"region\"\n    )],\n    disable_inbound_stage_transitions=[codepipeline.CfnPipeline.StageTransitionProperty(\n        reason=\"reason\",\n        stage_name=\"stageName\"\n    )],\n    name=\"name\",\n    restart_execution_on_update=False,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nvar configuration;\n\nCfnPipeline cfnPipeline = new CfnPipeline(this, \"MyCfnPipeline\", new CfnPipelineProps {\n    RoleArn = \"roleArn\",\n    Stages = new [] { new StageDeclarationProperty {\n        Actions = new [] { new ActionDeclarationProperty {\n            ActionTypeId = new ActionTypeIdProperty {\n                Category = \"category\",\n                Owner = \"owner\",\n                Provider = \"provider\",\n                Version = \"version\"\n            },\n            Name = \"name\",\n\n            // the properties below are optional\n            Configuration = configuration,\n            InputArtifacts = new [] { new InputArtifactProperty {\n                Name = \"name\"\n            } },\n            Namespace = \"namespace\",\n            OutputArtifacts = new [] { new OutputArtifactProperty {\n                Name = \"name\"\n            } },\n            Region = \"region\",\n            RoleArn = \"roleArn\",\n            RunOrder = 123\n        } },\n        Name = \"name\",\n\n        // the properties below are optional\n        Blockers = new [] { new BlockerDeclarationProperty {\n            Name = \"name\",\n            Type = \"type\"\n        } }\n    } },\n\n    // the properties below are optional\n    ArtifactStore = new ArtifactStoreProperty {\n        Location = \"location\",\n        Type = \"type\",\n\n        // the properties below are optional\n        EncryptionKey = new EncryptionKeyProperty {\n            Id = \"id\",\n            Type = \"type\"\n        }\n    },\n    ArtifactStores = new [] { new ArtifactStoreMapProperty {\n        ArtifactStore = new ArtifactStoreProperty {\n            Location = \"location\",\n            Type = \"type\",\n\n            // the properties below are optional\n            EncryptionKey = new EncryptionKeyProperty {\n                Id = \"id\",\n                Type = \"type\"\n            }\n        },\n        Region = \"region\"\n    } },\n    DisableInboundStageTransitions = new [] { new StageTransitionProperty {\n        Reason = \"reason\",\n        StageName = \"stageName\"\n    } },\n    Name = \"name\",\n    RestartExecutionOnUpdate = false,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nObject configuration;\n\nCfnPipeline cfnPipeline = CfnPipeline.Builder.create(this, \"MyCfnPipeline\")\n        .roleArn(\"roleArn\")\n        .stages(List.of(StageDeclarationProperty.builder()\n                .actions(List.of(ActionDeclarationProperty.builder()\n                        .actionTypeId(ActionTypeIdProperty.builder()\n                                .category(\"category\")\n                                .owner(\"owner\")\n                                .provider(\"provider\")\n                                .version(\"version\")\n                                .build())\n                        .name(\"name\")\n\n                        // the properties below are optional\n                        .configuration(configuration)\n                        .inputArtifacts(List.of(InputArtifactProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .namespace(\"namespace\")\n                        .outputArtifacts(List.of(OutputArtifactProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .region(\"region\")\n                        .roleArn(\"roleArn\")\n                        .runOrder(123)\n                        .build()))\n                .name(\"name\")\n\n                // the properties below are optional\n                .blockers(List.of(BlockerDeclarationProperty.builder()\n                        .name(\"name\")\n                        .type(\"type\")\n                        .build()))\n                .build()))\n\n        // the properties below are optional\n        .artifactStore(ArtifactStoreProperty.builder()\n                .location(\"location\")\n                .type(\"type\")\n\n                // the properties below are optional\n                .encryptionKey(EncryptionKeyProperty.builder()\n                        .id(\"id\")\n                        .type(\"type\")\n                        .build())\n                .build())\n        .artifactStores(List.of(ArtifactStoreMapProperty.builder()\n                .artifactStore(ArtifactStoreProperty.builder()\n                        .location(\"location\")\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .encryptionKey(EncryptionKeyProperty.builder()\n                                .id(\"id\")\n                                .type(\"type\")\n                                .build())\n                        .build())\n                .region(\"region\")\n                .build()))\n        .disableInboundStageTransitions(List.of(StageTransitionProperty.builder()\n                .reason(\"reason\")\n                .stageName(\"stageName\")\n                .build()))\n        .name(\"name\")\n        .restartExecutionOnUpdate(false)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nvar configuration interface{}\n\ncfnPipeline := codepipeline.NewCfnPipeline(this, jsii.String(\"MyCfnPipeline\"), &cfnPipelineProps{\n\troleArn: jsii.String(\"roleArn\"),\n\tstages: []interface{}{\n\t\t&stageDeclarationProperty{\n\t\t\tactions: []interface{}{\n\t\t\t\t&actionDeclarationProperty{\n\t\t\t\t\tactionTypeId: &actionTypeIdProperty{\n\t\t\t\t\t\tcategory: jsii.String(\"category\"),\n\t\t\t\t\t\towner: jsii.String(\"owner\"),\n\t\t\t\t\t\tprovider: jsii.String(\"provider\"),\n\t\t\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t\t\t},\n\t\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tconfiguration: configuration,\n\t\t\t\t\tinputArtifacts: []interface{}{\n\t\t\t\t\t\t&inputArtifactProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\t\t\t\t\toutputArtifacts: []interface{}{\n\t\t\t\t\t\t&outputArtifactProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tregion: jsii.String(\"region\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\trunOrder: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t// the properties below are optional\n\t\t\tblockers: []interface{}{\n\t\t\t\t&blockerDeclarationProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tartifactStore: &artifactStoreProperty{\n\t\tlocation: jsii.String(\"location\"),\n\t\ttype: jsii.String(\"type\"),\n\n\t\t// the properties below are optional\n\t\tencryptionKey: &encryptionKeyProperty{\n\t\t\tid: jsii.String(\"id\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\tartifactStores: []interface{}{\n\t\t&artifactStoreMapProperty{\n\t\t\tartifactStore: &artifactStoreProperty{\n\t\t\t\tlocation: jsii.String(\"location\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tencryptionKey: &encryptionKeyProperty{\n\t\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tregion: jsii.String(\"region\"),\n\t\t},\n\t},\n\tdisableInboundStageTransitions: []interface{}{\n\t\t&stageTransitionProperty{\n\t\t\treason: jsii.String(\"reason\"),\n\t\t\tstageName: jsii.String(\"stageName\"),\n\t\t},\n\t},\n\tname: jsii.String(\"name\"),\n\trestartExecutionOnUpdate: jsii.Boolean(false),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\nconst cfnPipeline = new codepipeline.CfnPipeline(this, 'MyCfnPipeline', {\n  roleArn: 'roleArn',\n  stages: [{\n    actions: [{\n      actionTypeId: {\n        category: 'category',\n        owner: 'owner',\n        provider: 'provider',\n        version: 'version',\n      },\n      name: 'name',\n\n      // the properties below are optional\n      configuration: configuration,\n      inputArtifacts: [{\n        name: 'name',\n      }],\n      namespace: 'namespace',\n      outputArtifacts: [{\n        name: 'name',\n      }],\n      region: 'region',\n      roleArn: 'roleArn',\n      runOrder: 123,\n    }],\n    name: 'name',\n\n    // the properties below are optional\n    blockers: [{\n      name: 'name',\n      type: 'type',\n    }],\n  }],\n\n  // the properties below are optional\n  artifactStore: {\n    location: 'location',\n    type: 'type',\n\n    // the properties below are optional\n    encryptionKey: {\n      id: 'id',\n      type: 'type',\n    },\n  },\n  artifactStores: [{\n    artifactStore: {\n      location: 'location',\n      type: 'type',\n\n      // the properties below are optional\n      encryptionKey: {\n        id: 'id',\n        type: 'type',\n      },\n    },\n    region: 'region',\n  }],\n  disableInboundStageTransitions: [{\n    reason: 'reason',\n    stageName: 'stageName',\n  }],\n  name: 'name',\n  restartExecutionOnUpdate: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline",
        "@aws-cdk/aws-codepipeline.CfnPipelineProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPipeline = new codepipeline.CfnPipeline(this, 'MyCfnPipeline', {\n  roleArn: 'roleArn',\n  stages: [{\n    actions: [{\n      actionTypeId: {\n        category: 'category',\n        owner: 'owner',\n        provider: 'provider',\n        version: 'version',\n      },\n      name: 'name',\n\n      // the properties below are optional\n      configuration: configuration,\n      inputArtifacts: [{\n        name: 'name',\n      }],\n      namespace: 'namespace',\n      outputArtifacts: [{\n        name: 'name',\n      }],\n      region: 'region',\n      roleArn: 'roleArn',\n      runOrder: 123,\n    }],\n    name: 'name',\n\n    // the properties below are optional\n    blockers: [{\n      name: 'name',\n      type: 'type',\n    }],\n  }],\n\n  // the properties below are optional\n  artifactStore: {\n    location: 'location',\n    type: 'type',\n\n    // the properties below are optional\n    encryptionKey: {\n      id: 'id',\n      type: 'type',\n    },\n  },\n  artifactStores: [{\n    artifactStore: {\n      location: 'location',\n      type: 'type',\n\n      // the properties below are optional\n      encryptionKey: {\n        id: 'id',\n        type: 'type',\n      },\n    },\n    region: 'region',\n  }],\n  disableInboundStageTransitions: [{\n    reason: 'reason',\n    stageName: 'stageName',\n  }],\n  name: 'name',\n  restartExecutionOnUpdate: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 30,
        "75": 50,
        "91": 1,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 8,
        "193": 14,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 44,
        "290": 1
      },
      "fqnsFingerprint": "f5a91dec9c5768ba7505742aa20d2bce9364c71120b431c9e6fbe249b0e6c41b"
    },
    "cc995fece7d3636c5374d22789779743cd5a83d8f9c4f289f15eea114c76bfbf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\n# configuration: Any\n\naction_declaration_property = codepipeline.CfnPipeline.ActionDeclarationProperty(\n    action_type_id=codepipeline.CfnPipeline.ActionTypeIdProperty(\n        category=\"category\",\n        owner=\"owner\",\n        provider=\"provider\",\n        version=\"version\"\n    ),\n    name=\"name\",\n\n    # the properties below are optional\n    configuration=configuration,\n    input_artifacts=[codepipeline.CfnPipeline.InputArtifactProperty(\n        name=\"name\"\n    )],\n    namespace=\"namespace\",\n    output_artifacts=[codepipeline.CfnPipeline.OutputArtifactProperty(\n        name=\"name\"\n    )],\n    region=\"region\",\n    role_arn=\"roleArn\",\n    run_order=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nvar configuration;\n\nActionDeclarationProperty actionDeclarationProperty = new ActionDeclarationProperty {\n    ActionTypeId = new ActionTypeIdProperty {\n        Category = \"category\",\n        Owner = \"owner\",\n        Provider = \"provider\",\n        Version = \"version\"\n    },\n    Name = \"name\",\n\n    // the properties below are optional\n    Configuration = configuration,\n    InputArtifacts = new [] { new InputArtifactProperty {\n        Name = \"name\"\n    } },\n    Namespace = \"namespace\",\n    OutputArtifacts = new [] { new OutputArtifactProperty {\n        Name = \"name\"\n    } },\n    Region = \"region\",\n    RoleArn = \"roleArn\",\n    RunOrder = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nObject configuration;\n\nActionDeclarationProperty actionDeclarationProperty = ActionDeclarationProperty.builder()\n        .actionTypeId(ActionTypeIdProperty.builder()\n                .category(\"category\")\n                .owner(\"owner\")\n                .provider(\"provider\")\n                .version(\"version\")\n                .build())\n        .name(\"name\")\n\n        // the properties below are optional\n        .configuration(configuration)\n        .inputArtifacts(List.of(InputArtifactProperty.builder()\n                .name(\"name\")\n                .build()))\n        .namespace(\"namespace\")\n        .outputArtifacts(List.of(OutputArtifactProperty.builder()\n                .name(\"name\")\n                .build()))\n        .region(\"region\")\n        .roleArn(\"roleArn\")\n        .runOrder(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nvar configuration interface{}\n\nactionDeclarationProperty := &actionDeclarationProperty{\n\tactionTypeId: &actionTypeIdProperty{\n\t\tcategory: jsii.String(\"category\"),\n\t\towner: jsii.String(\"owner\"),\n\t\tprovider: jsii.String(\"provider\"),\n\t\tversion: jsii.String(\"version\"),\n\t},\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tconfiguration: configuration,\n\tinputArtifacts: []interface{}{\n\t\t&inputArtifactProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t},\n\tnamespace: jsii.String(\"namespace\"),\n\toutputArtifacts: []interface{}{\n\t\t&outputArtifactProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t},\n\tregion: jsii.String(\"region\"),\n\troleArn: jsii.String(\"roleArn\"),\n\trunOrder: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\nconst actionDeclarationProperty: codepipeline.CfnPipeline.ActionDeclarationProperty = {\n  actionTypeId: {\n    category: 'category',\n    owner: 'owner',\n    provider: 'provider',\n    version: 'version',\n  },\n  name: 'name',\n\n  // the properties below are optional\n  configuration: configuration,\n  inputArtifacts: [{\n    name: 'name',\n  }],\n  namespace: 'namespace',\n  outputArtifacts: [{\n    name: 'name',\n  }],\n  region: 'region',\n  roleArn: 'roleArn',\n  runOrder: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ActionDeclarationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline.ActionDeclarationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionDeclarationProperty: codepipeline.CfnPipeline.ActionDeclarationProperty = {\n  actionTypeId: {\n    category: 'category',\n    owner: 'owner',\n    provider: 'provider',\n    version: 'version',\n  },\n  name: 'name',\n\n  // the properties below are optional\n  configuration: configuration,\n  inputArtifacts: [{\n    name: 'name',\n  }],\n  namespace: 'namespace',\n  outputArtifacts: [{\n    name: 'name',\n  }],\n  region: 'region',\n  roleArn: 'roleArn',\n  runOrder: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 11,
        "75": 22,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 4,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "3e5e7e959a8703f410ff8515d9110433160f161acf19cd0d6f0f3b58d7300354"
    },
    "cd179e9e70dde90e4b9c4731c99e92507bf7cda8b4045c5ed29ce123d29c500f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\naction_type_id_property = codepipeline.CfnPipeline.ActionTypeIdProperty(\n    category=\"category\",\n    owner=\"owner\",\n    provider=\"provider\",\n    version=\"version\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nActionTypeIdProperty actionTypeIdProperty = new ActionTypeIdProperty {\n    Category = \"category\",\n    Owner = \"owner\",\n    Provider = \"provider\",\n    Version = \"version\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nActionTypeIdProperty actionTypeIdProperty = ActionTypeIdProperty.builder()\n        .category(\"category\")\n        .owner(\"owner\")\n        .provider(\"provider\")\n        .version(\"version\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nactionTypeIdProperty := &actionTypeIdProperty{\n\tcategory: jsii.String(\"category\"),\n\towner: jsii.String(\"owner\"),\n\tprovider: jsii.String(\"provider\"),\n\tversion: jsii.String(\"version\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst actionTypeIdProperty: codepipeline.CfnPipeline.ActionTypeIdProperty = {\n  category: 'category',\n  owner: 'owner',\n  provider: 'provider',\n  version: 'version',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ActionTypeIdProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline.ActionTypeIdProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionTypeIdProperty: codepipeline.CfnPipeline.ActionTypeIdProperty = {\n  category: 'category',\n  owner: 'owner',\n  provider: 'provider',\n  version: 'version',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "320a823c5b9c1c5d54ae37d71d72b26bd25106caab6d9fa4cc647506f2e46f16"
    },
    "16a538e5bccf629ef33803f1f15351b291c416de38d3ea95f40258a342defbf9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\nartifact_store_map_property = codepipeline.CfnPipeline.ArtifactStoreMapProperty(\n    artifact_store=codepipeline.CfnPipeline.ArtifactStoreProperty(\n        location=\"location\",\n        type=\"type\",\n\n        # the properties below are optional\n        encryption_key=codepipeline.CfnPipeline.EncryptionKeyProperty(\n            id=\"id\",\n            type=\"type\"\n        )\n    ),\n    region=\"region\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nArtifactStoreMapProperty artifactStoreMapProperty = new ArtifactStoreMapProperty {\n    ArtifactStore = new ArtifactStoreProperty {\n        Location = \"location\",\n        Type = \"type\",\n\n        // the properties below are optional\n        EncryptionKey = new EncryptionKeyProperty {\n            Id = \"id\",\n            Type = \"type\"\n        }\n    },\n    Region = \"region\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nArtifactStoreMapProperty artifactStoreMapProperty = ArtifactStoreMapProperty.builder()\n        .artifactStore(ArtifactStoreProperty.builder()\n                .location(\"location\")\n                .type(\"type\")\n\n                // the properties below are optional\n                .encryptionKey(EncryptionKeyProperty.builder()\n                        .id(\"id\")\n                        .type(\"type\")\n                        .build())\n                .build())\n        .region(\"region\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nartifactStoreMapProperty := &artifactStoreMapProperty{\n\tartifactStore: &artifactStoreProperty{\n\t\tlocation: jsii.String(\"location\"),\n\t\ttype: jsii.String(\"type\"),\n\n\t\t// the properties below are optional\n\t\tencryptionKey: &encryptionKeyProperty{\n\t\t\tid: jsii.String(\"id\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\tregion: jsii.String(\"region\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst artifactStoreMapProperty: codepipeline.CfnPipeline.ArtifactStoreMapProperty = {\n  artifactStore: {\n    location: 'location',\n    type: 'type',\n\n    // the properties below are optional\n    encryptionKey: {\n      id: 'id',\n      type: 'type',\n    },\n  },\n  region: 'region',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreMapProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreMapProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst artifactStoreMapProperty: codepipeline.CfnPipeline.ArtifactStoreMapProperty = {\n  artifactStore: {\n    location: 'location',\n    type: 'type',\n\n    // the properties below are optional\n    encryptionKey: {\n      id: 'id',\n      type: 'type',\n    },\n  },\n  region: 'region',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 12,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "d6737a97bd223401ca30c63b7a8bcf0e022788b30abe667486ad20f904670a63"
    },
    "72cbe21c586c63497eedee8693b1470ac185884ade2bc342a0b7a4e1e6b68c09": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\nartifact_store_property = codepipeline.CfnPipeline.ArtifactStoreProperty(\n    location=\"location\",\n    type=\"type\",\n\n    # the properties below are optional\n    encryption_key=codepipeline.CfnPipeline.EncryptionKeyProperty(\n        id=\"id\",\n        type=\"type\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nArtifactStoreProperty artifactStoreProperty = new ArtifactStoreProperty {\n    Location = \"location\",\n    Type = \"type\",\n\n    // the properties below are optional\n    EncryptionKey = new EncryptionKeyProperty {\n        Id = \"id\",\n        Type = \"type\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nArtifactStoreProperty artifactStoreProperty = ArtifactStoreProperty.builder()\n        .location(\"location\")\n        .type(\"type\")\n\n        // the properties below are optional\n        .encryptionKey(EncryptionKeyProperty.builder()\n                .id(\"id\")\n                .type(\"type\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nartifactStoreProperty := &artifactStoreProperty{\n\tlocation: jsii.String(\"location\"),\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tencryptionKey: &encryptionKeyProperty{\n\t\tid: jsii.String(\"id\"),\n\t\ttype: jsii.String(\"type\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst artifactStoreProperty: codepipeline.CfnPipeline.ArtifactStoreProperty = {\n  location: 'location',\n  type: 'type',\n\n  // the properties below are optional\n  encryptionKey: {\n    id: 'id',\n    type: 'type',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline.ArtifactStoreProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst artifactStoreProperty: codepipeline.CfnPipeline.ArtifactStoreProperty = {\n  location: 'location',\n  type: 'type',\n\n  // the properties below are optional\n  encryptionKey: {\n    id: 'id',\n    type: 'type',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "0dbde1d0f36293c66b1d30f6b17a5eddb0ae35f42eed7e6114d9e02b810a6aab"
    },
    "c5bdb5745bacf957ea0cdb1d3d77b818117c74d1b51a00f21fbeaa950b99f016": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\nblocker_declaration_property = codepipeline.CfnPipeline.BlockerDeclarationProperty(\n    name=\"name\",\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nBlockerDeclarationProperty blockerDeclarationProperty = new BlockerDeclarationProperty {\n    Name = \"name\",\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nBlockerDeclarationProperty blockerDeclarationProperty = BlockerDeclarationProperty.builder()\n        .name(\"name\")\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nblockerDeclarationProperty := &blockerDeclarationProperty{\n\tname: jsii.String(\"name\"),\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst blockerDeclarationProperty: codepipeline.CfnPipeline.BlockerDeclarationProperty = {\n  name: 'name',\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.BlockerDeclarationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline.BlockerDeclarationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst blockerDeclarationProperty: codepipeline.CfnPipeline.BlockerDeclarationProperty = {\n  name: 'name',\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1e4f15435c3abae8dd02e0898da66eb0ee55b3115cd97d89b933d17276ef2a9c"
    },
    "31829d3b2b37310ac8bbdfe851be4bc27b034ccfb050a045198e46fac6dc3a47": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\nencryption_key_property = codepipeline.CfnPipeline.EncryptionKeyProperty(\n    id=\"id\",\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nEncryptionKeyProperty encryptionKeyProperty = new EncryptionKeyProperty {\n    Id = \"id\",\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nEncryptionKeyProperty encryptionKeyProperty = EncryptionKeyProperty.builder()\n        .id(\"id\")\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nencryptionKeyProperty := &encryptionKeyProperty{\n\tid: jsii.String(\"id\"),\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst encryptionKeyProperty: codepipeline.CfnPipeline.EncryptionKeyProperty = {\n  id: 'id',\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.EncryptionKeyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline.EncryptionKeyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst encryptionKeyProperty: codepipeline.CfnPipeline.EncryptionKeyProperty = {\n  id: 'id',\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "6453673946feaffa2b3e8dd77006e9517f67ec2ce37c5835f844e4b0a15c4a0a"
    },
    "7d729a193790e67b5ad745b7a87fd5095a52dc07c0289845ddf417edee6bc8d2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\ninput_artifact_property = codepipeline.CfnPipeline.InputArtifactProperty(\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nInputArtifactProperty inputArtifactProperty = new InputArtifactProperty {\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nInputArtifactProperty inputArtifactProperty = InputArtifactProperty.builder()\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\ninputArtifactProperty := &inputArtifactProperty{\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst inputArtifactProperty: codepipeline.CfnPipeline.InputArtifactProperty = {\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.InputArtifactProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline.InputArtifactProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputArtifactProperty: codepipeline.CfnPipeline.InputArtifactProperty = {\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "969b2d59934111899a0f98ec78d66aff9b0581ada8137e8ccb66bdfd89cdc331"
    },
    "f866b45b92aa8df6cab5ae604bb3c0f03cbb66d09b916ad795baf212d810f737": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\noutput_artifact_property = codepipeline.CfnPipeline.OutputArtifactProperty(\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nOutputArtifactProperty outputArtifactProperty = new OutputArtifactProperty {\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nOutputArtifactProperty outputArtifactProperty = OutputArtifactProperty.builder()\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\noutputArtifactProperty := &outputArtifactProperty{\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst outputArtifactProperty: codepipeline.CfnPipeline.OutputArtifactProperty = {\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.OutputArtifactProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline.OutputArtifactProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst outputArtifactProperty: codepipeline.CfnPipeline.OutputArtifactProperty = {\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "872014b340cae94936de4e485ed67ef86a8666b24c07069a5eeab07dcff86ffb"
    },
    "ac7d85e43e5015747161e399514722403b11028c61630e86eed7178a0e6a7a05": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\n# configuration: Any\n\nstage_declaration_property = codepipeline.CfnPipeline.StageDeclarationProperty(\n    actions=[codepipeline.CfnPipeline.ActionDeclarationProperty(\n        action_type_id=codepipeline.CfnPipeline.ActionTypeIdProperty(\n            category=\"category\",\n            owner=\"owner\",\n            provider=\"provider\",\n            version=\"version\"\n        ),\n        name=\"name\",\n\n        # the properties below are optional\n        configuration=configuration,\n        input_artifacts=[codepipeline.CfnPipeline.InputArtifactProperty(\n            name=\"name\"\n        )],\n        namespace=\"namespace\",\n        output_artifacts=[codepipeline.CfnPipeline.OutputArtifactProperty(\n            name=\"name\"\n        )],\n        region=\"region\",\n        role_arn=\"roleArn\",\n        run_order=123\n    )],\n    name=\"name\",\n\n    # the properties below are optional\n    blockers=[codepipeline.CfnPipeline.BlockerDeclarationProperty(\n        name=\"name\",\n        type=\"type\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nvar configuration;\n\nStageDeclarationProperty stageDeclarationProperty = new StageDeclarationProperty {\n    Actions = new [] { new ActionDeclarationProperty {\n        ActionTypeId = new ActionTypeIdProperty {\n            Category = \"category\",\n            Owner = \"owner\",\n            Provider = \"provider\",\n            Version = \"version\"\n        },\n        Name = \"name\",\n\n        // the properties below are optional\n        Configuration = configuration,\n        InputArtifacts = new [] { new InputArtifactProperty {\n            Name = \"name\"\n        } },\n        Namespace = \"namespace\",\n        OutputArtifacts = new [] { new OutputArtifactProperty {\n            Name = \"name\"\n        } },\n        Region = \"region\",\n        RoleArn = \"roleArn\",\n        RunOrder = 123\n    } },\n    Name = \"name\",\n\n    // the properties below are optional\n    Blockers = new [] { new BlockerDeclarationProperty {\n        Name = \"name\",\n        Type = \"type\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nObject configuration;\n\nStageDeclarationProperty stageDeclarationProperty = StageDeclarationProperty.builder()\n        .actions(List.of(ActionDeclarationProperty.builder()\n                .actionTypeId(ActionTypeIdProperty.builder()\n                        .category(\"category\")\n                        .owner(\"owner\")\n                        .provider(\"provider\")\n                        .version(\"version\")\n                        .build())\n                .name(\"name\")\n\n                // the properties below are optional\n                .configuration(configuration)\n                .inputArtifacts(List.of(InputArtifactProperty.builder()\n                        .name(\"name\")\n                        .build()))\n                .namespace(\"namespace\")\n                .outputArtifacts(List.of(OutputArtifactProperty.builder()\n                        .name(\"name\")\n                        .build()))\n                .region(\"region\")\n                .roleArn(\"roleArn\")\n                .runOrder(123)\n                .build()))\n        .name(\"name\")\n\n        // the properties below are optional\n        .blockers(List.of(BlockerDeclarationProperty.builder()\n                .name(\"name\")\n                .type(\"type\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nvar configuration interface{}\n\nstageDeclarationProperty := &stageDeclarationProperty{\n\tactions: []interface{}{\n\t\t&actionDeclarationProperty{\n\t\t\tactionTypeId: &actionTypeIdProperty{\n\t\t\t\tcategory: jsii.String(\"category\"),\n\t\t\t\towner: jsii.String(\"owner\"),\n\t\t\t\tprovider: jsii.String(\"provider\"),\n\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t},\n\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t// the properties below are optional\n\t\t\tconfiguration: configuration,\n\t\t\tinputArtifacts: []interface{}{\n\t\t\t\t&inputArtifactProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tnamespace: jsii.String(\"namespace\"),\n\t\t\toutputArtifacts: []interface{}{\n\t\t\t\t&outputArtifactProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tregion: jsii.String(\"region\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\trunOrder: jsii.Number(123),\n\t\t},\n\t},\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tblockers: []interface{}{\n\t\t&blockerDeclarationProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\nconst stageDeclarationProperty: codepipeline.CfnPipeline.StageDeclarationProperty = {\n  actions: [{\n    actionTypeId: {\n      category: 'category',\n      owner: 'owner',\n      provider: 'provider',\n      version: 'version',\n    },\n    name: 'name',\n\n    // the properties below are optional\n    configuration: configuration,\n    inputArtifacts: [{\n      name: 'name',\n    }],\n    namespace: 'namespace',\n    outputArtifacts: [{\n      name: 'name',\n    }],\n    region: 'region',\n    roleArn: 'roleArn',\n    runOrder: 123,\n  }],\n  name: 'name',\n\n  // the properties below are optional\n  blockers: [{\n    name: 'name',\n    type: 'type',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.StageDeclarationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline.StageDeclarationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stageDeclarationProperty: codepipeline.CfnPipeline.StageDeclarationProperty = {\n  actions: [{\n    actionTypeId: {\n      category: 'category',\n      owner: 'owner',\n      provider: 'provider',\n      version: 'version',\n    },\n    name: 'name',\n\n    // the properties below are optional\n    configuration: configuration,\n    inputArtifacts: [{\n      name: 'name',\n    }],\n    namespace: 'namespace',\n    outputArtifacts: [{\n      name: 'name',\n    }],\n    region: 'region',\n    roleArn: 'roleArn',\n    runOrder: 123,\n  }],\n  name: 'name',\n\n  // the properties below are optional\n  blockers: [{\n    name: 'name',\n    type: 'type',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 14,
        "75": 27,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 6,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 20,
        "290": 1
      },
      "fqnsFingerprint": "cc946c4967fea97048b2bd7776417dc8c26398464b07c16a32c0fcea3b889b1d"
    },
    "6a13b094c8355515b0fde1b5c853f24667497db6fe17338f5a87c32a061aa420": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\nstage_transition_property = codepipeline.CfnPipeline.StageTransitionProperty(\n    reason=\"reason\",\n    stage_name=\"stageName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nStageTransitionProperty stageTransitionProperty = new StageTransitionProperty {\n    Reason = \"reason\",\n    StageName = \"stageName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nStageTransitionProperty stageTransitionProperty = StageTransitionProperty.builder()\n        .reason(\"reason\")\n        .stageName(\"stageName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nstageTransitionProperty := &stageTransitionProperty{\n\treason: jsii.String(\"reason\"),\n\tstageName: jsii.String(\"stageName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst stageTransitionProperty: codepipeline.CfnPipeline.StageTransitionProperty = {\n  reason: 'reason',\n  stageName: 'stageName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline.StageTransitionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipeline.StageTransitionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stageTransitionProperty: codepipeline.CfnPipeline.StageTransitionProperty = {\n  reason: 'reason',\n  stageName: 'stageName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "c89158f362cb69f90fec320c18e0481111be215a5af5384e87fe401007bb100f"
    },
    "6b96348db2ce23014bbd8ea86c3390fb1e1220507f35d659bcc8bd680f9a23e5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\n# configuration: Any\n\ncfn_pipeline_props = codepipeline.CfnPipelineProps(\n    role_arn=\"roleArn\",\n    stages=[codepipeline.CfnPipeline.StageDeclarationProperty(\n        actions=[codepipeline.CfnPipeline.ActionDeclarationProperty(\n            action_type_id=codepipeline.CfnPipeline.ActionTypeIdProperty(\n                category=\"category\",\n                owner=\"owner\",\n                provider=\"provider\",\n                version=\"version\"\n            ),\n            name=\"name\",\n\n            # the properties below are optional\n            configuration=configuration,\n            input_artifacts=[codepipeline.CfnPipeline.InputArtifactProperty(\n                name=\"name\"\n            )],\n            namespace=\"namespace\",\n            output_artifacts=[codepipeline.CfnPipeline.OutputArtifactProperty(\n                name=\"name\"\n            )],\n            region=\"region\",\n            role_arn=\"roleArn\",\n            run_order=123\n        )],\n        name=\"name\",\n\n        # the properties below are optional\n        blockers=[codepipeline.CfnPipeline.BlockerDeclarationProperty(\n            name=\"name\",\n            type=\"type\"\n        )]\n    )],\n\n    # the properties below are optional\n    artifact_store=codepipeline.CfnPipeline.ArtifactStoreProperty(\n        location=\"location\",\n        type=\"type\",\n\n        # the properties below are optional\n        encryption_key=codepipeline.CfnPipeline.EncryptionKeyProperty(\n            id=\"id\",\n            type=\"type\"\n        )\n    ),\n    artifact_stores=[codepipeline.CfnPipeline.ArtifactStoreMapProperty(\n        artifact_store=codepipeline.CfnPipeline.ArtifactStoreProperty(\n            location=\"location\",\n            type=\"type\",\n\n            # the properties below are optional\n            encryption_key=codepipeline.CfnPipeline.EncryptionKeyProperty(\n                id=\"id\",\n                type=\"type\"\n            )\n        ),\n        region=\"region\"\n    )],\n    disable_inbound_stage_transitions=[codepipeline.CfnPipeline.StageTransitionProperty(\n        reason=\"reason\",\n        stage_name=\"stageName\"\n    )],\n    name=\"name\",\n    restart_execution_on_update=False,\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nvar configuration;\n\nCfnPipelineProps cfnPipelineProps = new CfnPipelineProps {\n    RoleArn = \"roleArn\",\n    Stages = new [] { new StageDeclarationProperty {\n        Actions = new [] { new ActionDeclarationProperty {\n            ActionTypeId = new ActionTypeIdProperty {\n                Category = \"category\",\n                Owner = \"owner\",\n                Provider = \"provider\",\n                Version = \"version\"\n            },\n            Name = \"name\",\n\n            // the properties below are optional\n            Configuration = configuration,\n            InputArtifacts = new [] { new InputArtifactProperty {\n                Name = \"name\"\n            } },\n            Namespace = \"namespace\",\n            OutputArtifacts = new [] { new OutputArtifactProperty {\n                Name = \"name\"\n            } },\n            Region = \"region\",\n            RoleArn = \"roleArn\",\n            RunOrder = 123\n        } },\n        Name = \"name\",\n\n        // the properties below are optional\n        Blockers = new [] { new BlockerDeclarationProperty {\n            Name = \"name\",\n            Type = \"type\"\n        } }\n    } },\n\n    // the properties below are optional\n    ArtifactStore = new ArtifactStoreProperty {\n        Location = \"location\",\n        Type = \"type\",\n\n        // the properties below are optional\n        EncryptionKey = new EncryptionKeyProperty {\n            Id = \"id\",\n            Type = \"type\"\n        }\n    },\n    ArtifactStores = new [] { new ArtifactStoreMapProperty {\n        ArtifactStore = new ArtifactStoreProperty {\n            Location = \"location\",\n            Type = \"type\",\n\n            // the properties below are optional\n            EncryptionKey = new EncryptionKeyProperty {\n                Id = \"id\",\n                Type = \"type\"\n            }\n        },\n        Region = \"region\"\n    } },\n    DisableInboundStageTransitions = new [] { new StageTransitionProperty {\n        Reason = \"reason\",\n        StageName = \"stageName\"\n    } },\n    Name = \"name\",\n    RestartExecutionOnUpdate = false,\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nObject configuration;\n\nCfnPipelineProps cfnPipelineProps = CfnPipelineProps.builder()\n        .roleArn(\"roleArn\")\n        .stages(List.of(StageDeclarationProperty.builder()\n                .actions(List.of(ActionDeclarationProperty.builder()\n                        .actionTypeId(ActionTypeIdProperty.builder()\n                                .category(\"category\")\n                                .owner(\"owner\")\n                                .provider(\"provider\")\n                                .version(\"version\")\n                                .build())\n                        .name(\"name\")\n\n                        // the properties below are optional\n                        .configuration(configuration)\n                        .inputArtifacts(List.of(InputArtifactProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .namespace(\"namespace\")\n                        .outputArtifacts(List.of(OutputArtifactProperty.builder()\n                                .name(\"name\")\n                                .build()))\n                        .region(\"region\")\n                        .roleArn(\"roleArn\")\n                        .runOrder(123)\n                        .build()))\n                .name(\"name\")\n\n                // the properties below are optional\n                .blockers(List.of(BlockerDeclarationProperty.builder()\n                        .name(\"name\")\n                        .type(\"type\")\n                        .build()))\n                .build()))\n\n        // the properties below are optional\n        .artifactStore(ArtifactStoreProperty.builder()\n                .location(\"location\")\n                .type(\"type\")\n\n                // the properties below are optional\n                .encryptionKey(EncryptionKeyProperty.builder()\n                        .id(\"id\")\n                        .type(\"type\")\n                        .build())\n                .build())\n        .artifactStores(List.of(ArtifactStoreMapProperty.builder()\n                .artifactStore(ArtifactStoreProperty.builder()\n                        .location(\"location\")\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .encryptionKey(EncryptionKeyProperty.builder()\n                                .id(\"id\")\n                                .type(\"type\")\n                                .build())\n                        .build())\n                .region(\"region\")\n                .build()))\n        .disableInboundStageTransitions(List.of(StageTransitionProperty.builder()\n                .reason(\"reason\")\n                .stageName(\"stageName\")\n                .build()))\n        .name(\"name\")\n        .restartExecutionOnUpdate(false)\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nvar configuration interface{}\n\ncfnPipelineProps := &cfnPipelineProps{\n\troleArn: jsii.String(\"roleArn\"),\n\tstages: []interface{}{\n\t\t&stageDeclarationProperty{\n\t\t\tactions: []interface{}{\n\t\t\t\t&actionDeclarationProperty{\n\t\t\t\t\tactionTypeId: &actionTypeIdProperty{\n\t\t\t\t\t\tcategory: jsii.String(\"category\"),\n\t\t\t\t\t\towner: jsii.String(\"owner\"),\n\t\t\t\t\t\tprovider: jsii.String(\"provider\"),\n\t\t\t\t\t\tversion: jsii.String(\"version\"),\n\t\t\t\t\t},\n\t\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tconfiguration: configuration,\n\t\t\t\t\tinputArtifacts: []interface{}{\n\t\t\t\t\t\t&inputArtifactProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tnamespace: jsii.String(\"namespace\"),\n\t\t\t\t\toutputArtifacts: []interface{}{\n\t\t\t\t\t\t&outputArtifactProperty{\n\t\t\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tregion: jsii.String(\"region\"),\n\t\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\t\trunOrder: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t// the properties below are optional\n\t\t\tblockers: []interface{}{\n\t\t\t\t&blockerDeclarationProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tartifactStore: &artifactStoreProperty{\n\t\tlocation: jsii.String(\"location\"),\n\t\ttype: jsii.String(\"type\"),\n\n\t\t// the properties below are optional\n\t\tencryptionKey: &encryptionKeyProperty{\n\t\t\tid: jsii.String(\"id\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\tartifactStores: []interface{}{\n\t\t&artifactStoreMapProperty{\n\t\t\tartifactStore: &artifactStoreProperty{\n\t\t\t\tlocation: jsii.String(\"location\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tencryptionKey: &encryptionKeyProperty{\n\t\t\t\t\tid: jsii.String(\"id\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tregion: jsii.String(\"region\"),\n\t\t},\n\t},\n\tdisableInboundStageTransitions: []interface{}{\n\t\t&stageTransitionProperty{\n\t\t\treason: jsii.String(\"reason\"),\n\t\t\tstageName: jsii.String(\"stageName\"),\n\t\t},\n\t},\n\tname: jsii.String(\"name\"),\n\trestartExecutionOnUpdate: jsii.Boolean(false),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\nconst cfnPipelineProps: codepipeline.CfnPipelineProps = {\n  roleArn: 'roleArn',\n  stages: [{\n    actions: [{\n      actionTypeId: {\n        category: 'category',\n        owner: 'owner',\n        provider: 'provider',\n        version: 'version',\n      },\n      name: 'name',\n\n      // the properties below are optional\n      configuration: configuration,\n      inputArtifacts: [{\n        name: 'name',\n      }],\n      namespace: 'namespace',\n      outputArtifacts: [{\n        name: 'name',\n      }],\n      region: 'region',\n      roleArn: 'roleArn',\n      runOrder: 123,\n    }],\n    name: 'name',\n\n    // the properties below are optional\n    blockers: [{\n      name: 'name',\n      type: 'type',\n    }],\n  }],\n\n  // the properties below are optional\n  artifactStore: {\n    location: 'location',\n    type: 'type',\n\n    // the properties below are optional\n    encryptionKey: {\n      id: 'id',\n      type: 'type',\n    },\n  },\n  artifactStores: [{\n    artifactStore: {\n      location: 'location',\n      type: 'type',\n\n      // the properties below are optional\n      encryptionKey: {\n        id: 'id',\n        type: 'type',\n      },\n    },\n    region: 'region',\n  }],\n  disableInboundStageTransitions: [{\n    reason: 'reason',\n    stageName: 'stageName',\n  }],\n  name: 'name',\n  restartExecutionOnUpdate: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnPipelineProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnPipelineProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const configuration: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPipelineProps: codepipeline.CfnPipelineProps = {\n  roleArn: 'roleArn',\n  stages: [{\n    actions: [{\n      actionTypeId: {\n        category: 'category',\n        owner: 'owner',\n        provider: 'provider',\n        version: 'version',\n      },\n      name: 'name',\n\n      // the properties below are optional\n      configuration: configuration,\n      inputArtifacts: [{\n        name: 'name',\n      }],\n      namespace: 'namespace',\n      outputArtifacts: [{\n        name: 'name',\n      }],\n      region: 'region',\n      roleArn: 'roleArn',\n      runOrder: 123,\n    }],\n    name: 'name',\n\n    // the properties below are optional\n    blockers: [{\n      name: 'name',\n      type: 'type',\n    }],\n  }],\n\n  // the properties below are optional\n  artifactStore: {\n    location: 'location',\n    type: 'type',\n\n    // the properties below are optional\n    encryptionKey: {\n      id: 'id',\n      type: 'type',\n    },\n  },\n  artifactStores: [{\n    artifactStore: {\n      location: 'location',\n      type: 'type',\n\n      // the properties below are optional\n      encryptionKey: {\n        id: 'id',\n        type: 'type',\n      },\n    },\n    region: 'region',\n  }],\n  disableInboundStageTransitions: [{\n    reason: 'reason',\n    stageName: 'stageName',\n  }],\n  name: 'name',\n  restartExecutionOnUpdate: false,\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 29,
        "75": 50,
        "91": 1,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 8,
        "193": 14,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 44,
        "290": 1
      },
      "fqnsFingerprint": "036afe7e0b65a527dbcacb7eafa0b18cb5204ea8e4ab11432a13dafd23d3ff0d"
    },
    "c27b305ebef1b4d81575ae145d1c4ae47b4cfdd40350a83958211e6ec75e3018": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\ncfn_webhook = codepipeline.CfnWebhook(self, \"MyCfnWebhook\",\n    authentication=\"authentication\",\n    authentication_configuration=codepipeline.CfnWebhook.WebhookAuthConfigurationProperty(\n        allowed_ip_range=\"allowedIpRange\",\n        secret_token=\"secretToken\"\n    ),\n    filters=[codepipeline.CfnWebhook.WebhookFilterRuleProperty(\n        json_path=\"jsonPath\",\n\n        # the properties below are optional\n        match_equals=\"matchEquals\"\n    )],\n    target_action=\"targetAction\",\n    target_pipeline=\"targetPipeline\",\n    target_pipeline_version=123,\n\n    # the properties below are optional\n    name=\"name\",\n    register_with_third_party=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nCfnWebhook cfnWebhook = new CfnWebhook(this, \"MyCfnWebhook\", new CfnWebhookProps {\n    Authentication = \"authentication\",\n    AuthenticationConfiguration = new WebhookAuthConfigurationProperty {\n        AllowedIpRange = \"allowedIpRange\",\n        SecretToken = \"secretToken\"\n    },\n    Filters = new [] { new WebhookFilterRuleProperty {\n        JsonPath = \"jsonPath\",\n\n        // the properties below are optional\n        MatchEquals = \"matchEquals\"\n    } },\n    TargetAction = \"targetAction\",\n    TargetPipeline = \"targetPipeline\",\n    TargetPipelineVersion = 123,\n\n    // the properties below are optional\n    Name = \"name\",\n    RegisterWithThirdParty = false\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nCfnWebhook cfnWebhook = CfnWebhook.Builder.create(this, \"MyCfnWebhook\")\n        .authentication(\"authentication\")\n        .authenticationConfiguration(WebhookAuthConfigurationProperty.builder()\n                .allowedIpRange(\"allowedIpRange\")\n                .secretToken(\"secretToken\")\n                .build())\n        .filters(List.of(WebhookFilterRuleProperty.builder()\n                .jsonPath(\"jsonPath\")\n\n                // the properties below are optional\n                .matchEquals(\"matchEquals\")\n                .build()))\n        .targetAction(\"targetAction\")\n        .targetPipeline(\"targetPipeline\")\n        .targetPipelineVersion(123)\n\n        // the properties below are optional\n        .name(\"name\")\n        .registerWithThirdParty(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\ncfnWebhook := codepipeline.NewCfnWebhook(this, jsii.String(\"MyCfnWebhook\"), &cfnWebhookProps{\n\tauthentication: jsii.String(\"authentication\"),\n\tauthenticationConfiguration: &webhookAuthConfigurationProperty{\n\t\tallowedIpRange: jsii.String(\"allowedIpRange\"),\n\t\tsecretToken: jsii.String(\"secretToken\"),\n\t},\n\tfilters: []interface{}{\n\t\t&webhookFilterRuleProperty{\n\t\t\tjsonPath: jsii.String(\"jsonPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmatchEquals: jsii.String(\"matchEquals\"),\n\t\t},\n\t},\n\ttargetAction: jsii.String(\"targetAction\"),\n\ttargetPipeline: jsii.String(\"targetPipeline\"),\n\ttargetPipelineVersion: jsii.Number(123),\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\tregisterWithThirdParty: jsii.Boolean(false),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst cfnWebhook = new codepipeline.CfnWebhook(this, 'MyCfnWebhook', {\n  authentication: 'authentication',\n  authenticationConfiguration: {\n    allowedIpRange: 'allowedIpRange',\n    secretToken: 'secretToken',\n  },\n  filters: [{\n    jsonPath: 'jsonPath',\n\n    // the properties below are optional\n    matchEquals: 'matchEquals',\n  }],\n  targetAction: 'targetAction',\n  targetPipeline: 'targetPipeline',\n  targetPipelineVersion: 123,\n\n  // the properties below are optional\n  name: 'name',\n  registerWithThirdParty: false,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnWebhook"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnWebhook",
        "@aws-cdk/aws-codepipeline.CfnWebhookProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWebhook = new codepipeline.CfnWebhook(this, 'MyCfnWebhook', {\n  authentication: 'authentication',\n  authenticationConfiguration: {\n    allowedIpRange: 'allowedIpRange',\n    secretToken: 'secretToken',\n  },\n  filters: [{\n    jsonPath: 'jsonPath',\n\n    // the properties below are optional\n    matchEquals: 'matchEquals',\n  }],\n  targetAction: 'targetAction',\n  targetPipeline: 'targetPipeline',\n  targetPipelineVersion: 123,\n\n  // the properties below are optional\n  name: 'name',\n  registerWithThirdParty: false,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 10,
        "75": 16,
        "91": 1,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "f5ae8c67b03783bc12a875adab80886625aff6000df9dbbcde79d3b13b8195a9"
    },
    "4603e290a4ff81b5b1d33bccbcd38ed32f462e1cdc9a848c3b9b485a37f4fa05": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\nwebhook_auth_configuration_property = codepipeline.CfnWebhook.WebhookAuthConfigurationProperty(\n    allowed_ip_range=\"allowedIpRange\",\n    secret_token=\"secretToken\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nWebhookAuthConfigurationProperty webhookAuthConfigurationProperty = new WebhookAuthConfigurationProperty {\n    AllowedIpRange = \"allowedIpRange\",\n    SecretToken = \"secretToken\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nWebhookAuthConfigurationProperty webhookAuthConfigurationProperty = WebhookAuthConfigurationProperty.builder()\n        .allowedIpRange(\"allowedIpRange\")\n        .secretToken(\"secretToken\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nwebhookAuthConfigurationProperty := &webhookAuthConfigurationProperty{\n\tallowedIpRange: jsii.String(\"allowedIpRange\"),\n\tsecretToken: jsii.String(\"secretToken\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst webhookAuthConfigurationProperty: codepipeline.CfnWebhook.WebhookAuthConfigurationProperty = {\n  allowedIpRange: 'allowedIpRange',\n  secretToken: 'secretToken',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookAuthConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookAuthConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webhookAuthConfigurationProperty: codepipeline.CfnWebhook.WebhookAuthConfigurationProperty = {\n  allowedIpRange: 'allowedIpRange',\n  secretToken: 'secretToken',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "019bbc0f1441ab16c00eaea8e38b7dd79c69a4a0f247d41585f55fe69df8eb1b"
    },
    "9215458a3d9ea7a2536073674f31623ca7c5df452d1bfb9f4fe845bb33a1290e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\nwebhook_filter_rule_property = codepipeline.CfnWebhook.WebhookFilterRuleProperty(\n    json_path=\"jsonPath\",\n\n    # the properties below are optional\n    match_equals=\"matchEquals\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nWebhookFilterRuleProperty webhookFilterRuleProperty = new WebhookFilterRuleProperty {\n    JsonPath = \"jsonPath\",\n\n    // the properties below are optional\n    MatchEquals = \"matchEquals\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nWebhookFilterRuleProperty webhookFilterRuleProperty = WebhookFilterRuleProperty.builder()\n        .jsonPath(\"jsonPath\")\n\n        // the properties below are optional\n        .matchEquals(\"matchEquals\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nwebhookFilterRuleProperty := &webhookFilterRuleProperty{\n\tjsonPath: jsii.String(\"jsonPath\"),\n\n\t// the properties below are optional\n\tmatchEquals: jsii.String(\"matchEquals\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst webhookFilterRuleProperty: codepipeline.CfnWebhook.WebhookFilterRuleProperty = {\n  jsonPath: 'jsonPath',\n\n  // the properties below are optional\n  matchEquals: 'matchEquals',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookFilterRuleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnWebhook.WebhookFilterRuleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webhookFilterRuleProperty: codepipeline.CfnWebhook.WebhookFilterRuleProperty = {\n  jsonPath: 'jsonPath',\n\n  // the properties below are optional\n  matchEquals: 'matchEquals',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "be69cf50bf2cf11578783917b360a52f293709692f0404f72da10a2177713beb"
    },
    "8715137e8636e3b82ccb966a5d5fec993db54a9fee4477637455a8e628d874c3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\ncfn_webhook_props = codepipeline.CfnWebhookProps(\n    authentication=\"authentication\",\n    authentication_configuration=codepipeline.CfnWebhook.WebhookAuthConfigurationProperty(\n        allowed_ip_range=\"allowedIpRange\",\n        secret_token=\"secretToken\"\n    ),\n    filters=[codepipeline.CfnWebhook.WebhookFilterRuleProperty(\n        json_path=\"jsonPath\",\n\n        # the properties below are optional\n        match_equals=\"matchEquals\"\n    )],\n    target_action=\"targetAction\",\n    target_pipeline=\"targetPipeline\",\n    target_pipeline_version=123,\n\n    # the properties below are optional\n    name=\"name\",\n    register_with_third_party=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nCfnWebhookProps cfnWebhookProps = new CfnWebhookProps {\n    Authentication = \"authentication\",\n    AuthenticationConfiguration = new WebhookAuthConfigurationProperty {\n        AllowedIpRange = \"allowedIpRange\",\n        SecretToken = \"secretToken\"\n    },\n    Filters = new [] { new WebhookFilterRuleProperty {\n        JsonPath = \"jsonPath\",\n\n        // the properties below are optional\n        MatchEquals = \"matchEquals\"\n    } },\n    TargetAction = \"targetAction\",\n    TargetPipeline = \"targetPipeline\",\n    TargetPipelineVersion = 123,\n\n    // the properties below are optional\n    Name = \"name\",\n    RegisterWithThirdParty = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nCfnWebhookProps cfnWebhookProps = CfnWebhookProps.builder()\n        .authentication(\"authentication\")\n        .authenticationConfiguration(WebhookAuthConfigurationProperty.builder()\n                .allowedIpRange(\"allowedIpRange\")\n                .secretToken(\"secretToken\")\n                .build())\n        .filters(List.of(WebhookFilterRuleProperty.builder()\n                .jsonPath(\"jsonPath\")\n\n                // the properties below are optional\n                .matchEquals(\"matchEquals\")\n                .build()))\n        .targetAction(\"targetAction\")\n        .targetPipeline(\"targetPipeline\")\n        .targetPipelineVersion(123)\n\n        // the properties below are optional\n        .name(\"name\")\n        .registerWithThirdParty(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\ncfnWebhookProps := &cfnWebhookProps{\n\tauthentication: jsii.String(\"authentication\"),\n\tauthenticationConfiguration: &webhookAuthConfigurationProperty{\n\t\tallowedIpRange: jsii.String(\"allowedIpRange\"),\n\t\tsecretToken: jsii.String(\"secretToken\"),\n\t},\n\tfilters: []interface{}{\n\t\t&webhookFilterRuleProperty{\n\t\t\tjsonPath: jsii.String(\"jsonPath\"),\n\n\t\t\t// the properties below are optional\n\t\t\tmatchEquals: jsii.String(\"matchEquals\"),\n\t\t},\n\t},\n\ttargetAction: jsii.String(\"targetAction\"),\n\ttargetPipeline: jsii.String(\"targetPipeline\"),\n\ttargetPipelineVersion: jsii.Number(123),\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n\tregisterWithThirdParty: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst cfnWebhookProps: codepipeline.CfnWebhookProps = {\n  authentication: 'authentication',\n  authenticationConfiguration: {\n    allowedIpRange: 'allowedIpRange',\n    secretToken: 'secretToken',\n  },\n  filters: [{\n    jsonPath: 'jsonPath',\n\n    // the properties below are optional\n    matchEquals: 'matchEquals',\n  }],\n  targetAction: 'targetAction',\n  targetPipeline: 'targetPipeline',\n  targetPipelineVersion: 123,\n\n  // the properties below are optional\n  name: 'name',\n  registerWithThirdParty: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CfnWebhookProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CfnWebhookProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWebhookProps: codepipeline.CfnWebhookProps = {\n  authentication: 'authentication',\n  authenticationConfiguration: {\n    allowedIpRange: 'allowedIpRange',\n    secretToken: 'secretToken',\n  },\n  filters: [{\n    jsonPath: 'jsonPath',\n\n    // the properties below are optional\n    matchEquals: 'matchEquals',\n  }],\n  targetAction: 'targetAction',\n  targetPipeline: 'targetPipeline',\n  targetPipelineVersion: 123,\n\n  // the properties below are optional\n  name: 'name',\n  registerWithThirdParty: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 9,
        "75": 16,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 12,
        "290": 1
      },
      "fqnsFingerprint": "41f693e0d3d1fe953535c53ba8de1c6421bedf93ad1ee793a34f9362ca0ebde6"
    },
    "a9a0f95c01ff1308c5224f7f9aa4a0656584ea0b2aa53e965b4b7dd00b21ba5d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\ncommon_action_props = codepipeline.CommonActionProps(\n    action_name=\"actionName\",\n\n    # the properties below are optional\n    run_order=123,\n    variables_namespace=\"variablesNamespace\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nCommonActionProps commonActionProps = new CommonActionProps {\n    ActionName = \"actionName\",\n\n    // the properties below are optional\n    RunOrder = 123,\n    VariablesNamespace = \"variablesNamespace\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nCommonActionProps commonActionProps = CommonActionProps.builder()\n        .actionName(\"actionName\")\n\n        // the properties below are optional\n        .runOrder(123)\n        .variablesNamespace(\"variablesNamespace\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\ncommonActionProps := &commonActionProps{\n\tactionName: jsii.String(\"actionName\"),\n\n\t// the properties below are optional\n\trunOrder: jsii.Number(123),\n\tvariablesNamespace: jsii.String(\"variablesNamespace\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst commonActionProps: codepipeline.CommonActionProps = {\n  actionName: 'actionName',\n\n  // the properties below are optional\n  runOrder: 123,\n  variablesNamespace: 'variablesNamespace',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CommonActionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CommonActionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst commonActionProps: codepipeline.CommonActionProps = {\n  actionName: 'actionName',\n\n  // the properties below are optional\n  runOrder: 123,\n  variablesNamespace: 'variablesNamespace',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 3,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "5215399f3c3d925ba4f2836e25d8c1931b6b7aa0e9a7392bcfed9d4c7dcc8414"
    },
    "b2684fe5f172098915fc039697e1f73f1729efd984cb2287bcb488646bc516e6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\nimport aws_cdk.aws_iam as iam\n\n# role: iam.Role\n\ncommon_aws_action_props = codepipeline.CommonAwsActionProps(\n    action_name=\"actionName\",\n\n    # the properties below are optional\n    role=role,\n    run_order=123,\n    variables_namespace=\"variablesNamespace\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\nusing Amazon.CDK.AWS.IAM;\n\nRole role;\n\nCommonAwsActionProps commonAwsActionProps = new CommonAwsActionProps {\n    ActionName = \"actionName\",\n\n    // the properties below are optional\n    Role = role,\n    RunOrder = 123,\n    VariablesNamespace = \"variablesNamespace\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\nimport software.amazon.awscdk.services.iam.*;\n\nRole role;\n\nCommonAwsActionProps commonAwsActionProps = CommonAwsActionProps.builder()\n        .actionName(\"actionName\")\n\n        // the properties below are optional\n        .role(role)\n        .runOrder(123)\n        .variablesNamespace(\"variablesNamespace\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar role role\n\ncommonAwsActionProps := &commonAwsActionProps{\n\tactionName: jsii.String(\"actionName\"),\n\n\t// the properties below are optional\n\trole: role,\n\trunOrder: jsii.Number(123),\n\tvariablesNamespace: jsii.String(\"variablesNamespace\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\nconst commonAwsActionProps: codepipeline.CommonAwsActionProps = {\n  actionName: 'actionName',\n\n  // the properties below are optional\n  role: role,\n  runOrder: 123,\n  variablesNamespace: 'variablesNamespace',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CommonAwsActionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CommonAwsActionProps",
        "@aws-cdk/aws-iam.IRole"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst commonAwsActionProps: codepipeline.CommonAwsActionProps = {\n  actionName: 'actionName',\n\n  // the properties below are optional\n  role: role,\n  runOrder: 123,\n  variablesNamespace: 'variablesNamespace',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 4,
        "75": 13,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "fcdddd782ed4e5b35e3f0ce81d09b47f8ec18d324cc939f808812b99fb0a138c"
    },
    "0c7df1b60f673d3cb725bcb415b7882beffc4dfa5fa5abb1cfb2dff0fff660f9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\n\n# bucket: s3.Bucket\n# stack: cdk.Stack\n\ncross_region_support = codepipeline.CrossRegionSupport(\n    replication_bucket=bucket,\n    stack=stack\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\n\nBucket bucket;\nStack stack;\nCrossRegionSupport crossRegionSupport = new CrossRegionSupport {\n    ReplicationBucket = bucket,\n    Stack = stack\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\n\nBucket bucket;\nStack stack;\n\nCrossRegionSupport crossRegionSupport = CrossRegionSupport.builder()\n        .replicationBucket(bucket)\n        .stack(stack)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\nimport s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar bucket bucket\nvar stack stack\n\ncrossRegionSupport := &crossRegionSupport{\n\treplicationBucket: bucket,\n\tstack: stack,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const bucket: s3.Bucket;\ndeclare const stack: cdk.Stack;\nconst crossRegionSupport: codepipeline.CrossRegionSupport = {\n  replicationBucket: bucket,\n  stack: stack,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CrossRegionSupport"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CrossRegionSupport",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.Stack"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const bucket: s3.Bucket;\ndeclare const stack: cdk.Stack;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst crossRegionSupport: codepipeline.CrossRegionSupport = {\n  replicationBucket: bucket,\n  stack: stack,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 16,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 3,
        "255": 3,
        "256": 3,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "cb63e767b3f03678d9754e51601261021b1beffcaa94abf53057dd342911ffa0"
    },
    "71498406332b005a4aec9bf941ae7685a645b9d33a75e409460ec743eaac9f90": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\ncustom_action_property = codepipeline.CustomActionProperty(\n    name=\"name\",\n    required=False,\n\n    # the properties below are optional\n    description=\"description\",\n    key=False,\n    queryable=False,\n    secret=False,\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nCustomActionProperty customActionProperty = new CustomActionProperty {\n    Name = \"name\",\n    Required = false,\n\n    // the properties below are optional\n    Description = \"description\",\n    Key = false,\n    Queryable = false,\n    Secret = false,\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nCustomActionProperty customActionProperty = CustomActionProperty.builder()\n        .name(\"name\")\n        .required(false)\n\n        // the properties below are optional\n        .description(\"description\")\n        .key(false)\n        .queryable(false)\n        .secret(false)\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\ncustomActionProperty := &customActionProperty{\n\tname: jsii.String(\"name\"),\n\trequired: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tkey: jsii.Boolean(false),\n\tqueryable: jsii.Boolean(false),\n\tsecret: jsii.Boolean(false),\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nconst customActionProperty: codepipeline.CustomActionProperty = {\n  name: 'name',\n  required: false,\n\n  // the properties below are optional\n  description: 'description',\n  key: false,\n  queryable: false,\n  secret: false,\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CustomActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.CustomActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst customActionProperty: codepipeline.CustomActionProperty = {\n  name: 'name',\n  required: false,\n\n  // the properties below are optional\n  description: 'description',\n  key: false,\n  queryable: false,\n  secret: false,\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 11,
        "91": 4,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "50dbce55c7d217bed2fa5c84c6fe5d46c21c57eacee3096ec8d6b825ccf47455"
    },
    "411304cea5049e75d9d8ae9669c707349e000e4e373f1b2a79984ef566d8c766": {
      "translations": {
        "python": {
          "source": "# Make a custom CodePipeline Action\ncodepipeline.CustomActionRegistration(self, \"GenericGitSourceProviderResource\",\n    category=codepipeline.ActionCategory.SOURCE,\n    artifact_bounds=codepipeline.ActionArtifactBounds(min_inputs=0, max_inputs=0, min_outputs=1, max_outputs=1),\n    provider=\"GenericGitSource\",\n    version=\"1\",\n    entity_url=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    execution_url=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    action_properties=[codepipeline.CustomActionProperty(\n        name=\"Branch\",\n        required=True,\n        key=False,\n        secret=False,\n        queryable=False,\n        description=\"Git branch to pull\",\n        type=\"String\"\n    ), codepipeline.CustomActionProperty(\n        name=\"GitUrl\",\n        required=True,\n        key=False,\n        secret=False,\n        queryable=False,\n        description=\"SSH git clone URL\",\n        type=\"String\"\n    )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Make a custom CodePipeline Action\n// Make a custom CodePipeline Action\nnew CustomActionRegistration(this, \"GenericGitSourceProviderResource\", new CustomActionRegistrationProps {\n    Category = ActionCategory.SOURCE,\n    ArtifactBounds = new ActionArtifactBounds { MinInputs = 0, MaxInputs = 0, MinOutputs = 1, MaxOutputs = 1 },\n    Provider = \"GenericGitSource\",\n    Version = \"1\",\n    EntityUrl = \"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    ExecutionUrl = \"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    ActionProperties = new [] { new CustomActionProperty {\n        Name = \"Branch\",\n        Required = true,\n        Key = false,\n        Secret = false,\n        Queryable = false,\n        Description = \"Git branch to pull\",\n        Type = \"String\"\n    }, new CustomActionProperty {\n        Name = \"GitUrl\",\n        Required = true,\n        Key = false,\n        Secret = false,\n        Queryable = false,\n        Description = \"SSH git clone URL\",\n        Type = \"String\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Make a custom CodePipeline Action\n// Make a custom CodePipeline Action\nCustomActionRegistration.Builder.create(this, \"GenericGitSourceProviderResource\")\n        .category(ActionCategory.SOURCE)\n        .artifactBounds(ActionArtifactBounds.builder().minInputs(0).maxInputs(0).minOutputs(1).maxOutputs(1).build())\n        .provider(\"GenericGitSource\")\n        .version(\"1\")\n        .entityUrl(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\")\n        .executionUrl(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\")\n        .actionProperties(List.of(CustomActionProperty.builder()\n                .name(\"Branch\")\n                .required(true)\n                .key(false)\n                .secret(false)\n                .queryable(false)\n                .description(\"Git branch to pull\")\n                .type(\"String\")\n                .build(), CustomActionProperty.builder()\n                .name(\"GitUrl\")\n                .required(true)\n                .key(false)\n                .secret(false)\n                .queryable(false)\n                .description(\"SSH git clone URL\")\n                .type(\"String\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Make a custom CodePipeline Action\n// Make a custom CodePipeline Action\ncodepipeline.NewCustomActionRegistration(this, jsii.String(\"GenericGitSourceProviderResource\"), &customActionRegistrationProps{\n\tcategory: codepipeline.actionCategory_SOURCE,\n\tartifactBounds: &actionArtifactBounds{\n\t\tminInputs: jsii.Number(0),\n\t\tmaxInputs: jsii.Number(0),\n\t\tminOutputs: jsii.Number(1),\n\t\tmaxOutputs: jsii.Number(1),\n\t},\n\tprovider: jsii.String(\"GenericGitSource\"),\n\tversion: jsii.String(\"1\"),\n\tentityUrl: jsii.String(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\"),\n\texecutionUrl: jsii.String(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\"),\n\tactionProperties: []customActionProperty{\n\t\t&customActionProperty{\n\t\t\tname: jsii.String(\"Branch\"),\n\t\t\trequired: jsii.Boolean(true),\n\t\t\tkey: jsii.Boolean(false),\n\t\t\tsecret: jsii.Boolean(false),\n\t\t\tqueryable: jsii.Boolean(false),\n\t\t\tdescription: jsii.String(\"Git branch to pull\"),\n\t\t\ttype: jsii.String(\"String\"),\n\t\t},\n\t\t&customActionProperty{\n\t\t\tname: jsii.String(\"GitUrl\"),\n\t\t\trequired: jsii.Boolean(true),\n\t\t\tkey: jsii.Boolean(false),\n\t\t\tsecret: jsii.Boolean(false),\n\t\t\tqueryable: jsii.Boolean(false),\n\t\t\tdescription: jsii.String(\"SSH git clone URL\"),\n\t\t\ttype: jsii.String(\"String\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Make a custom CodePipeline Action\nnew codepipeline.CustomActionRegistration(this, 'GenericGitSourceProviderResource', {\n  category: codepipeline.ActionCategory.SOURCE,\n  artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 1 },\n  provider: 'GenericGitSource',\n  version: '1',\n  entityUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  executionUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  actionProperties: [\n    {\n      name: 'Branch',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'Git branch to pull',\n      type: 'String',\n    },\n    {\n      name: 'GitUrl',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'SSH git clone URL',\n      type: 'String',\n    },\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CustomActionRegistration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
        "@aws-cdk/aws-codepipeline.ActionCategory",
        "@aws-cdk/aws-codepipeline.ActionCategory#SOURCE",
        "@aws-cdk/aws-codepipeline.CustomActionRegistration",
        "@aws-cdk/aws-codepipeline.CustomActionRegistrationProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Make a custom CodePipeline Action\nnew codepipeline.CustomActionRegistration(this, 'GenericGitSourceProviderResource', {\n  category: codepipeline.ActionCategory.SOURCE,\n  artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 1 },\n  provider: 'GenericGitSource',\n  version: '1',\n  entityUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  executionUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  actionProperties: [\n    {\n      name: 'Branch',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'Git branch to pull',\n      type: 'String',\n    },\n    {\n      name: 'GitUrl',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'SSH git clone URL',\n      type: 'String',\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 11,
        "75": 30,
        "91": 6,
        "104": 1,
        "106": 2,
        "192": 1,
        "193": 4,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 25
      },
      "fqnsFingerprint": "94f0358df251f375ced77527b5a7df2641a640033e554f954bd7c3da719e63ce"
    },
    "c7b9b3b70b0ae0f1e64b07fa7897be221aa1efd299b153605eb9a2140db4772b": {
      "translations": {
        "python": {
          "source": "# Make a custom CodePipeline Action\ncodepipeline.CustomActionRegistration(self, \"GenericGitSourceProviderResource\",\n    category=codepipeline.ActionCategory.SOURCE,\n    artifact_bounds=codepipeline.ActionArtifactBounds(min_inputs=0, max_inputs=0, min_outputs=1, max_outputs=1),\n    provider=\"GenericGitSource\",\n    version=\"1\",\n    entity_url=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    execution_url=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    action_properties=[codepipeline.CustomActionProperty(\n        name=\"Branch\",\n        required=True,\n        key=False,\n        secret=False,\n        queryable=False,\n        description=\"Git branch to pull\",\n        type=\"String\"\n    ), codepipeline.CustomActionProperty(\n        name=\"GitUrl\",\n        required=True,\n        key=False,\n        secret=False,\n        queryable=False,\n        description=\"SSH git clone URL\",\n        type=\"String\"\n    )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Make a custom CodePipeline Action\n// Make a custom CodePipeline Action\nnew CustomActionRegistration(this, \"GenericGitSourceProviderResource\", new CustomActionRegistrationProps {\n    Category = ActionCategory.SOURCE,\n    ArtifactBounds = new ActionArtifactBounds { MinInputs = 0, MaxInputs = 0, MinOutputs = 1, MaxOutputs = 1 },\n    Provider = \"GenericGitSource\",\n    Version = \"1\",\n    EntityUrl = \"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    ExecutionUrl = \"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\",\n    ActionProperties = new [] { new CustomActionProperty {\n        Name = \"Branch\",\n        Required = true,\n        Key = false,\n        Secret = false,\n        Queryable = false,\n        Description = \"Git branch to pull\",\n        Type = \"String\"\n    }, new CustomActionProperty {\n        Name = \"GitUrl\",\n        Required = true,\n        Key = false,\n        Secret = false,\n        Queryable = false,\n        Description = \"SSH git clone URL\",\n        Type = \"String\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Make a custom CodePipeline Action\n// Make a custom CodePipeline Action\nCustomActionRegistration.Builder.create(this, \"GenericGitSourceProviderResource\")\n        .category(ActionCategory.SOURCE)\n        .artifactBounds(ActionArtifactBounds.builder().minInputs(0).maxInputs(0).minOutputs(1).maxOutputs(1).build())\n        .provider(\"GenericGitSource\")\n        .version(\"1\")\n        .entityUrl(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\")\n        .executionUrl(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\")\n        .actionProperties(List.of(CustomActionProperty.builder()\n                .name(\"Branch\")\n                .required(true)\n                .key(false)\n                .secret(false)\n                .queryable(false)\n                .description(\"Git branch to pull\")\n                .type(\"String\")\n                .build(), CustomActionProperty.builder()\n                .name(\"GitUrl\")\n                .required(true)\n                .key(false)\n                .secret(false)\n                .queryable(false)\n                .description(\"SSH git clone URL\")\n                .type(\"String\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Make a custom CodePipeline Action\n// Make a custom CodePipeline Action\ncodepipeline.NewCustomActionRegistration(this, jsii.String(\"GenericGitSourceProviderResource\"), &customActionRegistrationProps{\n\tcategory: codepipeline.actionCategory_SOURCE,\n\tartifactBounds: &actionArtifactBounds{\n\t\tminInputs: jsii.Number(0),\n\t\tmaxInputs: jsii.Number(0),\n\t\tminOutputs: jsii.Number(1),\n\t\tmaxOutputs: jsii.Number(1),\n\t},\n\tprovider: jsii.String(\"GenericGitSource\"),\n\tversion: jsii.String(\"1\"),\n\tentityUrl: jsii.String(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\"),\n\texecutionUrl: jsii.String(\"https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html\"),\n\tactionProperties: []customActionProperty{\n\t\t&customActionProperty{\n\t\t\tname: jsii.String(\"Branch\"),\n\t\t\trequired: jsii.Boolean(true),\n\t\t\tkey: jsii.Boolean(false),\n\t\t\tsecret: jsii.Boolean(false),\n\t\t\tqueryable: jsii.Boolean(false),\n\t\t\tdescription: jsii.String(\"Git branch to pull\"),\n\t\t\ttype: jsii.String(\"String\"),\n\t\t},\n\t\t&customActionProperty{\n\t\t\tname: jsii.String(\"GitUrl\"),\n\t\t\trequired: jsii.Boolean(true),\n\t\t\tkey: jsii.Boolean(false),\n\t\t\tsecret: jsii.Boolean(false),\n\t\t\tqueryable: jsii.Boolean(false),\n\t\t\tdescription: jsii.String(\"SSH git clone URL\"),\n\t\t\ttype: jsii.String(\"String\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Make a custom CodePipeline Action\nnew codepipeline.CustomActionRegistration(this, 'GenericGitSourceProviderResource', {\n  category: codepipeline.ActionCategory.SOURCE,\n  artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 1 },\n  provider: 'GenericGitSource',\n  version: '1',\n  entityUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  executionUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  actionProperties: [\n    {\n      name: 'Branch',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'Git branch to pull',\n      type: 'String',\n    },\n    {\n      name: 'GitUrl',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'SSH git clone URL',\n      type: 'String',\n    },\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.CustomActionRegistrationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
        "@aws-cdk/aws-codepipeline.ActionCategory",
        "@aws-cdk/aws-codepipeline.ActionCategory#SOURCE",
        "@aws-cdk/aws-codepipeline.CustomActionRegistration",
        "@aws-cdk/aws-codepipeline.CustomActionRegistrationProps",
        "constructs.Construct"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Make a custom CodePipeline Action\nnew codepipeline.CustomActionRegistration(this, 'GenericGitSourceProviderResource', {\n  category: codepipeline.ActionCategory.SOURCE,\n  artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 1 },\n  provider: 'GenericGitSource',\n  version: '1',\n  entityUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  executionUrl: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html',\n  actionProperties: [\n    {\n      name: 'Branch',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'Git branch to pull',\n      type: 'String',\n    },\n    {\n      name: 'GitUrl',\n      required: true,\n      key: false,\n      secret: false,\n      queryable: false,\n      description: 'SSH git clone URL',\n      type: 'String',\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 4,
        "10": 11,
        "75": 30,
        "91": 6,
        "104": 1,
        "106": 2,
        "192": 1,
        "193": 4,
        "194": 3,
        "197": 1,
        "226": 1,
        "281": 25
      },
      "fqnsFingerprint": "94f0358df251f375ced77527b5a7df2641a640033e554f954bd7c3da719e63ce"
    },
    "3665f04637d1cfea6911e6b30788702250fe2d322ebd1d21b4c92bfe953214f6": {
      "translations": {
        "python": {
          "source": "# OtherAction is some action type that produces variables, like EcrSourceAction\nOtherAction(\n    # ...\n    config=codepipeline.GlobalVariables.execution_id,\n    action_name=\"otherAction\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// OtherAction is some action type that produces variables, like EcrSourceAction\n// OtherAction is some action type that produces variables, like EcrSourceAction\nnew OtherAction(new OtherActionProps {\n    // ...\n    Config = GlobalVariables.ExecutionId,\n    ActionName = \"otherAction\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// OtherAction is some action type that produces variables, like EcrSourceAction\n// OtherAction is some action type that produces variables, like EcrSourceAction\nnew OtherAction(new OtherActionProps()\n        // ...\n        .config(GlobalVariables.executionId)\n        .actionName(\"otherAction\")\n        );",
          "version": "1"
        },
        "go": {
          "source": "// OtherAction is some action type that produces variables, like EcrSourceAction\n// OtherAction is some action type that produces variables, like EcrSourceAction\nNewOtherAction(&otherActionProps{\n\t// ...\n\tconfig: codepipeline.globalVariables_ExecutionId(),\n\tactionName: jsii.String(\"otherAction\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// OtherAction is some action type that produces variables, like EcrSourceAction\nnew OtherAction({\n  // ...\n  config: codepipeline.GlobalVariables.executionId,\n  actionName: 'otherAction',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.GlobalVariables"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.ActionArtifactBounds",
        "@aws-cdk/aws-codepipeline.ActionCategory",
        "@aws-cdk/aws-codepipeline.GlobalVariables",
        "@aws-cdk/aws-codepipeline.GlobalVariables#executionId"
      ],
      "fullSource": "import { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ninterface MyActionProps {\n  variablesNamespace?: string;\n  actionName: string;\n}\n\nclass MyAction extends codepipeline.Action {\n  public variables: { [key: string]: string };\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: MyActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n    this.variables = { 'myVariable': 'var' };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\ninterface OtherActionProps {\n  config: string;\n  actionName: string;\n}\n\nclass OtherAction extends codepipeline.Action {\n  protected readonly providedActionProperties: codepipeline.ActionProperties; \n\n  constructor(props: OtherActionProps) {\n    super();\n    this.providedActionProperties = {\n      ...props,\n      category: codepipeline.ActionCategory.SOURCE,\n      provider: 'Fake',\n      artifactBounds: { minInputs: 0, maxInputs: 0, minOutputs: 1, maxOutputs: 4 },\n    };\n  }\n\n  public bound(_scope: Construct, _stage: codepipeline.IStage, _options: codepipeline.ActionBindOptions):\n  codepipeline.ActionConfig {\n    return {};\n  }\n}\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// OtherAction is some action type that produces variables, like EcrSourceAction\nnew OtherAction({\n  // ...\n  config: codepipeline.GlobalVariables.executionId,\n  actionName: 'otherAction',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 6,
        "193": 1,
        "194": 2,
        "197": 1,
        "226": 1,
        "281": 2
      },
      "fqnsFingerprint": "cb5fc4d2cb5a0cb2347b9c61585afb4ddd7c8ee4fb63d73d5b12f2252f240dd7"
    },
    "e3abface09389bd62780d7e9fc3eb4aca99dd247c99b49d2fb26e25ea08b2b8f": {
      "translations": {
        "python": {
          "source": "# create a pipeline\nimport aws_cdk.aws_codecommit as codecommit\n\n# add a source action to the stage\n# repo: codecommit.Repository\n# source_artifact: codepipeline.Artifact\n\n\npipeline = codepipeline.Pipeline(self, \"Pipeline\")\n\n# add a stage\nsource_stage = pipeline.add_stage(stage_name=\"Source\")\nsource_stage.add_action(codepipeline_actions.CodeCommitSourceAction(\n    action_name=\"Source\",\n    output=source_artifact,\n    repository=repo\n))",
          "version": "2"
        },
        "csharp": {
          "source": "// create a pipeline\nusing Amazon.CDK.AWS.CodeCommit;\n\n// add a source action to the stage\nRepository repo;\nArtifact sourceArtifact;\n\n\nPipeline pipeline = new Pipeline(this, \"Pipeline\");\n\n// add a stage\nIStage sourceStage = pipeline.AddStage(new StageOptions { StageName = \"Source\" });\nsourceStage.AddAction(new CodeCommitSourceAction(new CodeCommitSourceActionProps {\n    ActionName = \"Source\",\n    Output = sourceArtifact,\n    Repository = repo\n}));",
          "version": "1"
        },
        "java": {
          "source": "// create a pipeline\nimport software.amazon.awscdk.services.codecommit.*;\n\n// add a source action to the stage\nRepository repo;\nArtifact sourceArtifact;\n\n\nPipeline pipeline = new Pipeline(this, \"Pipeline\");\n\n// add a stage\nIStage sourceStage = pipeline.addStage(StageOptions.builder().stageName(\"Source\").build());\nsourceStage.addAction(CodeCommitSourceAction.Builder.create()\n        .actionName(\"Source\")\n        .output(sourceArtifact)\n        .repository(repo)\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// create a pipeline\nimport codecommit \"github.com/aws-samples/dummy/awscdkawscodecommit\"\n\n// add a source action to the stage\nvar repo repository\nvar sourceArtifact artifact\n\n\npipeline := codepipeline.NewPipeline(this, jsii.String(\"Pipeline\"))\n\n// add a stage\nsourceStage := pipeline.addStage(&stageOptions{\n\tstageName: jsii.String(\"Source\"),\n})\nsourceStage.addAction(codepipeline_actions.NewCodeCommitSourceAction(&codeCommitSourceActionProps{\n\tactionName: jsii.String(\"Source\"),\n\toutput: sourceArtifact,\n\trepository: repo,\n}))",
          "version": "1"
        },
        "$": {
          "source": "// create a pipeline\nimport * as codecommit from '@aws-cdk/aws-codecommit';\n\nconst pipeline = new codepipeline.Pipeline(this, 'Pipeline');\n\n// add a stage\nconst sourceStage = pipeline.addStage({ stageName: 'Source' });\n\n// add a source action to the stage\ndeclare const repo: codecommit.Repository;\ndeclare const sourceArtifact: codepipeline.Artifact;\nsourceStage.addAction(new codepipeline_actions.CodeCommitSourceAction({\nactionName: 'Source',\noutput: sourceArtifact,\nrepository: repo,\n}));\n\n// ... add more stages",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.Pipeline"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codecommit.IRepository",
        "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceAction",
        "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceActionProps",
        "@aws-cdk/aws-codepipeline.Artifact",
        "@aws-cdk/aws-codepipeline.IAction",
        "@aws-cdk/aws-codepipeline.IStage",
        "@aws-cdk/aws-codepipeline.IStage#addAction",
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.Pipeline#addStage",
        "@aws-cdk/aws-codepipeline.StageOptions",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// create a pipeline\nimport * as codecommit from '@aws-cdk/aws-codecommit';\n\n// add a source action to the stage\ndeclare const repo: codecommit.Repository;\ndeclare const sourceArtifact: codepipeline.Artifact;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst pipeline = new codepipeline.Pipeline(this, 'Pipeline');\n\n// add a stage\nconst sourceStage = pipeline.addStage({ stageName: 'Source' });\nsourceStage.addAction(new codepipeline_actions.CodeCommitSourceAction({\nactionName: 'Source',\noutput: sourceArtifact,\nrepository: repo,\n}));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 23,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "193": 2,
        "194": 4,
        "196": 2,
        "197": 2,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "dbd60824345a8955b60c0fc16b2065880d2bcbc383d18e3a74999f6ebe1457e4"
    },
    "a928f6e582ef167fe499ecb8d56f7412af7bbd4ae023b46d9928a12d1bcbbbab": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\nimport aws_cdk.aws_codestarnotifications as codestarnotifications\n\npipeline_notify_on_options = codepipeline.PipelineNotifyOnOptions(\n    events=[codepipeline.PipelineNotificationEvents.PIPELINE_EXECUTION_FAILED],\n\n    # the properties below are optional\n    detail_type=codestarnotifications.DetailType.BASIC,\n    enabled=False,\n    notification_rule_name=\"notificationRuleName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\nusing Amazon.CDK.AWS.CodeStarNotifications;\n\nPipelineNotifyOnOptions pipelineNotifyOnOptions = new PipelineNotifyOnOptions {\n    Events = new [] { PipelineNotificationEvents.PIPELINE_EXECUTION_FAILED },\n\n    // the properties below are optional\n    DetailType = DetailType.BASIC,\n    Enabled = false,\n    NotificationRuleName = \"notificationRuleName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\nimport software.amazon.awscdk.services.codestarnotifications.*;\n\nPipelineNotifyOnOptions pipelineNotifyOnOptions = PipelineNotifyOnOptions.builder()\n        .events(List.of(PipelineNotificationEvents.PIPELINE_EXECUTION_FAILED))\n\n        // the properties below are optional\n        .detailType(DetailType.BASIC)\n        .enabled(false)\n        .notificationRuleName(\"notificationRuleName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\nimport codestarnotifications \"github.com/aws-samples/dummy/awscdkawscodestarnotifications\"\n\npipelineNotifyOnOptions := &pipelineNotifyOnOptions{\n\tevents: []pipelineNotificationEvents{\n\t\tcodepipeline.*pipelineNotificationEvents_PIPELINE_EXECUTION_FAILED,\n\t},\n\n\t// the properties below are optional\n\tdetailType: codestarnotifications.detailType_BASIC,\n\tenabled: jsii.Boolean(false),\n\tnotificationRuleName: jsii.String(\"notificationRuleName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codestarnotifications from '@aws-cdk/aws-codestarnotifications';\nconst pipelineNotifyOnOptions: codepipeline.PipelineNotifyOnOptions = {\n  events: [codepipeline.PipelineNotificationEvents.PIPELINE_EXECUTION_FAILED],\n\n  // the properties below are optional\n  detailType: codestarnotifications.DetailType.BASIC,\n  enabled: false,\n  notificationRuleName: 'notificationRuleName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.PipelineNotifyOnOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.PipelineNotificationEvents",
        "@aws-cdk/aws-codepipeline.PipelineNotificationEvents#PIPELINE_EXECUTION_FAILED",
        "@aws-cdk/aws-codepipeline.PipelineNotifyOnOptions",
        "@aws-cdk/aws-codestarnotifications.DetailType",
        "@aws-cdk/aws-codestarnotifications.DetailType#BASIC"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codestarnotifications from '@aws-cdk/aws-codestarnotifications';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst pipelineNotifyOnOptions: codepipeline.PipelineNotifyOnOptions = {\n  events: [codepipeline.PipelineNotificationEvents.PIPELINE_EXECUTION_FAILED],\n\n  // the properties below are optional\n  detailType: codestarnotifications.DetailType.BASIC,\n  enabled: false,\n  notificationRuleName: 'notificationRuleName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 15,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "330c74d57be296861260cb2d32d6d88fdeae565842a82e02291ed34db66ce79a"
    },
    "57cc15ea1bf68faac5305d8942a5810c638eb69bf33c288132fc82473f6fb486": {
      "translations": {
        "python": {
          "source": "# project: codebuild.PipelineProject\n\nrepository = codecommit.Repository(self, \"MyRepository\",\n    repository_name=\"MyRepository\"\n)\nproject = codebuild.PipelineProject(self, \"MyProject\")\n\nsource_output = codepipeline.Artifact()\nsource_action = codepipeline_actions.CodeCommitSourceAction(\n    action_name=\"CodeCommit\",\n    repository=repository,\n    output=source_output\n)\nbuild_action = codepipeline_actions.CodeBuildAction(\n    action_name=\"CodeBuild\",\n    project=project,\n    input=source_output,\n    outputs=[codepipeline.Artifact()],  # optional\n    execute_batch_build=True,  # optional, defaults to false\n    combine_batch_build_artifacts=True\n)\n\ncodepipeline.Pipeline(self, \"MyPipeline\",\n    stages=[codepipeline.StageProps(\n        stage_name=\"Source\",\n        actions=[source_action]\n    ), codepipeline.StageProps(\n        stage_name=\"Build\",\n        actions=[build_action]\n    )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "PipelineProject project;\n\nRepository repository = new Repository(this, \"MyRepository\", new RepositoryProps {\n    RepositoryName = \"MyRepository\"\n});\nPipelineProject project = new PipelineProject(this, \"MyProject\");\n\nArtifact sourceOutput = new Artifact();\nCodeCommitSourceAction sourceAction = new CodeCommitSourceAction(new CodeCommitSourceActionProps {\n    ActionName = \"CodeCommit\",\n    Repository = repository,\n    Output = sourceOutput\n});\nCodeBuildAction buildAction = new CodeBuildAction(new CodeBuildActionProps {\n    ActionName = \"CodeBuild\",\n    Project = project,\n    Input = sourceOutput,\n    Outputs = new [] { new Artifact() },  // optional\n    ExecuteBatchBuild = true,  // optional, defaults to false\n    CombineBatchBuildArtifacts = true\n});\n\nnew Pipeline(this, \"MyPipeline\", new PipelineProps {\n    Stages = new [] { new StageProps {\n        StageName = \"Source\",\n        Actions = new [] { sourceAction }\n    }, new StageProps {\n        StageName = \"Build\",\n        Actions = new [] { buildAction }\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "PipelineProject project;\n\nRepository repository = Repository.Builder.create(this, \"MyRepository\")\n        .repositoryName(\"MyRepository\")\n        .build();\nPipelineProject project = new PipelineProject(this, \"MyProject\");\n\nArtifact sourceOutput = new Artifact();\nCodeCommitSourceAction sourceAction = CodeCommitSourceAction.Builder.create()\n        .actionName(\"CodeCommit\")\n        .repository(repository)\n        .output(sourceOutput)\n        .build();\nCodeBuildAction buildAction = CodeBuildAction.Builder.create()\n        .actionName(\"CodeBuild\")\n        .project(project)\n        .input(sourceOutput)\n        .outputs(List.of(new Artifact())) // optional\n        .executeBatchBuild(true) // optional, defaults to false\n        .combineBatchBuildArtifacts(true)\n        .build();\n\nPipeline.Builder.create(this, \"MyPipeline\")\n        .stages(List.of(StageProps.builder()\n                .stageName(\"Source\")\n                .actions(List.of(sourceAction))\n                .build(), StageProps.builder()\n                .stageName(\"Build\")\n                .actions(List.of(buildAction))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var project pipelineProject\n\nrepository := codecommit.NewRepository(this, jsii.String(\"MyRepository\"), &repositoryProps{\n\trepositoryName: jsii.String(\"MyRepository\"),\n})\nproject := codebuild.NewPipelineProject(this, jsii.String(\"MyProject\"))\n\nsourceOutput := codepipeline.NewArtifact()\nsourceAction := codepipeline_actions.NewCodeCommitSourceAction(&codeCommitSourceActionProps{\n\tactionName: jsii.String(\"CodeCommit\"),\n\trepository: repository,\n\toutput: sourceOutput,\n})\nbuildAction := codepipeline_actions.NewCodeBuildAction(&codeBuildActionProps{\n\tactionName: jsii.String(\"CodeBuild\"),\n\tproject: project,\n\tinput: sourceOutput,\n\toutputs: []artifact{\n\t\tcodepipeline.NewArtifact(),\n\t},\n\t // optional\n\texecuteBatchBuild: jsii.Boolean(true),\n\t // optional, defaults to false\n\tcombineBatchBuildArtifacts: jsii.Boolean(true),\n})\n\ncodepipeline.NewPipeline(this, jsii.String(\"MyPipeline\"), &pipelineProps{\n\tstages: []stageProps{\n\t\t&stageProps{\n\t\t\tstageName: jsii.String(\"Source\"),\n\t\t\tactions: []iAction{\n\t\t\t\tsourceAction,\n\t\t\t},\n\t\t},\n\t\t&stageProps{\n\t\t\tstageName: jsii.String(\"Build\"),\n\t\t\tactions: []*iAction{\n\t\t\t\tbuildAction,\n\t\t\t},\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const project: codebuild.PipelineProject;\nconst repository = new codecommit.Repository(this, 'MyRepository', {\n  repositoryName: 'MyRepository',\n});\nconst project = new codebuild.PipelineProject(this, 'MyProject');\n\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  actionName: 'CodeCommit',\n  repository,\n  output: sourceOutput,\n});\nconst buildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput,\n  outputs: [new codepipeline.Artifact()], // optional\n  executeBatchBuild: true, // optional, defaults to false\n  combineBatchBuildArtifacts: true, // optional, defaults to false\n});\n\nnew codepipeline.Pipeline(this, 'MyPipeline', {\n  stages: [\n    {\n      stageName: 'Source',\n      actions: [sourceAction],\n    },\n    {\n      stageName: 'Build',\n      actions: [buildAction],\n    },\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.PipelineProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codebuild.IProject",
        "@aws-cdk/aws-codebuild.PipelineProject",
        "@aws-cdk/aws-codecommit.IRepository",
        "@aws-cdk/aws-codecommit.Repository",
        "@aws-cdk/aws-codecommit.RepositoryProps",
        "@aws-cdk/aws-codepipeline-actions.CodeBuildAction",
        "@aws-cdk/aws-codepipeline-actions.CodeBuildActionProps",
        "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceAction",
        "@aws-cdk/aws-codepipeline-actions.CodeCommitSourceActionProps",
        "@aws-cdk/aws-codepipeline.Artifact",
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.PipelineProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const project: codebuild.PipelineProject;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Arn, Construct, Duration, SecretValue, Stack } from '@aws-cdk/core';\nimport codebuild = require('@aws-cdk/aws-codebuild');\nimport codedeploy = require('@aws-cdk/aws-codedeploy');\nimport codepipeline = require('@aws-cdk/aws-codepipeline');\nimport codepipeline_actions = require('@aws-cdk/aws-codepipeline-actions');\nimport codecommit = require('@aws-cdk/aws-codecommit');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3 = require('@aws-cdk/aws-s3');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\nconst repository = new codecommit.Repository(this, 'MyRepository', {\n  repositoryName: 'MyRepository',\n});\nconst project = new codebuild.PipelineProject(this, 'MyProject');\n\nconst sourceOutput = new codepipeline.Artifact();\nconst sourceAction = new codepipeline_actions.CodeCommitSourceAction({\n  actionName: 'CodeCommit',\n  repository,\n  output: sourceOutput,\n});\nconst buildAction = new codepipeline_actions.CodeBuildAction({\n  actionName: 'CodeBuild',\n  project,\n  input: sourceOutput,\n  outputs: [new codepipeline.Artifact()], // optional\n  executeBatchBuild: true, // optional, defaults to false\n  combineBatchBuildArtifacts: true, // optional, defaults to false\n});\n\nnew codepipeline.Pipeline(this, 'MyPipeline', {\n  stages: [\n    {\n      stageName: 'Source',\n      actions: [sourceAction],\n    },\n    {\n      stageName: 'Build',\n      actions: [buildAction],\n    },\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 8,
        "75": 41,
        "104": 3,
        "106": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 6,
        "194": 7,
        "197": 7,
        "225": 6,
        "226": 1,
        "242": 6,
        "243": 6,
        "281": 13,
        "282": 2,
        "290": 1
      },
      "fqnsFingerprint": "c7e9c9cc2fde146b3d00862da85d5106853c34a878adf0d396047b974b9bc655"
    },
    "c359731718b76438d15bd11f9a0c768a16c33b54a877a41028b0ae5793932e37": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_stepfunctions as stepfunctions\n\n\npipeline = codepipeline.Pipeline(self, \"MyPipeline\")\ninput_artifact = codepipeline.Artifact()\nstart_state = stepfunctions.Pass(self, \"StartState\")\nsimple_state_machine = stepfunctions.StateMachine(self, \"SimpleStateMachine\",\n    definition=start_state\n)\nstep_function_action = codepipeline_actions.StepFunctionInvokeAction(\n    action_name=\"Invoke\",\n    state_machine=simple_state_machine,\n    state_machine_input=codepipeline_actions.StateMachineInput.file_path(input_artifact.at_path(\"assets/input.json\"))\n)\npipeline.add_stage(\n    stage_name=\"StepFunctions\",\n    actions=[step_function_action]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.StepFunctions;\n\n\nPipeline pipeline = new Pipeline(this, \"MyPipeline\");\nArtifact inputArtifact = new Artifact();\nPass startState = new Pass(this, \"StartState\");\nStateMachine simpleStateMachine = new StateMachine(this, \"SimpleStateMachine\", new StateMachineProps {\n    Definition = startState\n});\nStepFunctionInvokeAction stepFunctionAction = new StepFunctionInvokeAction(new StepFunctionsInvokeActionProps {\n    ActionName = \"Invoke\",\n    StateMachine = simpleStateMachine,\n    StateMachineInput = StateMachineInput.FilePath(inputArtifact.AtPath(\"assets/input.json\"))\n});\npipeline.AddStage(new StageOptions {\n    StageName = \"StepFunctions\",\n    Actions = new [] { stepFunctionAction }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.stepfunctions.*;\n\n\nPipeline pipeline = new Pipeline(this, \"MyPipeline\");\nArtifact inputArtifact = new Artifact();\nPass startState = new Pass(this, \"StartState\");\nStateMachine simpleStateMachine = StateMachine.Builder.create(this, \"SimpleStateMachine\")\n        .definition(startState)\n        .build();\nStepFunctionInvokeAction stepFunctionAction = StepFunctionInvokeAction.Builder.create()\n        .actionName(\"Invoke\")\n        .stateMachine(simpleStateMachine)\n        .stateMachineInput(StateMachineInput.filePath(inputArtifact.atPath(\"assets/input.json\")))\n        .build();\npipeline.addStage(StageOptions.builder()\n        .stageName(\"StepFunctions\")\n        .actions(List.of(stepFunctionAction))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "import stepfunctions \"github.com/aws-samples/dummy/awscdkawsstepfunctions\"\n\n\npipeline := codepipeline.NewPipeline(this, jsii.String(\"MyPipeline\"))\ninputArtifact := codepipeline.NewArtifact()\nstartState := stepfunctions.NewPass(this, jsii.String(\"StartState\"))\nsimpleStateMachine := stepfunctions.NewStateMachine(this, jsii.String(\"SimpleStateMachine\"), &stateMachineProps{\n\tdefinition: startState,\n})\nstepFunctionAction := codepipeline_actions.NewStepFunctionInvokeAction(&stepFunctionsInvokeActionProps{\n\tactionName: jsii.String(\"Invoke\"),\n\tstateMachine: simpleStateMachine,\n\tstateMachineInput: codepipeline_actions.stateMachineInput.filePath(inputArtifact.atPath(jsii.String(\"assets/input.json\"))),\n})\npipeline.addStage(&stageOptions{\n\tstageName: jsii.String(\"StepFunctions\"),\n\tactions: []iAction{\n\t\tstepFunctionAction,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as stepfunctions from '@aws-cdk/aws-stepfunctions';\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst inputArtifact = new codepipeline.Artifact();\nconst startState = new stepfunctions.Pass(this, 'StartState');\nconst simpleStateMachine  = new stepfunctions.StateMachine(this, 'SimpleStateMachine', {\n  definition: startState,\n});\nconst stepFunctionAction = new codepipeline_actions.StepFunctionInvokeAction({\n  actionName: 'Invoke',\n  stateMachine: simpleStateMachine,\n  stateMachineInput: codepipeline_actions.StateMachineInput.filePath(inputArtifact.atPath('assets/input.json')),\n});\npipeline.addStage({\n  stageName: 'StepFunctions',\n  actions: [stepFunctionAction],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.StageOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline-actions.StateMachineInput",
        "@aws-cdk/aws-codepipeline-actions.StateMachineInput#filePath",
        "@aws-cdk/aws-codepipeline-actions.StepFunctionInvokeAction",
        "@aws-cdk/aws-codepipeline-actions.StepFunctionsInvokeActionProps",
        "@aws-cdk/aws-codepipeline.Artifact",
        "@aws-cdk/aws-codepipeline.Artifact#atPath",
        "@aws-cdk/aws-codepipeline.ArtifactPath",
        "@aws-cdk/aws-codepipeline.Pipeline",
        "@aws-cdk/aws-codepipeline.Pipeline#addStage",
        "@aws-cdk/aws-codepipeline.StageOptions",
        "@aws-cdk/aws-stepfunctions.IChainable",
        "@aws-cdk/aws-stepfunctions.IStateMachine",
        "@aws-cdk/aws-stepfunctions.Pass",
        "@aws-cdk/aws-stepfunctions.StateMachine",
        "@aws-cdk/aws-stepfunctions.StateMachineProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Arn, Construct, Duration, SecretValue, Stack } from '@aws-cdk/core';\nimport codebuild = require('@aws-cdk/aws-codebuild');\nimport codedeploy = require('@aws-cdk/aws-codedeploy');\nimport codepipeline = require('@aws-cdk/aws-codepipeline');\nimport codepipeline_actions = require('@aws-cdk/aws-codepipeline-actions');\nimport codecommit = require('@aws-cdk/aws-codecommit');\nimport iam = require('@aws-cdk/aws-iam');\nimport lambda = require('@aws-cdk/aws-lambda');\nimport s3 = require('@aws-cdk/aws-s3');\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst pipeline = new codepipeline.Pipeline(this, 'MyPipeline');\nconst inputArtifact = new codepipeline.Artifact();\nconst startState = new stepfunctions.Pass(this, 'StartState');\nconst simpleStateMachine  = new stepfunctions.StateMachine(this, 'SimpleStateMachine', {\n  definition: startState,\n});\nconst stepFunctionAction = new codepipeline_actions.StepFunctionInvokeAction({\n  actionName: 'Invoke',\n  stateMachine: simpleStateMachine,\n  stateMachineInput: codepipeline_actions.StateMachineInput.filePath(inputArtifact.atPath('assets/input.json')),\n});\npipeline.addStage({\n  stageName: 'StepFunctions',\n  actions: [stepFunctionAction],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 32,
        "104": 3,
        "192": 1,
        "193": 3,
        "194": 9,
        "196": 3,
        "197": 5,
        "225": 5,
        "226": 1,
        "242": 5,
        "243": 5,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "35d13d74be0627f8ffe708351c2b88638ac05c8e9bb1a695e737445bf6bb7ec4"
    },
    "6d4e9f8e1f7ce803ce05b29d076b77fd19faa97786c49b2c1a9f86b172a4b7ed": {
      "translations": {
        "python": {
          "source": "# Insert a new Stage at an arbitrary point\n# pipeline: codepipeline.Pipeline\n# another_stage: codepipeline.IStage\n# yet_another_stage: codepipeline.IStage\n\n\nsome_stage = pipeline.add_stage(\n    stage_name=\"SomeStage\",\n    placement=codepipeline.StagePlacement(\n        # note: you can only specify one of the below properties\n        right_before=another_stage,\n        just_after=yet_another_stage\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Insert a new Stage at an arbitrary point\nPipeline pipeline;\nIStage anotherStage;\nIStage yetAnotherStage;\n\n\nIStage someStage = pipeline.AddStage(new StageOptions {\n    StageName = \"SomeStage\",\n    Placement = new StagePlacement {\n        // note: you can only specify one of the below properties\n        RightBefore = anotherStage,\n        JustAfter = yetAnotherStage\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Insert a new Stage at an arbitrary point\nPipeline pipeline;\nIStage anotherStage;\nIStage yetAnotherStage;\n\n\nIStage someStage = pipeline.addStage(StageOptions.builder()\n        .stageName(\"SomeStage\")\n        .placement(StagePlacement.builder()\n                // note: you can only specify one of the below properties\n                .rightBefore(anotherStage)\n                .justAfter(yetAnotherStage)\n                .build())\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "// Insert a new Stage at an arbitrary point\nvar pipeline pipeline\nvar anotherStage iStage\nvar yetAnotherStage iStage\n\n\nsomeStage := pipeline.addStage(&stageOptions{\n\tstageName: jsii.String(\"SomeStage\"),\n\tplacement: &stagePlacement{\n\t\t// note: you can only specify one of the below properties\n\t\trightBefore: anotherStage,\n\t\tjustAfter: yetAnotherStage,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Insert a new Stage at an arbitrary point\ndeclare const pipeline: codepipeline.Pipeline;\ndeclare const anotherStage: codepipeline.IStage;\ndeclare const yetAnotherStage: codepipeline.IStage;\n\nconst someStage = pipeline.addStage({\n  stageName: 'SomeStage',\n  placement: {\n    // note: you can only specify one of the below properties\n    rightBefore: anotherStage,\n    justAfter: yetAnotherStage,\n  }\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.StagePlacement"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.IStage",
        "@aws-cdk/aws-codepipeline.Pipeline#addStage",
        "@aws-cdk/aws-codepipeline.StageOptions",
        "@aws-cdk/aws-codepipeline.StagePlacement"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Insert a new Stage at an arbitrary point\ndeclare const pipeline: codepipeline.Pipeline;\ndeclare const anotherStage: codepipeline.IStage;\ndeclare const yetAnotherStage: codepipeline.IStage;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { App, Duration, PhysicalName, Stack } from '@aws-cdk/core';\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\nimport * as codepipeline_actions from '@aws-cdk/aws-codepipeline-actions';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst someStage = pipeline.addStage({\n  stageName: 'SomeStage',\n  placement: {\n    // note: you can only specify one of the below properties\n    rightBefore: anotherStage,\n    justAfter: yetAnotherStage,\n  }\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 18,
        "130": 3,
        "153": 3,
        "169": 3,
        "193": 2,
        "194": 1,
        "196": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "3a0bc57bdc622d2a5d70113f838d2ae1320d3edc0ebbca138caece2ba32c91d4"
    },
    "7057a5375a19aa749d44ede95b1b82bbaaa7ecbbb0d3ac4bcf180967e51bb8fe": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_codepipeline as codepipeline\n\n# action: codepipeline.Action\n\nstage_props = codepipeline.StageProps(\n    stage_name=\"stageName\",\n\n    # the properties below are optional\n    actions=[action],\n    transition_disabled_reason=\"transitionDisabledReason\",\n    transition_to_enabled=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.CodePipeline;\n\nAction action;\n\nStageProps stageProps = new StageProps {\n    StageName = \"stageName\",\n\n    // the properties below are optional\n    Actions = new [] { action },\n    TransitionDisabledReason = \"transitionDisabledReason\",\n    TransitionToEnabled = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.codepipeline.*;\n\nAction action;\n\nStageProps stageProps = StageProps.builder()\n        .stageName(\"stageName\")\n\n        // the properties below are optional\n        .actions(List.of(action))\n        .transitionDisabledReason(\"transitionDisabledReason\")\n        .transitionToEnabled(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport codepipeline \"github.com/aws-samples/dummy/awscdkawscodepipeline\"\n\nvar action action\n\nstageProps := &stageProps{\n\tstageName: jsii.String(\"stageName\"),\n\n\t// the properties below are optional\n\tactions: []iAction{\n\t\taction,\n\t},\n\ttransitionDisabledReason: jsii.String(\"transitionDisabledReason\"),\n\ttransitionToEnabled: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const action: codepipeline.Action;\nconst stageProps: codepipeline.StageProps = {\n  stageName: 'stageName',\n\n  // the properties below are optional\n  actions: [action],\n  transitionDisabledReason: 'transitionDisabledReason',\n  transitionToEnabled: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-codepipeline.StageProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-codepipeline.StageProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as codepipeline from '@aws-cdk/aws-codepipeline';\n\ndeclare const action: codepipeline.Action;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stageProps: codepipeline.StageProps = {\n  stageName: 'stageName',\n\n  // the properties below are optional\n  actions: [action],\n  transitionDisabledReason: 'transitionDisabledReason',\n  transitionToEnabled: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 12,
        "91": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "9e99e261fbe5670c0aff71517ca055b6467f29d88ea2a4879e0dd2d8e9582f8d"
    }
  }
}