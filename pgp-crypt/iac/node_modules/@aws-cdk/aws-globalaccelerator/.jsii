{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-ec2": "1.193.0",
    "@aws-cdk/core": "1.193.0",
    "@aws-cdk/custom-resources": "1.193.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::GlobalAccelerator",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.74.0 (build 6d08790)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::GlobalAccelerator",
    "aws-globalaccelerator"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-globalaccelerator",
  "readme": {
    "markdown": "# AWS::GlobalAccelerator Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n## Introduction\n\nAWS Global Accelerator (AGA) is a service that improves the availability and\nperformance of your applications with local or global users.\n\nIt intercepts your user's network connection at an edge location close to\nthem, and routes it to one of potentially multiple, redundant backends across\nthe more reliable and less congested AWS global network.\n\nAGA can be used to route traffic to Application Load Balancers, Network Load\nBalancers, EC2 Instances and Elastic IP Addresses.\n\nFor more information, see the [AWS Global\nAccelerator Developer Guide](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_GlobalAccelerator.html).\n\n## Example\n\nHere's an example that sets up a Global Accelerator for two Application Load\nBalancers in two different AWS Regions:\n\n```ts\n// Create an Accelerator\nconst accelerator = new globalaccelerator.Accelerator(this, 'Accelerator');\n\n// Create a Listener\nconst listener = accelerator.addListener('Listener', {\n  portRanges: [\n    { fromPort: 80 },\n    { fromPort: 443 },\n  ],\n});\n\n// Import the Load Balancers\nconst nlb1 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB1', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b',\n});\nconst nlb2 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB2', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1',\n});\n\n// Add one EndpointGroup for each Region we are targeting\nlistener.addEndpointGroup('Group1', {\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb1)],\n});\nlistener.addEndpointGroup('Group2', {\n  // Imported load balancers automatically calculate their Region from the ARN.\n  // If you are load balancing to other resources, you must also pass a `region`\n  // parameter here.\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb2)],\n});\n```\n\n## Concepts\n\nThe **Accelerator** construct defines a Global Accelerator resource.\n\nAn Accelerator includes one or more **Listeners** that accepts inbound\nconnections on one or more ports.\n\nEach Listener has one or more **Endpoint Groups**, representing multiple\ngeographically distributed copies of your application. There is one Endpoint\nGroup per Region, and user traffic is routed to the closest Region by default.\n\nAn Endpoint Group consists of one or more **Endpoints**, which is where the\nuser traffic coming in on the Listener is ultimately sent. The Endpoint port\nused is the same as the traffic came in on at the Listener, unless overridden.\n\n## Types of Endpoints\n\nThere are 4 types of Endpoints, and they can be found in the\n`@aws-cdk/aws-globalaccelerator-endpoints` package:\n\n* Application Load Balancers\n* Network Load Balancers\n* EC2 Instances\n* Elastic IP Addresses\n\n### Application Load Balancers\n\n```ts\ndeclare const alb: elbv2.ApplicationLoadBalancer;\ndeclare const listener: globalaccelerator.Listener;\n\nlistener.addEndpointGroup('Group', {\n  endpoints: [\n    new ga_endpoints.ApplicationLoadBalancerEndpoint(alb, {\n      weight: 128,\n      preserveClientIp: true,\n    }),\n  ],\n});\n```\n\n### Network Load Balancers\n\n```ts\ndeclare const nlb: elbv2.NetworkLoadBalancer;\ndeclare const listener: globalaccelerator.Listener;\n\nlistener.addEndpointGroup('Group', {\n  endpoints: [\n    new ga_endpoints.NetworkLoadBalancerEndpoint(nlb, {\n      weight: 128,\n    }),\n  ],\n});\n```\n\n### EC2 Instances\n\n```ts\ndeclare const listener: globalaccelerator.Listener;\ndeclare const instance: ec2.Instance;\n\nlistener.addEndpointGroup('Group', {\n  endpoints: [\n    new ga_endpoints.InstanceEndpoint(instance, {\n      weight: 128,\n      preserveClientIp: true,\n    }),\n  ],\n});\n```\n\n### Elastic IP Addresses\n\n```ts\ndeclare const listener: globalaccelerator.Listener;\ndeclare const eip: ec2.CfnEIP;\n\nlistener.addEndpointGroup('Group', {\n  endpoints: [\n    new ga_endpoints.CfnEipEndpoint(eip, {\n      weight: 128,\n    }),\n  ],\n});\n```\n\n## Client IP Address Preservation and Security Groups\n\nWhen using the `preserveClientIp` feature, AGA creates\n**Elastic Network Interfaces** (ENIs) in your AWS account, that are\nassociated with a Security Group AGA creates for you. You can use the\nsecurity group created by AGA as a source group in other security groups\n(such as those for EC2 instances or Elastic Load Balancers), if you want to\nrestrict incoming traffic to the AGA security group rules.\n\nAGA creates a specific security group called `GlobalAccelerator` for each VPC\nit has an ENI in (this behavior can not be changed). CloudFormation doesn't\nsupport referencing the security group created by AGA, but this construct\nlibrary comes with a custom resource that enables you to reference the AGA\nsecurity group.\n\nCall `endpointGroup.connectionsPeer()` to obtain a reference to the Security Group\nwhich you can use in connection rules. You must pass a reference to the VPC in whose\ncontext the security group will be looked up. Example:\n\n```ts\ndeclare const listener: globalaccelerator.Listener;\n\n// Non-open ALB\ndeclare const alb: elbv2.ApplicationLoadBalancer;\n\nconst endpointGroup = listener.addEndpointGroup('Group', {\n  endpoints: [\n    new ga_endpoints.ApplicationLoadBalancerEndpoint(alb, {\n      preserveClientIp: true,\n    }),\n  ],\n});\n\n// Remember that there is only one AGA security group per VPC.\ndeclare const vpc: ec2.Vpc;\nconst agaSg = endpointGroup.connectionsPeer('GlobalAcceleratorSG', vpc);\n\n// Allow connections from the AGA to the ALB\nalb.connections.allowFrom(agaSg, ec2.Port.tcp(443));\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-globalaccelerator",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.GlobalAccelerator",
      "packageId": "Amazon.CDK.AWS.GlobalAccelerator"
    },
    "java": {
      "maven": {
        "artifactId": "globalaccelerator",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.globalaccelerator"
    },
    "js": {
      "npm": "@aws-cdk/aws-globalaccelerator"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-globalaccelerator",
      "module": "aws_cdk.aws_globalaccelerator"
    }
  },
  "types": {
    "@aws-cdk/aws-globalaccelerator.Accelerator": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "The Accelerator construct.",
        "example": "// Create an Accelerator\nconst accelerator = new globalaccelerator.Accelerator(this, 'Accelerator');\n\n// Create a Listener\nconst listener = accelerator.addListener('Listener', {\n  portRanges: [\n    { fromPort: 80 },\n    { fromPort: 443 },\n  ],\n});\n\n// Import the Load Balancers\nconst nlb1 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB1', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b',\n});\nconst nlb2 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB2', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1',\n});\n\n// Add one EndpointGroup for each Region we are targeting\nlistener.addEndpointGroup('Group1', {\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb1)],\n});\nlistener.addEndpointGroup('Group2', {\n  // Imported load balancers automatically calculate their Region from the ARN.\n  // If you are load balancing to other resources, you must also pass a `region`\n  // parameter here.\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb2)],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.Accelerator",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/accelerator.ts",
          "line": 85
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.AcceleratorProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-globalaccelerator.IAccelerator"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/accelerator.ts",
        "line": 63
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "import from attributes."
          },
          "locationInModule": {
            "filename": "lib/accelerator.ts",
            "line": 67
          },
          "name": "fromAcceleratorAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-globalaccelerator.AcceleratorAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.IAccelerator"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a listener to the accelerator."
          },
          "locationInModule": {
            "filename": "lib/accelerator.ts",
            "line": 100
          },
          "name": "addListener",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-globalaccelerator.ListenerOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.Listener"
            }
          }
        }
      ],
      "name": "Accelerator",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/accelerator.ts",
            "line": 77
          },
          "name": "acceleratorArn",
          "overrides": "@aws-cdk/aws-globalaccelerator.IAccelerator",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static IP addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/accelerator.ts",
            "line": 83
          },
          "name": "dnsName",
          "overrides": "@aws-cdk/aws-globalaccelerator.IAccelerator",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/accelerator:Accelerator"
    },
    "@aws-cdk/aws-globalaccelerator.AcceleratorAttributes": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes required to import an existing accelerator to the stack.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst acceleratorAttributes: globalaccelerator.AcceleratorAttributes = {\n  acceleratorArn: 'acceleratorArn',\n  dnsName: 'dnsName',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.AcceleratorAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/accelerator.ts",
        "line": 48
      },
      "name": "AcceleratorAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/accelerator.ts",
            "line": 52
          },
          "name": "acceleratorArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The DNS name of the accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/accelerator.ts",
            "line": 57
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/accelerator:AcceleratorAttributes"
    },
    "@aws-cdk/aws-globalaccelerator.AcceleratorProps": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construct properties of the Accelerator.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst acceleratorProps: globalaccelerator.AcceleratorProps = {\n  acceleratorName: 'acceleratorName',\n  enabled: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.AcceleratorProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/accelerator.ts",
        "line": 29
      },
      "name": "AcceleratorProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- resource ID",
            "stability": "stable",
            "summary": "The name of the accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/accelerator.ts",
            "line": 35
          },
          "name": "acceleratorName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Indicates whether the accelerator is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/accelerator.ts",
            "line": 42
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/accelerator:AcceleratorProps"
    },
    "@aws-cdk/aws-globalaccelerator.CfnAccelerator": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::GlobalAccelerator::Accelerator",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::GlobalAccelerator::Accelerator` resource is a Global Accelerator resource type that contains information about how you create an accelerator. An accelerator includes one or more listeners that process inbound connections and direct traffic to one or more endpoint groups, each of which includes endpoints, such as Application Load Balancers, Network Load Balancers, and Amazon EC2 instances.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::GlobalAccelerator::Accelerator`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst cfnAccelerator = new globalaccelerator.CfnAccelerator(this, 'MyCfnAccelerator', {\n  name: 'name',\n\n  // the properties below are optional\n  enabled: false,\n  ipAddresses: ['ipAddresses'],\n  ipAddressType: 'ipAddressType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});"
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.CfnAccelerator",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::GlobalAccelerator::Accelerator`."
        },
        "locationInModule": {
          "filename": "lib/globalaccelerator.generated.ts",
          "line": 242
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.CfnAcceleratorProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/globalaccelerator.generated.ts",
        "line": 135
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 264
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 279
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnAccelerator",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 139
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "AcceleratorArn"
            },
            "stability": "external",
            "summary": "The ARN of the accelerator, such as `arn:aws:globalaccelerator::012345678901:accelerator/1234abcd-abcd-1234-abcd-1234abcdefgh` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 164
          },
          "name": "attrAcceleratorArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DnsName"
            },
            "stability": "external",
            "summary": "The Domain Name System (DNS) name that Global Accelerator creates that points to an accelerator's static IPv4 addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 170
          },
          "name": "attrDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "DualStackDnsName"
            },
            "stability": "external",
            "summary": "The DNS name that Global Accelerator creates that points to a dual-stack accelerator's four static IP addresses: two IPv4 addresses and two IPv6 addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 176
          },
          "name": "attrDualStackDnsName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Ipv4Addresses"
            },
            "remarks": "An IP address set can have a maximum of two IP addresses.",
            "stability": "external",
            "summary": "The array of IPv4 addresses in the IP address set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 182
          },
          "name": "attrIpv4Addresses",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Ipv6Addresses"
            },
            "remarks": "An IP address set can have a maximum of two IP addresses.",
            "stability": "external",
            "summary": "The array of IPv6 addresses in the IP address set."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 188
          },
          "name": "attrIpv6Addresses",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 269
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-tags"
            },
            "remarks": "For more information, see [Tagging](https://docs.aws.amazon.com/global-accelerator/latest/dg/tagging-in-global-accelerator.html) in the *AWS Global Accelerator Developer Guide* .",
            "stability": "external",
            "summary": "Create tags for an accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 233
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-name"
            },
            "remarks": "The name must contain only alphanumeric characters or hyphens (-), and must not begin or end with a hyphen.",
            "stability": "external",
            "summary": "The name of the accelerator."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 195
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-enabled"
            },
            "remarks": "If the value is set to true, the accelerator cannot be deleted. If set to false, accelerator can be deleted.",
            "stability": "external",
            "summary": "Indicates whether the accelerator is enabled. The value is true or false. The default value is true."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 204
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-ipaddresses"
            },
            "remarks": "You can specify one or two addresses, separated by a comma. Do not include the /32 suffix.\n\nOnly one IP address from each of your IP address ranges can be used for each accelerator. If you specify only one IP address from your IP address range, Global Accelerator assigns a second static IP address for the accelerator from the AWS IP address pool.\n\nNote that you can't update IP addresses for an existing accelerator. To change them, you must create a new accelerator with the new addresses.\n\nFor more information, see [Bring Your Own IP Addresses (BYOIP)](https://docs.aws.amazon.com/global-accelerator/latest/dg/using-byoip.html) in the *AWS Global Accelerator Developer Guide* .",
            "stability": "external",
            "summary": "Optionally, if you've added your own IP address pool to Global Accelerator (BYOIP), you can choose IP addresses from your own pool to use for the accelerator's static IP addresses when you create an accelerator."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 217
          },
          "name": "ipAddresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-ipaddresstype"
            },
            "remarks": "For a standard accelerator, the value can be IPV4 or DUAL_STACK.",
            "stability": "external",
            "summary": "The IP address type that an accelerator supports."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 224
          },
          "name": "ipAddressType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/globalaccelerator.generated:CfnAccelerator"
    },
    "@aws-cdk/aws-globalaccelerator.CfnAcceleratorProps": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnAccelerator`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst cfnAcceleratorProps: globalaccelerator.CfnAcceleratorProps = {\n  name: 'name',\n\n  // the properties below are optional\n  enabled: false,\n  ipAddresses: ['ipAddresses'],\n  ipAddressType: 'ipAddressType',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};"
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.CfnAcceleratorProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/globalaccelerator.generated.ts",
        "line": 19
      },
      "name": "CfnAcceleratorProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-name"
            },
            "remarks": "The name must contain only alphanumeric characters or hyphens (-), and must not begin or end with a hyphen.",
            "stability": "external",
            "summary": "The name of the accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 26
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-enabled"
            },
            "remarks": "If the value is set to true, the accelerator cannot be deleted. If set to false, accelerator can be deleted.",
            "stability": "external",
            "summary": "Indicates whether the accelerator is enabled. The value is true or false. The default value is true."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 35
          },
          "name": "enabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-ipaddresses"
            },
            "remarks": "You can specify one or two addresses, separated by a comma. Do not include the /32 suffix.\n\nOnly one IP address from each of your IP address ranges can be used for each accelerator. If you specify only one IP address from your IP address range, Global Accelerator assigns a second static IP address for the accelerator from the AWS IP address pool.\n\nNote that you can't update IP addresses for an existing accelerator. To change them, you must create a new accelerator with the new addresses.\n\nFor more information, see [Bring Your Own IP Addresses (BYOIP)](https://docs.aws.amazon.com/global-accelerator/latest/dg/using-byoip.html) in the *AWS Global Accelerator Developer Guide* .",
            "stability": "external",
            "summary": "Optionally, if you've added your own IP address pool to Global Accelerator (BYOIP), you can choose IP addresses from your own pool to use for the accelerator's static IP addresses when you create an accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 48
          },
          "name": "ipAddresses",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-ipaddresstype"
            },
            "remarks": "For a standard accelerator, the value can be IPV4 or DUAL_STACK.",
            "stability": "external",
            "summary": "The IP address type that an accelerator supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 55
          },
          "name": "ipAddressType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-accelerator.html#cfn-globalaccelerator-accelerator-tags"
            },
            "remarks": "For more information, see [Tagging](https://docs.aws.amazon.com/global-accelerator/latest/dg/tagging-in-global-accelerator.html) in the *AWS Global Accelerator Developer Guide* .",
            "stability": "external",
            "summary": "Create tags for an accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 64
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/globalaccelerator.generated:CfnAcceleratorProps"
    },
    "@aws-cdk/aws-globalaccelerator.CfnEndpointGroup": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::GlobalAccelerator::EndpointGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::GlobalAccelerator::EndpointGroup` resource is a Global Accelerator resource type that contains information about how you create an endpoint group for the specified listener. An endpoint group is a collection of endpoints in one AWS Region .",
        "stability": "external",
        "summary": "A CloudFormation `AWS::GlobalAccelerator::EndpointGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst cfnEndpointGroup = new globalaccelerator.CfnEndpointGroup(this, 'MyCfnEndpointGroup', {\n  endpointGroupRegion: 'endpointGroupRegion',\n  listenerArn: 'listenerArn',\n\n  // the properties below are optional\n  endpointConfigurations: [{\n    endpointId: 'endpointId',\n\n    // the properties below are optional\n    clientIpPreservationEnabled: false,\n    weight: 123,\n  }],\n  healthCheckIntervalSeconds: 123,\n  healthCheckPath: 'healthCheckPath',\n  healthCheckPort: 123,\n  healthCheckProtocol: 'healthCheckProtocol',\n  portOverrides: [{\n    endpointPort: 123,\n    listenerPort: 123,\n  }],\n  thresholdCount: 123,\n  trafficDialPercentage: 123,\n});"
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.CfnEndpointGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::GlobalAccelerator::EndpointGroup`."
        },
        "locationInModule": {
          "filename": "lib/globalaccelerator.generated.ts",
          "line": 569
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.CfnEndpointGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/globalaccelerator.generated.ts",
        "line": 455
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 593
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 613
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnEndpointGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 459
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "EndpointGroupArn"
            },
            "stability": "external",
            "summary": "The ARN of the endpoint group, such as `arn:aws:globalaccelerator::012345678901:accelerator/1234abcd-abcd-1234-abcd-1234abcdefgh/listener/0123vxyz/endpoint-group/098765zyxwvu` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 484
          },
          "name": "attrEndpointGroupArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 598
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-endpointgroupregion"
            },
            "stability": "external",
            "summary": "The AWS Regions where the endpoint group is located."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 491
          },
          "name": "endpointGroupRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-listenerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the listener."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 498
          },
          "name": "listenerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-endpointconfigurations"
            },
            "stability": "external",
            "summary": "The list of endpoint objects."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 505
          },
          "name": "endpointConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-globalaccelerator.CfnEndpointGroup.EndpointConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckintervalseconds"
            },
            "remarks": "The default value is 30.",
            "stability": "external",
            "summary": "The time—10 seconds or 30 seconds—between health checks for each endpoint."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 512
          },
          "name": "healthCheckIntervalSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckpath"
            },
            "remarks": "The default is slash (/).",
            "stability": "external",
            "summary": "If the protocol is HTTP/S, then this value provides the ping path that Global Accelerator uses for the destination on the endpoints for health checks."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 519
          },
          "name": "healthCheckPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckport"
            },
            "remarks": "The default port is the port for the listener that this endpoint group is associated with. If the listener port is a list, Global Accelerator uses the first specified port in the list of ports.",
            "stability": "external",
            "summary": "The port that Global Accelerator uses to perform health checks on endpoints that are part of this endpoint group."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 528
          },
          "name": "healthCheckPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckprotocol"
            },
            "remarks": "The default value is TCP.",
            "stability": "external",
            "summary": "The protocol that Global Accelerator uses to perform health checks on endpoints that are part of this endpoint group."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 535
          },
          "name": "healthCheckProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-portoverrides"
            },
            "remarks": "Using a port override lets you map a list of external destination ports (that your users send traffic to) to a list of internal destination ports that you want an application endpoint to receive traffic on.",
            "stability": "external",
            "summary": "Allows you to override the destination ports used to route traffic to an endpoint."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 542
          },
          "name": "portOverrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-globalaccelerator.CfnEndpointGroup.PortOverrideProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-thresholdcount"
            },
            "remarks": "The default value is 3.",
            "stability": "external",
            "summary": "The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 549
          },
          "name": "thresholdCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-trafficdialpercentage"
            },
            "remarks": "Additional traffic is distributed to other endpoint groups for this listener.\n\nUse this action to increase (dial up) or decrease (dial down) traffic to a specific Region. The percentage is applied to the traffic that would otherwise have been routed to the Region based on optimal routing.\n\nThe default value is 100.",
            "stability": "external",
            "summary": "The percentage of traffic to send to an AWS Regions ."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 560
          },
          "name": "trafficDialPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/globalaccelerator.generated:CfnEndpointGroup"
    },
    "@aws-cdk/aws-globalaccelerator.CfnEndpointGroup.EndpointConfigurationProperty": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-globalaccelerator-endpointgroup-endpointconfiguration.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "A resource must be valid and active when you add it as an endpoint.",
        "stability": "external",
        "summary": "A complex type for endpoints.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst endpointConfigurationProperty: globalaccelerator.CfnEndpointGroup.EndpointConfigurationProperty = {\n  endpointId: 'endpointId',\n\n  // the properties below are optional\n  clientIpPreservationEnabled: false,\n  weight: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.CfnEndpointGroup.EndpointConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/globalaccelerator.generated.ts",
        "line": 627
      },
      "name": "EndpointConfigurationProperty",
      "namespace": "CfnEndpointGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-globalaccelerator-endpointgroup-endpointconfiguration.html#cfn-globalaccelerator-endpointgroup-endpointconfiguration-endpointid"
            },
            "remarks": "If the endpoint is a Network Load Balancer or Application Load Balancer, this is the Amazon Resource Name (ARN) of the resource. If the endpoint is an Elastic IP address, this is the Elastic IP address allocation ID. For Amazon EC2 instances, this is the EC2 instance ID. A resource must be valid and active when you add it as an endpoint.\n\nAn Application Load Balancer can be either internal or internet-facing.",
            "stability": "external",
            "summary": "An ID for the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 645
          },
          "name": "endpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-globalaccelerator-endpointgroup-endpointconfiguration.html#cfn-globalaccelerator-endpointgroup-endpointconfiguration-clientippreservationenabled"
            },
            "remarks": "The value is true or false. The default value is true for new accelerators.\n\nIf the value is set to true, the client's IP address is preserved in the `X-Forwarded-For` request header as traffic travels to applications on the Application Load Balancer endpoint fronted by the accelerator.\n\nFor more information, see [Preserve Client IP Addresses](https://docs.aws.amazon.com/global-accelerator/latest/dg/preserve-client-ip-address.html) in the *AWS Global Accelerator Developer Guide* .",
            "stability": "external",
            "summary": "Indicates whether client IP address preservation is enabled for an Application Load Balancer endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 637
          },
          "name": "clientIpPreservationEnabled",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-globalaccelerator-endpointgroup-endpointconfiguration.html#cfn-globalaccelerator-endpointgroup-endpointconfiguration-weight"
            },
            "remarks": "When you add weights to endpoints, you configure Global Accelerator to route traffic based on proportions that you specify. For example, you might specify endpoint weights of 4, 5, 5, and 6 (sum=20). The result is that 4/20 of your traffic, on average, is routed to the first endpoint, 5/20 is routed both to the second and third endpoints, and 6/20 is routed to the last endpoint. For more information, see [Endpoint Weights](https://docs.aws.amazon.com/global-accelerator/latest/dg/about-endpoints-endpoint-weights.html) in the *AWS Global Accelerator Developer Guide* .",
            "stability": "external",
            "summary": "The weight associated with the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 651
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/globalaccelerator.generated:CfnEndpointGroup.EndpointConfigurationProperty"
    },
    "@aws-cdk/aws-globalaccelerator.CfnEndpointGroup.PortOverrideProperty": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-globalaccelerator-endpointgroup-portoverride.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "For example, you can create a port override in which the listener receives user traffic on ports 80 and 443, but your accelerator routes that traffic to ports 1080 and 1443, respectively, on the endpoints.\n\nFor more information, see [Port overrides](https://docs.aws.amazon.com/global-accelerator/latest/dg/about-endpoint-groups-port-override.html) in the *AWS Global Accelerator Developer Guide* .",
        "stability": "external",
        "summary": "Override specific listener ports used to route traffic to endpoints that are part of an endpoint group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst portOverrideProperty: globalaccelerator.CfnEndpointGroup.PortOverrideProperty = {\n  endpointPort: 123,\n  listenerPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.CfnEndpointGroup.PortOverrideProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/globalaccelerator.generated.ts",
        "line": 721
      },
      "name": "PortOverrideProperty",
      "namespace": "CfnEndpointGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-globalaccelerator-endpointgroup-portoverride.html#cfn-globalaccelerator-endpointgroup-portoverride-endpointport"
            },
            "remarks": "This is the port on the endpoint, such as the Application Load Balancer or Amazon EC2 instance.",
            "stability": "external",
            "summary": "The endpoint port that you want a listener port to be mapped to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 727
          },
          "name": "endpointPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-globalaccelerator-endpointgroup-portoverride.html#cfn-globalaccelerator-endpointgroup-portoverride-listenerport"
            },
            "remarks": "This is the port that user traffic arrives to the Global Accelerator on.",
            "stability": "external",
            "summary": "The listener port that you want to map to a specific endpoint port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 733
          },
          "name": "listenerPort",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/globalaccelerator.generated:CfnEndpointGroup.PortOverrideProperty"
    },
    "@aws-cdk/aws-globalaccelerator.CfnEndpointGroupProps": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnEndpointGroup`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst cfnEndpointGroupProps: globalaccelerator.CfnEndpointGroupProps = {\n  endpointGroupRegion: 'endpointGroupRegion',\n  listenerArn: 'listenerArn',\n\n  // the properties below are optional\n  endpointConfigurations: [{\n    endpointId: 'endpointId',\n\n    // the properties below are optional\n    clientIpPreservationEnabled: false,\n    weight: 123,\n  }],\n  healthCheckIntervalSeconds: 123,\n  healthCheckPath: 'healthCheckPath',\n  healthCheckPort: 123,\n  healthCheckProtocol: 'healthCheckProtocol',\n  portOverrides: [{\n    endpointPort: 123,\n    listenerPort: 123,\n  }],\n  thresholdCount: 123,\n  trafficDialPercentage: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.CfnEndpointGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/globalaccelerator.generated.ts",
        "line": 292
      },
      "name": "CfnEndpointGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-endpointgroupregion"
            },
            "stability": "external",
            "summary": "The AWS Regions where the endpoint group is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 299
          },
          "name": "endpointGroupRegion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-listenerarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 306
          },
          "name": "listenerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-endpointconfigurations"
            },
            "stability": "external",
            "summary": "The list of endpoint objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 313
          },
          "name": "endpointConfigurations",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-globalaccelerator.CfnEndpointGroup.EndpointConfigurationProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckintervalseconds"
            },
            "remarks": "The default value is 30.",
            "stability": "external",
            "summary": "The time—10 seconds or 30 seconds—between health checks for each endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 320
          },
          "name": "healthCheckIntervalSeconds",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckpath"
            },
            "remarks": "The default is slash (/).",
            "stability": "external",
            "summary": "If the protocol is HTTP/S, then this value provides the ping path that Global Accelerator uses for the destination on the endpoints for health checks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 327
          },
          "name": "healthCheckPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckport"
            },
            "remarks": "The default port is the port for the listener that this endpoint group is associated with. If the listener port is a list, Global Accelerator uses the first specified port in the list of ports.",
            "stability": "external",
            "summary": "The port that Global Accelerator uses to perform health checks on endpoints that are part of this endpoint group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 336
          },
          "name": "healthCheckPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckprotocol"
            },
            "remarks": "The default value is TCP.",
            "stability": "external",
            "summary": "The protocol that Global Accelerator uses to perform health checks on endpoints that are part of this endpoint group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 343
          },
          "name": "healthCheckProtocol",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-portoverrides"
            },
            "remarks": "Using a port override lets you map a list of external destination ports (that your users send traffic to) to a list of internal destination ports that you want an application endpoint to receive traffic on.",
            "stability": "external",
            "summary": "Allows you to override the destination ports used to route traffic to an endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 350
          },
          "name": "portOverrides",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-globalaccelerator.CfnEndpointGroup.PortOverrideProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-thresholdcount"
            },
            "remarks": "The default value is 3.",
            "stability": "external",
            "summary": "The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 357
          },
          "name": "thresholdCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-trafficdialpercentage"
            },
            "remarks": "Additional traffic is distributed to other endpoint groups for this listener.\n\nUse this action to increase (dial up) or decrease (dial down) traffic to a specific Region. The percentage is applied to the traffic that would otherwise have been routed to the Region based on optimal routing.\n\nThe default value is 100.",
            "stability": "external",
            "summary": "The percentage of traffic to send to an AWS Regions ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 368
          },
          "name": "trafficDialPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/globalaccelerator.generated:CfnEndpointGroupProps"
    },
    "@aws-cdk/aws-globalaccelerator.CfnListener": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::GlobalAccelerator::Listener",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html",
          "exampleMetadata": "fixture=_generated"
        },
        "remarks": "The `AWS::GlobalAccelerator::Listener` resource is a Global Accelerator resource type that contains information about how you create a listener to process inbound connections from clients to an accelerator. Connections arrive to assigned static IP addresses on a port, port range, or list of port ranges that you specify.",
        "stability": "external",
        "summary": "A CloudFormation `AWS::GlobalAccelerator::Listener`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst cfnListener = new globalaccelerator.CfnListener(this, 'MyCfnListener', {\n  acceleratorArn: 'acceleratorArn',\n  portRanges: [{\n    fromPort: 123,\n    toPort: 123,\n  }],\n  protocol: 'protocol',\n\n  // the properties below are optional\n  clientAffinity: 'clientAffinity',\n});"
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.CfnListener",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::GlobalAccelerator::Listener`."
        },
        "locationInModule": {
          "filename": "lib/globalaccelerator.generated.ts",
          "line": 974
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.CfnListenerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/globalaccelerator.generated.ts",
        "line": 902
      },
      "methods": [
        {
          "docs": {
            "stability": "external",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 993
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 1007
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnListener",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 906
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ListenerArn"
            },
            "stability": "external",
            "summary": "The ARN of the listener, such as `arn:aws:globalaccelerator::012345678901:accelerator/1234abcd-abcd-1234-abcd-1234abcdefgh/listener/0123vxyz` ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 931
          },
          "name": "attrListenerArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 998
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-acceleratorarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of your accelerator."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 938
          },
          "name": "acceleratorArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-portranges"
            },
            "stability": "external",
            "summary": "The list of port ranges for the connections from clients to the accelerator."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 945
          },
          "name": "portRanges",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-globalaccelerator.CfnListener.PortRangeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-protocol"
            },
            "stability": "external",
            "summary": "The protocol for the connections from clients to the accelerator."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 952
          },
          "name": "protocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-clientaffinity"
            },
            "remarks": "Client affinity gives you control over whether to always route each client to the same specific endpoint.\n\nAWS Global Accelerator uses a consistent-flow hashing algorithm to choose the optimal endpoint for a connection. If client affinity is `NONE` , Global Accelerator uses the \"five-tuple\" (5-tuple) properties—source IP address, source port, destination IP address, destination port, and protocol—to select the hash value, and then chooses the best endpoint. However, with this setting, if someone uses different ports to connect to Global Accelerator, their connections might not be always routed to the same endpoint because the hash value changes.\n\nIf you want a given client to always be routed to the same endpoint, set client affinity to `SOURCE_IP` instead. When you use the `SOURCE_IP` setting, Global Accelerator uses the \"two-tuple\" (2-tuple) properties— source (client) IP address and destination IP address—to select the hash value.\n\nThe default value is `NONE` .",
            "stability": "external",
            "summary": "Client affinity lets you direct all requests from a user to the same endpoint, if you have stateful applications, regardless of the port and protocol of the client request."
          },
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 965
          },
          "name": "clientAffinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/globalaccelerator.generated:CfnListener"
    },
    "@aws-cdk/aws-globalaccelerator.CfnListener.PortRangeProperty": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-globalaccelerator-listener-portrange.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "A complex type for a range of ports for a listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst portRangeProperty: globalaccelerator.CfnListener.PortRangeProperty = {\n  fromPort: 123,\n  toPort: 123,\n};"
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.CfnListener.PortRangeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/globalaccelerator.generated.ts",
        "line": 1021
      },
      "name": "PortRangeProperty",
      "namespace": "CfnListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-globalaccelerator-listener-portrange.html#cfn-globalaccelerator-listener-portrange-fromport"
            },
            "stability": "external",
            "summary": "The first port in the range of ports, inclusive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 1027
          },
          "name": "fromPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-globalaccelerator-listener-portrange.html#cfn-globalaccelerator-listener-portrange-toport"
            },
            "stability": "external",
            "summary": "The last port in the range of ports, inclusive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 1033
          },
          "name": "toPort",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/globalaccelerator.generated:CfnListener.PortRangeProperty"
    },
    "@aws-cdk/aws-globalaccelerator.CfnListenerProps": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html",
          "exampleMetadata": "fixture=_generated"
        },
        "stability": "external",
        "summary": "Properties for defining a `CfnListener`.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst cfnListenerProps: globalaccelerator.CfnListenerProps = {\n  acceleratorArn: 'acceleratorArn',\n  portRanges: [{\n    fromPort: 123,\n    toPort: 123,\n  }],\n  protocol: 'protocol',\n\n  // the properties below are optional\n  clientAffinity: 'clientAffinity',\n};"
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.CfnListenerProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/globalaccelerator.generated.ts",
        "line": 798
      },
      "name": "CfnListenerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-acceleratorarn"
            },
            "stability": "external",
            "summary": "The Amazon Resource Name (ARN) of your accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 805
          },
          "name": "acceleratorArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-portranges"
            },
            "stability": "external",
            "summary": "The list of port ranges for the connections from clients to the accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 812
          },
          "name": "portRanges",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-globalaccelerator.CfnListener.PortRangeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-protocol"
            },
            "stability": "external",
            "summary": "The protocol for the connections from clients to the accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 819
          },
          "name": "protocol",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-listener.html#cfn-globalaccelerator-listener-clientaffinity"
            },
            "remarks": "Client affinity gives you control over whether to always route each client to the same specific endpoint.\n\nAWS Global Accelerator uses a consistent-flow hashing algorithm to choose the optimal endpoint for a connection. If client affinity is `NONE` , Global Accelerator uses the \"five-tuple\" (5-tuple) properties—source IP address, source port, destination IP address, destination port, and protocol—to select the hash value, and then chooses the best endpoint. However, with this setting, if someone uses different ports to connect to Global Accelerator, their connections might not be always routed to the same endpoint because the hash value changes.\n\nIf you want a given client to always be routed to the same endpoint, set client affinity to `SOURCE_IP` instead. When you use the `SOURCE_IP` setting, Global Accelerator uses the \"two-tuple\" (2-tuple) properties— source (client) IP address and destination IP address—to select the hash value.\n\nThe default value is `NONE` .",
            "stability": "external",
            "summary": "Client affinity lets you direct all requests from a user to the same endpoint, if you have stateful applications, regardless of the port and protocol of the client request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/globalaccelerator.generated.ts",
            "line": 832
          },
          "name": "clientAffinity",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/globalaccelerator.generated:CfnListenerProps"
    },
    "@aws-cdk/aws-globalaccelerator.ClientAffinity": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "docs": {
        "see": "https://docs.aws.amazon.com/global-accelerator/latest/dg/about-listeners.html#about-listeners-client-affinity",
        "stability": "stable",
        "summary": "Client affinity gives you control over whether to always route each client to the same specific endpoint."
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.ClientAffinity",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/listener.ts",
        "line": 103
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Route traffic based on the 5-tuple `(source IP, source port, destination IP, destination port, protocol)`."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "remarks": "The result is that multiple connections from the same client will be routed the same.",
            "stability": "stable",
            "summary": "Route traffic based on the 2-tuple `(source IP, destination IP)`."
          },
          "name": "SOURCE_IP"
        }
      ],
      "name": "ClientAffinity",
      "symbolId": "lib/listener:ClientAffinity"
    },
    "@aws-cdk/aws-globalaccelerator.ConnectionProtocol": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "docs": {
        "stability": "stable",
        "summary": "The protocol for the connections from clients to the accelerator."
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.ConnectionProtocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/listener.ts",
        "line": 87
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "TCP."
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "UDP."
          },
          "name": "UDP"
        }
      ],
      "name": "ConnectionProtocol",
      "symbolId": "lib/listener:ConnectionProtocol"
    },
    "@aws-cdk/aws-globalaccelerator.EndpointGroup": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "EndpointGroup construct.",
        "example": "declare const listener: globalaccelerator.Listener;\n\n// Non-open ALB\ndeclare const alb: elbv2.ApplicationLoadBalancer;\n\nconst endpointGroup = listener.addEndpointGroup('Group', {\n  endpoints: [\n    new ga_endpoints.ApplicationLoadBalancerEndpoint(alb, {\n      preserveClientIp: true,\n    }),\n  ],\n});\n\n// Remember that there is only one AGA security group per VPC.\ndeclare const vpc: ec2.Vpc;\nconst agaSg = endpointGroup.connectionsPeer('GlobalAcceleratorSG', vpc);\n\n// Allow connections from the AGA to the ALB\nalb.connections.allowFrom(agaSg, ec2.Port.tcp(443));",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.EndpointGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/endpoint-group.ts",
          "line": 179
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.EndpointGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-globalaccelerator.IEndpointGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/endpoint-group.ts",
        "line": 155
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "import from ARN."
          },
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 159
          },
          "name": "fromEndpointGroupArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "endpointGroupArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.IEndpointGroup"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add an endpoint."
          },
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 209
          },
          "name": "addEndpoint",
          "parameters": [
            {
              "name": "endpoint",
              "type": {
                "fqn": "@aws-cdk/aws-globalaccelerator.IEndpoint"
              }
            }
          ]
        },
        {
          "docs": {
            "remarks": "Uses a Custom Resource to look up the Security Group that Accelerator\ncreates at deploy time. Requires your VPC ID to perform the lookup.\n\nThe Security Group will only be created if you enable **Client IP\nPreservation** on any of the endpoints.\n\nYou cannot manipulate the rules inside this security group, but you can\nuse this security group as a Peer in Connections rules on other\nconstructs.",
            "stability": "stable",
            "summary": "Return an object that represents the Accelerator's Security Group."
          },
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 226
          },
          "name": "connectionsPeer",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ec2.IPeer"
            }
          }
        }
      ],
      "name": "EndpointGroup",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "EndpointGroup ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 166
          },
          "name": "endpointGroupArn",
          "overrides": "@aws-cdk/aws-globalaccelerator.IEndpointGroup",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the endpoint group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 173
          },
          "name": "endpointGroupName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The array of the endpoints in this endpoint group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 177
          },
          "name": "endpoints",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-globalaccelerator.IEndpoint"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/endpoint-group:EndpointGroup"
    },
    "@aws-cdk/aws-globalaccelerator.EndpointGroupOptions": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic options for creating a new EndpointGroup.",
        "example": "declare const alb: elbv2.ApplicationLoadBalancer;\ndeclare const listener: globalaccelerator.Listener;\n\nlistener.addEndpointGroup('Group', {\n  endpoints: [\n    new ga_endpoints.ApplicationLoadBalancerEndpoint(alb, {\n      weight: 128,\n      preserveClientIp: true,\n    }),\n  ],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.EndpointGroupOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/endpoint-group.ts",
        "line": 23
      },
      "name": "EndpointGroupOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- logical ID of the resource",
            "stability": "stable",
            "summary": "Name of the endpoint group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 29
          },
          "name": "endpointGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Group is initially empty",
            "stability": "stable",
            "summary": "Initial list of endpoints for this group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 102
          },
          "name": "endpoints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-globalaccelerator.IEndpoint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(30)",
            "remarks": "Must be either 10 or 30 seconds.",
            "stability": "stable",
            "summary": "The time between health checks for each endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 45
          },
          "name": "healthCheckInterval",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'/'",
            "stability": "stable",
            "summary": "The ping path for health checks (if the protocol is HTTP(S))."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 52
          },
          "name": "healthCheckPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The listener's port",
            "stability": "stable",
            "summary": "The port used to perform health checks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 59
          },
          "name": "healthCheckPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "HealthCheckProtocol.TCP",
            "stability": "stable",
            "summary": "The protocol used to perform health checks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 66
          },
          "name": "healthCheckProtocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-globalaccelerator.HealthCheckProtocol"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "3",
            "stability": "stable",
            "summary": "The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 74
          },
          "name": "healthCheckThreshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No overrides",
            "remarks": "Unless overridden, the port used to hit the endpoint will be the same as the port\nthat traffic arrives on at the listener.",
            "stability": "stable",
            "summary": "Override the destination ports used to route traffic to an endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 95
          },
          "name": "portOverrides",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-globalaccelerator.PortOverride"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- region of the first endpoint in this group, or the stack region if that region can't be determined",
            "stability": "stable",
            "summary": "The AWS Region where the endpoint group is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 36
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "100",
            "remarks": "The percentage is applied to the traffic that would otherwise have been\nrouted to the Region based on optimal routing. Additional traffic is\ndistributed to other endpoint groups for this listener.",
            "stability": "stable",
            "summary": "The percentage of traffic to send to this AWS Region."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 85
          },
          "name": "trafficDialPercentage",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/endpoint-group:EndpointGroupOptions"
    },
    "@aws-cdk/aws-globalaccelerator.EndpointGroupProps": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Property of the EndpointGroup.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const endpoint: globalaccelerator.IEndpoint;\ndeclare const listener: globalaccelerator.Listener;\nconst endpointGroupProps: globalaccelerator.EndpointGroupProps = {\n  listener: listener,\n\n  // the properties below are optional\n  endpointGroupName: 'endpointGroupName',\n  endpoints: [endpoint],\n  healthCheckInterval: cdk.Duration.minutes(30),\n  healthCheckPath: 'healthCheckPath',\n  healthCheckPort: 123,\n  healthCheckProtocol: globalaccelerator.HealthCheckProtocol.TCP,\n  healthCheckThreshold: 123,\n  portOverrides: [{\n    endpointPort: 123,\n    listenerPort: 123,\n  }],\n  region: 'region',\n  trafficDialPercentage: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.EndpointGroupProps",
      "interfaces": [
        "@aws-cdk/aws-globalaccelerator.EndpointGroupOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/endpoint-group.ts",
        "line": 145
      },
      "name": "EndpointGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon Resource Name (ARN) of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 149
          },
          "name": "listener",
          "type": {
            "fqn": "@aws-cdk/aws-globalaccelerator.IListener"
          }
        }
      ],
      "symbolId": "lib/endpoint-group:EndpointGroupProps"
    },
    "@aws-cdk/aws-globalaccelerator.HealthCheckProtocol": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "docs": {
        "stability": "stable",
        "summary": "The protocol for the connections from clients to the accelerator."
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.HealthCheckProtocol",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/endpoint-group.ts",
        "line": 127
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "TCP."
          },
          "name": "TCP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTP."
          },
          "name": "HTTP"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "HTTPS."
          },
          "name": "HTTPS"
        }
      ],
      "name": "HealthCheckProtocol",
      "symbolId": "lib/endpoint-group:HealthCheckProtocol"
    },
    "@aws-cdk/aws-globalaccelerator.IAccelerator": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "docs": {
        "stability": "stable",
        "summary": "The interface of the Accelerator."
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.IAccelerator",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/accelerator.ts",
        "line": 9
      },
      "name": "IAccelerator",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/accelerator.ts",
            "line": 15
          },
          "name": "acceleratorArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The Domain Name System (DNS) name that Global Accelerator creates that points to your accelerator's static IP addresses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/accelerator.ts",
            "line": 23
          },
          "name": "dnsName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/accelerator:IAccelerator"
    },
    "@aws-cdk/aws-globalaccelerator.IEndpoint": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "docs": {
        "remarks": "Implementations of `IEndpoint` can be found in the `aws-globalaccelerator-endpoints` package.",
        "stability": "stable",
        "summary": "An endpoint for the endpoint group."
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.IEndpoint",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/endpoint.ts",
        "line": 8
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Render the endpoint to an endpoint configuration."
          },
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 19
          },
          "name": "renderEndpointConfiguration",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "IEndpoint",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If the region cannot be determined, `undefined` is returned",
            "stability": "stable",
            "summary": "The region where the endpoint is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 14
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/endpoint:IEndpoint"
    },
    "@aws-cdk/aws-globalaccelerator.IEndpointGroup": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "docs": {
        "stability": "stable",
        "summary": "The interface of the EndpointGroup."
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.IEndpointGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/endpoint-group.ts",
        "line": 12
      },
      "name": "IEndpointGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "EndpointGroup ARN."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 17
          },
          "name": "endpointGroupArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/endpoint-group:IEndpointGroup"
    },
    "@aws-cdk/aws-globalaccelerator.IListener": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "docs": {
        "stability": "stable",
        "summary": "Interface of the Listener."
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.IListener",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/listener.ts",
        "line": 10
      },
      "name": "IListener",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 16
          },
          "name": "listenerArn",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/listener:IListener"
    },
    "@aws-cdk/aws-globalaccelerator.Listener": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "The construct for the Listener.",
        "example": "// Create an Accelerator\nconst accelerator = new globalaccelerator.Accelerator(this, 'Accelerator');\n\n// Create a Listener\nconst listener = accelerator.addListener('Listener', {\n  portRanges: [\n    { fromPort: 80 },\n    { fromPort: 443 },\n  ],\n});\n\n// Import the Load Balancers\nconst nlb1 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB1', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b',\n});\nconst nlb2 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB2', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1',\n});\n\n// Add one EndpointGroup for each Region we are targeting\nlistener.addEndpointGroup('Group1', {\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb1)],\n});\nlistener.addEndpointGroup('Group2', {\n  // Imported load balancers automatically calculate their Region from the ARN.\n  // If you are load balancing to other resources, you must also pass a `region`\n  // parameter here.\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb2)],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.Listener",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/listener.ts",
          "line": 139
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.ListenerProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-globalaccelerator.IListener"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/listener.ts",
        "line": 120
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "import from ARN."
          },
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 124
          },
          "name": "fromListenerArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "listenerArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.IListener"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a new endpoint group to this listener."
          },
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 159
          },
          "name": "addEndpointGroup",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-globalaccelerator.EndpointGroupOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.EndpointGroup"
            }
          }
        }
      ],
      "name": "Listener",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 131
          },
          "name": "listenerArn",
          "overrides": "@aws-cdk/aws-globalaccelerator.IListener",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 137
          },
          "name": "listenerName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/listener:Listener"
    },
    "@aws-cdk/aws-globalaccelerator.ListenerOptions": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construct options for Listener.",
        "example": "// Create an Accelerator\nconst accelerator = new globalaccelerator.Accelerator(this, 'Accelerator');\n\n// Create a Listener\nconst listener = accelerator.addListener('Listener', {\n  portRanges: [\n    { fromPort: 80 },\n    { fromPort: 443 },\n  ],\n});\n\n// Import the Load Balancers\nconst nlb1 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB1', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:111111111111:loadbalancer/app/my-load-balancer1/e16bef66805b',\n});\nconst nlb2 = elbv2.NetworkLoadBalancer.fromNetworkLoadBalancerAttributes(this, 'NLB2', {\n  loadBalancerArn: 'arn:aws:elasticloadbalancing:ap-south-1:111111111111:loadbalancer/app/my-load-balancer2/5513dc2ea8a1',\n});\n\n// Add one EndpointGroup for each Region we are targeting\nlistener.addEndpointGroup('Group1', {\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb1)],\n});\nlistener.addEndpointGroup('Group2', {\n  // Imported load balancers automatically calculate their Region from the ARN.\n  // If you are load balancing to other resources, you must also pass a `region`\n  // parameter here.\n  endpoints: [new ga_endpoints.NetworkLoadBalancerEndpoint(nlb2)],\n});",
        "custom": {
          "exampleMetadata": "infused"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.ListenerOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/listener.ts",
        "line": 22
      },
      "name": "ListenerOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The list of port ranges for the connections from clients to the accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 33
          },
          "name": "portRanges",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-globalaccelerator.PortRange"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ClientAffinity.NONE",
            "remarks": "If you have stateful applications, client affinity lets you direct all\nrequests from a user to the same endpoint.\n\nBy default, each connection from each client is routed to seperate\nendpoints. Set client affinity to SOURCE_IP to route all connections from\na single client to the same endpoint.",
            "stability": "stable",
            "summary": "Client affinity to direct all requests from a user to the same endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 54
          },
          "name": "clientAffinity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-globalaccelerator.ClientAffinity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- logical ID of the resource",
            "stability": "stable",
            "summary": "Name of the listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 28
          },
          "name": "listenerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ConnectionProtocol.TCP",
            "stability": "stable",
            "summary": "The protocol for the connections from clients to the accelerator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 40
          },
          "name": "protocol",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-globalaccelerator.ConnectionProtocol"
          }
        }
      ],
      "symbolId": "lib/listener:ListenerOptions"
    },
    "@aws-cdk/aws-globalaccelerator.ListenerProps": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construct properties for Listener.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\n\ndeclare const accelerator: globalaccelerator.Accelerator;\nconst listenerProps: globalaccelerator.ListenerProps = {\n  accelerator: accelerator,\n  portRanges: [{\n    fromPort: 123,\n\n    // the properties below are optional\n    toPort: 123,\n  }],\n\n  // the properties below are optional\n  clientAffinity: globalaccelerator.ClientAffinity.NONE,\n  listenerName: 'listenerName',\n  protocol: globalaccelerator.ConnectionProtocol.TCP,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.ListenerProps",
      "interfaces": [
        "@aws-cdk/aws-globalaccelerator.ListenerOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/listener.ts",
        "line": 60
      },
      "name": "ListenerProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The accelerator for this listener."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 64
          },
          "name": "accelerator",
          "type": {
            "fqn": "@aws-cdk/aws-globalaccelerator.IAccelerator"
          }
        }
      ],
      "symbolId": "lib/listener:ListenerProps"
    },
    "@aws-cdk/aws-globalaccelerator.PortOverride": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Override specific listener ports used to route traffic to endpoints that are part of an endpoint group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst portOverride: globalaccelerator.PortOverride = {\n  endpointPort: 123,\n  listenerPort: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.PortOverride",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/endpoint-group.ts",
        "line": 108
      },
      "name": "PortOverride",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This is the port on the endpoint, such as the Application Load Balancer or Amazon EC2 instance.",
            "stability": "stable",
            "summary": "The endpoint port that you want a listener port to be mapped to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 121
          },
          "name": "endpointPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is the port that user traffic arrives to the Global Accelerator on.",
            "stability": "stable",
            "summary": "The listener port that you want to map to a specific endpoint port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint-group.ts",
            "line": 114
          },
          "name": "listenerPort",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/endpoint-group:PortOverride"
    },
    "@aws-cdk/aws-globalaccelerator.PortRange": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The list of port ranges for the connections from clients to the accelerator.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst portRange: globalaccelerator.PortRange = {\n  fromPort: 123,\n\n  // the properties below are optional\n  toPort: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.PortRange",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/listener.ts",
        "line": 70
      },
      "name": "PortRange",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The first port in the range of ports, inclusive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 74
          },
          "name": "fromPort",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- same as `fromPort`",
            "stability": "stable",
            "summary": "The last port in the range of ports, inclusive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/listener.ts",
            "line": 81
          },
          "name": "toPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/listener:PortRange"
    },
    "@aws-cdk/aws-globalaccelerator.RawEndpoint": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "docs": {
        "remarks": "Prefer using the classes in the `aws-globalaccelerator-endpoints` package instead,\nas they accept typed constructs. You can use this class if you want to use an\nendpoint type that does not have an appropriate class in that package yet.",
        "stability": "stable",
        "summary": "Untyped endpoint implementation.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst rawEndpoint = new globalaccelerator.RawEndpoint({\n  endpointId: 'endpointId',\n\n  // the properties below are optional\n  preserveClientIp: false,\n  region: 'region',\n  weight: 123,\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.RawEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/endpoint.ts",
          "line": 75
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-globalaccelerator.RawEndpointProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-globalaccelerator.IEndpoint"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/endpoint.ts",
        "line": 72
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Render the endpoint to an endpoint configuration."
          },
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 79
          },
          "name": "renderEndpointConfiguration",
          "overrides": "@aws-cdk/aws-globalaccelerator.IEndpoint",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "RawEndpoint",
      "properties": [
        {
          "docs": {
            "remarks": "If the region cannot be determined, `undefined` is returned",
            "stability": "stable",
            "summary": "The region where the endpoint is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 73
          },
          "name": "region",
          "optional": true,
          "overrides": "@aws-cdk/aws-globalaccelerator.IEndpoint",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/endpoint:RawEndpoint"
    },
    "@aws-cdk/aws-globalaccelerator.RawEndpointProps": {
      "assembly": "@aws-cdk/aws-globalaccelerator",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for RawEndpoint.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as globalaccelerator from '@aws-cdk/aws-globalaccelerator';\nconst rawEndpointProps: globalaccelerator.RawEndpointProps = {\n  endpointId: 'endpointId',\n\n  // the properties below are optional\n  preserveClientIp: false,\n  region: 'region',\n  weight: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-globalaccelerator.RawEndpointProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/endpoint.ts",
        "line": 25
      },
      "name": "RawEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Load balancer ARN, instance ID or EIP allocation ID.",
            "stability": "stable",
            "summary": "Identifier of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 31
          },
          "name": "endpointId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true if possible and available",
            "remarks": "GlobalAccelerator will create Network Interfaces in your VPC in order\nto preserve the client IP address.\n\nOnly applies to Application Load Balancers and EC2 instances.\n\nClient IP address preservation is supported only in specific AWS Regions.\nSee the GlobalAccelerator Developer Guide for a list.",
            "stability": "stable",
            "summary": "Forward the client IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 55
          },
          "name": "preserveClientIp",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Unknown what region this endpoint is located",
            "stability": "stable",
            "summary": "The region where this endpoint is located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 62
          },
          "name": "region",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "128",
            "remarks": "Must be a value between 0 and 255.",
            "stability": "stable",
            "summary": "Endpoint weight across all endpoints in the group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 40
          },
          "name": "weight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/endpoint:RawEndpointProps"
    }
  },
  "version": "1.193.0",
  "fingerprint": "**********"
}