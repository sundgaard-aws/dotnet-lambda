{
  "version": "2",
  "toolVersion": "1.74.0",
  "snippets": {
    "5cb22137d1284090e6e0981b178df402271fcee8bbd8ed24b81398f4d34a5ecf": {
      "translations": {
        "python": {
          "source": "bucket = s3.Bucket(self, \"Bucket\")\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[destinations.S3Bucket(bucket)]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket = new Bucket(this, \"Bucket\");\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { new S3Bucket(bucket) }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket = new Bucket(this, \"Bucket\");\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(new S3Bucket(bucket)))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "bucket := s3.NewBucket(this, jsii.String(\"Bucket\"))\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\tdestinations.NewS3Bucket(bucket),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "const bucket = new s3.Bucket(this, 'Bucket');\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [new destinations.S3Bucket(bucket)],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 46
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst bucket = new s3.Bucket(this, 'Bucket');\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [new destinations.S3Bucket(bucket)],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "104": 2,
        "192": 1,
        "193": 1,
        "194": 3,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 1
      },
      "fqnsFingerprint": "2d0eac20a3c58a7c658ffaf70584075c07776d73ba27c5c34deba8b591fbc903"
    },
    "1ec4adc73f7ac49ce3b5b42c40d3a04fef1f42f7cd236c852cd365a1ee1e7883": {
      "translations": {
        "python": {
          "source": "# destination: firehose.IDestination\n\nsource_stream = kinesis.Stream(self, \"Source Stream\")\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    source_stream=source_stream,\n    destinations=[destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IDestination destination;\n\nStream sourceStream = new Stream(this, \"Source Stream\");\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    SourceStream = sourceStream,\n    Destinations = new [] { destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "IDestination destination;\n\nStream sourceStream = new Stream(this, \"Source Stream\");\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .sourceStream(sourceStream)\n        .destinations(List.of(destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var destination iDestination\n\nsourceStream := kinesis.NewStream(this, jsii.String(\"Source Stream\"))\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tsourceStream: sourceStream,\n\tdestinations: []*iDestination{\n\t\tdestination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const destination: firehose.IDestination;\nconst sourceStream = new kinesis.Stream(this, 'Source Stream');\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  sourceStream: sourceStream,\n  destinations: [destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 74
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesis.IStream",
        "@aws-cdk/aws-kinesis.Stream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const destination: firehose.IDestination;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst sourceStream = new kinesis.Stream(this, 'Source Stream');\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  sourceStream: sourceStream,\n  destinations: [destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 12,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 2,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "8a25b932f6fc1b74a7690c97c16a7a2f001e732a00541b88460704d2a8391cf2"
    },
    "e54b836c20a4cd5b233d4e4de6c244f328eb6014b970d6935b59c0c68ee5ad85": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\ns3_destination = destinations.S3Bucket(bucket)\n\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[s3_destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nS3Bucket s3Destination = new S3Bucket(bucket);\n\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { s3Destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nS3Bucket s3Destination = new S3Bucket(bucket);\n\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(s3Destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\n\ns3Destination := destinations.NewS3Bucket(bucket)\n\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\ts3Destination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nconst s3Destination = new destinations.S3Bucket(bucket);\n\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [s3Destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 111
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst s3Destination = new destinations.S3Bucket(bucket);\n\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [s3Destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 11,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 2,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "0525c8a5c4e47ee26b52834d1d78ce0d0ec3cd0b02dd9d7b3980be5c166b3deb"
    },
    "ecfe0d7a66f8077bdb0b151144d48028799c315b553863ef076c2a7991d21290": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\ns3_destination = destinations.S3Bucket(bucket,\n    data_output_prefix=\"myFirehose/DeliveredYear=!{timestamp:yyyy}/anyMonth/rand=!{firehose:random-string}\",\n    error_output_prefix=\"myFirehoseFailures/!{firehose:error-output-type}/!{timestamp:yyyy}/anyMonth/!{timestamp:dd}\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nS3Bucket s3Destination = new S3Bucket(bucket, new S3BucketProps {\n    DataOutputPrefix = \"myFirehose/DeliveredYear=!{timestamp:yyyy}/anyMonth/rand=!{firehose:random-string}\",\n    ErrorOutputPrefix = \"myFirehoseFailures/!{firehose:error-output-type}/!{timestamp:yyyy}/anyMonth/!{timestamp:dd}\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nS3Bucket s3Destination = S3Bucket.Builder.create(bucket)\n        .dataOutputPrefix(\"myFirehose/DeliveredYear=!{timestamp:yyyy}/anyMonth/rand=!{firehose:random-string}\")\n        .errorOutputPrefix(\"myFirehoseFailures/!{firehose:error-output-type}/!{timestamp:yyyy}/anyMonth/!{timestamp:dd}\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\n\ns3Destination := destinations.NewS3Bucket(bucket, &s3BucketProps{\n\tdataOutputPrefix: jsii.String(\"myFirehose/DeliveredYear=!{timestamp:yyyy}/anyMonth/rand=!{firehose:random-string}\"),\n\terrorOutputPrefix: jsii.String(\"myFirehoseFailures/!{firehose:error-output-type}/!{timestamp:yyyy}/anyMonth/!{timestamp:dd}\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nconst s3Destination = new destinations.S3Bucket(bucket, {\n  dataOutputPrefix: 'myFirehose/DeliveredYear=!{timestamp:yyyy}/anyMonth/rand=!{firehose:random-string}',\n  errorOutputPrefix: 'myFirehoseFailures/!{firehose:error-output-type}/!{timestamp:yyyy}/anyMonth/!{timestamp:dd}',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 124
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst s3Destination = new destinations.S3Bucket(bucket, {\n  dataOutputPrefix: 'myFirehose/DeliveredYear=!{timestamp:yyyy}/anyMonth/rand=!{firehose:random-string}',\n  errorOutputPrefix: 'myFirehoseFailures/!{firehose:error-output-type}/!{timestamp:yyyy}/anyMonth/!{timestamp:dd}',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "8874c86005de8f7479885266940091b92eaab3a7f575f88d16d6aeaf7cf6b0c7"
    },
    "ccfe931718f827ba8834e4195dd1be88565e1fe09037d053055b5aecb8698366": {
      "translations": {
        "python": {
          "source": "# destination: firehose.IDestination\n# SSE with an customer-managed CMK that is explicitly specified\n# key: kms.Key\n\n\n# SSE with an AWS-owned CMK\nfirehose.DeliveryStream(self, \"Delivery Stream AWS Owned\",\n    encryption=firehose.StreamEncryption.AWS_OWNED,\n    destinations=[destination]\n)\n# SSE with an customer-managed CMK that is created automatically by the CDK\nfirehose.DeliveryStream(self, \"Delivery Stream Implicit Customer Managed\",\n    encryption=firehose.StreamEncryption.CUSTOMER_MANAGED,\n    destinations=[destination]\n)\nfirehose.DeliveryStream(self, \"Delivery Stream Explicit Customer Managed\",\n    encryption_key=key,\n    destinations=[destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IDestination destination;\n// SSE with an customer-managed CMK that is explicitly specified\nKey key;\n\n\n// SSE with an AWS-owned CMK\n// SSE with an AWS-owned CMK\nnew DeliveryStream(this, \"Delivery Stream AWS Owned\", new DeliveryStreamProps {\n    Encryption = StreamEncryption.AWS_OWNED,\n    Destinations = new [] { destination }\n});\n// SSE with an customer-managed CMK that is created automatically by the CDK\n// SSE with an customer-managed CMK that is created automatically by the CDK\nnew DeliveryStream(this, \"Delivery Stream Implicit Customer Managed\", new DeliveryStreamProps {\n    Encryption = StreamEncryption.CUSTOMER_MANAGED,\n    Destinations = new [] { destination }\n});\nnew DeliveryStream(this, \"Delivery Stream Explicit Customer Managed\", new DeliveryStreamProps {\n    EncryptionKey = key,\n    Destinations = new [] { destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "IDestination destination;\n// SSE with an customer-managed CMK that is explicitly specified\nKey key;\n\n\n// SSE with an AWS-owned CMK\n// SSE with an AWS-owned CMK\nDeliveryStream.Builder.create(this, \"Delivery Stream AWS Owned\")\n        .encryption(StreamEncryption.AWS_OWNED)\n        .destinations(List.of(destination))\n        .build();\n// SSE with an customer-managed CMK that is created automatically by the CDK\n// SSE with an customer-managed CMK that is created automatically by the CDK\nDeliveryStream.Builder.create(this, \"Delivery Stream Implicit Customer Managed\")\n        .encryption(StreamEncryption.CUSTOMER_MANAGED)\n        .destinations(List.of(destination))\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream Explicit Customer Managed\")\n        .encryptionKey(key)\n        .destinations(List.of(destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var destination iDestination\n// SSE with an customer-managed CMK that is explicitly specified\nvar key key\n\n\n// SSE with an AWS-owned CMK\n// SSE with an AWS-owned CMK\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream AWS Owned\"), &deliveryStreamProps{\n\tencryption: firehose.streamEncryption_AWS_OWNED,\n\tdestinations: []*iDestination{\n\t\tdestination,\n\t},\n})\n// SSE with an customer-managed CMK that is created automatically by the CDK\n// SSE with an customer-managed CMK that is created automatically by the CDK\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream Implicit Customer Managed\"), &deliveryStreamProps{\n\tencryption: firehose.*streamEncryption_CUSTOMER_MANAGED,\n\tdestinations: []*iDestination{\n\t\tdestination,\n\t},\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream Explicit Customer Managed\"), &deliveryStreamProps{\n\tencryptionKey: key,\n\tdestinations: []*iDestination{\n\t\tdestination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const destination: firehose.IDestination;\n\n// SSE with an AWS-owned CMK\nnew firehose.DeliveryStream(this, 'Delivery Stream AWS Owned', {\n  encryption: firehose.StreamEncryption.AWS_OWNED,\n  destinations: [destination],\n});\n// SSE with an customer-managed CMK that is created automatically by the CDK\nnew firehose.DeliveryStream(this, 'Delivery Stream Implicit Customer Managed', {\n  encryption: firehose.StreamEncryption.CUSTOMER_MANAGED,\n  destinations: [destination],\n});\n// SSE with an customer-managed CMK that is explicitly specified\ndeclare const key: kms.Key;\nnew firehose.DeliveryStream(this, 'Delivery Stream Explicit Customer Managed', {\n  encryptionKey: key,\n  destinations: [destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 154
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-kinesisfirehose.StreamEncryption",
        "@aws-cdk/aws-kinesisfirehose.StreamEncryption#AWS_OWNED",
        "@aws-cdk/aws-kinesisfirehose.StreamEncryption#CUSTOMER_MANAGED",
        "@aws-cdk/aws-kms.IKey",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const destination: firehose.IDestination;\n// SSE with an customer-managed CMK that is explicitly specified\ndeclare const key: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// SSE with an AWS-owned CMK\nnew firehose.DeliveryStream(this, 'Delivery Stream AWS Owned', {\n  encryption: firehose.StreamEncryption.AWS_OWNED,\n  destinations: [destination],\n});\n// SSE with an customer-managed CMK that is created automatically by the CDK\nnew firehose.DeliveryStream(this, 'Delivery Stream Implicit Customer Managed', {\n  encryption: firehose.StreamEncryption.CUSTOMER_MANAGED,\n  destinations: [destination],\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream Explicit Customer Managed', {\n  encryptionKey: key,\n  destinations: [destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 28,
        "104": 3,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 3,
        "193": 3,
        "194": 7,
        "197": 3,
        "225": 2,
        "226": 3,
        "242": 2,
        "243": 2,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "d04db70c0e83182b14b1e16869dd79731a2c1cd8abc493de8e1577ce3f771f78"
    },
    "363686fff84e9e4e330d1500a0d471caf96a6c0f76102ab34b8c70720dcff6f5": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_logs as logs\n# bucket: s3.Bucket\n\n# destination: firehose.IDestination\n\n\nlog_group = logs.LogGroup(self, \"Log Group\")\ndestination = destinations.S3Bucket(bucket,\n    log_group=log_group\n)\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Logs;\nBucket bucket;\n\nIDestination destination;\n\n\nLogGroup logGroup = new LogGroup(this, \"Log Group\");\nS3Bucket destination = new S3Bucket(bucket, new S3BucketProps {\n    LogGroup = logGroup\n});\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.logs.*;\nBucket bucket;\n\nIDestination destination;\n\n\nLogGroup logGroup = new LogGroup(this, \"Log Group\");\nS3Bucket destination = S3Bucket.Builder.create(bucket)\n        .logGroup(logGroup)\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nvar bucket bucket\n\nvar destination iDestination\n\n\nlogGroup := logs.NewLogGroup(this, jsii.String(\"Log Group\"))\ndestination := destinations.NewS3Bucket(bucket, &s3BucketProps{\n\tlogGroup: logGroup,\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []*iDestination{\n\t\tdestination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as logs from '@aws-cdk/aws-logs';\n\nconst logGroup = new logs.LogGroup(this, 'Log Group');\ndeclare const bucket: s3.Bucket;\nconst destination = new destinations.S3Bucket(bucket, {\n  logGroup: logGroup,\n});\n\ndeclare const destination: firehose.IDestination;\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 192
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-logs.ILogGroup",
        "@aws-cdk/aws-logs.LogGroup",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as logs from '@aws-cdk/aws-logs';\ndeclare const bucket: s3.Bucket;\n\ndeclare const destination: firehose.IDestination;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst logGroup = new logs.LogGroup(this, 'Log Group');\nconst destination = new destinations.S3Bucket(bucket, {\n  logGroup: logGroup,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 20,
        "104": 2,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 2,
        "194": 3,
        "197": 3,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "63dec0b237f223d8ae55ed9c33785897969548e655ff38e5f1f1ef44b0359ac3"
    },
    "c300ccbe48117d80cef58fe98df4aa3733c4954e044c33b64bfc524e9828b506": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\ndestination = destinations.S3Bucket(bucket,\n    logging=False\n)\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nS3Bucket destination = new S3Bucket(bucket, new S3BucketProps {\n    Logging = false\n});\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nS3Bucket destination = S3Bucket.Builder.create(bucket)\n        .logging(false)\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\n\ndestination := destinations.NewS3Bucket(bucket, &s3BucketProps{\n\tlogging: jsii.Boolean(false),\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\tdestination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nconst destination = new destinations.S3Bucket(bucket, {\n  logging: false,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 209
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst destination = new destinations.S3Bucket(bucket, {\n  logging: false,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 12,
        "91": 1,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "a52ed1557a977b548c09d49fd05db5417b44dccf196affe31ec2217f85b5b3de"
    },
    "848297b69ce6d645c767678413bbabc995be30111e01266e10bceb6fb486681b": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_cloudwatch as cloudwatch\n# delivery_stream: firehose.DeliveryStream\n\n\n# Alarm that triggers when the per-second average of incoming bytes exceeds 90% of the current service limit\nincoming_bytes_percent_of_limit = cloudwatch.MathExpression(\n    expression=\"incomingBytes / 300 / bytePerSecLimit\",\n    using_metrics={\n        \"incoming_bytes\": delivery_stream.metric_incoming_bytes(statistic=cloudwatch.Statistic.SUM),\n        \"byte_per_sec_limit\": delivery_stream.metric(\"BytesPerSecondLimit\")\n    }\n)\n\ncloudwatch.Alarm(self, \"Alarm\",\n    metric=incoming_bytes_percent_of_limit,\n    threshold=0.9,\n    evaluation_periods=3\n)",
          "version": "2"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.CloudWatch;\nDeliveryStream deliveryStream;\n\n\n// Alarm that triggers when the per-second average of incoming bytes exceeds 90% of the current service limit\nMathExpression incomingBytesPercentOfLimit = new MathExpression(new MathExpressionProps {\n    Expression = \"incomingBytes / 300 / bytePerSecLimit\",\n    UsingMetrics = new Dictionary<string, IMetric> {\n        { \"incomingBytes\", deliveryStream.MetricIncomingBytes(new MetricOptions { Statistic = Statistic.SUM }) },\n        { \"bytePerSecLimit\", deliveryStream.Metric(\"BytesPerSecondLimit\") }\n    }\n});\n\nnew Alarm(this, \"Alarm\", new AlarmProps {\n    Metric = incomingBytesPercentOfLimit,\n    Threshold = 0.9,\n    EvaluationPeriods = 3\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.cloudwatch.*;\nDeliveryStream deliveryStream;\n\n\n// Alarm that triggers when the per-second average of incoming bytes exceeds 90% of the current service limit\nMathExpression incomingBytesPercentOfLimit = MathExpression.Builder.create()\n        .expression(\"incomingBytes / 300 / bytePerSecLimit\")\n        .usingMetrics(Map.of(\n                \"incomingBytes\", deliveryStream.metricIncomingBytes(MetricOptions.builder().statistic(Statistic.SUM).build()),\n                \"bytePerSecLimit\", deliveryStream.metric(\"BytesPerSecondLimit\")))\n        .build();\n\nAlarm.Builder.create(this, \"Alarm\")\n        .metric(incomingBytesPercentOfLimit)\n        .threshold(0.9)\n        .evaluationPeriods(3)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import cloudwatch \"github.com/aws-samples/dummy/awscdkawscloudwatch\"\nvar deliveryStream deliveryStream\n\n\n// Alarm that triggers when the per-second average of incoming bytes exceeds 90% of the current service limit\nincomingBytesPercentOfLimit := cloudwatch.NewMathExpression(&mathExpressionProps{\n\texpression: jsii.String(\"incomingBytes / 300 / bytePerSecLimit\"),\n\tusingMetrics: map[string]iMetric{\n\t\t\"incomingBytes\": deliveryStream.metricIncomingBytes(&MetricOptions{\n\t\t\t\"statistic\": cloudwatch.Statistic_SUM,\n\t\t}),\n\t\t\"bytePerSecLimit\": deliveryStream.metric(jsii.String(\"BytesPerSecondLimit\")),\n\t},\n})\n\ncloudwatch.NewAlarm(this, jsii.String(\"Alarm\"), &alarmProps{\n\tmetric: incomingBytesPercentOfLimit,\n\tthreshold: jsii.Number(0.9),\n\tevaluationPeriods: jsii.Number(3),\n})",
          "version": "1"
        },
        "$": {
          "source": "import * as cloudwatch from '@aws-cdk/aws-cloudwatch';\ndeclare const deliveryStream: firehose.DeliveryStream;\n\n// Alarm that triggers when the per-second average of incoming bytes exceeds 90% of the current service limit\nconst incomingBytesPercentOfLimit = new cloudwatch.MathExpression({\n  expression: 'incomingBytes / 300 / bytePerSecLimit',\n  usingMetrics: {\n    incomingBytes: deliveryStream.metricIncomingBytes({ statistic: cloudwatch.Statistic.SUM }),\n    bytePerSecLimit: deliveryStream.metric('BytesPerSecondLimit'),\n  },\n});\n\nnew cloudwatch.Alarm(this, 'Alarm', {\n  metric: incomingBytesPercentOfLimit,\n  threshold: 0.9,\n  evaluationPeriods: 3,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 239
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudwatch.Alarm",
        "@aws-cdk/aws-cloudwatch.AlarmProps",
        "@aws-cdk/aws-cloudwatch.IMetric",
        "@aws-cdk/aws-cloudwatch.MathExpression",
        "@aws-cdk/aws-cloudwatch.MathExpressionProps",
        "@aws-cdk/aws-cloudwatch.MetricOptions",
        "@aws-cdk/aws-cloudwatch.Statistic",
        "@aws-cdk/aws-cloudwatch.Statistic#SUM",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\ndeclare const deliveryStream: firehose.DeliveryStream;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// Alarm that triggers when the per-second average of incoming bytes exceeds 90% of the current service limit\nconst incomingBytesPercentOfLimit = new cloudwatch.MathExpression({\n  expression: 'incomingBytes / 300 / bytePerSecLimit',\n  usingMetrics: {\n    incomingBytes: deliveryStream.metricIncomingBytes({ statistic: cloudwatch.Statistic.SUM }),\n    bytePerSecLimit: deliveryStream.metric('BytesPerSecondLimit'),\n  },\n});\n\nnew cloudwatch.Alarm(this, 'Alarm', {\n  metric: incomingBytesPercentOfLimit,\n  threshold: 0.9,\n  evaluationPeriods: 3,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 25,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "194": 6,
        "196": 2,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "42160e056ed9bdbc8ae62149811ce5585724fd38d79af7f255389109ac6e52db"
    },
    "1d0b5ee3e0c2146e01786b63893f1bb64375051e8f12fa7b70b2fb23813fc4b3": {
      "translations": {
        "python": {
          "source": "# Compress data delivered to S3 using Snappy\n# bucket: s3.Bucket\n\ns3_destination = destinations.S3Bucket(bucket,\n    compression=destinations.Compression.SNAPPY\n)\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[s3_destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Compress data delivered to S3 using Snappy\nBucket bucket;\n\nS3Bucket s3Destination = new S3Bucket(bucket, new S3BucketProps {\n    Compression = Compression.SNAPPY\n});\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { s3Destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Compress data delivered to S3 using Snappy\nBucket bucket;\n\nS3Bucket s3Destination = S3Bucket.Builder.create(bucket)\n        .compression(Compression.SNAPPY)\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(s3Destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Compress data delivered to S3 using Snappy\nvar bucket bucket\n\ns3Destination := destinations.NewS3Bucket(bucket, &s3BucketProps{\n\tcompression: destinations.compression_SNAPPY(),\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\ts3Destination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Compress data delivered to S3 using Snappy\ndeclare const bucket: s3.Bucket;\nconst s3Destination = new destinations.S3Bucket(bucket, {\n  compression: destinations.Compression.SNAPPY,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [s3Destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 270
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression#SNAPPY",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Compress data delivered to S3 using Snappy\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst s3Destination = new destinations.S3Bucket(bucket, {\n  compression: destinations.Compression.SNAPPY,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [s3Destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 15,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 4,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "a83a9e4a3df63b5c5b3bc770ea46641176d32086ed8ddd4f76b4dc4fbe5c1bf8"
    },
    "bfb124fbb64475d96fa43b5e7953a2cb99dc3413972bfa69ca72c3adb1602aeb": {
      "translations": {
        "python": {
          "source": "# Increase the buffer interval and size to 10 minutes and 8 MiB, respectively\n# bucket: s3.Bucket\n\ndestination = destinations.S3Bucket(bucket,\n    buffering_interval=Duration.minutes(10),\n    buffering_size=Size.mebibytes(8)\n)\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Increase the buffer interval and size to 10 minutes and 8 MiB, respectively\nBucket bucket;\n\nS3Bucket destination = new S3Bucket(bucket, new S3BucketProps {\n    BufferingInterval = Duration.Minutes(10),\n    BufferingSize = Size.Mebibytes(8)\n});\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Increase the buffer interval and size to 10 minutes and 8 MiB, respectively\nBucket bucket;\n\nS3Bucket destination = S3Bucket.Builder.create(bucket)\n        .bufferingInterval(Duration.minutes(10))\n        .bufferingSize(Size.mebibytes(8))\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Increase the buffer interval and size to 10 minutes and 8 MiB, respectively\nvar bucket bucket\n\ndestination := destinations.NewS3Bucket(bucket, &s3BucketProps{\n\tbufferingInterval: *awscdkcore.Duration.minutes(jsii.Number(10)),\n\tbufferingSize: *awscdkcore.Size.mebibytes(jsii.Number(8)),\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\tdestination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Increase the buffer interval and size to 10 minutes and 8 MiB, respectively\ndeclare const bucket: s3.Bucket;\nconst destination = new destinations.S3Bucket(bucket, {\n  bufferingInterval: Duration.minutes(10),\n  bufferingSize: Size.mebibytes(8),\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 290
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "@aws-cdk/core.Size",
        "@aws-cdk/core.Size#mebibytes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Increase the buffer interval and size to 10 minutes and 8 MiB, respectively\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst destination = new destinations.S3Bucket(bucket, {\n  bufferingInterval: Duration.minutes(10),\n  bufferingSize: Size.mebibytes(8),\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 17,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 4,
        "196": 2,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "8e14b7db16fafe4bf5498096bad0549797641935f853f81ed48ad5c23c54075a"
    },
    "80c9d073e102778895dfbe511d7dbfd66709ce9c3310db200d75f8e6fe9fc7ee": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n# key: kms.Key\n\ndestination = destinations.S3Bucket(bucket,\n    encryption_key=key\n)\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\nKey key;\n\nS3Bucket destination = new S3Bucket(bucket, new S3BucketProps {\n    EncryptionKey = key\n});\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\nKey key;\n\nS3Bucket destination = S3Bucket.Builder.create(bucket)\n        .encryptionKey(key)\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\nvar key key\n\ndestination := destinations.NewS3Bucket(bucket, &s3BucketProps{\n\tencryptionKey: key,\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\tdestination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\ndeclare const key: kms.Key;\nconst destination = new destinations.S3Bucket(bucket, {\n  encryptionKey: key,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 314
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\ndeclare const key: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst destination = new destinations.S3Bucket(bucket, {\n  encryptionKey: key,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 16,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 2,
        "194": 2,
        "197": 2,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "12722ac807fca1f59db3741fe6f93a0eaab66c7aaa80e95110d0cc25d2e4933a"
    },
    "53b8c7107c307b7364ee23b694304774dacab6471db87b10d9142934c912ea50": {
      "translations": {
        "python": {
          "source": "# Enable backup of all source records (to an S3 bucket created by CDK).\n# bucket: s3.Bucket\n# Explicitly provide an S3 bucket to which all source records will be backed up.\n# backup_bucket: s3.Bucket\n\nfirehose.DeliveryStream(self, \"Delivery Stream Backup All\",\n    destinations=[\n        destinations.S3Bucket(bucket,\n            s3_backup=destinations.DestinationS3BackupProps(\n                mode=destinations.BackupMode.ALL\n            )\n        )\n    ]\n)\nfirehose.DeliveryStream(self, \"Delivery Stream Backup All Explicit Bucket\",\n    destinations=[\n        destinations.S3Bucket(bucket,\n            s3_backup=destinations.DestinationS3BackupProps(\n                bucket=backup_bucket\n            )\n        )\n    ]\n)\n# Explicitly provide an S3 prefix under which all source records will be backed up.\nfirehose.DeliveryStream(self, \"Delivery Stream Backup All Explicit Prefix\",\n    destinations=[\n        destinations.S3Bucket(bucket,\n            s3_backup=destinations.DestinationS3BackupProps(\n                mode=destinations.BackupMode.ALL,\n                data_output_prefix=\"mybackup\"\n            )\n        )\n    ]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Enable backup of all source records (to an S3 bucket created by CDK).\nBucket bucket;\n// Explicitly provide an S3 bucket to which all source records will be backed up.\nBucket backupBucket;\n\nnew DeliveryStream(this, \"Delivery Stream Backup All\", new DeliveryStreamProps {\n    Destinations = new [] {\n        new S3Bucket(bucket, new S3BucketProps {\n            S3Backup = new DestinationS3BackupProps {\n                Mode = BackupMode.ALL\n            }\n        }) }\n});\nnew DeliveryStream(this, \"Delivery Stream Backup All Explicit Bucket\", new DeliveryStreamProps {\n    Destinations = new [] {\n        new S3Bucket(bucket, new S3BucketProps {\n            S3Backup = new DestinationS3BackupProps {\n                Bucket = backupBucket\n            }\n        }) }\n});\n// Explicitly provide an S3 prefix under which all source records will be backed up.\n// Explicitly provide an S3 prefix under which all source records will be backed up.\nnew DeliveryStream(this, \"Delivery Stream Backup All Explicit Prefix\", new DeliveryStreamProps {\n    Destinations = new [] {\n        new S3Bucket(bucket, new S3BucketProps {\n            S3Backup = new DestinationS3BackupProps {\n                Mode = BackupMode.ALL,\n                DataOutputPrefix = \"mybackup\"\n            }\n        }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Enable backup of all source records (to an S3 bucket created by CDK).\nBucket bucket;\n// Explicitly provide an S3 bucket to which all source records will be backed up.\nBucket backupBucket;\n\nDeliveryStream.Builder.create(this, \"Delivery Stream Backup All\")\n        .destinations(List.of(\n            S3Bucket.Builder.create(bucket)\n                    .s3Backup(DestinationS3BackupProps.builder()\n                            .mode(BackupMode.ALL)\n                            .build())\n                    .build()))\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream Backup All Explicit Bucket\")\n        .destinations(List.of(\n            S3Bucket.Builder.create(bucket)\n                    .s3Backup(DestinationS3BackupProps.builder()\n                            .bucket(backupBucket)\n                            .build())\n                    .build()))\n        .build();\n// Explicitly provide an S3 prefix under which all source records will be backed up.\n// Explicitly provide an S3 prefix under which all source records will be backed up.\nDeliveryStream.Builder.create(this, \"Delivery Stream Backup All Explicit Prefix\")\n        .destinations(List.of(\n            S3Bucket.Builder.create(bucket)\n                    .s3Backup(DestinationS3BackupProps.builder()\n                            .mode(BackupMode.ALL)\n                            .dataOutputPrefix(\"mybackup\")\n                            .build())\n                    .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Enable backup of all source records (to an S3 bucket created by CDK).\nvar bucket bucket\n// Explicitly provide an S3 bucket to which all source records will be backed up.\nvar backupBucket bucket\n\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream Backup All\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\tdestinations.NewS3Bucket(bucket, &s3BucketProps{\n\t\t\ts3Backup: &destinationS3BackupProps{\n\t\t\t\tmode: destinations.backupMode_ALL,\n\t\t\t},\n\t\t}),\n\t},\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream Backup All Explicit Bucket\"), &deliveryStreamProps{\n\tdestinations: []*iDestination{\n\t\tdestinations.NewS3Bucket(bucket, &s3BucketProps{\n\t\t\ts3Backup: &destinationS3BackupProps{\n\t\t\t\tbucket: backupBucket,\n\t\t\t},\n\t\t}),\n\t},\n})\n// Explicitly provide an S3 prefix under which all source records will be backed up.\n// Explicitly provide an S3 prefix under which all source records will be backed up.\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream Backup All Explicit Prefix\"), &deliveryStreamProps{\n\tdestinations: []*iDestination{\n\t\tdestinations.NewS3Bucket(bucket, &s3BucketProps{\n\t\t\ts3Backup: &destinationS3BackupProps{\n\t\t\t\tmode: destinations.*backupMode_ALL,\n\t\t\t\tdataOutputPrefix: jsii.String(\"mybackup\"),\n\t\t\t},\n\t\t}),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Enable backup of all source records (to an S3 bucket created by CDK).\ndeclare const bucket: s3.Bucket;\nnew firehose.DeliveryStream(this, 'Delivery Stream Backup All', {\n  destinations: [\n    new destinations.S3Bucket(bucket, {\n      s3Backup: {\n        mode: destinations.BackupMode.ALL,\n      },\n    }),\n  ],\n});\n// Explicitly provide an S3 bucket to which all source records will be backed up.\ndeclare const backupBucket: s3.Bucket;\nnew firehose.DeliveryStream(this, 'Delivery Stream Backup All Explicit Bucket', {\n  destinations: [\n    new destinations.S3Bucket(bucket, {\n      s3Backup: {\n        bucket: backupBucket,\n      },\n    }),\n  ],\n});\n// Explicitly provide an S3 prefix under which all source records will be backed up.\nnew firehose.DeliveryStream(this, 'Delivery Stream Backup All Explicit Prefix', {\n  destinations: [\n    new destinations.S3Bucket(bucket, {\n      s3Backup: {\n        mode: destinations.BackupMode.ALL,\n        dataOutputPrefix: 'mybackup',\n      },\n    }),\n  ],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 335
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.BackupMode",
        "@aws-cdk/aws-kinesisfirehose-destinations.BackupMode#ALL",
        "@aws-cdk/aws-kinesisfirehose-destinations.DestinationS3BackupProps",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Enable backup of all source records (to an S3 bucket created by CDK).\ndeclare const bucket: s3.Bucket;\n// Explicitly provide an S3 bucket to which all source records will be backed up.\ndeclare const backupBucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew firehose.DeliveryStream(this, 'Delivery Stream Backup All', {\n  destinations: [\n    new destinations.S3Bucket(bucket, {\n      s3Backup: {\n        mode: destinations.BackupMode.ALL,\n      },\n    }),\n  ],\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream Backup All Explicit Bucket', {\n  destinations: [\n    new destinations.S3Bucket(bucket, {\n      s3Backup: {\n        bucket: backupBucket,\n      },\n    }),\n  ],\n});\n// Explicitly provide an S3 prefix under which all source records will be backed up.\nnew firehose.DeliveryStream(this, 'Delivery Stream Backup All Explicit Prefix', {\n  destinations: [\n    new destinations.S3Bucket(bucket, {\n      s3Backup: {\n        mode: destinations.BackupMode.ALL,\n        dataOutputPrefix: 'mybackup',\n      },\n    }),\n  ],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 38,
        "104": 3,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 3,
        "193": 9,
        "194": 10,
        "197": 6,
        "225": 2,
        "226": 3,
        "242": 2,
        "243": 2,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "75c7d1d472ae39a4c4db90c114629d4211b5186b08c79bc3c485bb6afdd0af7f"
    },
    "4f135dbe15c7999bf62233712c37e3f52292a381753d8cadf84c990ec9e701f4": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n# Provide a Lambda function that will transform records before delivery, with custom\n# buffering and retry configuration\nlambda_function = lambda_.Function(self, \"Processor\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset(path.join(__dirname, \"process-records\"))\n)\nlambda_processor = firehose.LambdaFunctionProcessor(lambda_function,\n    buffer_interval=Duration.minutes(5),\n    buffer_size=Size.mebibytes(5),\n    retries=5\n)\ns3_destination = destinations.S3Bucket(bucket,\n    processor=lambda_processor\n)\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[s3_destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nFunction lambdaFunction = new Function(this, \"Processor\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset(Join(__dirname, \"process-records\"))\n});\nLambdaFunctionProcessor lambdaProcessor = new LambdaFunctionProcessor(lambdaFunction, new DataProcessorProps {\n    BufferInterval = Duration.Minutes(5),\n    BufferSize = Size.Mebibytes(5),\n    Retries = 5\n});\nS3Bucket s3Destination = new S3Bucket(bucket, new S3BucketProps {\n    Processor = lambdaProcessor\n});\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { s3Destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nFunction lambdaFunction = Function.Builder.create(this, \"Processor\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset(join(__dirname, \"process-records\")))\n        .build();\nLambdaFunctionProcessor lambdaProcessor = LambdaFunctionProcessor.Builder.create(lambdaFunction)\n        .bufferInterval(Duration.minutes(5))\n        .bufferSize(Size.mebibytes(5))\n        .retries(5)\n        .build();\nS3Bucket s3Destination = S3Bucket.Builder.create(bucket)\n        .processor(lambdaProcessor)\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(s3Destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nlambdaFunction := lambda.NewFunction(this, jsii.String(\"Processor\"), &functionProps{\n\truntime: lambda.runtime_NODEJS_14_X(),\n\thandler: jsii.String(\"index.handler\"),\n\tcode: lambda.code.fromAsset(path.join(__dirname, jsii.String(\"process-records\"))),\n})\nlambdaProcessor := firehose.NewLambdaFunctionProcessor(lambdaFunction, &dataProcessorProps{\n\tbufferInterval: *awscdkcore.Duration.minutes(jsii.Number(5)),\n\tbufferSize: *awscdkcore.Size.mebibytes(jsii.Number(5)),\n\tretries: jsii.Number(5),\n})\ns3Destination := destinations.NewS3Bucket(bucket, &s3BucketProps{\n\tprocessor: lambdaProcessor,\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\ts3Destination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nconst lambdaFunction = new lambda.Function(this, 'Processor', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'process-records')),\n});\nconst lambdaProcessor = new firehose.LambdaFunctionProcessor(lambdaFunction, {\n  bufferInterval: Duration.minutes(5),\n  bufferSize: Size.mebibytes(5),\n  retries: 5,\n});\ndeclare const bucket: s3.Bucket;\nconst s3Destination = new destinations.S3Bucket(bucket, {\n  processor: lambdaProcessor,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [s3Destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 401
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DataProcessorProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-kinesisfirehose.IDataProcessor",
        "@aws-cdk/aws-kinesisfirehose.LambdaFunctionProcessor",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromAsset",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_14_X",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "@aws-cdk/core.Size",
        "@aws-cdk/core.Size#mebibytes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nconst lambdaFunction = new lambda.Function(this, 'Processor', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'process-records')),\n});\nconst lambdaProcessor = new firehose.LambdaFunctionProcessor(lambdaFunction, {\n  bufferInterval: Duration.minutes(5),\n  bufferSize: Size.mebibytes(5),\n  retries: 5,\n});\nconst s3Destination = new destinations.S3Bucket(bucket, {\n  processor: lambdaProcessor,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [s3Destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 3,
        "10": 4,
        "75": 39,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 4,
        "194": 11,
        "196": 4,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "9d6b81e3b76c760ba885d038b83ab12a77c63303cf47e6e03009735d0ba4677d"
    },
    "a35e53264628a3e00bf555fd3cb17854d35eea0ab95af94e20d0c9994499c5a5": {
      "translations": {
        "python": {
          "source": "import path as path\nimport aws_cdk.aws_kinesisfirehose as firehose\nimport aws_cdk.aws_kms as kms\nimport aws_cdk.aws_lambda_nodejs as lambdanodejs\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\nimport aws_cdk.aws_kinesisfirehose_destinations as destinations\n\napp = cdk.App()\n\nstack = cdk.Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\")\n\nbucket = s3.Bucket(stack, \"Bucket\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    auto_delete_objects=True\n)\n\nbackup_bucket = s3.Bucket(stack, \"BackupBucket\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    auto_delete_objects=True\n)\nlog_group = logs.LogGroup(stack, \"LogGroup\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\ndata_processor_function = lambdanodejs.NodejsFunction(stack, \"DataProcessorFunction\",\n    entry=path.join(__dirname, \"lambda-data-processor.js\"),\n    timeout=cdk.Duration.minutes(1)\n)\n\nprocessor = firehose.LambdaFunctionProcessor(data_processor_function,\n    buffer_interval=cdk.Duration.seconds(60),\n    buffer_size=cdk.Size.mebibytes(1),\n    retries=1\n)\n\nkey = kms.Key(stack, \"Key\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\nbackup_key = kms.Key(stack, \"BackupKey\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\nfirehose.DeliveryStream(stack, \"Delivery Stream\",\n    destinations=[destinations.S3Bucket(bucket,\n        logging=True,\n        log_group=log_group,\n        processor=processor,\n        compression=destinations.Compression.GZIP,\n        data_output_prefix=\"regularPrefix\",\n        error_output_prefix=\"errorPrefix\",\n        buffering_interval=cdk.Duration.seconds(60),\n        buffering_size=cdk.Size.mebibytes(1),\n        encryption_key=key,\n        s3_backup=destinations.DestinationS3BackupProps(\n            mode=destinations.BackupMode.ALL,\n            bucket=backup_bucket,\n            compression=destinations.Compression.ZIP,\n            data_output_prefix=\"backupPrefix\",\n            error_output_prefix=\"backupErrorPrefix\",\n            buffering_interval=cdk.Duration.seconds(60),\n            buffering_size=cdk.Size.mebibytes(1),\n            encryption_key=backup_key\n        )\n    )]\n)\n\napp.synth()",
          "version": "2"
        },
        "csharp": {
          "source": "using Path;\nusing Amazon.CDK.AWS.KinesisFirehose;\nusing Amazon.CDK.AWS.KMS;\nusing Amazon.CDK.AWS.Lambda.Nodejs;\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\nusing Amazon.CDK.AWS.KinesisFirehose.Destinations;\n\nApp app = new App();\n\nStack stack = new Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\");\n\nBucket bucket = new Bucket(stack, \"Bucket\", new BucketProps {\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    AutoDeleteObjects = true\n});\n\nBucket backupBucket = new Bucket(stack, \"BackupBucket\", new BucketProps {\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    AutoDeleteObjects = true\n});\nLogGroup logGroup = new LogGroup(stack, \"LogGroup\", new LogGroupProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nNodejsFunction dataProcessorFunction = new NodejsFunction(stack, \"DataProcessorFunction\", new NodejsFunctionProps {\n    Entry = Join(__dirname, \"lambda-data-processor.js\"),\n    Timeout = Duration.Minutes(1)\n});\n\nLambdaFunctionProcessor processor = new LambdaFunctionProcessor(dataProcessorFunction, new DataProcessorProps {\n    BufferInterval = Duration.Seconds(60),\n    BufferSize = Size.Mebibytes(1),\n    Retries = 1\n});\n\nKey key = new Key(stack, \"Key\", new KeyProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nKey backupKey = new Key(stack, \"BackupKey\", new KeyProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nnew DeliveryStream(stack, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { new S3Bucket(bucket, new S3BucketProps {\n        Logging = true,\n        LogGroup = logGroup,\n        Processor = processor,\n        Compression = Compression.GZIP,\n        DataOutputPrefix = \"regularPrefix\",\n        ErrorOutputPrefix = \"errorPrefix\",\n        BufferingInterval = Duration.Seconds(60),\n        BufferingSize = Size.Mebibytes(1),\n        EncryptionKey = key,\n        S3Backup = new DestinationS3BackupProps {\n            Mode = BackupMode.ALL,\n            Bucket = backupBucket,\n            Compression = Compression.ZIP,\n            DataOutputPrefix = \"backupPrefix\",\n            ErrorOutputPrefix = \"backupErrorPrefix\",\n            BufferingInterval = Duration.Seconds(60),\n            BufferingSize = Size.Mebibytes(1),\n            EncryptionKey = backupKey\n        }\n    }) }\n});\n\napp.Synth();",
          "version": "1"
        },
        "java": {
          "source": "import path.*;\nimport software.amazon.awscdk.services.kinesisfirehose.*;\nimport software.amazon.awscdk.services.kms.*;\nimport software.amazon.awscdk.services.lambda.nodejs.*;\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\nimport software.amazon.awscdk.services.kinesisfirehose.destinations.*;\n\nApp app = new App();\n\nStack stack = new Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\");\n\nBucket bucket = Bucket.Builder.create(stack, \"Bucket\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .autoDeleteObjects(true)\n        .build();\n\nBucket backupBucket = Bucket.Builder.create(stack, \"BackupBucket\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .autoDeleteObjects(true)\n        .build();\nLogGroup logGroup = LogGroup.Builder.create(stack, \"LogGroup\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nNodejsFunction dataProcessorFunction = NodejsFunction.Builder.create(stack, \"DataProcessorFunction\")\n        .entry(join(__dirname, \"lambda-data-processor.js\"))\n        .timeout(Duration.minutes(1))\n        .build();\n\nLambdaFunctionProcessor processor = LambdaFunctionProcessor.Builder.create(dataProcessorFunction)\n        .bufferInterval(Duration.seconds(60))\n        .bufferSize(Size.mebibytes(1))\n        .retries(1)\n        .build();\n\nKey key = Key.Builder.create(stack, \"Key\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nKey backupKey = Key.Builder.create(stack, \"BackupKey\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nDeliveryStream.Builder.create(stack, \"Delivery Stream\")\n        .destinations(List.of(S3Bucket.Builder.create(bucket)\n                .logging(true)\n                .logGroup(logGroup)\n                .processor(processor)\n                .compression(Compression.GZIP)\n                .dataOutputPrefix(\"regularPrefix\")\n                .errorOutputPrefix(\"errorPrefix\")\n                .bufferingInterval(Duration.seconds(60))\n                .bufferingSize(Size.mebibytes(1))\n                .encryptionKey(key)\n                .s3Backup(DestinationS3BackupProps.builder()\n                        .mode(BackupMode.ALL)\n                        .bucket(backupBucket)\n                        .compression(Compression.ZIP)\n                        .dataOutputPrefix(\"backupPrefix\")\n                        .errorOutputPrefix(\"backupErrorPrefix\")\n                        .bufferingInterval(Duration.seconds(60))\n                        .bufferingSize(Size.mebibytes(1))\n                        .encryptionKey(backupKey)\n                        .build())\n                .build()))\n        .build();\n\napp.synth();",
          "version": "1"
        },
        "go": {
          "source": "import path \"github.com/aws-samples/dummy/path\"\nimport firehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\nimport kms \"github.com/aws-samples/dummy/awscdkawskms\"\nimport lambdanodejs \"github.com/aws-samples/dummy/awscdkawslambdanodejs\"\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nimport s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\nimport destinations \"github.com/aws-samples/dummy/lib\"\n\napp := cdk.NewApp()\n\nstack := cdk.NewStack(app, jsii.String(\"aws-cdk-firehose-delivery-stream-s3-all-properties\"))\n\nbucket := s3.NewBucket(stack, jsii.String(\"Bucket\"), &bucketProps{\n\tremovalPolicy: cdk.removalPolicy_DESTROY,\n\tautoDeleteObjects: jsii.Boolean(true),\n})\n\nbackupBucket := s3.NewBucket(stack, jsii.String(\"BackupBucket\"), &bucketProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n\tautoDeleteObjects: jsii.Boolean(true),\n})\nlogGroup := logs.NewLogGroup(stack, jsii.String(\"LogGroup\"), &logGroupProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\ndataProcessorFunction := lambdanodejs.NewNodejsFunction(stack, jsii.String(\"DataProcessorFunction\"), &nodejsFunctionProps{\n\tentry: path.join(__dirname, jsii.String(\"lambda-data-processor.js\")),\n\ttimeout: cdk.duration.minutes(jsii.Number(1)),\n})\n\nprocessor := firehose.NewLambdaFunctionProcessor(dataProcessorFunction, &dataProcessorProps{\n\tbufferInterval: cdk.*duration.seconds(jsii.Number(60)),\n\tbufferSize: cdk.size.mebibytes(jsii.Number(1)),\n\tretries: jsii.Number(1),\n})\n\nkey := kms.NewKey(stack, jsii.String(\"Key\"), &keyProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\nbackupKey := kms.NewKey(stack, jsii.String(\"BackupKey\"), &keyProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\nfirehose.NewDeliveryStream(stack, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\tdestinations.NewS3Bucket(bucket, &s3BucketProps{\n\t\t\tlogging: jsii.Boolean(true),\n\t\t\tlogGroup: logGroup,\n\t\t\tprocessor: processor,\n\t\t\tcompression: destinations.compression_GZIP(),\n\t\t\tdataOutputPrefix: jsii.String(\"regularPrefix\"),\n\t\t\terrorOutputPrefix: jsii.String(\"errorPrefix\"),\n\t\t\tbufferingInterval: cdk.*duration.seconds(jsii.Number(60)),\n\t\t\tbufferingSize: cdk.*size.mebibytes(jsii.Number(1)),\n\t\t\tencryptionKey: key,\n\t\t\ts3Backup: &destinationS3BackupProps{\n\t\t\t\tmode: destinations.backupMode_ALL,\n\t\t\t\tbucket: backupBucket,\n\t\t\t\tcompression: destinations.*compression_ZIP(),\n\t\t\t\tdataOutputPrefix: jsii.String(\"backupPrefix\"),\n\t\t\t\terrorOutputPrefix: jsii.String(\"backupErrorPrefix\"),\n\t\t\t\tbufferingInterval: cdk.*duration.seconds(jsii.Number(60)),\n\t\t\t\tbufferingSize: cdk.*size.mebibytes(jsii.Number(1)),\n\t\t\t\tencryptionKey: backupKey,\n\t\t\t},\n\t\t}),\n\t},\n})\n\napp.synth()",
          "version": "1"
        },
        "$": {
          "source": "#!/usr/bin/env node",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 423
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.BackupMode",
        "@aws-cdk/aws-kinesisfirehose-destinations.BackupMode#ALL",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression#GZIP",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression#ZIP",
        "@aws-cdk/aws-kinesisfirehose-destinations.DestinationS3BackupProps",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DataProcessorProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-kinesisfirehose.IDataProcessor",
        "@aws-cdk/aws-kinesisfirehose.LambdaFunctionProcessor",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-kms.KeyProps",
        "@aws-cdk/aws-lambda-nodejs.NodejsFunction",
        "@aws-cdk/aws-lambda-nodejs.NodejsFunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-logs.ILogGroup",
        "@aws-cdk/aws-logs.LogGroup",
        "@aws-cdk/aws-logs.LogGroupProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "@aws-cdk/core.Duration#seconds",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY",
        "@aws-cdk/core.Size",
        "@aws-cdk/core.Size#mebibytes",
        "@aws-cdk/core.Stack",
        "@aws-cdk/core.Stage#synth",
        "constructs.Construct"
      ],
      "fullSource": "#!/usr/bin/env node\n/// !cdk-integ pragma:ignore-assets\nimport * as path from 'path';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as lambdanodejs from '@aws-cdk/aws-lambda-nodejs';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\nimport * as destinations from '../lib';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-firehose-delivery-stream-s3-all-properties');\n\nconst bucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\n\nconst backupBucket = new s3.Bucket(stack, 'BackupBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\nconst logGroup = new logs.LogGroup(stack, 'LogGroup', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst dataProcessorFunction = new lambdanodejs.NodejsFunction(stack, 'DataProcessorFunction', {\n  entry: path.join(__dirname, 'lambda-data-processor.js'),\n  timeout: cdk.Duration.minutes(1),\n});\n\nconst processor = new firehose.LambdaFunctionProcessor(dataProcessorFunction, {\n  bufferInterval: cdk.Duration.seconds(60),\n  bufferSize: cdk.Size.mebibytes(1),\n  retries: 1,\n});\n\nconst key = new kms.Key(stack, 'Key', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst backupKey = new kms.Key(stack, 'BackupKey', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew firehose.DeliveryStream(stack, 'Delivery Stream', {\n  destinations: [new destinations.S3Bucket(bucket, {\n    logging: true,\n    logGroup: logGroup,\n    processor: processor,\n    compression: destinations.Compression.GZIP,\n    dataOutputPrefix: 'regularPrefix',\n    errorOutputPrefix: 'errorPrefix',\n    bufferingInterval: cdk.Duration.seconds(60),\n    bufferingSize: cdk.Size.mebibytes(1),\n    encryptionKey: key,\n    s3Backup: {\n      mode: destinations.BackupMode.ALL,\n      bucket: backupBucket,\n      compression: destinations.Compression.ZIP,\n      dataOutputPrefix: 'backupPrefix',\n      errorOutputPrefix: 'backupErrorPrefix',\n      bufferingInterval: cdk.Duration.seconds(60),\n      bufferingSize: cdk.Size.mebibytes(1),\n      encryptionKey: backupKey,\n    },\n  })],\n});\n\napp.synth();\n",
      "syntaxKindCounter": {
        "8": 8,
        "10": 21,
        "75": 135,
        "106": 3,
        "192": 1,
        "193": 10,
        "194": 43,
        "196": 9,
        "197": 11,
        "225": 9,
        "226": 2,
        "242": 9,
        "243": 9,
        "254": 8,
        "255": 8,
        "256": 8,
        "281": 31,
        "290": 1
      },
      "fqnsFingerprint": "14f93717371c27d8ab15f18004cce3c49ff5781992a468be6e6b7b3908a008c1"
    },
    "2aba0fb1ea9e2556cc7caab73fce5d9f71a999c35c4d1df019cf4d5ecb8639ed": {
      "translations": {
        "python": {
          "source": "import path as path\nimport aws_cdk.aws_kinesisfirehose as firehose\nimport aws_cdk.aws_kms as kms\nimport aws_cdk.aws_lambda_nodejs as lambdanodejs\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\nimport aws_cdk.aws_kinesisfirehose_destinations as destinations\n\napp = cdk.App()\n\nstack = cdk.Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\")\n\nbucket = s3.Bucket(stack, \"Bucket\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    auto_delete_objects=True\n)\n\nbackup_bucket = s3.Bucket(stack, \"BackupBucket\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    auto_delete_objects=True\n)\nlog_group = logs.LogGroup(stack, \"LogGroup\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\ndata_processor_function = lambdanodejs.NodejsFunction(stack, \"DataProcessorFunction\",\n    entry=path.join(__dirname, \"lambda-data-processor.js\"),\n    timeout=cdk.Duration.minutes(1)\n)\n\nprocessor = firehose.LambdaFunctionProcessor(data_processor_function,\n    buffer_interval=cdk.Duration.seconds(60),\n    buffer_size=cdk.Size.mebibytes(1),\n    retries=1\n)\n\nkey = kms.Key(stack, \"Key\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\nbackup_key = kms.Key(stack, \"BackupKey\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\nfirehose.DeliveryStream(stack, \"Delivery Stream\",\n    destinations=[destinations.S3Bucket(bucket,\n        logging=True,\n        log_group=log_group,\n        processor=processor,\n        compression=destinations.Compression.GZIP,\n        data_output_prefix=\"regularPrefix\",\n        error_output_prefix=\"errorPrefix\",\n        buffering_interval=cdk.Duration.seconds(60),\n        buffering_size=cdk.Size.mebibytes(1),\n        encryption_key=key,\n        s3_backup=destinations.DestinationS3BackupProps(\n            mode=destinations.BackupMode.ALL,\n            bucket=backup_bucket,\n            compression=destinations.Compression.ZIP,\n            data_output_prefix=\"backupPrefix\",\n            error_output_prefix=\"backupErrorPrefix\",\n            buffering_interval=cdk.Duration.seconds(60),\n            buffering_size=cdk.Size.mebibytes(1),\n            encryption_key=backup_key\n        )\n    )]\n)\n\napp.synth()",
          "version": "2"
        },
        "csharp": {
          "source": "using Path;\nusing Amazon.CDK.AWS.KinesisFirehose;\nusing Amazon.CDK.AWS.KMS;\nusing Amazon.CDK.AWS.Lambda.Nodejs;\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\nusing Amazon.CDK.AWS.KinesisFirehose.Destinations;\n\nApp app = new App();\n\nStack stack = new Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\");\n\nBucket bucket = new Bucket(stack, \"Bucket\", new BucketProps {\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    AutoDeleteObjects = true\n});\n\nBucket backupBucket = new Bucket(stack, \"BackupBucket\", new BucketProps {\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    AutoDeleteObjects = true\n});\nLogGroup logGroup = new LogGroup(stack, \"LogGroup\", new LogGroupProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nNodejsFunction dataProcessorFunction = new NodejsFunction(stack, \"DataProcessorFunction\", new NodejsFunctionProps {\n    Entry = Join(__dirname, \"lambda-data-processor.js\"),\n    Timeout = Duration.Minutes(1)\n});\n\nLambdaFunctionProcessor processor = new LambdaFunctionProcessor(dataProcessorFunction, new DataProcessorProps {\n    BufferInterval = Duration.Seconds(60),\n    BufferSize = Size.Mebibytes(1),\n    Retries = 1\n});\n\nKey key = new Key(stack, \"Key\", new KeyProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nKey backupKey = new Key(stack, \"BackupKey\", new KeyProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nnew DeliveryStream(stack, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { new S3Bucket(bucket, new S3BucketProps {\n        Logging = true,\n        LogGroup = logGroup,\n        Processor = processor,\n        Compression = Compression.GZIP,\n        DataOutputPrefix = \"regularPrefix\",\n        ErrorOutputPrefix = \"errorPrefix\",\n        BufferingInterval = Duration.Seconds(60),\n        BufferingSize = Size.Mebibytes(1),\n        EncryptionKey = key,\n        S3Backup = new DestinationS3BackupProps {\n            Mode = BackupMode.ALL,\n            Bucket = backupBucket,\n            Compression = Compression.ZIP,\n            DataOutputPrefix = \"backupPrefix\",\n            ErrorOutputPrefix = \"backupErrorPrefix\",\n            BufferingInterval = Duration.Seconds(60),\n            BufferingSize = Size.Mebibytes(1),\n            EncryptionKey = backupKey\n        }\n    }) }\n});\n\napp.Synth();",
          "version": "1"
        },
        "java": {
          "source": "import path.*;\nimport software.amazon.awscdk.services.kinesisfirehose.*;\nimport software.amazon.awscdk.services.kms.*;\nimport software.amazon.awscdk.services.lambda.nodejs.*;\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\nimport software.amazon.awscdk.services.kinesisfirehose.destinations.*;\n\nApp app = new App();\n\nStack stack = new Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\");\n\nBucket bucket = Bucket.Builder.create(stack, \"Bucket\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .autoDeleteObjects(true)\n        .build();\n\nBucket backupBucket = Bucket.Builder.create(stack, \"BackupBucket\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .autoDeleteObjects(true)\n        .build();\nLogGroup logGroup = LogGroup.Builder.create(stack, \"LogGroup\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nNodejsFunction dataProcessorFunction = NodejsFunction.Builder.create(stack, \"DataProcessorFunction\")\n        .entry(join(__dirname, \"lambda-data-processor.js\"))\n        .timeout(Duration.minutes(1))\n        .build();\n\nLambdaFunctionProcessor processor = LambdaFunctionProcessor.Builder.create(dataProcessorFunction)\n        .bufferInterval(Duration.seconds(60))\n        .bufferSize(Size.mebibytes(1))\n        .retries(1)\n        .build();\n\nKey key = Key.Builder.create(stack, \"Key\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nKey backupKey = Key.Builder.create(stack, \"BackupKey\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nDeliveryStream.Builder.create(stack, \"Delivery Stream\")\n        .destinations(List.of(S3Bucket.Builder.create(bucket)\n                .logging(true)\n                .logGroup(logGroup)\n                .processor(processor)\n                .compression(Compression.GZIP)\n                .dataOutputPrefix(\"regularPrefix\")\n                .errorOutputPrefix(\"errorPrefix\")\n                .bufferingInterval(Duration.seconds(60))\n                .bufferingSize(Size.mebibytes(1))\n                .encryptionKey(key)\n                .s3Backup(DestinationS3BackupProps.builder()\n                        .mode(BackupMode.ALL)\n                        .bucket(backupBucket)\n                        .compression(Compression.ZIP)\n                        .dataOutputPrefix(\"backupPrefix\")\n                        .errorOutputPrefix(\"backupErrorPrefix\")\n                        .bufferingInterval(Duration.seconds(60))\n                        .bufferingSize(Size.mebibytes(1))\n                        .encryptionKey(backupKey)\n                        .build())\n                .build()))\n        .build();\n\napp.synth();",
          "version": "1"
        },
        "go": {
          "source": "import path \"github.com/aws-samples/dummy/path\"\nimport firehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\nimport kms \"github.com/aws-samples/dummy/awscdkawskms\"\nimport lambdanodejs \"github.com/aws-samples/dummy/awscdkawslambdanodejs\"\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nimport s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\nimport destinations \"github.com/aws-samples/dummy/lib\"\n\napp := cdk.NewApp()\n\nstack := cdk.NewStack(app, jsii.String(\"aws-cdk-firehose-delivery-stream-s3-all-properties\"))\n\nbucket := s3.NewBucket(stack, jsii.String(\"Bucket\"), &bucketProps{\n\tremovalPolicy: cdk.removalPolicy_DESTROY,\n\tautoDeleteObjects: jsii.Boolean(true),\n})\n\nbackupBucket := s3.NewBucket(stack, jsii.String(\"BackupBucket\"), &bucketProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n\tautoDeleteObjects: jsii.Boolean(true),\n})\nlogGroup := logs.NewLogGroup(stack, jsii.String(\"LogGroup\"), &logGroupProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\ndataProcessorFunction := lambdanodejs.NewNodejsFunction(stack, jsii.String(\"DataProcessorFunction\"), &nodejsFunctionProps{\n\tentry: path.join(__dirname, jsii.String(\"lambda-data-processor.js\")),\n\ttimeout: cdk.duration.minutes(jsii.Number(1)),\n})\n\nprocessor := firehose.NewLambdaFunctionProcessor(dataProcessorFunction, &dataProcessorProps{\n\tbufferInterval: cdk.*duration.seconds(jsii.Number(60)),\n\tbufferSize: cdk.size.mebibytes(jsii.Number(1)),\n\tretries: jsii.Number(1),\n})\n\nkey := kms.NewKey(stack, jsii.String(\"Key\"), &keyProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\nbackupKey := kms.NewKey(stack, jsii.String(\"BackupKey\"), &keyProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\nfirehose.NewDeliveryStream(stack, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\tdestinations.NewS3Bucket(bucket, &s3BucketProps{\n\t\t\tlogging: jsii.Boolean(true),\n\t\t\tlogGroup: logGroup,\n\t\t\tprocessor: processor,\n\t\t\tcompression: destinations.compression_GZIP(),\n\t\t\tdataOutputPrefix: jsii.String(\"regularPrefix\"),\n\t\t\terrorOutputPrefix: jsii.String(\"errorPrefix\"),\n\t\t\tbufferingInterval: cdk.*duration.seconds(jsii.Number(60)),\n\t\t\tbufferingSize: cdk.*size.mebibytes(jsii.Number(1)),\n\t\t\tencryptionKey: key,\n\t\t\ts3Backup: &destinationS3BackupProps{\n\t\t\t\tmode: destinations.backupMode_ALL,\n\t\t\t\tbucket: backupBucket,\n\t\t\t\tcompression: destinations.*compression_ZIP(),\n\t\t\t\tdataOutputPrefix: jsii.String(\"backupPrefix\"),\n\t\t\t\terrorOutputPrefix: jsii.String(\"backupErrorPrefix\"),\n\t\t\t\tbufferingInterval: cdk.*duration.seconds(jsii.Number(60)),\n\t\t\t\tbufferingSize: cdk.*size.mebibytes(jsii.Number(1)),\n\t\t\t\tencryptionKey: backupKey,\n\t\t\t},\n\t\t}),\n\t},\n})\n\napp.synth()",
          "version": "1"
        },
        "$": {
          "source": "import * as path from 'path';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as lambdanodejs from '@aws-cdk/aws-lambda-nodejs';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\nimport * as destinations from '../lib';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-firehose-delivery-stream-s3-all-properties');\n\nconst bucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\n\nconst backupBucket = new s3.Bucket(stack, 'BackupBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\nconst logGroup = new logs.LogGroup(stack, 'LogGroup', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst dataProcessorFunction = new lambdanodejs.NodejsFunction(stack, 'DataProcessorFunction', {\n  entry: path.join(__dirname, 'lambda-data-processor.js'),\n  timeout: cdk.Duration.minutes(1),\n});\n\nconst processor = new firehose.LambdaFunctionProcessor(dataProcessorFunction, {\n  bufferInterval: cdk.Duration.seconds(60),\n  bufferSize: cdk.Size.mebibytes(1),\n  retries: 1,\n});\n\nconst key = new kms.Key(stack, 'Key', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst backupKey = new kms.Key(stack, 'BackupKey', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew firehose.DeliveryStream(stack, 'Delivery Stream', {\n  destinations: [new destinations.S3Bucket(bucket, {\n    logging: true,\n    logGroup: logGroup,\n    processor: processor,\n    compression: destinations.Compression.GZIP,\n    dataOutputPrefix: 'regularPrefix',\n    errorOutputPrefix: 'errorPrefix',\n    bufferingInterval: cdk.Duration.seconds(60),\n    bufferingSize: cdk.Size.mebibytes(1),\n    encryptionKey: key,\n    s3Backup: {\n      mode: destinations.BackupMode.ALL,\n      bucket: backupBucket,\n      compression: destinations.Compression.ZIP,\n      dataOutputPrefix: 'backupPrefix',\n      errorOutputPrefix: 'backupErrorPrefix',\n      bufferingInterval: cdk.Duration.seconds(60),\n      bufferingSize: cdk.Size.mebibytes(1),\n      encryptionKey: backupKey,\n    },\n  })],\n});\n\napp.synth();",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 427
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.BackupMode",
        "@aws-cdk/aws-kinesisfirehose-destinations.BackupMode#ALL",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression#GZIP",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression#ZIP",
        "@aws-cdk/aws-kinesisfirehose-destinations.DestinationS3BackupProps",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DataProcessorProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-kinesisfirehose.IDataProcessor",
        "@aws-cdk/aws-kinesisfirehose.LambdaFunctionProcessor",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-kms.KeyProps",
        "@aws-cdk/aws-lambda-nodejs.NodejsFunction",
        "@aws-cdk/aws-lambda-nodejs.NodejsFunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-logs.ILogGroup",
        "@aws-cdk/aws-logs.LogGroup",
        "@aws-cdk/aws-logs.LogGroupProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "@aws-cdk/core.Duration#seconds",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY",
        "@aws-cdk/core.Size",
        "@aws-cdk/core.Size#mebibytes",
        "@aws-cdk/core.Stack",
        "@aws-cdk/core.Stage#synth",
        "constructs.Construct"
      ],
      "fullSource": "#!/usr/bin/env node\n/// !cdk-integ pragma:ignore-assets\nimport * as path from 'path';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as lambdanodejs from '@aws-cdk/aws-lambda-nodejs';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\nimport * as destinations from '../lib';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-firehose-delivery-stream-s3-all-properties');\n\nconst bucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\n\nconst backupBucket = new s3.Bucket(stack, 'BackupBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\nconst logGroup = new logs.LogGroup(stack, 'LogGroup', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst dataProcessorFunction = new lambdanodejs.NodejsFunction(stack, 'DataProcessorFunction', {\n  entry: path.join(__dirname, 'lambda-data-processor.js'),\n  timeout: cdk.Duration.minutes(1),\n});\n\nconst processor = new firehose.LambdaFunctionProcessor(dataProcessorFunction, {\n  bufferInterval: cdk.Duration.seconds(60),\n  bufferSize: cdk.Size.mebibytes(1),\n  retries: 1,\n});\n\nconst key = new kms.Key(stack, 'Key', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst backupKey = new kms.Key(stack, 'BackupKey', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew firehose.DeliveryStream(stack, 'Delivery Stream', {\n  destinations: [new destinations.S3Bucket(bucket, {\n    logging: true,\n    logGroup: logGroup,\n    processor: processor,\n    compression: destinations.Compression.GZIP,\n    dataOutputPrefix: 'regularPrefix',\n    errorOutputPrefix: 'errorPrefix',\n    bufferingInterval: cdk.Duration.seconds(60),\n    bufferingSize: cdk.Size.mebibytes(1),\n    encryptionKey: key,\n    s3Backup: {\n      mode: destinations.BackupMode.ALL,\n      bucket: backupBucket,\n      compression: destinations.Compression.ZIP,\n      dataOutputPrefix: 'backupPrefix',\n      errorOutputPrefix: 'backupErrorPrefix',\n      bufferingInterval: cdk.Duration.seconds(60),\n      bufferingSize: cdk.Size.mebibytes(1),\n      encryptionKey: backupKey,\n    },\n  })],\n});\n\napp.synth();\n",
      "syntaxKindCounter": {
        "8": 8,
        "10": 21,
        "75": 135,
        "106": 3,
        "192": 1,
        "193": 10,
        "194": 43,
        "196": 9,
        "197": 11,
        "225": 9,
        "226": 2,
        "242": 9,
        "243": 9,
        "254": 8,
        "255": 8,
        "256": 8,
        "281": 31,
        "290": 1
      },
      "fqnsFingerprint": "14f93717371c27d8ab15f18004cce3c49ff5781992a468be6e6b7b3908a008c1"
    },
    "687db5597d09307051aae3938afd4be3dba3012bfb83444874255d4b52334e2a": {
      "translations": {
        "python": {
          "source": "# Specify the roles created above when defining the destination and delivery stream.\n# bucket: s3.Bucket\n# Create service roles for the delivery stream and destination.\n# These can be used for other purposes and granted access to different resources.\n# They must include the Kinesis Data Firehose service principal in their trust policies.\n# Two separate roles are shown below, but the same role can be used for both purposes.\ndelivery_stream_role = iam.Role(self, \"Delivery Stream Role\",\n    assumed_by=iam.ServicePrincipal(\"firehose.amazonaws.com\")\n)\ndestination_role = iam.Role(self, \"Destination Role\",\n    assumed_by=iam.ServicePrincipal(\"firehose.amazonaws.com\")\n)\ndestination = destinations.S3Bucket(bucket, role=destination_role)\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[destination],\n    role=delivery_stream_role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// Specify the roles created above when defining the destination and delivery stream.\nBucket bucket;\n// Create service roles for the delivery stream and destination.\n// These can be used for other purposes and granted access to different resources.\n// They must include the Kinesis Data Firehose service principal in their trust policies.\n// Two separate roles are shown below, but the same role can be used for both purposes.\nRole deliveryStreamRole = new Role(this, \"Delivery Stream Role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"firehose.amazonaws.com\")\n});\nRole destinationRole = new Role(this, \"Destination Role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"firehose.amazonaws.com\")\n});\nS3Bucket destination = new S3Bucket(bucket, new S3BucketProps { Role = destinationRole });\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { destination },\n    Role = deliveryStreamRole\n});",
          "version": "1"
        },
        "java": {
          "source": "// Specify the roles created above when defining the destination and delivery stream.\nBucket bucket;\n// Create service roles for the delivery stream and destination.\n// These can be used for other purposes and granted access to different resources.\n// They must include the Kinesis Data Firehose service principal in their trust policies.\n// Two separate roles are shown below, but the same role can be used for both purposes.\nRole deliveryStreamRole = Role.Builder.create(this, \"Delivery Stream Role\")\n        .assumedBy(new ServicePrincipal(\"firehose.amazonaws.com\"))\n        .build();\nRole destinationRole = Role.Builder.create(this, \"Destination Role\")\n        .assumedBy(new ServicePrincipal(\"firehose.amazonaws.com\"))\n        .build();\nS3Bucket destination = S3Bucket.Builder.create(bucket).role(destinationRole).build();\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(destination))\n        .role(deliveryStreamRole)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// Specify the roles created above when defining the destination and delivery stream.\nvar bucket bucket\n// Create service roles for the delivery stream and destination.\n// These can be used for other purposes and granted access to different resources.\n// They must include the Kinesis Data Firehose service principal in their trust policies.\n// Two separate roles are shown below, but the same role can be used for both purposes.\ndeliveryStreamRole := iam.NewRole(this, jsii.String(\"Delivery Stream Role\"), &roleProps{\n\tassumedBy: iam.NewServicePrincipal(jsii.String(\"firehose.amazonaws.com\")),\n})\ndestinationRole := iam.NewRole(this, jsii.String(\"Destination Role\"), &roleProps{\n\tassumedBy: iam.NewServicePrincipal(jsii.String(\"firehose.amazonaws.com\")),\n})\ndestination := destinations.NewS3Bucket(bucket, &s3BucketProps{\n\trole: destinationRole,\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\tdestination,\n\t},\n\trole: deliveryStreamRole,\n})",
          "version": "1"
        },
        "$": {
          "source": "// Create service roles for the delivery stream and destination.\n// These can be used for other purposes and granted access to different resources.\n// They must include the Kinesis Data Firehose service principal in their trust policies.\n// Two separate roles are shown below, but the same role can be used for both purposes.\nconst deliveryStreamRole = new iam.Role(this, 'Delivery Stream Role', {\n  assumedBy: new iam.ServicePrincipal('firehose.amazonaws.com'),\n});\nconst destinationRole = new iam.Role(this, 'Destination Role', {\n  assumedBy: new iam.ServicePrincipal('firehose.amazonaws.com'),\n});\n\n// Specify the roles created above when defining the destination and delivery stream.\ndeclare const bucket: s3.Bucket;\nconst destination = new destinations.S3Bucket(bucket, { role: destinationRole });\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [destination],\n  role: deliveryStreamRole,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 519
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-iam.ServicePrincipal",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n\n\n// Specify the roles created above when defining the destination and delivery stream.\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Create service roles for the delivery stream and destination.\n// These can be used for other purposes and granted access to different resources.\n// They must include the Kinesis Data Firehose service principal in their trust policies.\n// Two separate roles are shown below, but the same role can be used for both purposes.\nconst deliveryStreamRole = new iam.Role(this, 'Delivery Stream Role', {\n  assumedBy: new iam.ServicePrincipal('firehose.amazonaws.com'),\n});\nconst destinationRole = new iam.Role(this, 'Destination Role', {\n  assumedBy: new iam.ServicePrincipal('firehose.amazonaws.com'),\n});\nconst destination = new destinations.S3Bucket(bucket, { role: destinationRole });\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [destination],\n  role: deliveryStreamRole,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 27,
        "104": 3,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 4,
        "194": 6,
        "197": 6,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "cb5f56aec31afb502a4c51569f89937616b48a28ee3ed59e037b40dfeff9761c"
    },
    "3ddb74265eb034508b99b8eaa16ee16591675b3b828d6579bdec85e4f5611b3e": {
      "translations": {
        "python": {
          "source": "# Give the role permissions to write data to the delivery stream\n# delivery_stream: firehose.DeliveryStream\nlambda_role = iam.Role(self, \"Role\",\n    assumed_by=iam.ServicePrincipal(\"lambda.amazonaws.com\")\n)\ndelivery_stream.grant_put_records(lambda_role)",
          "version": "2"
        },
        "csharp": {
          "source": "// Give the role permissions to write data to the delivery stream\nDeliveryStream deliveryStream;\nRole lambdaRole = new Role(this, \"Role\", new RoleProps {\n    AssumedBy = new ServicePrincipal(\"lambda.amazonaws.com\")\n});\ndeliveryStream.GrantPutRecords(lambdaRole);",
          "version": "1"
        },
        "java": {
          "source": "// Give the role permissions to write data to the delivery stream\nDeliveryStream deliveryStream;\nRole lambdaRole = Role.Builder.create(this, \"Role\")\n        .assumedBy(new ServicePrincipal(\"lambda.amazonaws.com\"))\n        .build();\ndeliveryStream.grantPutRecords(lambdaRole);",
          "version": "1"
        },
        "go": {
          "source": "// Give the role permissions to write data to the delivery stream\nvar deliveryStream deliveryStream\nlambdaRole := iam.NewRole(this, jsii.String(\"Role\"), &roleProps{\n\tassumedBy: iam.NewServicePrincipal(jsii.String(\"lambda.amazonaws.com\")),\n})\ndeliveryStream.grantPutRecords(lambdaRole)",
          "version": "1"
        },
        "$": {
          "source": "const lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n});\n\n// Give the role permissions to write data to the delivery stream\ndeclare const deliveryStream: firehose.DeliveryStream;\ndeliveryStream.grantPutRecords(lambdaRole);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 556
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-iam.IPrincipal",
        "@aws-cdk/aws-iam.Role",
        "@aws-cdk/aws-iam.RoleProps",
        "@aws-cdk/aws-iam.ServicePrincipal",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n\n\n// Give the role permissions to write data to the delivery stream\ndeclare const deliveryStream: firehose.DeliveryStream;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst lambdaRole = new iam.Role(this, 'Role', {\n  assumedBy: new iam.ServicePrincipal('lambda.amazonaws.com'),\n});\ndeliveryStream.grantPutRecords(lambdaRole);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 12,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 3,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "c9cb0c430f254370880a2ec422c30450dffde73e860ce6a94ae4bed12e6f9e1a"
    },
    "a4f493588831b954ab9a8f77262ffc89e86afdb34dbecb78ef4c364a4c7c86a0": {
      "translations": {
        "python": {
          "source": "# delivery_stream: firehose.DeliveryStream\nfn = lambda_.Function(self, \"Function\",\n    code=lambda_.Code.from_inline(\"exports.handler = (event) => {}\"),\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\"\n)\nfn.grant_invoke(delivery_stream)",
          "version": "2"
        },
        "csharp": {
          "source": "DeliveryStream deliveryStream;\nFunction fn = new Function(this, \"Function\", new FunctionProps {\n    Code = Code.FromInline(\"exports.handler = (event) => {}\"),\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\"\n});\nfn.GrantInvoke(deliveryStream);",
          "version": "1"
        },
        "java": {
          "source": "DeliveryStream deliveryStream;\nFunction fn = Function.Builder.create(this, \"Function\")\n        .code(Code.fromInline(\"exports.handler = (event) => {}\"))\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .build();\nfn.grantInvoke(deliveryStream);",
          "version": "1"
        },
        "go": {
          "source": "var deliveryStream deliveryStream\nfn := lambda.NewFunction(this, jsii.String(\"Function\"), &functionProps{\n\tcode: lambda.code.fromInline(jsii.String(\"exports.handler = (event) => {}\")),\n\truntime: lambda.runtime_NODEJS_14_X(),\n\thandler: jsii.String(\"index.handler\"),\n})\nfn.grantInvoke(deliveryStream)",
          "version": "1"
        },
        "$": {
          "source": "const fn = new lambda.Function(this, 'Function', {\n  code: lambda.Code.fromInline('exports.handler = (event) => {}'),\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n});\n\ndeclare const deliveryStream: firehose.DeliveryStream;\nfn.grantInvoke(deliveryStream);",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-kinesisfirehose"
        },
        "field": {
          "field": "markdown",
          "line": 581
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromInline",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionBase#grantInvoke",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_14_X",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n\n\ndeclare const deliveryStream: firehose.DeliveryStream;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst fn = new lambda.Function(this, 'Function', {\n  code: lambda.Code.fromInline('exports.handler = (event) => {}'),\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n});\nfn.grantInvoke(deliveryStream);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 18,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 1,
        "194": 6,
        "196": 2,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "4833916d425c933bd24e416d11c43a4def62abd1b96b270945f30cd1a22de722"
    },
    "5eb1d64e5eb201ab9f2777f4bcda7332ecbce1ead35164d485bf8d0d89e7603b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ncfn_delivery_stream = kinesisfirehose.CfnDeliveryStream(self, \"MyCfnDeliveryStream\",\n    amazon_open_search_serverless_destination_configuration=kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessDestinationConfigurationProperty(\n        index_name=\"indexName\",\n        role_arn=\"roleArn\",\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessBufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        collection_endpoint=\"collectionEndpoint\",\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessRetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        s3_backup_mode=\"s3BackupMode\",\n        vpc_configuration=kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty(\n            role_arn=\"roleArn\",\n            security_group_ids=[\"securityGroupIds\"],\n            subnet_ids=[\"subnetIds\"]\n        )\n    ),\n    amazonopensearchservice_destination_configuration=kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceDestinationConfigurationProperty(\n        index_name=\"indexName\",\n        role_arn=\"roleArn\",\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceBufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        cluster_endpoint=\"clusterEndpoint\",\n        domain_arn=\"domainArn\",\n        index_rotation_period=\"indexRotationPeriod\",\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceRetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        s3_backup_mode=\"s3BackupMode\",\n        type_name=\"typeName\",\n        vpc_configuration=kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty(\n            role_arn=\"roleArn\",\n            security_group_ids=[\"securityGroupIds\"],\n            subnet_ids=[\"subnetIds\"]\n        )\n    ),\n    delivery_stream_encryption_configuration_input=kinesisfirehose.CfnDeliveryStream.DeliveryStreamEncryptionConfigurationInputProperty(\n        key_type=\"keyType\",\n\n        # the properties below are optional\n        key_arn=\"keyArn\"\n    ),\n    delivery_stream_name=\"deliveryStreamName\",\n    delivery_stream_type=\"deliveryStreamType\",\n    elasticsearch_destination_configuration=kinesisfirehose.CfnDeliveryStream.ElasticsearchDestinationConfigurationProperty(\n        index_name=\"indexName\",\n        role_arn=\"roleArn\",\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.ElasticsearchBufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        cluster_endpoint=\"clusterEndpoint\",\n        domain_arn=\"domainArn\",\n        index_rotation_period=\"indexRotationPeriod\",\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.ElasticsearchRetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        s3_backup_mode=\"s3BackupMode\",\n        type_name=\"typeName\",\n        vpc_configuration=kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty(\n            role_arn=\"roleArn\",\n            security_group_ids=[\"securityGroupIds\"],\n            subnet_ids=[\"subnetIds\"]\n        )\n    ),\n    extended_s3_destination_configuration=kinesisfirehose.CfnDeliveryStream.ExtendedS3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        data_format_conversion_configuration=kinesisfirehose.CfnDeliveryStream.DataFormatConversionConfigurationProperty(\n            enabled=False,\n            input_format_configuration=kinesisfirehose.CfnDeliveryStream.InputFormatConfigurationProperty(\n                deserializer=kinesisfirehose.CfnDeliveryStream.DeserializerProperty(\n                    hive_json_ser_de=kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty(\n                        timestamp_formats=[\"timestampFormats\"]\n                    ),\n                    open_xJson_ser_de=kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty(\n                        case_insensitive=False,\n                        column_to_json_key_mappings={\n                            \"column_to_json_key_mappings_key\": \"columnToJsonKeyMappings\"\n                        },\n                        convert_dots_in_json_keys_to_underscores=False\n                    )\n                )\n            ),\n            output_format_configuration=kinesisfirehose.CfnDeliveryStream.OutputFormatConfigurationProperty(\n                serializer=kinesisfirehose.CfnDeliveryStream.SerializerProperty(\n                    orc_ser_de=kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty(\n                        block_size_bytes=123,\n                        bloom_filter_columns=[\"bloomFilterColumns\"],\n                        bloom_filter_false_positive_probability=123,\n                        compression=\"compression\",\n                        dictionary_key_threshold=123,\n                        enable_padding=False,\n                        format_version=\"formatVersion\",\n                        padding_tolerance=123,\n                        row_index_stride=123,\n                        stripe_size_bytes=123\n                    ),\n                    parquet_ser_de=kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty(\n                        block_size_bytes=123,\n                        compression=\"compression\",\n                        enable_dictionary_compression=False,\n                        max_padding_bytes=123,\n                        page_size_bytes=123,\n                        writer_version=\"writerVersion\"\n                    )\n                )\n            ),\n            schema_configuration=kinesisfirehose.CfnDeliveryStream.SchemaConfigurationProperty(\n                catalog_id=\"catalogId\",\n                database_name=\"databaseName\",\n                region=\"region\",\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n                version_id=\"versionId\"\n            )\n        ),\n        dynamic_partitioning_configuration=kinesisfirehose.CfnDeliveryStream.DynamicPartitioningConfigurationProperty(\n            enabled=False,\n            retry_options=kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty(\n                duration_in_seconds=123\n            )\n        ),\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\",\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        s3_backup_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n        s3_backup_mode=\"s3BackupMode\"\n    ),\n    http_endpoint_destination_configuration=kinesisfirehose.CfnDeliveryStream.HttpEndpointDestinationConfigurationProperty(\n        endpoint_configuration=kinesisfirehose.CfnDeliveryStream.HttpEndpointConfigurationProperty(\n            url=\"url\",\n\n            # the properties below are optional\n            access_key=\"accessKey\",\n            name=\"name\"\n        ),\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        request_configuration=kinesisfirehose.CfnDeliveryStream.HttpEndpointRequestConfigurationProperty(\n            common_attributes=[kinesisfirehose.CfnDeliveryStream.HttpEndpointCommonAttributeProperty(\n                attribute_name=\"attributeName\",\n                attribute_value=\"attributeValue\"\n            )],\n            content_encoding=\"contentEncoding\"\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        role_arn=\"roleArn\",\n        s3_backup_mode=\"s3BackupMode\"\n    ),\n    kinesis_stream_source_configuration=kinesisfirehose.CfnDeliveryStream.KinesisStreamSourceConfigurationProperty(\n        kinesis_stream_arn=\"kinesisStreamArn\",\n        role_arn=\"roleArn\"\n    ),\n    redshift_destination_configuration=kinesisfirehose.CfnDeliveryStream.RedshiftDestinationConfigurationProperty(\n        cluster_jdbcurl=\"clusterJdbcurl\",\n        copy_command=kinesisfirehose.CfnDeliveryStream.CopyCommandProperty(\n            data_table_name=\"dataTableName\",\n\n            # the properties below are optional\n            copy_options=\"copyOptions\",\n            data_table_columns=\"dataTableColumns\"\n        ),\n        password=\"password\",\n        role_arn=\"roleArn\",\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n        username=\"username\",\n\n        # the properties below are optional\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.RedshiftRetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        s3_backup_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n        s3_backup_mode=\"s3BackupMode\"\n    ),\n    s3_destination_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\"\n    ),\n    splunk_destination_configuration=kinesisfirehose.CfnDeliveryStream.SplunkDestinationConfigurationProperty(\n        hec_endpoint=\"hecEndpoint\",\n        hec_endpoint_type=\"hecEndpointType\",\n        hec_token=\"hecToken\",\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n\n        # the properties below are optional\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        hec_acknowledgment_timeout_in_seconds=123,\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.SplunkRetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        s3_backup_mode=\"s3BackupMode\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nCfnDeliveryStream cfnDeliveryStream = new CfnDeliveryStream(this, \"MyCfnDeliveryStream\", new CfnDeliveryStreamProps {\n    AmazonOpenSearchServerlessDestinationConfiguration = new AmazonOpenSearchServerlessDestinationConfigurationProperty {\n        IndexName = \"indexName\",\n        RoleArn = \"roleArn\",\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n\n        // the properties below are optional\n        BufferingHints = new AmazonOpenSearchServerlessBufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CollectionEndpoint = \"collectionEndpoint\",\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RetryOptions = new AmazonOpenSearchServerlessRetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        S3BackupMode = \"s3BackupMode\",\n        VpcConfiguration = new VpcConfigurationProperty {\n            RoleArn = \"roleArn\",\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            SubnetIds = new [] { \"subnetIds\" }\n        }\n    },\n    AmazonopensearchserviceDestinationConfiguration = new AmazonopensearchserviceDestinationConfigurationProperty {\n        IndexName = \"indexName\",\n        RoleArn = \"roleArn\",\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n\n        // the properties below are optional\n        BufferingHints = new AmazonopensearchserviceBufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        ClusterEndpoint = \"clusterEndpoint\",\n        DomainArn = \"domainArn\",\n        IndexRotationPeriod = \"indexRotationPeriod\",\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RetryOptions = new AmazonopensearchserviceRetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        S3BackupMode = \"s3BackupMode\",\n        TypeName = \"typeName\",\n        VpcConfiguration = new VpcConfigurationProperty {\n            RoleArn = \"roleArn\",\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            SubnetIds = new [] { \"subnetIds\" }\n        }\n    },\n    DeliveryStreamEncryptionConfigurationInput = new DeliveryStreamEncryptionConfigurationInputProperty {\n        KeyType = \"keyType\",\n\n        // the properties below are optional\n        KeyArn = \"keyArn\"\n    },\n    DeliveryStreamName = \"deliveryStreamName\",\n    DeliveryStreamType = \"deliveryStreamType\",\n    ElasticsearchDestinationConfiguration = new ElasticsearchDestinationConfigurationProperty {\n        IndexName = \"indexName\",\n        RoleArn = \"roleArn\",\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n\n        // the properties below are optional\n        BufferingHints = new ElasticsearchBufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        ClusterEndpoint = \"clusterEndpoint\",\n        DomainArn = \"domainArn\",\n        IndexRotationPeriod = \"indexRotationPeriod\",\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RetryOptions = new ElasticsearchRetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        S3BackupMode = \"s3BackupMode\",\n        TypeName = \"typeName\",\n        VpcConfiguration = new VpcConfigurationProperty {\n            RoleArn = \"roleArn\",\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            SubnetIds = new [] { \"subnetIds\" }\n        }\n    },\n    ExtendedS3DestinationConfiguration = new ExtendedS3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        DataFormatConversionConfiguration = new DataFormatConversionConfigurationProperty {\n            Enabled = false,\n            InputFormatConfiguration = new InputFormatConfigurationProperty {\n                Deserializer = new DeserializerProperty {\n                    HiveJsonSerDe = new HiveJsonSerDeProperty {\n                        TimestampFormats = new [] { \"timestampFormats\" }\n                    },\n                    OpenXJsonSerDe = new OpenXJsonSerDeProperty {\n                        CaseInsensitive = false,\n                        ColumnToJsonKeyMappings = new Dictionary<string, string> {\n                            { \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\" }\n                        },\n                        ConvertDotsInJsonKeysToUnderscores = false\n                    }\n                }\n            },\n            OutputFormatConfiguration = new OutputFormatConfigurationProperty {\n                Serializer = new SerializerProperty {\n                    OrcSerDe = new OrcSerDeProperty {\n                        BlockSizeBytes = 123,\n                        BloomFilterColumns = new [] { \"bloomFilterColumns\" },\n                        BloomFilterFalsePositiveProbability = 123,\n                        Compression = \"compression\",\n                        DictionaryKeyThreshold = 123,\n                        EnablePadding = false,\n                        FormatVersion = \"formatVersion\",\n                        PaddingTolerance = 123,\n                        RowIndexStride = 123,\n                        StripeSizeBytes = 123\n                    },\n                    ParquetSerDe = new ParquetSerDeProperty {\n                        BlockSizeBytes = 123,\n                        Compression = \"compression\",\n                        EnableDictionaryCompression = false,\n                        MaxPaddingBytes = 123,\n                        PageSizeBytes = 123,\n                        WriterVersion = \"writerVersion\"\n                    }\n                }\n            },\n            SchemaConfiguration = new SchemaConfigurationProperty {\n                CatalogId = \"catalogId\",\n                DatabaseName = \"databaseName\",\n                Region = \"region\",\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n                VersionId = \"versionId\"\n            }\n        },\n        DynamicPartitioningConfiguration = new DynamicPartitioningConfigurationProperty {\n            Enabled = false,\n            RetryOptions = new RetryOptionsProperty {\n                DurationInSeconds = 123\n            }\n        },\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\",\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        S3BackupConfiguration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n        S3BackupMode = \"s3BackupMode\"\n    },\n    HttpEndpointDestinationConfiguration = new HttpEndpointDestinationConfigurationProperty {\n        EndpointConfiguration = new HttpEndpointConfigurationProperty {\n            Url = \"url\",\n\n            // the properties below are optional\n            AccessKey = \"accessKey\",\n            Name = \"name\"\n        },\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RequestConfiguration = new HttpEndpointRequestConfigurationProperty {\n            CommonAttributes = new [] { new HttpEndpointCommonAttributeProperty {\n                AttributeName = \"attributeName\",\n                AttributeValue = \"attributeValue\"\n            } },\n            ContentEncoding = \"contentEncoding\"\n        },\n        RetryOptions = new RetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        RoleArn = \"roleArn\",\n        S3BackupMode = \"s3BackupMode\"\n    },\n    KinesisStreamSourceConfiguration = new KinesisStreamSourceConfigurationProperty {\n        KinesisStreamArn = \"kinesisStreamArn\",\n        RoleArn = \"roleArn\"\n    },\n    RedshiftDestinationConfiguration = new RedshiftDestinationConfigurationProperty {\n        ClusterJdbcurl = \"clusterJdbcurl\",\n        CopyCommand = new CopyCommandProperty {\n            DataTableName = \"dataTableName\",\n\n            // the properties below are optional\n            CopyOptions = \"copyOptions\",\n            DataTableColumns = \"dataTableColumns\"\n        },\n        Password = \"password\",\n        RoleArn = \"roleArn\",\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n        Username = \"username\",\n\n        // the properties below are optional\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RetryOptions = new RedshiftRetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        S3BackupConfiguration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n        S3BackupMode = \"s3BackupMode\"\n    },\n    S3DestinationConfiguration = new S3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\"\n    },\n    SplunkDestinationConfiguration = new SplunkDestinationConfigurationProperty {\n        HecEndpoint = \"hecEndpoint\",\n        HecEndpointType = \"hecEndpointType\",\n        HecToken = \"hecToken\",\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n\n        // the properties below are optional\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        HecAcknowledgmentTimeoutInSeconds = 123,\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RetryOptions = new SplunkRetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        S3BackupMode = \"s3BackupMode\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nCfnDeliveryStream cfnDeliveryStream = CfnDeliveryStream.Builder.create(this, \"MyCfnDeliveryStream\")\n        .amazonOpenSearchServerlessDestinationConfiguration(AmazonOpenSearchServerlessDestinationConfigurationProperty.builder()\n                .indexName(\"indexName\")\n                .roleArn(\"roleArn\")\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n\n                // the properties below are optional\n                .bufferingHints(AmazonOpenSearchServerlessBufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .collectionEndpoint(\"collectionEndpoint\")\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .retryOptions(AmazonOpenSearchServerlessRetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .vpcConfiguration(VpcConfigurationProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnetIds(List.of(\"subnetIds\"))\n                        .build())\n                .build())\n        .amazonopensearchserviceDestinationConfiguration(AmazonopensearchserviceDestinationConfigurationProperty.builder()\n                .indexName(\"indexName\")\n                .roleArn(\"roleArn\")\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n\n                // the properties below are optional\n                .bufferingHints(AmazonopensearchserviceBufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .clusterEndpoint(\"clusterEndpoint\")\n                .domainArn(\"domainArn\")\n                .indexRotationPeriod(\"indexRotationPeriod\")\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .retryOptions(AmazonopensearchserviceRetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .typeName(\"typeName\")\n                .vpcConfiguration(VpcConfigurationProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnetIds(List.of(\"subnetIds\"))\n                        .build())\n                .build())\n        .deliveryStreamEncryptionConfigurationInput(DeliveryStreamEncryptionConfigurationInputProperty.builder()\n                .keyType(\"keyType\")\n\n                // the properties below are optional\n                .keyArn(\"keyArn\")\n                .build())\n        .deliveryStreamName(\"deliveryStreamName\")\n        .deliveryStreamType(\"deliveryStreamType\")\n        .elasticsearchDestinationConfiguration(ElasticsearchDestinationConfigurationProperty.builder()\n                .indexName(\"indexName\")\n                .roleArn(\"roleArn\")\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n\n                // the properties below are optional\n                .bufferingHints(ElasticsearchBufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .clusterEndpoint(\"clusterEndpoint\")\n                .domainArn(\"domainArn\")\n                .indexRotationPeriod(\"indexRotationPeriod\")\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .retryOptions(ElasticsearchRetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .typeName(\"typeName\")\n                .vpcConfiguration(VpcConfigurationProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnetIds(List.of(\"subnetIds\"))\n                        .build())\n                .build())\n        .extendedS3DestinationConfiguration(ExtendedS3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .dataFormatConversionConfiguration(DataFormatConversionConfigurationProperty.builder()\n                        .enabled(false)\n                        .inputFormatConfiguration(InputFormatConfigurationProperty.builder()\n                                .deserializer(DeserializerProperty.builder()\n                                        .hiveJsonSerDe(HiveJsonSerDeProperty.builder()\n                                                .timestampFormats(List.of(\"timestampFormats\"))\n                                                .build())\n                                        .openXJsonSerDe(OpenXJsonSerDeProperty.builder()\n                                                .caseInsensitive(false)\n                                                .columnToJsonKeyMappings(Map.of(\n                                                        \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\"))\n                                                .convertDotsInJsonKeysToUnderscores(false)\n                                                .build())\n                                        .build())\n                                .build())\n                        .outputFormatConfiguration(OutputFormatConfigurationProperty.builder()\n                                .serializer(SerializerProperty.builder()\n                                        .orcSerDe(OrcSerDeProperty.builder()\n                                                .blockSizeBytes(123)\n                                                .bloomFilterColumns(List.of(\"bloomFilterColumns\"))\n                                                .bloomFilterFalsePositiveProbability(123)\n                                                .compression(\"compression\")\n                                                .dictionaryKeyThreshold(123)\n                                                .enablePadding(false)\n                                                .formatVersion(\"formatVersion\")\n                                                .paddingTolerance(123)\n                                                .rowIndexStride(123)\n                                                .stripeSizeBytes(123)\n                                                .build())\n                                        .parquetSerDe(ParquetSerDeProperty.builder()\n                                                .blockSizeBytes(123)\n                                                .compression(\"compression\")\n                                                .enableDictionaryCompression(false)\n                                                .maxPaddingBytes(123)\n                                                .pageSizeBytes(123)\n                                                .writerVersion(\"writerVersion\")\n                                                .build())\n                                        .build())\n                                .build())\n                        .schemaConfiguration(SchemaConfigurationProperty.builder()\n                                .catalogId(\"catalogId\")\n                                .databaseName(\"databaseName\")\n                                .region(\"region\")\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n                                .versionId(\"versionId\")\n                                .build())\n                        .build())\n                .dynamicPartitioningConfiguration(DynamicPartitioningConfigurationProperty.builder()\n                        .enabled(false)\n                        .retryOptions(RetryOptionsProperty.builder()\n                                .durationInSeconds(123)\n                                .build())\n                        .build())\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .s3BackupConfiguration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .build())\n        .httpEndpointDestinationConfiguration(HttpEndpointDestinationConfigurationProperty.builder()\n                .endpointConfiguration(HttpEndpointConfigurationProperty.builder()\n                        .url(\"url\")\n\n                        // the properties below are optional\n                        .accessKey(\"accessKey\")\n                        .name(\"name\")\n                        .build())\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .requestConfiguration(HttpEndpointRequestConfigurationProperty.builder()\n                        .commonAttributes(List.of(HttpEndpointCommonAttributeProperty.builder()\n                                .attributeName(\"attributeName\")\n                                .attributeValue(\"attributeValue\")\n                                .build()))\n                        .contentEncoding(\"contentEncoding\")\n                        .build())\n                .retryOptions(RetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .roleArn(\"roleArn\")\n                .s3BackupMode(\"s3BackupMode\")\n                .build())\n        .kinesisStreamSourceConfiguration(KinesisStreamSourceConfigurationProperty.builder()\n                .kinesisStreamArn(\"kinesisStreamArn\")\n                .roleArn(\"roleArn\")\n                .build())\n        .redshiftDestinationConfiguration(RedshiftDestinationConfigurationProperty.builder()\n                .clusterJdbcurl(\"clusterJdbcurl\")\n                .copyCommand(CopyCommandProperty.builder()\n                        .dataTableName(\"dataTableName\")\n\n                        // the properties below are optional\n                        .copyOptions(\"copyOptions\")\n                        .dataTableColumns(\"dataTableColumns\")\n                        .build())\n                .password(\"password\")\n                .roleArn(\"roleArn\")\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n                .username(\"username\")\n\n                // the properties below are optional\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .retryOptions(RedshiftRetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .s3BackupConfiguration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .build())\n        .s3DestinationConfiguration(S3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .build())\n        .splunkDestinationConfiguration(SplunkDestinationConfigurationProperty.builder()\n                .hecEndpoint(\"hecEndpoint\")\n                .hecEndpointType(\"hecEndpointType\")\n                .hecToken(\"hecToken\")\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n\n                // the properties below are optional\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .hecAcknowledgmentTimeoutInSeconds(123)\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .retryOptions(SplunkRetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ncfnDeliveryStream := kinesisfirehose.NewCfnDeliveryStream(this, jsii.String(\"MyCfnDeliveryStream\"), &cfnDeliveryStreamProps{\n\tamazonOpenSearchServerlessDestinationConfiguration: &amazonOpenSearchServerlessDestinationConfigurationProperty{\n\t\tindexName: jsii.String(\"indexName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &amazonOpenSearchServerlessBufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcollectionEndpoint: jsii.String(\"collectionEndpoint\"),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tretryOptions: &amazonOpenSearchServerlessRetryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t\tvpcConfiguration: &vpcConfigurationProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnetIds: []*string{\n\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t},\n\t\t},\n\t},\n\tamazonopensearchserviceDestinationConfiguration: &amazonopensearchserviceDestinationConfigurationProperty{\n\t\tindexName: jsii.String(\"indexName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &amazonopensearchserviceBufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tclusterEndpoint: jsii.String(\"clusterEndpoint\"),\n\t\tdomainArn: jsii.String(\"domainArn\"),\n\t\tindexRotationPeriod: jsii.String(\"indexRotationPeriod\"),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tretryOptions: &amazonopensearchserviceRetryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t\ttypeName: jsii.String(\"typeName\"),\n\t\tvpcConfiguration: &vpcConfigurationProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnetIds: []*string{\n\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t},\n\t\t},\n\t},\n\tdeliveryStreamEncryptionConfigurationInput: &deliveryStreamEncryptionConfigurationInputProperty{\n\t\tkeyType: jsii.String(\"keyType\"),\n\n\t\t// the properties below are optional\n\t\tkeyArn: jsii.String(\"keyArn\"),\n\t},\n\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\tdeliveryStreamType: jsii.String(\"deliveryStreamType\"),\n\telasticsearchDestinationConfiguration: &elasticsearchDestinationConfigurationProperty{\n\t\tindexName: jsii.String(\"indexName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &elasticsearchBufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tclusterEndpoint: jsii.String(\"clusterEndpoint\"),\n\t\tdomainArn: jsii.String(\"domainArn\"),\n\t\tindexRotationPeriod: jsii.String(\"indexRotationPeriod\"),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tretryOptions: &elasticsearchRetryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t\ttypeName: jsii.String(\"typeName\"),\n\t\tvpcConfiguration: &vpcConfigurationProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnetIds: []*string{\n\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t},\n\t\t},\n\t},\n\textendedS3DestinationConfiguration: &extendedS3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tdataFormatConversionConfiguration: &dataFormatConversionConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tinputFormatConfiguration: &inputFormatConfigurationProperty{\n\t\t\t\tdeserializer: &deserializerProperty{\n\t\t\t\t\thiveJsonSerDe: &hiveJsonSerDeProperty{\n\t\t\t\t\t\ttimestampFormats: []*string{\n\t\t\t\t\t\t\tjsii.String(\"timestampFormats\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\topenXJsonSerDe: &openXJsonSerDeProperty{\n\t\t\t\t\t\tcaseInsensitive: jsii.Boolean(false),\n\t\t\t\t\t\tcolumnToJsonKeyMappings: map[string]*string{\n\t\t\t\t\t\t\t\"columnToJsonKeyMappingsKey\": jsii.String(\"columnToJsonKeyMappings\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tconvertDotsInJsonKeysToUnderscores: jsii.Boolean(false),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\toutputFormatConfiguration: &outputFormatConfigurationProperty{\n\t\t\t\tserializer: &serializerProperty{\n\t\t\t\t\torcSerDe: &orcSerDeProperty{\n\t\t\t\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\t\t\t\tbloomFilterColumns: []*string{\n\t\t\t\t\t\t\tjsii.String(\"bloomFilterColumns\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbloomFilterFalsePositiveProbability: jsii.Number(123),\n\t\t\t\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\t\t\t\tdictionaryKeyThreshold: jsii.Number(123),\n\t\t\t\t\t\tenablePadding: jsii.Boolean(false),\n\t\t\t\t\t\tformatVersion: jsii.String(\"formatVersion\"),\n\t\t\t\t\t\tpaddingTolerance: jsii.Number(123),\n\t\t\t\t\t\trowIndexStride: jsii.Number(123),\n\t\t\t\t\t\tstripeSizeBytes: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tparquetSerDe: &parquetSerDeProperty{\n\t\t\t\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\t\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\t\t\t\tenableDictionaryCompression: jsii.Boolean(false),\n\t\t\t\t\t\tmaxPaddingBytes: jsii.Number(123),\n\t\t\t\t\t\tpageSizeBytes: jsii.Number(123),\n\t\t\t\t\t\twriterVersion: jsii.String(\"writerVersion\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tschemaConfiguration: &schemaConfigurationProperty{\n\t\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\tregion: jsii.String(\"region\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\t\tversionId: jsii.String(\"versionId\"),\n\t\t\t},\n\t\t},\n\t\tdynamicPartitioningConfiguration: &dynamicPartitioningConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tretryOptions: &retryOptionsProperty{\n\t\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\ts3BackupConfiguration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t},\n\thttpEndpointDestinationConfiguration: &httpEndpointDestinationConfigurationProperty{\n\t\tendpointConfiguration: &httpEndpointConfigurationProperty{\n\t\t\turl: jsii.String(\"url\"),\n\n\t\t\t// the properties below are optional\n\t\t\taccessKey: jsii.String(\"accessKey\"),\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\trequestConfiguration: &httpEndpointRequestConfigurationProperty{\n\t\t\tcommonAttributes: []interface{}{\n\t\t\t\t&httpEndpointCommonAttributeProperty{\n\t\t\t\t\tattributeName: jsii.String(\"attributeName\"),\n\t\t\t\t\tattributeValue: jsii.String(\"attributeValue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontentEncoding: jsii.String(\"contentEncoding\"),\n\t\t},\n\t\tretryOptions: &retryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t},\n\tkinesisStreamSourceConfiguration: &kinesisStreamSourceConfigurationProperty{\n\t\tkinesisStreamArn: jsii.String(\"kinesisStreamArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t},\n\tredshiftDestinationConfiguration: &redshiftDestinationConfigurationProperty{\n\t\tclusterJdbcurl: jsii.String(\"clusterJdbcurl\"),\n\t\tcopyCommand: &copyCommandProperty{\n\t\t\tdataTableName: jsii.String(\"dataTableName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcopyOptions: jsii.String(\"copyOptions\"),\n\t\t\tdataTableColumns: jsii.String(\"dataTableColumns\"),\n\t\t},\n\t\tpassword: jsii.String(\"password\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\t\tusername: jsii.String(\"username\"),\n\n\t\t// the properties below are optional\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tretryOptions: &redshiftRetryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\ts3BackupConfiguration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t},\n\ts3DestinationConfiguration: &s3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\tsplunkDestinationConfiguration: &splunkDestinationConfigurationProperty{\n\t\thecEndpoint: jsii.String(\"hecEndpoint\"),\n\t\thecEndpointType: jsii.String(\"hecEndpointType\"),\n\t\thecToken: jsii.String(\"hecToken\"),\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\thecAcknowledgmentTimeoutInSeconds: jsii.Number(123),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tretryOptions: &splunkRetryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst cfnDeliveryStream = new kinesisfirehose.CfnDeliveryStream(this, 'MyCfnDeliveryStream', /* all optional props */ {\n  amazonOpenSearchServerlessDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    collectionEndpoint: 'collectionEndpoint',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  amazonopensearchserviceDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    clusterEndpoint: 'clusterEndpoint',\n    domainArn: 'domainArn',\n    indexRotationPeriod: 'indexRotationPeriod',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    typeName: 'typeName',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  deliveryStreamEncryptionConfigurationInput: {\n    keyType: 'keyType',\n\n    // the properties below are optional\n    keyArn: 'keyArn',\n  },\n  deliveryStreamName: 'deliveryStreamName',\n  deliveryStreamType: 'deliveryStreamType',\n  elasticsearchDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    clusterEndpoint: 'clusterEndpoint',\n    domainArn: 'domainArn',\n    indexRotationPeriod: 'indexRotationPeriod',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    typeName: 'typeName',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  extendedS3DestinationConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    dataFormatConversionConfiguration: {\n      enabled: false,\n      inputFormatConfiguration: {\n        deserializer: {\n          hiveJsonSerDe: {\n            timestampFormats: ['timestampFormats'],\n          },\n          openXJsonSerDe: {\n            caseInsensitive: false,\n            columnToJsonKeyMappings: {\n              columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n            },\n            convertDotsInJsonKeysToUnderscores: false,\n          },\n        },\n      },\n      outputFormatConfiguration: {\n        serializer: {\n          orcSerDe: {\n            blockSizeBytes: 123,\n            bloomFilterColumns: ['bloomFilterColumns'],\n            bloomFilterFalsePositiveProbability: 123,\n            compression: 'compression',\n            dictionaryKeyThreshold: 123,\n            enablePadding: false,\n            formatVersion: 'formatVersion',\n            paddingTolerance: 123,\n            rowIndexStride: 123,\n            stripeSizeBytes: 123,\n          },\n          parquetSerDe: {\n            blockSizeBytes: 123,\n            compression: 'compression',\n            enableDictionaryCompression: false,\n            maxPaddingBytes: 123,\n            pageSizeBytes: 123,\n            writerVersion: 'writerVersion',\n          },\n        },\n      },\n      schemaConfiguration: {\n        catalogId: 'catalogId',\n        databaseName: 'databaseName',\n        region: 'region',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n        versionId: 'versionId',\n      },\n    },\n    dynamicPartitioningConfiguration: {\n      enabled: false,\n      retryOptions: {\n        durationInSeconds: 123,\n      },\n    },\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    s3BackupConfiguration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  httpEndpointDestinationConfiguration: {\n    endpointConfiguration: {\n      url: 'url',\n\n      // the properties below are optional\n      accessKey: 'accessKey',\n      name: 'name',\n    },\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    requestConfiguration: {\n      commonAttributes: [{\n        attributeName: 'attributeName',\n        attributeValue: 'attributeValue',\n      }],\n      contentEncoding: 'contentEncoding',\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    roleArn: 'roleArn',\n    s3BackupMode: 's3BackupMode',\n  },\n  kinesisStreamSourceConfiguration: {\n    kinesisStreamArn: 'kinesisStreamArn',\n    roleArn: 'roleArn',\n  },\n  redshiftDestinationConfiguration: {\n    clusterJdbcurl: 'clusterJdbcurl',\n    copyCommand: {\n      dataTableName: 'dataTableName',\n\n      // the properties below are optional\n      copyOptions: 'copyOptions',\n      dataTableColumns: 'dataTableColumns',\n    },\n    password: 'password',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    username: 'username',\n\n    // the properties below are optional\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupConfiguration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  s3DestinationConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n  splunkDestinationConfiguration: {\n    hecEndpoint: 'hecEndpoint',\n    hecEndpointType: 'hecEndpointType',\n    hecToken: 'hecToken',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    hecAcknowledgmentTimeoutInSeconds: 123,\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStreamProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDeliveryStream = new kinesisfirehose.CfnDeliveryStream(this, 'MyCfnDeliveryStream', /* all optional props */ {\n  amazonOpenSearchServerlessDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    collectionEndpoint: 'collectionEndpoint',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  amazonopensearchserviceDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    clusterEndpoint: 'clusterEndpoint',\n    domainArn: 'domainArn',\n    indexRotationPeriod: 'indexRotationPeriod',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    typeName: 'typeName',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  deliveryStreamEncryptionConfigurationInput: {\n    keyType: 'keyType',\n\n    // the properties below are optional\n    keyArn: 'keyArn',\n  },\n  deliveryStreamName: 'deliveryStreamName',\n  deliveryStreamType: 'deliveryStreamType',\n  elasticsearchDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    clusterEndpoint: 'clusterEndpoint',\n    domainArn: 'domainArn',\n    indexRotationPeriod: 'indexRotationPeriod',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    typeName: 'typeName',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  extendedS3DestinationConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    dataFormatConversionConfiguration: {\n      enabled: false,\n      inputFormatConfiguration: {\n        deserializer: {\n          hiveJsonSerDe: {\n            timestampFormats: ['timestampFormats'],\n          },\n          openXJsonSerDe: {\n            caseInsensitive: false,\n            columnToJsonKeyMappings: {\n              columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n            },\n            convertDotsInJsonKeysToUnderscores: false,\n          },\n        },\n      },\n      outputFormatConfiguration: {\n        serializer: {\n          orcSerDe: {\n            blockSizeBytes: 123,\n            bloomFilterColumns: ['bloomFilterColumns'],\n            bloomFilterFalsePositiveProbability: 123,\n            compression: 'compression',\n            dictionaryKeyThreshold: 123,\n            enablePadding: false,\n            formatVersion: 'formatVersion',\n            paddingTolerance: 123,\n            rowIndexStride: 123,\n            stripeSizeBytes: 123,\n          },\n          parquetSerDe: {\n            blockSizeBytes: 123,\n            compression: 'compression',\n            enableDictionaryCompression: false,\n            maxPaddingBytes: 123,\n            pageSizeBytes: 123,\n            writerVersion: 'writerVersion',\n          },\n        },\n      },\n      schemaConfiguration: {\n        catalogId: 'catalogId',\n        databaseName: 'databaseName',\n        region: 'region',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n        versionId: 'versionId',\n      },\n    },\n    dynamicPartitioningConfiguration: {\n      enabled: false,\n      retryOptions: {\n        durationInSeconds: 123,\n      },\n    },\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    s3BackupConfiguration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  httpEndpointDestinationConfiguration: {\n    endpointConfiguration: {\n      url: 'url',\n\n      // the properties below are optional\n      accessKey: 'accessKey',\n      name: 'name',\n    },\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    requestConfiguration: {\n      commonAttributes: [{\n        attributeName: 'attributeName',\n        attributeValue: 'attributeValue',\n      }],\n      contentEncoding: 'contentEncoding',\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    roleArn: 'roleArn',\n    s3BackupMode: 's3BackupMode',\n  },\n  kinesisStreamSourceConfiguration: {\n    kinesisStreamArn: 'kinesisStreamArn',\n    roleArn: 'roleArn',\n  },\n  redshiftDestinationConfiguration: {\n    clusterJdbcurl: 'clusterJdbcurl',\n    copyCommand: {\n      dataTableName: 'dataTableName',\n\n      // the properties below are optional\n      copyOptions: 'copyOptions',\n      dataTableColumns: 'dataTableColumns',\n    },\n    password: 'password',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    username: 'username',\n\n    // the properties below are optional\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupConfiguration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  s3DestinationConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n  splunkDestinationConfiguration: {\n    hecEndpoint: 'hecEndpoint',\n    hecEndpointType: 'hecEndpointType',\n    hecToken: 'hecToken',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    hecAcknowledgmentTimeoutInSeconds: 123,\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 45,
        "10": 194,
        "75": 386,
        "91": 29,
        "104": 1,
        "192": 24,
        "193": 117,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 382,
        "290": 1
      },
      "fqnsFingerprint": "62eb9697ad2c70924fcf26c9851f4877fcf0bd4ca0088c90a9c7fb1148faa6fc"
    },
    "ce26e5a1628cfc5f086edf27ff6fe308416368a71f23bcdf27a5724d8f3b6b6c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\namazon_open_search_serverless_buffering_hints_property = kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessBufferingHintsProperty(\n    interval_in_seconds=123,\n    size_in_mBs=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nAmazonOpenSearchServerlessBufferingHintsProperty amazonOpenSearchServerlessBufferingHintsProperty = new AmazonOpenSearchServerlessBufferingHintsProperty {\n    IntervalInSeconds = 123,\n    SizeInMBs = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nAmazonOpenSearchServerlessBufferingHintsProperty amazonOpenSearchServerlessBufferingHintsProperty = AmazonOpenSearchServerlessBufferingHintsProperty.builder()\n        .intervalInSeconds(123)\n        .sizeInMBs(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\namazonOpenSearchServerlessBufferingHintsProperty := &amazonOpenSearchServerlessBufferingHintsProperty{\n\tintervalInSeconds: jsii.Number(123),\n\tsizeInMBs: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst amazonOpenSearchServerlessBufferingHintsProperty: kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessBufferingHintsProperty = {\n  intervalInSeconds: 123,\n  sizeInMBs: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessBufferingHintsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessBufferingHintsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst amazonOpenSearchServerlessBufferingHintsProperty: kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessBufferingHintsProperty = {\n  intervalInSeconds: 123,\n  sizeInMBs: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "dd5751de4a9d3bfb9a8b0efc79e487236d3f2519efb6322d79c8e7b3a2b960ec"
    },
    "c76f05fa98455c6b8f5755d6a226b8b32f3f521ca3d777c099deac1462132197": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\namazon_open_search_serverless_destination_configuration_property = kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessDestinationConfigurationProperty(\n    index_name=\"indexName\",\n    role_arn=\"roleArn\",\n    s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\"\n    ),\n\n    # the properties below are optional\n    buffering_hints=kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessBufferingHintsProperty(\n        interval_in_seconds=123,\n        size_in_mBs=123\n    ),\n    cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n        enabled=False,\n        log_group_name=\"logGroupName\",\n        log_stream_name=\"logStreamName\"\n    ),\n    collection_endpoint=\"collectionEndpoint\",\n    processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n        enabled=False,\n        processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                parameter_name=\"parameterName\",\n                parameter_value=\"parameterValue\"\n            )]\n        )]\n    ),\n    retry_options=kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessRetryOptionsProperty(\n        duration_in_seconds=123\n    ),\n    s3_backup_mode=\"s3BackupMode\",\n    vpc_configuration=kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty(\n        role_arn=\"roleArn\",\n        security_group_ids=[\"securityGroupIds\"],\n        subnet_ids=[\"subnetIds\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nAmazonOpenSearchServerlessDestinationConfigurationProperty amazonOpenSearchServerlessDestinationConfigurationProperty = new AmazonOpenSearchServerlessDestinationConfigurationProperty {\n    IndexName = \"indexName\",\n    RoleArn = \"roleArn\",\n    S3Configuration = new S3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\"\n    },\n\n    // the properties below are optional\n    BufferingHints = new AmazonOpenSearchServerlessBufferingHintsProperty {\n        IntervalInSeconds = 123,\n        SizeInMBs = 123\n    },\n    CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n        Enabled = false,\n        LogGroupName = \"logGroupName\",\n        LogStreamName = \"logStreamName\"\n    },\n    CollectionEndpoint = \"collectionEndpoint\",\n    ProcessingConfiguration = new ProcessingConfigurationProperty {\n        Enabled = false,\n        Processors = new [] { new ProcessorProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            Parameters = new [] { new ProcessorParameterProperty {\n                ParameterName = \"parameterName\",\n                ParameterValue = \"parameterValue\"\n            } }\n        } }\n    },\n    RetryOptions = new AmazonOpenSearchServerlessRetryOptionsProperty {\n        DurationInSeconds = 123\n    },\n    S3BackupMode = \"s3BackupMode\",\n    VpcConfiguration = new VpcConfigurationProperty {\n        RoleArn = \"roleArn\",\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        SubnetIds = new [] { \"subnetIds\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nAmazonOpenSearchServerlessDestinationConfigurationProperty amazonOpenSearchServerlessDestinationConfigurationProperty = AmazonOpenSearchServerlessDestinationConfigurationProperty.builder()\n        .indexName(\"indexName\")\n        .roleArn(\"roleArn\")\n        .s3Configuration(S3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .build())\n\n        // the properties below are optional\n        .bufferingHints(AmazonOpenSearchServerlessBufferingHintsProperty.builder()\n                .intervalInSeconds(123)\n                .sizeInMBs(123)\n                .build())\n        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                .enabled(false)\n                .logGroupName(\"logGroupName\")\n                .logStreamName(\"logStreamName\")\n                .build())\n        .collectionEndpoint(\"collectionEndpoint\")\n        .processingConfiguration(ProcessingConfigurationProperty.builder()\n                .enabled(false)\n                .processors(List.of(ProcessorProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .parameters(List.of(ProcessorParameterProperty.builder()\n                                .parameterName(\"parameterName\")\n                                .parameterValue(\"parameterValue\")\n                                .build()))\n                        .build()))\n                .build())\n        .retryOptions(AmazonOpenSearchServerlessRetryOptionsProperty.builder()\n                .durationInSeconds(123)\n                .build())\n        .s3BackupMode(\"s3BackupMode\")\n        .vpcConfiguration(VpcConfigurationProperty.builder()\n                .roleArn(\"roleArn\")\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnetIds(List.of(\"subnetIds\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\namazonOpenSearchServerlessDestinationConfigurationProperty := &amazonOpenSearchServerlessDestinationConfigurationProperty{\n\tindexName: jsii.String(\"indexName\"),\n\troleArn: jsii.String(\"roleArn\"),\n\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\n\t// the properties below are optional\n\tbufferingHints: &amazonOpenSearchServerlessBufferingHintsProperty{\n\t\tintervalInSeconds: jsii.Number(123),\n\t\tsizeInMBs: jsii.Number(123),\n\t},\n\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t},\n\tcollectionEndpoint: jsii.String(\"collectionEndpoint\"),\n\tprocessingConfiguration: &processingConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tprocessors: []interface{}{\n\t\t\t&processorProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tretryOptions: &amazonOpenSearchServerlessRetryOptionsProperty{\n\t\tdurationInSeconds: jsii.Number(123),\n\t},\n\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\tvpcConfiguration: &vpcConfigurationProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnetIds: []*string{\n\t\t\tjsii.String(\"subnetIds\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst amazonOpenSearchServerlessDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessDestinationConfigurationProperty = {\n  indexName: 'indexName',\n  roleArn: 'roleArn',\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  collectionEndpoint: 'collectionEndpoint',\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  s3BackupMode: 's3BackupMode',\n  vpcConfiguration: {\n    roleArn: 'roleArn',\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessDestinationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessDestinationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst amazonOpenSearchServerlessDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessDestinationConfigurationProperty = {\n  indexName: 'indexName',\n  roleArn: 'roleArn',\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  collectionEndpoint: 'collectionEndpoint',\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  s3BackupMode: 's3BackupMode',\n  vpcConfiguration: {\n    roleArn: 'roleArn',\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 22,
        "75": 46,
        "91": 3,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 13,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 41,
        "290": 1
      },
      "fqnsFingerprint": "ae6d7aa657ab27d60bf2ec10de36e82aaec95f72a6cad3dc7a3ae12b3063988b"
    },
    "71db0f06e8bad3f092038772cad3020ea075a5f60d928d225730065c7dafca4f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\namazon_open_search_serverless_retry_options_property = kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessRetryOptionsProperty(\n    duration_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nAmazonOpenSearchServerlessRetryOptionsProperty amazonOpenSearchServerlessRetryOptionsProperty = new AmazonOpenSearchServerlessRetryOptionsProperty {\n    DurationInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nAmazonOpenSearchServerlessRetryOptionsProperty amazonOpenSearchServerlessRetryOptionsProperty = AmazonOpenSearchServerlessRetryOptionsProperty.builder()\n        .durationInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\namazonOpenSearchServerlessRetryOptionsProperty := &amazonOpenSearchServerlessRetryOptionsProperty{\n\tdurationInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst amazonOpenSearchServerlessRetryOptionsProperty: kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessRetryOptionsProperty = {\n  durationInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessRetryOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessRetryOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst amazonOpenSearchServerlessRetryOptionsProperty: kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessRetryOptionsProperty = {\n  durationInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "5ec67427f3c8b4e9441d6ff9c1f5b0b513e999f6923265a7a760843344f86e01"
    },
    "a251f14eaf9c3d37cb5cdf45d896f5bfab048befa4822fc7f9f053d7920b75d6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\namazonopensearchservice_buffering_hints_property = kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceBufferingHintsProperty(\n    interval_in_seconds=123,\n    size_in_mBs=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nAmazonopensearchserviceBufferingHintsProperty amazonopensearchserviceBufferingHintsProperty = new AmazonopensearchserviceBufferingHintsProperty {\n    IntervalInSeconds = 123,\n    SizeInMBs = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nAmazonopensearchserviceBufferingHintsProperty amazonopensearchserviceBufferingHintsProperty = AmazonopensearchserviceBufferingHintsProperty.builder()\n        .intervalInSeconds(123)\n        .sizeInMBs(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\namazonopensearchserviceBufferingHintsProperty := &amazonopensearchserviceBufferingHintsProperty{\n\tintervalInSeconds: jsii.Number(123),\n\tsizeInMBs: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst amazonopensearchserviceBufferingHintsProperty: kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceBufferingHintsProperty = {\n  intervalInSeconds: 123,\n  sizeInMBs: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceBufferingHintsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceBufferingHintsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst amazonopensearchserviceBufferingHintsProperty: kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceBufferingHintsProperty = {\n  intervalInSeconds: 123,\n  sizeInMBs: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "44bcf0802b8861008353888e2768a424fc0b918ab23b9b82db6a237cb41bc8c3"
    },
    "68aa70783e3ba9e9d20edcb2db609b8e20b4762b5aeb1137a7d9d22148671b47": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\namazonopensearchservice_destination_configuration_property = kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceDestinationConfigurationProperty(\n    index_name=\"indexName\",\n    role_arn=\"roleArn\",\n    s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\"\n    ),\n\n    # the properties below are optional\n    buffering_hints=kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceBufferingHintsProperty(\n        interval_in_seconds=123,\n        size_in_mBs=123\n    ),\n    cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n        enabled=False,\n        log_group_name=\"logGroupName\",\n        log_stream_name=\"logStreamName\"\n    ),\n    cluster_endpoint=\"clusterEndpoint\",\n    domain_arn=\"domainArn\",\n    index_rotation_period=\"indexRotationPeriod\",\n    processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n        enabled=False,\n        processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                parameter_name=\"parameterName\",\n                parameter_value=\"parameterValue\"\n            )]\n        )]\n    ),\n    retry_options=kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceRetryOptionsProperty(\n        duration_in_seconds=123\n    ),\n    s3_backup_mode=\"s3BackupMode\",\n    type_name=\"typeName\",\n    vpc_configuration=kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty(\n        role_arn=\"roleArn\",\n        security_group_ids=[\"securityGroupIds\"],\n        subnet_ids=[\"subnetIds\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nAmazonopensearchserviceDestinationConfigurationProperty amazonopensearchserviceDestinationConfigurationProperty = new AmazonopensearchserviceDestinationConfigurationProperty {\n    IndexName = \"indexName\",\n    RoleArn = \"roleArn\",\n    S3Configuration = new S3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\"\n    },\n\n    // the properties below are optional\n    BufferingHints = new AmazonopensearchserviceBufferingHintsProperty {\n        IntervalInSeconds = 123,\n        SizeInMBs = 123\n    },\n    CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n        Enabled = false,\n        LogGroupName = \"logGroupName\",\n        LogStreamName = \"logStreamName\"\n    },\n    ClusterEndpoint = \"clusterEndpoint\",\n    DomainArn = \"domainArn\",\n    IndexRotationPeriod = \"indexRotationPeriod\",\n    ProcessingConfiguration = new ProcessingConfigurationProperty {\n        Enabled = false,\n        Processors = new [] { new ProcessorProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            Parameters = new [] { new ProcessorParameterProperty {\n                ParameterName = \"parameterName\",\n                ParameterValue = \"parameterValue\"\n            } }\n        } }\n    },\n    RetryOptions = new AmazonopensearchserviceRetryOptionsProperty {\n        DurationInSeconds = 123\n    },\n    S3BackupMode = \"s3BackupMode\",\n    TypeName = \"typeName\",\n    VpcConfiguration = new VpcConfigurationProperty {\n        RoleArn = \"roleArn\",\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        SubnetIds = new [] { \"subnetIds\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nAmazonopensearchserviceDestinationConfigurationProperty amazonopensearchserviceDestinationConfigurationProperty = AmazonopensearchserviceDestinationConfigurationProperty.builder()\n        .indexName(\"indexName\")\n        .roleArn(\"roleArn\")\n        .s3Configuration(S3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .build())\n\n        // the properties below are optional\n        .bufferingHints(AmazonopensearchserviceBufferingHintsProperty.builder()\n                .intervalInSeconds(123)\n                .sizeInMBs(123)\n                .build())\n        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                .enabled(false)\n                .logGroupName(\"logGroupName\")\n                .logStreamName(\"logStreamName\")\n                .build())\n        .clusterEndpoint(\"clusterEndpoint\")\n        .domainArn(\"domainArn\")\n        .indexRotationPeriod(\"indexRotationPeriod\")\n        .processingConfiguration(ProcessingConfigurationProperty.builder()\n                .enabled(false)\n                .processors(List.of(ProcessorProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .parameters(List.of(ProcessorParameterProperty.builder()\n                                .parameterName(\"parameterName\")\n                                .parameterValue(\"parameterValue\")\n                                .build()))\n                        .build()))\n                .build())\n        .retryOptions(AmazonopensearchserviceRetryOptionsProperty.builder()\n                .durationInSeconds(123)\n                .build())\n        .s3BackupMode(\"s3BackupMode\")\n        .typeName(\"typeName\")\n        .vpcConfiguration(VpcConfigurationProperty.builder()\n                .roleArn(\"roleArn\")\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnetIds(List.of(\"subnetIds\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\namazonopensearchserviceDestinationConfigurationProperty := &amazonopensearchserviceDestinationConfigurationProperty{\n\tindexName: jsii.String(\"indexName\"),\n\troleArn: jsii.String(\"roleArn\"),\n\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\n\t// the properties below are optional\n\tbufferingHints: &amazonopensearchserviceBufferingHintsProperty{\n\t\tintervalInSeconds: jsii.Number(123),\n\t\tsizeInMBs: jsii.Number(123),\n\t},\n\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t},\n\tclusterEndpoint: jsii.String(\"clusterEndpoint\"),\n\tdomainArn: jsii.String(\"domainArn\"),\n\tindexRotationPeriod: jsii.String(\"indexRotationPeriod\"),\n\tprocessingConfiguration: &processingConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tprocessors: []interface{}{\n\t\t\t&processorProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tretryOptions: &amazonopensearchserviceRetryOptionsProperty{\n\t\tdurationInSeconds: jsii.Number(123),\n\t},\n\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\ttypeName: jsii.String(\"typeName\"),\n\tvpcConfiguration: &vpcConfigurationProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnetIds: []*string{\n\t\t\tjsii.String(\"subnetIds\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst amazonopensearchserviceDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceDestinationConfigurationProperty = {\n  indexName: 'indexName',\n  roleArn: 'roleArn',\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  clusterEndpoint: 'clusterEndpoint',\n  domainArn: 'domainArn',\n  indexRotationPeriod: 'indexRotationPeriod',\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  s3BackupMode: 's3BackupMode',\n  typeName: 'typeName',\n  vpcConfiguration: {\n    roleArn: 'roleArn',\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceDestinationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceDestinationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst amazonopensearchserviceDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceDestinationConfigurationProperty = {\n  indexName: 'indexName',\n  roleArn: 'roleArn',\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  clusterEndpoint: 'clusterEndpoint',\n  domainArn: 'domainArn',\n  indexRotationPeriod: 'indexRotationPeriod',\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  s3BackupMode: 's3BackupMode',\n  typeName: 'typeName',\n  vpcConfiguration: {\n    roleArn: 'roleArn',\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 25,
        "75": 49,
        "91": 3,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 13,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 44,
        "290": 1
      },
      "fqnsFingerprint": "161b399c4aaaa6064353c802caa6b840eb4ef068d5bad2bffeb8336c2d758edb"
    },
    "af0e6375a3a0cfe72b8deb9a47e84b79991ab23089287637b4b5a404ca465cb4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\namazonopensearchservice_retry_options_property = kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceRetryOptionsProperty(\n    duration_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nAmazonopensearchserviceRetryOptionsProperty amazonopensearchserviceRetryOptionsProperty = new AmazonopensearchserviceRetryOptionsProperty {\n    DurationInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nAmazonopensearchserviceRetryOptionsProperty amazonopensearchserviceRetryOptionsProperty = AmazonopensearchserviceRetryOptionsProperty.builder()\n        .durationInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\namazonopensearchserviceRetryOptionsProperty := &amazonopensearchserviceRetryOptionsProperty{\n\tdurationInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst amazonopensearchserviceRetryOptionsProperty: kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceRetryOptionsProperty = {\n  durationInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceRetryOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceRetryOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst amazonopensearchserviceRetryOptionsProperty: kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceRetryOptionsProperty = {\n  durationInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "de7b164ef69804398def5c59e55c403c961db7a4ea1d6f68078717e808045faf"
    },
    "df21c6d6b2b8aa82332357f691c7bc9490a14088382d0b53ad17933b9e027fc6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nbuffering_hints_property = kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n    interval_in_seconds=123,\n    size_in_mBs=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nBufferingHintsProperty bufferingHintsProperty = new BufferingHintsProperty {\n    IntervalInSeconds = 123,\n    SizeInMBs = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nBufferingHintsProperty bufferingHintsProperty = BufferingHintsProperty.builder()\n        .intervalInSeconds(123)\n        .sizeInMBs(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nbufferingHintsProperty := &bufferingHintsProperty{\n\tintervalInSeconds: jsii.Number(123),\n\tsizeInMBs: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst bufferingHintsProperty: kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty = {\n  intervalInSeconds: 123,\n  sizeInMBs: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bufferingHintsProperty: kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty = {\n  intervalInSeconds: 123,\n  sizeInMBs: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "2f081697d8c3d3813836997ab4da62a0def8f66089b16066a89ad12fbb94f143"
    },
    "9928634a261aeeaf04e40455ec8f344c54cc76534eb697bfa5efd71fd64b84c7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ncloud_watch_logging_options_property = kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n    enabled=False,\n    log_group_name=\"logGroupName\",\n    log_stream_name=\"logStreamName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nCloudWatchLoggingOptionsProperty cloudWatchLoggingOptionsProperty = new CloudWatchLoggingOptionsProperty {\n    Enabled = false,\n    LogGroupName = \"logGroupName\",\n    LogStreamName = \"logStreamName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nCloudWatchLoggingOptionsProperty cloudWatchLoggingOptionsProperty = CloudWatchLoggingOptionsProperty.builder()\n        .enabled(false)\n        .logGroupName(\"logGroupName\")\n        .logStreamName(\"logStreamName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ncloudWatchLoggingOptionsProperty := &cloudWatchLoggingOptionsProperty{\n\tenabled: jsii.Boolean(false),\n\tlogGroupName: jsii.String(\"logGroupName\"),\n\tlogStreamName: jsii.String(\"logStreamName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst cloudWatchLoggingOptionsProperty: kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty = {\n  enabled: false,\n  logGroupName: 'logGroupName',\n  logStreamName: 'logStreamName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudWatchLoggingOptionsProperty: kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty = {\n  enabled: false,\n  logGroupName: 'logGroupName',\n  logStreamName: 'logStreamName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "a3ef582f753d4b20f53aaeda695f5e39006f4eafc341fdcad25e6df2649a0084"
    },
    "dee919b1e402f5e67bf1b7ff43eb7f45b04e921c9afb50aa78b29d1635c7b378": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ncopy_command_property = kinesisfirehose.CfnDeliveryStream.CopyCommandProperty(\n    data_table_name=\"dataTableName\",\n\n    # the properties below are optional\n    copy_options=\"copyOptions\",\n    data_table_columns=\"dataTableColumns\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nCopyCommandProperty copyCommandProperty = new CopyCommandProperty {\n    DataTableName = \"dataTableName\",\n\n    // the properties below are optional\n    CopyOptions = \"copyOptions\",\n    DataTableColumns = \"dataTableColumns\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nCopyCommandProperty copyCommandProperty = CopyCommandProperty.builder()\n        .dataTableName(\"dataTableName\")\n\n        // the properties below are optional\n        .copyOptions(\"copyOptions\")\n        .dataTableColumns(\"dataTableColumns\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ncopyCommandProperty := &copyCommandProperty{\n\tdataTableName: jsii.String(\"dataTableName\"),\n\n\t// the properties below are optional\n\tcopyOptions: jsii.String(\"copyOptions\"),\n\tdataTableColumns: jsii.String(\"dataTableColumns\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst copyCommandProperty: kinesisfirehose.CfnDeliveryStream.CopyCommandProperty = {\n  dataTableName: 'dataTableName',\n\n  // the properties below are optional\n  copyOptions: 'copyOptions',\n  dataTableColumns: 'dataTableColumns',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.CopyCommandProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.CopyCommandProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst copyCommandProperty: kinesisfirehose.CfnDeliveryStream.CopyCommandProperty = {\n  dataTableName: 'dataTableName',\n\n  // the properties below are optional\n  copyOptions: 'copyOptions',\n  dataTableColumns: 'dataTableColumns',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "5240667aaf26d65b27c2074ce173fb859440a387f3b7e5b94cbf9a33112ca41b"
    },
    "1e05d93be304159542ee6975b883194c539eedbc5a027c1578736b4ac8bf16f5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ndata_format_conversion_configuration_property = kinesisfirehose.CfnDeliveryStream.DataFormatConversionConfigurationProperty(\n    enabled=False,\n    input_format_configuration=kinesisfirehose.CfnDeliveryStream.InputFormatConfigurationProperty(\n        deserializer=kinesisfirehose.CfnDeliveryStream.DeserializerProperty(\n            hive_json_ser_de=kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty(\n                timestamp_formats=[\"timestampFormats\"]\n            ),\n            open_xJson_ser_de=kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty(\n                case_insensitive=False,\n                column_to_json_key_mappings={\n                    \"column_to_json_key_mappings_key\": \"columnToJsonKeyMappings\"\n                },\n                convert_dots_in_json_keys_to_underscores=False\n            )\n        )\n    ),\n    output_format_configuration=kinesisfirehose.CfnDeliveryStream.OutputFormatConfigurationProperty(\n        serializer=kinesisfirehose.CfnDeliveryStream.SerializerProperty(\n            orc_ser_de=kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty(\n                block_size_bytes=123,\n                bloom_filter_columns=[\"bloomFilterColumns\"],\n                bloom_filter_false_positive_probability=123,\n                compression=\"compression\",\n                dictionary_key_threshold=123,\n                enable_padding=False,\n                format_version=\"formatVersion\",\n                padding_tolerance=123,\n                row_index_stride=123,\n                stripe_size_bytes=123\n            ),\n            parquet_ser_de=kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty(\n                block_size_bytes=123,\n                compression=\"compression\",\n                enable_dictionary_compression=False,\n                max_padding_bytes=123,\n                page_size_bytes=123,\n                writer_version=\"writerVersion\"\n            )\n        )\n    ),\n    schema_configuration=kinesisfirehose.CfnDeliveryStream.SchemaConfigurationProperty(\n        catalog_id=\"catalogId\",\n        database_name=\"databaseName\",\n        region=\"region\",\n        role_arn=\"roleArn\",\n        table_name=\"tableName\",\n        version_id=\"versionId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nDataFormatConversionConfigurationProperty dataFormatConversionConfigurationProperty = new DataFormatConversionConfigurationProperty {\n    Enabled = false,\n    InputFormatConfiguration = new InputFormatConfigurationProperty {\n        Deserializer = new DeserializerProperty {\n            HiveJsonSerDe = new HiveJsonSerDeProperty {\n                TimestampFormats = new [] { \"timestampFormats\" }\n            },\n            OpenXJsonSerDe = new OpenXJsonSerDeProperty {\n                CaseInsensitive = false,\n                ColumnToJsonKeyMappings = new Dictionary<string, string> {\n                    { \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\" }\n                },\n                ConvertDotsInJsonKeysToUnderscores = false\n            }\n        }\n    },\n    OutputFormatConfiguration = new OutputFormatConfigurationProperty {\n        Serializer = new SerializerProperty {\n            OrcSerDe = new OrcSerDeProperty {\n                BlockSizeBytes = 123,\n                BloomFilterColumns = new [] { \"bloomFilterColumns\" },\n                BloomFilterFalsePositiveProbability = 123,\n                Compression = \"compression\",\n                DictionaryKeyThreshold = 123,\n                EnablePadding = false,\n                FormatVersion = \"formatVersion\",\n                PaddingTolerance = 123,\n                RowIndexStride = 123,\n                StripeSizeBytes = 123\n            },\n            ParquetSerDe = new ParquetSerDeProperty {\n                BlockSizeBytes = 123,\n                Compression = \"compression\",\n                EnableDictionaryCompression = false,\n                MaxPaddingBytes = 123,\n                PageSizeBytes = 123,\n                WriterVersion = \"writerVersion\"\n            }\n        }\n    },\n    SchemaConfiguration = new SchemaConfigurationProperty {\n        CatalogId = \"catalogId\",\n        DatabaseName = \"databaseName\",\n        Region = \"region\",\n        RoleArn = \"roleArn\",\n        TableName = \"tableName\",\n        VersionId = \"versionId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nDataFormatConversionConfigurationProperty dataFormatConversionConfigurationProperty = DataFormatConversionConfigurationProperty.builder()\n        .enabled(false)\n        .inputFormatConfiguration(InputFormatConfigurationProperty.builder()\n                .deserializer(DeserializerProperty.builder()\n                        .hiveJsonSerDe(HiveJsonSerDeProperty.builder()\n                                .timestampFormats(List.of(\"timestampFormats\"))\n                                .build())\n                        .openXJsonSerDe(OpenXJsonSerDeProperty.builder()\n                                .caseInsensitive(false)\n                                .columnToJsonKeyMappings(Map.of(\n                                        \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\"))\n                                .convertDotsInJsonKeysToUnderscores(false)\n                                .build())\n                        .build())\n                .build())\n        .outputFormatConfiguration(OutputFormatConfigurationProperty.builder()\n                .serializer(SerializerProperty.builder()\n                        .orcSerDe(OrcSerDeProperty.builder()\n                                .blockSizeBytes(123)\n                                .bloomFilterColumns(List.of(\"bloomFilterColumns\"))\n                                .bloomFilterFalsePositiveProbability(123)\n                                .compression(\"compression\")\n                                .dictionaryKeyThreshold(123)\n                                .enablePadding(false)\n                                .formatVersion(\"formatVersion\")\n                                .paddingTolerance(123)\n                                .rowIndexStride(123)\n                                .stripeSizeBytes(123)\n                                .build())\n                        .parquetSerDe(ParquetSerDeProperty.builder()\n                                .blockSizeBytes(123)\n                                .compression(\"compression\")\n                                .enableDictionaryCompression(false)\n                                .maxPaddingBytes(123)\n                                .pageSizeBytes(123)\n                                .writerVersion(\"writerVersion\")\n                                .build())\n                        .build())\n                .build())\n        .schemaConfiguration(SchemaConfigurationProperty.builder()\n                .catalogId(\"catalogId\")\n                .databaseName(\"databaseName\")\n                .region(\"region\")\n                .roleArn(\"roleArn\")\n                .tableName(\"tableName\")\n                .versionId(\"versionId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ndataFormatConversionConfigurationProperty := &dataFormatConversionConfigurationProperty{\n\tenabled: jsii.Boolean(false),\n\tinputFormatConfiguration: &inputFormatConfigurationProperty{\n\t\tdeserializer: &deserializerProperty{\n\t\t\thiveJsonSerDe: &hiveJsonSerDeProperty{\n\t\t\t\ttimestampFormats: []*string{\n\t\t\t\t\tjsii.String(\"timestampFormats\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\topenXJsonSerDe: &openXJsonSerDeProperty{\n\t\t\t\tcaseInsensitive: jsii.Boolean(false),\n\t\t\t\tcolumnToJsonKeyMappings: map[string]*string{\n\t\t\t\t\t\"columnToJsonKeyMappingsKey\": jsii.String(\"columnToJsonKeyMappings\"),\n\t\t\t\t},\n\t\t\t\tconvertDotsInJsonKeysToUnderscores: jsii.Boolean(false),\n\t\t\t},\n\t\t},\n\t},\n\toutputFormatConfiguration: &outputFormatConfigurationProperty{\n\t\tserializer: &serializerProperty{\n\t\t\torcSerDe: &orcSerDeProperty{\n\t\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\t\tbloomFilterColumns: []*string{\n\t\t\t\t\tjsii.String(\"bloomFilterColumns\"),\n\t\t\t\t},\n\t\t\t\tbloomFilterFalsePositiveProbability: jsii.Number(123),\n\t\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\t\tdictionaryKeyThreshold: jsii.Number(123),\n\t\t\t\tenablePadding: jsii.Boolean(false),\n\t\t\t\tformatVersion: jsii.String(\"formatVersion\"),\n\t\t\t\tpaddingTolerance: jsii.Number(123),\n\t\t\t\trowIndexStride: jsii.Number(123),\n\t\t\t\tstripeSizeBytes: jsii.Number(123),\n\t\t\t},\n\t\t\tparquetSerDe: &parquetSerDeProperty{\n\t\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\t\tenableDictionaryCompression: jsii.Boolean(false),\n\t\t\t\tmaxPaddingBytes: jsii.Number(123),\n\t\t\t\tpageSizeBytes: jsii.Number(123),\n\t\t\t\twriterVersion: jsii.String(\"writerVersion\"),\n\t\t\t},\n\t\t},\n\t},\n\tschemaConfiguration: &schemaConfigurationProperty{\n\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\tregion: jsii.String(\"region\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ttableName: jsii.String(\"tableName\"),\n\t\tversionId: jsii.String(\"versionId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst dataFormatConversionConfigurationProperty: kinesisfirehose.CfnDeliveryStream.DataFormatConversionConfigurationProperty = {\n  enabled: false,\n  inputFormatConfiguration: {\n    deserializer: {\n      hiveJsonSerDe: {\n        timestampFormats: ['timestampFormats'],\n      },\n      openXJsonSerDe: {\n        caseInsensitive: false,\n        columnToJsonKeyMappings: {\n          columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n        },\n        convertDotsInJsonKeysToUnderscores: false,\n      },\n    },\n  },\n  outputFormatConfiguration: {\n    serializer: {\n      orcSerDe: {\n        blockSizeBytes: 123,\n        bloomFilterColumns: ['bloomFilterColumns'],\n        bloomFilterFalsePositiveProbability: 123,\n        compression: 'compression',\n        dictionaryKeyThreshold: 123,\n        enablePadding: false,\n        formatVersion: 'formatVersion',\n        paddingTolerance: 123,\n        rowIndexStride: 123,\n        stripeSizeBytes: 123,\n      },\n      parquetSerDe: {\n        blockSizeBytes: 123,\n        compression: 'compression',\n        enableDictionaryCompression: false,\n        maxPaddingBytes: 123,\n        pageSizeBytes: 123,\n        writerVersion: 'writerVersion',\n      },\n    },\n  },\n  schemaConfiguration: {\n    catalogId: 'catalogId',\n    databaseName: 'databaseName',\n    region: 'region',\n    roleArn: 'roleArn',\n    tableName: 'tableName',\n    versionId: 'versionId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.DataFormatConversionConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.DataFormatConversionConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataFormatConversionConfigurationProperty: kinesisfirehose.CfnDeliveryStream.DataFormatConversionConfigurationProperty = {\n  enabled: false,\n  inputFormatConfiguration: {\n    deserializer: {\n      hiveJsonSerDe: {\n        timestampFormats: ['timestampFormats'],\n      },\n      openXJsonSerDe: {\n        caseInsensitive: false,\n        columnToJsonKeyMappings: {\n          columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n        },\n        convertDotsInJsonKeysToUnderscores: false,\n      },\n    },\n  },\n  outputFormatConfiguration: {\n    serializer: {\n      orcSerDe: {\n        blockSizeBytes: 123,\n        bloomFilterColumns: ['bloomFilterColumns'],\n        bloomFilterFalsePositiveProbability: 123,\n        compression: 'compression',\n        dictionaryKeyThreshold: 123,\n        enablePadding: false,\n        formatVersion: 'formatVersion',\n        paddingTolerance: 123,\n        rowIndexStride: 123,\n        stripeSizeBytes: 123,\n      },\n      parquetSerDe: {\n        blockSizeBytes: 123,\n        compression: 'compression',\n        enableDictionaryCompression: false,\n        maxPaddingBytes: 123,\n        pageSizeBytes: 123,\n        writerVersion: 'writerVersion',\n      },\n    },\n  },\n  schemaConfiguration: {\n    catalogId: 'catalogId',\n    databaseName: 'databaseName',\n    region: 'region',\n    roleArn: 'roleArn',\n    tableName: 'tableName',\n    versionId: 'versionId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 9,
        "10": 14,
        "75": 42,
        "91": 5,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 11,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 37,
        "290": 1
      },
      "fqnsFingerprint": "8cf65a37a1dffb21cc5737f6316ab7f5739a835f18d200cd1899b44b3be9da79"
    },
    "3b715b51040c81d30c7cd709d0295bd96caf00f1557b3d737b14e047dda91b5f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ndelivery_stream_encryption_configuration_input_property = kinesisfirehose.CfnDeliveryStream.DeliveryStreamEncryptionConfigurationInputProperty(\n    key_type=\"keyType\",\n\n    # the properties below are optional\n    key_arn=\"keyArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nDeliveryStreamEncryptionConfigurationInputProperty deliveryStreamEncryptionConfigurationInputProperty = new DeliveryStreamEncryptionConfigurationInputProperty {\n    KeyType = \"keyType\",\n\n    // the properties below are optional\n    KeyArn = \"keyArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nDeliveryStreamEncryptionConfigurationInputProperty deliveryStreamEncryptionConfigurationInputProperty = DeliveryStreamEncryptionConfigurationInputProperty.builder()\n        .keyType(\"keyType\")\n\n        // the properties below are optional\n        .keyArn(\"keyArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ndeliveryStreamEncryptionConfigurationInputProperty := &deliveryStreamEncryptionConfigurationInputProperty{\n\tkeyType: jsii.String(\"keyType\"),\n\n\t// the properties below are optional\n\tkeyArn: jsii.String(\"keyArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst deliveryStreamEncryptionConfigurationInputProperty: kinesisfirehose.CfnDeliveryStream.DeliveryStreamEncryptionConfigurationInputProperty = {\n  keyType: 'keyType',\n\n  // the properties below are optional\n  keyArn: 'keyArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.DeliveryStreamEncryptionConfigurationInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.DeliveryStreamEncryptionConfigurationInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst deliveryStreamEncryptionConfigurationInputProperty: kinesisfirehose.CfnDeliveryStream.DeliveryStreamEncryptionConfigurationInputProperty = {\n  keyType: 'keyType',\n\n  // the properties below are optional\n  keyArn: 'keyArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "cdbcaa888c0dbcfa6d201e09df5023f5c992044ed80904dff2888c72915b0361"
    },
    "7b49c333b5874973e7cec1cd5b1ded6321dfec6c048714eeb1e3272fddbe12b1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ndeserializer_property = kinesisfirehose.CfnDeliveryStream.DeserializerProperty(\n    hive_json_ser_de=kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty(\n        timestamp_formats=[\"timestampFormats\"]\n    ),\n    open_xJson_ser_de=kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty(\n        case_insensitive=False,\n        column_to_json_key_mappings={\n            \"column_to_json_key_mappings_key\": \"columnToJsonKeyMappings\"\n        },\n        convert_dots_in_json_keys_to_underscores=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nDeserializerProperty deserializerProperty = new DeserializerProperty {\n    HiveJsonSerDe = new HiveJsonSerDeProperty {\n        TimestampFormats = new [] { \"timestampFormats\" }\n    },\n    OpenXJsonSerDe = new OpenXJsonSerDeProperty {\n        CaseInsensitive = false,\n        ColumnToJsonKeyMappings = new Dictionary<string, string> {\n            { \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\" }\n        },\n        ConvertDotsInJsonKeysToUnderscores = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nDeserializerProperty deserializerProperty = DeserializerProperty.builder()\n        .hiveJsonSerDe(HiveJsonSerDeProperty.builder()\n                .timestampFormats(List.of(\"timestampFormats\"))\n                .build())\n        .openXJsonSerDe(OpenXJsonSerDeProperty.builder()\n                .caseInsensitive(false)\n                .columnToJsonKeyMappings(Map.of(\n                        \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\"))\n                .convertDotsInJsonKeysToUnderscores(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ndeserializerProperty := &deserializerProperty{\n\thiveJsonSerDe: &hiveJsonSerDeProperty{\n\t\ttimestampFormats: []*string{\n\t\t\tjsii.String(\"timestampFormats\"),\n\t\t},\n\t},\n\topenXJsonSerDe: &openXJsonSerDeProperty{\n\t\tcaseInsensitive: jsii.Boolean(false),\n\t\tcolumnToJsonKeyMappings: map[string]*string{\n\t\t\t\"columnToJsonKeyMappingsKey\": jsii.String(\"columnToJsonKeyMappings\"),\n\t\t},\n\t\tconvertDotsInJsonKeysToUnderscores: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst deserializerProperty: kinesisfirehose.CfnDeliveryStream.DeserializerProperty = {\n  hiveJsonSerDe: {\n    timestampFormats: ['timestampFormats'],\n  },\n  openXJsonSerDe: {\n    caseInsensitive: false,\n    columnToJsonKeyMappings: {\n      columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n    },\n    convertDotsInJsonKeysToUnderscores: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.DeserializerProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.DeserializerProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst deserializerProperty: kinesisfirehose.CfnDeliveryStream.DeserializerProperty = {\n  hiveJsonSerDe: {\n    timestampFormats: ['timestampFormats'],\n  },\n  openXJsonSerDe: {\n    caseInsensitive: false,\n    columnToJsonKeyMappings: {\n      columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n    },\n    convertDotsInJsonKeysToUnderscores: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 12,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "8be00b17cf51891c137f894266d8f4d7c9c0ea97b1c86924c601ce3911261342"
    },
    "619d4383848e08950d68e519b65d6bbde26968ce0c541737ad55581a5a172349": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ndynamic_partitioning_configuration_property = kinesisfirehose.CfnDeliveryStream.DynamicPartitioningConfigurationProperty(\n    enabled=False,\n    retry_options=kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty(\n        duration_in_seconds=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nDynamicPartitioningConfigurationProperty dynamicPartitioningConfigurationProperty = new DynamicPartitioningConfigurationProperty {\n    Enabled = false,\n    RetryOptions = new RetryOptionsProperty {\n        DurationInSeconds = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nDynamicPartitioningConfigurationProperty dynamicPartitioningConfigurationProperty = DynamicPartitioningConfigurationProperty.builder()\n        .enabled(false)\n        .retryOptions(RetryOptionsProperty.builder()\n                .durationInSeconds(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ndynamicPartitioningConfigurationProperty := &dynamicPartitioningConfigurationProperty{\n\tenabled: jsii.Boolean(false),\n\tretryOptions: &retryOptionsProperty{\n\t\tdurationInSeconds: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst dynamicPartitioningConfigurationProperty: kinesisfirehose.CfnDeliveryStream.DynamicPartitioningConfigurationProperty = {\n  enabled: false,\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.DynamicPartitioningConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.DynamicPartitioningConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dynamicPartitioningConfigurationProperty: kinesisfirehose.CfnDeliveryStream.DynamicPartitioningConfigurationProperty = {\n  enabled: false,\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 8,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "ca302a6283e30df90527abeb6dee01e0198f9c80d25e0803d5d94da6910fe13d"
    },
    "439e9818d4218d9ed18d655dc836e4f0d385c738fe497c7057155854d81943dd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nelasticsearch_buffering_hints_property = kinesisfirehose.CfnDeliveryStream.ElasticsearchBufferingHintsProperty(\n    interval_in_seconds=123,\n    size_in_mBs=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nElasticsearchBufferingHintsProperty elasticsearchBufferingHintsProperty = new ElasticsearchBufferingHintsProperty {\n    IntervalInSeconds = 123,\n    SizeInMBs = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nElasticsearchBufferingHintsProperty elasticsearchBufferingHintsProperty = ElasticsearchBufferingHintsProperty.builder()\n        .intervalInSeconds(123)\n        .sizeInMBs(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nelasticsearchBufferingHintsProperty := &elasticsearchBufferingHintsProperty{\n\tintervalInSeconds: jsii.Number(123),\n\tsizeInMBs: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst elasticsearchBufferingHintsProperty: kinesisfirehose.CfnDeliveryStream.ElasticsearchBufferingHintsProperty = {\n  intervalInSeconds: 123,\n  sizeInMBs: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ElasticsearchBufferingHintsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ElasticsearchBufferingHintsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst elasticsearchBufferingHintsProperty: kinesisfirehose.CfnDeliveryStream.ElasticsearchBufferingHintsProperty = {\n  intervalInSeconds: 123,\n  sizeInMBs: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 1,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "22309b415434b07c6108bfc249991dcbd12777270c77be9bb264828d5ec7e033"
    },
    "24dafe98c35cfbc792abc0a4f8f00adf64dfd9f89398e4354d9b0ae3ce8e9b7f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nelasticsearch_destination_configuration_property = kinesisfirehose.CfnDeliveryStream.ElasticsearchDestinationConfigurationProperty(\n    index_name=\"indexName\",\n    role_arn=\"roleArn\",\n    s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\"\n    ),\n\n    # the properties below are optional\n    buffering_hints=kinesisfirehose.CfnDeliveryStream.ElasticsearchBufferingHintsProperty(\n        interval_in_seconds=123,\n        size_in_mBs=123\n    ),\n    cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n        enabled=False,\n        log_group_name=\"logGroupName\",\n        log_stream_name=\"logStreamName\"\n    ),\n    cluster_endpoint=\"clusterEndpoint\",\n    domain_arn=\"domainArn\",\n    index_rotation_period=\"indexRotationPeriod\",\n    processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n        enabled=False,\n        processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                parameter_name=\"parameterName\",\n                parameter_value=\"parameterValue\"\n            )]\n        )]\n    ),\n    retry_options=kinesisfirehose.CfnDeliveryStream.ElasticsearchRetryOptionsProperty(\n        duration_in_seconds=123\n    ),\n    s3_backup_mode=\"s3BackupMode\",\n    type_name=\"typeName\",\n    vpc_configuration=kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty(\n        role_arn=\"roleArn\",\n        security_group_ids=[\"securityGroupIds\"],\n        subnet_ids=[\"subnetIds\"]\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nElasticsearchDestinationConfigurationProperty elasticsearchDestinationConfigurationProperty = new ElasticsearchDestinationConfigurationProperty {\n    IndexName = \"indexName\",\n    RoleArn = \"roleArn\",\n    S3Configuration = new S3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\"\n    },\n\n    // the properties below are optional\n    BufferingHints = new ElasticsearchBufferingHintsProperty {\n        IntervalInSeconds = 123,\n        SizeInMBs = 123\n    },\n    CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n        Enabled = false,\n        LogGroupName = \"logGroupName\",\n        LogStreamName = \"logStreamName\"\n    },\n    ClusterEndpoint = \"clusterEndpoint\",\n    DomainArn = \"domainArn\",\n    IndexRotationPeriod = \"indexRotationPeriod\",\n    ProcessingConfiguration = new ProcessingConfigurationProperty {\n        Enabled = false,\n        Processors = new [] { new ProcessorProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            Parameters = new [] { new ProcessorParameterProperty {\n                ParameterName = \"parameterName\",\n                ParameterValue = \"parameterValue\"\n            } }\n        } }\n    },\n    RetryOptions = new ElasticsearchRetryOptionsProperty {\n        DurationInSeconds = 123\n    },\n    S3BackupMode = \"s3BackupMode\",\n    TypeName = \"typeName\",\n    VpcConfiguration = new VpcConfigurationProperty {\n        RoleArn = \"roleArn\",\n        SecurityGroupIds = new [] { \"securityGroupIds\" },\n        SubnetIds = new [] { \"subnetIds\" }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nElasticsearchDestinationConfigurationProperty elasticsearchDestinationConfigurationProperty = ElasticsearchDestinationConfigurationProperty.builder()\n        .indexName(\"indexName\")\n        .roleArn(\"roleArn\")\n        .s3Configuration(S3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .build())\n\n        // the properties below are optional\n        .bufferingHints(ElasticsearchBufferingHintsProperty.builder()\n                .intervalInSeconds(123)\n                .sizeInMBs(123)\n                .build())\n        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                .enabled(false)\n                .logGroupName(\"logGroupName\")\n                .logStreamName(\"logStreamName\")\n                .build())\n        .clusterEndpoint(\"clusterEndpoint\")\n        .domainArn(\"domainArn\")\n        .indexRotationPeriod(\"indexRotationPeriod\")\n        .processingConfiguration(ProcessingConfigurationProperty.builder()\n                .enabled(false)\n                .processors(List.of(ProcessorProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .parameters(List.of(ProcessorParameterProperty.builder()\n                                .parameterName(\"parameterName\")\n                                .parameterValue(\"parameterValue\")\n                                .build()))\n                        .build()))\n                .build())\n        .retryOptions(ElasticsearchRetryOptionsProperty.builder()\n                .durationInSeconds(123)\n                .build())\n        .s3BackupMode(\"s3BackupMode\")\n        .typeName(\"typeName\")\n        .vpcConfiguration(VpcConfigurationProperty.builder()\n                .roleArn(\"roleArn\")\n                .securityGroupIds(List.of(\"securityGroupIds\"))\n                .subnetIds(List.of(\"subnetIds\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nelasticsearchDestinationConfigurationProperty := &elasticsearchDestinationConfigurationProperty{\n\tindexName: jsii.String(\"indexName\"),\n\troleArn: jsii.String(\"roleArn\"),\n\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\n\t// the properties below are optional\n\tbufferingHints: &elasticsearchBufferingHintsProperty{\n\t\tintervalInSeconds: jsii.Number(123),\n\t\tsizeInMBs: jsii.Number(123),\n\t},\n\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t},\n\tclusterEndpoint: jsii.String(\"clusterEndpoint\"),\n\tdomainArn: jsii.String(\"domainArn\"),\n\tindexRotationPeriod: jsii.String(\"indexRotationPeriod\"),\n\tprocessingConfiguration: &processingConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tprocessors: []interface{}{\n\t\t\t&processorProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tretryOptions: &elasticsearchRetryOptionsProperty{\n\t\tdurationInSeconds: jsii.Number(123),\n\t},\n\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\ttypeName: jsii.String(\"typeName\"),\n\tvpcConfiguration: &vpcConfigurationProperty{\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\tsecurityGroupIds: []*string{\n\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t},\n\t\tsubnetIds: []*string{\n\t\t\tjsii.String(\"subnetIds\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst elasticsearchDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.ElasticsearchDestinationConfigurationProperty = {\n  indexName: 'indexName',\n  roleArn: 'roleArn',\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  clusterEndpoint: 'clusterEndpoint',\n  domainArn: 'domainArn',\n  indexRotationPeriod: 'indexRotationPeriod',\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  s3BackupMode: 's3BackupMode',\n  typeName: 'typeName',\n  vpcConfiguration: {\n    roleArn: 'roleArn',\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ElasticsearchDestinationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ElasticsearchDestinationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst elasticsearchDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.ElasticsearchDestinationConfigurationProperty = {\n  indexName: 'indexName',\n  roleArn: 'roleArn',\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  clusterEndpoint: 'clusterEndpoint',\n  domainArn: 'domainArn',\n  indexRotationPeriod: 'indexRotationPeriod',\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  s3BackupMode: 's3BackupMode',\n  typeName: 'typeName',\n  vpcConfiguration: {\n    roleArn: 'roleArn',\n    securityGroupIds: ['securityGroupIds'],\n    subnetIds: ['subnetIds'],\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 25,
        "75": 49,
        "91": 3,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 13,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 44,
        "290": 1
      },
      "fqnsFingerprint": "1c2cb714bc39cf7f8f619dc7a51d0cc26cad12ff155d850a12849806fbf8cb62"
    },
    "29a4e9e58b0165ae0d1b58509b48fa944100c37460b96e6c99c2af2482b294bc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nelasticsearch_retry_options_property = kinesisfirehose.CfnDeliveryStream.ElasticsearchRetryOptionsProperty(\n    duration_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nElasticsearchRetryOptionsProperty elasticsearchRetryOptionsProperty = new ElasticsearchRetryOptionsProperty {\n    DurationInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nElasticsearchRetryOptionsProperty elasticsearchRetryOptionsProperty = ElasticsearchRetryOptionsProperty.builder()\n        .durationInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nelasticsearchRetryOptionsProperty := &elasticsearchRetryOptionsProperty{\n\tdurationInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst elasticsearchRetryOptionsProperty: kinesisfirehose.CfnDeliveryStream.ElasticsearchRetryOptionsProperty = {\n  durationInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ElasticsearchRetryOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ElasticsearchRetryOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst elasticsearchRetryOptionsProperty: kinesisfirehose.CfnDeliveryStream.ElasticsearchRetryOptionsProperty = {\n  durationInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "8f2004def542dccaac95b0b54807156b37d8a5d44fd5f224158349274672a1c7"
    },
    "a778f5ba5d112b83ab27029836ce74423ab05e9d7bb5fb96ea8028b7c80de1c7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nencryption_configuration_property = kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n    kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n        awskms_key_arn=\"awskmsKeyArn\"\n    ),\n    no_encryption_config=\"noEncryptionConfig\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nEncryptionConfigurationProperty encryptionConfigurationProperty = new EncryptionConfigurationProperty {\n    KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n        AwskmsKeyArn = \"awskmsKeyArn\"\n    },\n    NoEncryptionConfig = \"noEncryptionConfig\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nEncryptionConfigurationProperty encryptionConfigurationProperty = EncryptionConfigurationProperty.builder()\n        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                .awskmsKeyArn(\"awskmsKeyArn\")\n                .build())\n        .noEncryptionConfig(\"noEncryptionConfig\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nencryptionConfigurationProperty := &encryptionConfigurationProperty{\n\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t},\n\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst encryptionConfigurationProperty: kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty = {\n  kmsEncryptionConfig: {\n    awskmsKeyArn: 'awskmsKeyArn',\n  },\n  noEncryptionConfig: 'noEncryptionConfig',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst encryptionConfigurationProperty: kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty = {\n  kmsEncryptionConfig: {\n    awskmsKeyArn: 'awskmsKeyArn',\n  },\n  noEncryptionConfig: 'noEncryptionConfig',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "010e89a374392062f9611bd64b72332e94025552dffbdaafb1c07c7486cd40a7"
    },
    "06553da1cfa9fa842f646142f3113aba880003b6dd63059feaa096e67c1408ec": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nextended_s3_destination_configuration_property = kinesisfirehose.CfnDeliveryStream.ExtendedS3DestinationConfigurationProperty(\n    bucket_arn=\"bucketArn\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n        interval_in_seconds=123,\n        size_in_mBs=123\n    ),\n    cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n        enabled=False,\n        log_group_name=\"logGroupName\",\n        log_stream_name=\"logStreamName\"\n    ),\n    compression_format=\"compressionFormat\",\n    data_format_conversion_configuration=kinesisfirehose.CfnDeliveryStream.DataFormatConversionConfigurationProperty(\n        enabled=False,\n        input_format_configuration=kinesisfirehose.CfnDeliveryStream.InputFormatConfigurationProperty(\n            deserializer=kinesisfirehose.CfnDeliveryStream.DeserializerProperty(\n                hive_json_ser_de=kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty(\n                    timestamp_formats=[\"timestampFormats\"]\n                ),\n                open_xJson_ser_de=kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty(\n                    case_insensitive=False,\n                    column_to_json_key_mappings={\n                        \"column_to_json_key_mappings_key\": \"columnToJsonKeyMappings\"\n                    },\n                    convert_dots_in_json_keys_to_underscores=False\n                )\n            )\n        ),\n        output_format_configuration=kinesisfirehose.CfnDeliveryStream.OutputFormatConfigurationProperty(\n            serializer=kinesisfirehose.CfnDeliveryStream.SerializerProperty(\n                orc_ser_de=kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty(\n                    block_size_bytes=123,\n                    bloom_filter_columns=[\"bloomFilterColumns\"],\n                    bloom_filter_false_positive_probability=123,\n                    compression=\"compression\",\n                    dictionary_key_threshold=123,\n                    enable_padding=False,\n                    format_version=\"formatVersion\",\n                    padding_tolerance=123,\n                    row_index_stride=123,\n                    stripe_size_bytes=123\n                ),\n                parquet_ser_de=kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty(\n                    block_size_bytes=123,\n                    compression=\"compression\",\n                    enable_dictionary_compression=False,\n                    max_padding_bytes=123,\n                    page_size_bytes=123,\n                    writer_version=\"writerVersion\"\n                )\n            )\n        ),\n        schema_configuration=kinesisfirehose.CfnDeliveryStream.SchemaConfigurationProperty(\n            catalog_id=\"catalogId\",\n            database_name=\"databaseName\",\n            region=\"region\",\n            role_arn=\"roleArn\",\n            table_name=\"tableName\",\n            version_id=\"versionId\"\n        )\n    ),\n    dynamic_partitioning_configuration=kinesisfirehose.CfnDeliveryStream.DynamicPartitioningConfigurationProperty(\n        enabled=False,\n        retry_options=kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty(\n            duration_in_seconds=123\n        )\n    ),\n    encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n        kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n            awskms_key_arn=\"awskmsKeyArn\"\n        ),\n        no_encryption_config=\"noEncryptionConfig\"\n    ),\n    error_output_prefix=\"errorOutputPrefix\",\n    prefix=\"prefix\",\n    processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n        enabled=False,\n        processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                parameter_name=\"parameterName\",\n                parameter_value=\"parameterValue\"\n            )]\n        )]\n    ),\n    s3_backup_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\"\n    ),\n    s3_backup_mode=\"s3BackupMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nExtendedS3DestinationConfigurationProperty extendedS3DestinationConfigurationProperty = new ExtendedS3DestinationConfigurationProperty {\n    BucketArn = \"bucketArn\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    BufferingHints = new BufferingHintsProperty {\n        IntervalInSeconds = 123,\n        SizeInMBs = 123\n    },\n    CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n        Enabled = false,\n        LogGroupName = \"logGroupName\",\n        LogStreamName = \"logStreamName\"\n    },\n    CompressionFormat = \"compressionFormat\",\n    DataFormatConversionConfiguration = new DataFormatConversionConfigurationProperty {\n        Enabled = false,\n        InputFormatConfiguration = new InputFormatConfigurationProperty {\n            Deserializer = new DeserializerProperty {\n                HiveJsonSerDe = new HiveJsonSerDeProperty {\n                    TimestampFormats = new [] { \"timestampFormats\" }\n                },\n                OpenXJsonSerDe = new OpenXJsonSerDeProperty {\n                    CaseInsensitive = false,\n                    ColumnToJsonKeyMappings = new Dictionary<string, string> {\n                        { \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\" }\n                    },\n                    ConvertDotsInJsonKeysToUnderscores = false\n                }\n            }\n        },\n        OutputFormatConfiguration = new OutputFormatConfigurationProperty {\n            Serializer = new SerializerProperty {\n                OrcSerDe = new OrcSerDeProperty {\n                    BlockSizeBytes = 123,\n                    BloomFilterColumns = new [] { \"bloomFilterColumns\" },\n                    BloomFilterFalsePositiveProbability = 123,\n                    Compression = \"compression\",\n                    DictionaryKeyThreshold = 123,\n                    EnablePadding = false,\n                    FormatVersion = \"formatVersion\",\n                    PaddingTolerance = 123,\n                    RowIndexStride = 123,\n                    StripeSizeBytes = 123\n                },\n                ParquetSerDe = new ParquetSerDeProperty {\n                    BlockSizeBytes = 123,\n                    Compression = \"compression\",\n                    EnableDictionaryCompression = false,\n                    MaxPaddingBytes = 123,\n                    PageSizeBytes = 123,\n                    WriterVersion = \"writerVersion\"\n                }\n            }\n        },\n        SchemaConfiguration = new SchemaConfigurationProperty {\n            CatalogId = \"catalogId\",\n            DatabaseName = \"databaseName\",\n            Region = \"region\",\n            RoleArn = \"roleArn\",\n            TableName = \"tableName\",\n            VersionId = \"versionId\"\n        }\n    },\n    DynamicPartitioningConfiguration = new DynamicPartitioningConfigurationProperty {\n        Enabled = false,\n        RetryOptions = new RetryOptionsProperty {\n            DurationInSeconds = 123\n        }\n    },\n    EncryptionConfiguration = new EncryptionConfigurationProperty {\n        KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n            AwskmsKeyArn = \"awskmsKeyArn\"\n        },\n        NoEncryptionConfig = \"noEncryptionConfig\"\n    },\n    ErrorOutputPrefix = \"errorOutputPrefix\",\n    Prefix = \"prefix\",\n    ProcessingConfiguration = new ProcessingConfigurationProperty {\n        Enabled = false,\n        Processors = new [] { new ProcessorProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            Parameters = new [] { new ProcessorParameterProperty {\n                ParameterName = \"parameterName\",\n                ParameterValue = \"parameterValue\"\n            } }\n        } }\n    },\n    S3BackupConfiguration = new S3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\"\n    },\n    S3BackupMode = \"s3BackupMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nExtendedS3DestinationConfigurationProperty extendedS3DestinationConfigurationProperty = ExtendedS3DestinationConfigurationProperty.builder()\n        .bucketArn(\"bucketArn\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .bufferingHints(BufferingHintsProperty.builder()\n                .intervalInSeconds(123)\n                .sizeInMBs(123)\n                .build())\n        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                .enabled(false)\n                .logGroupName(\"logGroupName\")\n                .logStreamName(\"logStreamName\")\n                .build())\n        .compressionFormat(\"compressionFormat\")\n        .dataFormatConversionConfiguration(DataFormatConversionConfigurationProperty.builder()\n                .enabled(false)\n                .inputFormatConfiguration(InputFormatConfigurationProperty.builder()\n                        .deserializer(DeserializerProperty.builder()\n                                .hiveJsonSerDe(HiveJsonSerDeProperty.builder()\n                                        .timestampFormats(List.of(\"timestampFormats\"))\n                                        .build())\n                                .openXJsonSerDe(OpenXJsonSerDeProperty.builder()\n                                        .caseInsensitive(false)\n                                        .columnToJsonKeyMappings(Map.of(\n                                                \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\"))\n                                        .convertDotsInJsonKeysToUnderscores(false)\n                                        .build())\n                                .build())\n                        .build())\n                .outputFormatConfiguration(OutputFormatConfigurationProperty.builder()\n                        .serializer(SerializerProperty.builder()\n                                .orcSerDe(OrcSerDeProperty.builder()\n                                        .blockSizeBytes(123)\n                                        .bloomFilterColumns(List.of(\"bloomFilterColumns\"))\n                                        .bloomFilterFalsePositiveProbability(123)\n                                        .compression(\"compression\")\n                                        .dictionaryKeyThreshold(123)\n                                        .enablePadding(false)\n                                        .formatVersion(\"formatVersion\")\n                                        .paddingTolerance(123)\n                                        .rowIndexStride(123)\n                                        .stripeSizeBytes(123)\n                                        .build())\n                                .parquetSerDe(ParquetSerDeProperty.builder()\n                                        .blockSizeBytes(123)\n                                        .compression(\"compression\")\n                                        .enableDictionaryCompression(false)\n                                        .maxPaddingBytes(123)\n                                        .pageSizeBytes(123)\n                                        .writerVersion(\"writerVersion\")\n                                        .build())\n                                .build())\n                        .build())\n                .schemaConfiguration(SchemaConfigurationProperty.builder()\n                        .catalogId(\"catalogId\")\n                        .databaseName(\"databaseName\")\n                        .region(\"region\")\n                        .roleArn(\"roleArn\")\n                        .tableName(\"tableName\")\n                        .versionId(\"versionId\")\n                        .build())\n                .build())\n        .dynamicPartitioningConfiguration(DynamicPartitioningConfigurationProperty.builder()\n                .enabled(false)\n                .retryOptions(RetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .build())\n        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                        .awskmsKeyArn(\"awskmsKeyArn\")\n                        .build())\n                .noEncryptionConfig(\"noEncryptionConfig\")\n                .build())\n        .errorOutputPrefix(\"errorOutputPrefix\")\n        .prefix(\"prefix\")\n        .processingConfiguration(ProcessingConfigurationProperty.builder()\n                .enabled(false)\n                .processors(List.of(ProcessorProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .parameters(List.of(ProcessorParameterProperty.builder()\n                                .parameterName(\"parameterName\")\n                                .parameterValue(\"parameterValue\")\n                                .build()))\n                        .build()))\n                .build())\n        .s3BackupConfiguration(S3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .build())\n        .s3BackupMode(\"s3BackupMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nextendedS3DestinationConfigurationProperty := &extendedS3DestinationConfigurationProperty{\n\tbucketArn: jsii.String(\"bucketArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tbufferingHints: &bufferingHintsProperty{\n\t\tintervalInSeconds: jsii.Number(123),\n\t\tsizeInMBs: jsii.Number(123),\n\t},\n\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t},\n\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\tdataFormatConversionConfiguration: &dataFormatConversionConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tinputFormatConfiguration: &inputFormatConfigurationProperty{\n\t\t\tdeserializer: &deserializerProperty{\n\t\t\t\thiveJsonSerDe: &hiveJsonSerDeProperty{\n\t\t\t\t\ttimestampFormats: []*string{\n\t\t\t\t\t\tjsii.String(\"timestampFormats\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\topenXJsonSerDe: &openXJsonSerDeProperty{\n\t\t\t\t\tcaseInsensitive: jsii.Boolean(false),\n\t\t\t\t\tcolumnToJsonKeyMappings: map[string]*string{\n\t\t\t\t\t\t\"columnToJsonKeyMappingsKey\": jsii.String(\"columnToJsonKeyMappings\"),\n\t\t\t\t\t},\n\t\t\t\t\tconvertDotsInJsonKeysToUnderscores: jsii.Boolean(false),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\toutputFormatConfiguration: &outputFormatConfigurationProperty{\n\t\t\tserializer: &serializerProperty{\n\t\t\t\torcSerDe: &orcSerDeProperty{\n\t\t\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\t\t\tbloomFilterColumns: []*string{\n\t\t\t\t\t\tjsii.String(\"bloomFilterColumns\"),\n\t\t\t\t\t},\n\t\t\t\t\tbloomFilterFalsePositiveProbability: jsii.Number(123),\n\t\t\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\t\t\tdictionaryKeyThreshold: jsii.Number(123),\n\t\t\t\t\tenablePadding: jsii.Boolean(false),\n\t\t\t\t\tformatVersion: jsii.String(\"formatVersion\"),\n\t\t\t\t\tpaddingTolerance: jsii.Number(123),\n\t\t\t\t\trowIndexStride: jsii.Number(123),\n\t\t\t\t\tstripeSizeBytes: jsii.Number(123),\n\t\t\t\t},\n\t\t\t\tparquetSerDe: &parquetSerDeProperty{\n\t\t\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\t\t\tenableDictionaryCompression: jsii.Boolean(false),\n\t\t\t\t\tmaxPaddingBytes: jsii.Number(123),\n\t\t\t\t\tpageSizeBytes: jsii.Number(123),\n\t\t\t\t\twriterVersion: jsii.String(\"writerVersion\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tschemaConfiguration: &schemaConfigurationProperty{\n\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\tregion: jsii.String(\"region\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\tversionId: jsii.String(\"versionId\"),\n\t\t},\n\t},\n\tdynamicPartitioningConfiguration: &dynamicPartitioningConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tretryOptions: &retryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t},\n\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t},\n\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t},\n\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\tprefix: jsii.String(\"prefix\"),\n\tprocessingConfiguration: &processingConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tprocessors: []interface{}{\n\t\t\t&processorProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\ts3BackupConfiguration: &s3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst extendedS3DestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.ExtendedS3DestinationConfigurationProperty = {\n  bucketArn: 'bucketArn',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  compressionFormat: 'compressionFormat',\n  dataFormatConversionConfiguration: {\n    enabled: false,\n    inputFormatConfiguration: {\n      deserializer: {\n        hiveJsonSerDe: {\n          timestampFormats: ['timestampFormats'],\n        },\n        openXJsonSerDe: {\n          caseInsensitive: false,\n          columnToJsonKeyMappings: {\n            columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n          },\n          convertDotsInJsonKeysToUnderscores: false,\n        },\n      },\n    },\n    outputFormatConfiguration: {\n      serializer: {\n        orcSerDe: {\n          blockSizeBytes: 123,\n          bloomFilterColumns: ['bloomFilterColumns'],\n          bloomFilterFalsePositiveProbability: 123,\n          compression: 'compression',\n          dictionaryKeyThreshold: 123,\n          enablePadding: false,\n          formatVersion: 'formatVersion',\n          paddingTolerance: 123,\n          rowIndexStride: 123,\n          stripeSizeBytes: 123,\n        },\n        parquetSerDe: {\n          blockSizeBytes: 123,\n          compression: 'compression',\n          enableDictionaryCompression: false,\n          maxPaddingBytes: 123,\n          pageSizeBytes: 123,\n          writerVersion: 'writerVersion',\n        },\n      },\n    },\n    schemaConfiguration: {\n      catalogId: 'catalogId',\n      databaseName: 'databaseName',\n      region: 'region',\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n      versionId: 'versionId',\n    },\n  },\n  dynamicPartitioningConfiguration: {\n    enabled: false,\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n  },\n  encryptionConfiguration: {\n    kmsEncryptionConfig: {\n      awskmsKeyArn: 'awskmsKeyArn',\n    },\n    noEncryptionConfig: 'noEncryptionConfig',\n  },\n  errorOutputPrefix: 'errorOutputPrefix',\n  prefix: 'prefix',\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  s3BackupConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n  s3BackupMode: 's3BackupMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ExtendedS3DestinationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ExtendedS3DestinationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst extendedS3DestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.ExtendedS3DestinationConfigurationProperty = {\n  bucketArn: 'bucketArn',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  compressionFormat: 'compressionFormat',\n  dataFormatConversionConfiguration: {\n    enabled: false,\n    inputFormatConfiguration: {\n      deserializer: {\n        hiveJsonSerDe: {\n          timestampFormats: ['timestampFormats'],\n        },\n        openXJsonSerDe: {\n          caseInsensitive: false,\n          columnToJsonKeyMappings: {\n            columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n          },\n          convertDotsInJsonKeysToUnderscores: false,\n        },\n      },\n    },\n    outputFormatConfiguration: {\n      serializer: {\n        orcSerDe: {\n          blockSizeBytes: 123,\n          bloomFilterColumns: ['bloomFilterColumns'],\n          bloomFilterFalsePositiveProbability: 123,\n          compression: 'compression',\n          dictionaryKeyThreshold: 123,\n          enablePadding: false,\n          formatVersion: 'formatVersion',\n          paddingTolerance: 123,\n          rowIndexStride: 123,\n          stripeSizeBytes: 123,\n        },\n        parquetSerDe: {\n          blockSizeBytes: 123,\n          compression: 'compression',\n          enableDictionaryCompression: false,\n          maxPaddingBytes: 123,\n          pageSizeBytes: 123,\n          writerVersion: 'writerVersion',\n        },\n      },\n    },\n    schemaConfiguration: {\n      catalogId: 'catalogId',\n      databaseName: 'databaseName',\n      region: 'region',\n      roleArn: 'roleArn',\n      tableName: 'tableName',\n      versionId: 'versionId',\n    },\n  },\n  dynamicPartitioningConfiguration: {\n    enabled: false,\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n  },\n  encryptionConfiguration: {\n    kmsEncryptionConfig: {\n      awskmsKeyArn: 'awskmsKeyArn',\n    },\n    noEncryptionConfig: 'noEncryptionConfig',\n  },\n  errorOutputPrefix: 'errorOutputPrefix',\n  prefix: 'prefix',\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  s3BackupConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n  s3BackupMode: 's3BackupMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 14,
        "10": 36,
        "75": 88,
        "91": 9,
        "153": 2,
        "169": 1,
        "192": 4,
        "193": 26,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 83,
        "290": 1
      },
      "fqnsFingerprint": "a2f3f55dd191b67d8086977f102a2b210ff96f500a734a38e40a480cab1e292a"
    },
    "9124dfbfbfa812c909335c5522f5fde1d20b33f8fbe85b5313a4730b425f4242": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nhive_json_ser_de_property = kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty(\n    timestamp_formats=[\"timestampFormats\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nHiveJsonSerDeProperty hiveJsonSerDeProperty = new HiveJsonSerDeProperty {\n    TimestampFormats = new [] { \"timestampFormats\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nHiveJsonSerDeProperty hiveJsonSerDeProperty = HiveJsonSerDeProperty.builder()\n        .timestampFormats(List.of(\"timestampFormats\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nhiveJsonSerDeProperty := &hiveJsonSerDeProperty{\n\ttimestampFormats: []*string{\n\t\tjsii.String(\"timestampFormats\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst hiveJsonSerDeProperty: kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty = {\n  timestampFormats: ['timestampFormats'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst hiveJsonSerDeProperty: kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty = {\n  timestampFormats: ['timestampFormats'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "ffd438001be0bad8b39b42137e27822df79ffd4a02fcebc343957e9160ee5492"
    },
    "703bafc02cf1fbfb084e00456ee9fb4f4cf273be7e1305a6e99124cad37b0cb4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nhttp_endpoint_common_attribute_property = kinesisfirehose.CfnDeliveryStream.HttpEndpointCommonAttributeProperty(\n    attribute_name=\"attributeName\",\n    attribute_value=\"attributeValue\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nHttpEndpointCommonAttributeProperty httpEndpointCommonAttributeProperty = new HttpEndpointCommonAttributeProperty {\n    AttributeName = \"attributeName\",\n    AttributeValue = \"attributeValue\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nHttpEndpointCommonAttributeProperty httpEndpointCommonAttributeProperty = HttpEndpointCommonAttributeProperty.builder()\n        .attributeName(\"attributeName\")\n        .attributeValue(\"attributeValue\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nhttpEndpointCommonAttributeProperty := &httpEndpointCommonAttributeProperty{\n\tattributeName: jsii.String(\"attributeName\"),\n\tattributeValue: jsii.String(\"attributeValue\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst httpEndpointCommonAttributeProperty: kinesisfirehose.CfnDeliveryStream.HttpEndpointCommonAttributeProperty = {\n  attributeName: 'attributeName',\n  attributeValue: 'attributeValue',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.HttpEndpointCommonAttributeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.HttpEndpointCommonAttributeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpEndpointCommonAttributeProperty: kinesisfirehose.CfnDeliveryStream.HttpEndpointCommonAttributeProperty = {\n  attributeName: 'attributeName',\n  attributeValue: 'attributeValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "c4e7adf9c24b495c131a22dd83da9659d6272c8e710a05cc27a255f2e00ef375"
    },
    "d1e53232538129660553daae3cbbf959061406d3024db78ecbe7ea8e1be25c7e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nhttp_endpoint_configuration_property = kinesisfirehose.CfnDeliveryStream.HttpEndpointConfigurationProperty(\n    url=\"url\",\n\n    # the properties below are optional\n    access_key=\"accessKey\",\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nHttpEndpointConfigurationProperty httpEndpointConfigurationProperty = new HttpEndpointConfigurationProperty {\n    Url = \"url\",\n\n    // the properties below are optional\n    AccessKey = \"accessKey\",\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nHttpEndpointConfigurationProperty httpEndpointConfigurationProperty = HttpEndpointConfigurationProperty.builder()\n        .url(\"url\")\n\n        // the properties below are optional\n        .accessKey(\"accessKey\")\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nhttpEndpointConfigurationProperty := &httpEndpointConfigurationProperty{\n\turl: jsii.String(\"url\"),\n\n\t// the properties below are optional\n\taccessKey: jsii.String(\"accessKey\"),\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst httpEndpointConfigurationProperty: kinesisfirehose.CfnDeliveryStream.HttpEndpointConfigurationProperty = {\n  url: 'url',\n\n  // the properties below are optional\n  accessKey: 'accessKey',\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.HttpEndpointConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.HttpEndpointConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpEndpointConfigurationProperty: kinesisfirehose.CfnDeliveryStream.HttpEndpointConfigurationProperty = {\n  url: 'url',\n\n  // the properties below are optional\n  accessKey: 'accessKey',\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "8695d66d1dc0ba95b6860c6aa3d63150152b5fbc853d958f36baaee717c5ed69"
    },
    "26e85259767ab9f2ea23f73628c4b57fd3517c75163acac5cf55bf6b94feedd0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nhttp_endpoint_destination_configuration_property = kinesisfirehose.CfnDeliveryStream.HttpEndpointDestinationConfigurationProperty(\n    endpoint_configuration=kinesisfirehose.CfnDeliveryStream.HttpEndpointConfigurationProperty(\n        url=\"url\",\n\n        # the properties below are optional\n        access_key=\"accessKey\",\n        name=\"name\"\n    ),\n    s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\"\n    ),\n\n    # the properties below are optional\n    buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n        interval_in_seconds=123,\n        size_in_mBs=123\n    ),\n    cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n        enabled=False,\n        log_group_name=\"logGroupName\",\n        log_stream_name=\"logStreamName\"\n    ),\n    processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n        enabled=False,\n        processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                parameter_name=\"parameterName\",\n                parameter_value=\"parameterValue\"\n            )]\n        )]\n    ),\n    request_configuration=kinesisfirehose.CfnDeliveryStream.HttpEndpointRequestConfigurationProperty(\n        common_attributes=[kinesisfirehose.CfnDeliveryStream.HttpEndpointCommonAttributeProperty(\n            attribute_name=\"attributeName\",\n            attribute_value=\"attributeValue\"\n        )],\n        content_encoding=\"contentEncoding\"\n    ),\n    retry_options=kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty(\n        duration_in_seconds=123\n    ),\n    role_arn=\"roleArn\",\n    s3_backup_mode=\"s3BackupMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nHttpEndpointDestinationConfigurationProperty httpEndpointDestinationConfigurationProperty = new HttpEndpointDestinationConfigurationProperty {\n    EndpointConfiguration = new HttpEndpointConfigurationProperty {\n        Url = \"url\",\n\n        // the properties below are optional\n        AccessKey = \"accessKey\",\n        Name = \"name\"\n    },\n    S3Configuration = new S3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\"\n    },\n\n    // the properties below are optional\n    BufferingHints = new BufferingHintsProperty {\n        IntervalInSeconds = 123,\n        SizeInMBs = 123\n    },\n    CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n        Enabled = false,\n        LogGroupName = \"logGroupName\",\n        LogStreamName = \"logStreamName\"\n    },\n    ProcessingConfiguration = new ProcessingConfigurationProperty {\n        Enabled = false,\n        Processors = new [] { new ProcessorProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            Parameters = new [] { new ProcessorParameterProperty {\n                ParameterName = \"parameterName\",\n                ParameterValue = \"parameterValue\"\n            } }\n        } }\n    },\n    RequestConfiguration = new HttpEndpointRequestConfigurationProperty {\n        CommonAttributes = new [] { new HttpEndpointCommonAttributeProperty {\n            AttributeName = \"attributeName\",\n            AttributeValue = \"attributeValue\"\n        } },\n        ContentEncoding = \"contentEncoding\"\n    },\n    RetryOptions = new RetryOptionsProperty {\n        DurationInSeconds = 123\n    },\n    RoleArn = \"roleArn\",\n    S3BackupMode = \"s3BackupMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nHttpEndpointDestinationConfigurationProperty httpEndpointDestinationConfigurationProperty = HttpEndpointDestinationConfigurationProperty.builder()\n        .endpointConfiguration(HttpEndpointConfigurationProperty.builder()\n                .url(\"url\")\n\n                // the properties below are optional\n                .accessKey(\"accessKey\")\n                .name(\"name\")\n                .build())\n        .s3Configuration(S3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .build())\n\n        // the properties below are optional\n        .bufferingHints(BufferingHintsProperty.builder()\n                .intervalInSeconds(123)\n                .sizeInMBs(123)\n                .build())\n        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                .enabled(false)\n                .logGroupName(\"logGroupName\")\n                .logStreamName(\"logStreamName\")\n                .build())\n        .processingConfiguration(ProcessingConfigurationProperty.builder()\n                .enabled(false)\n                .processors(List.of(ProcessorProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .parameters(List.of(ProcessorParameterProperty.builder()\n                                .parameterName(\"parameterName\")\n                                .parameterValue(\"parameterValue\")\n                                .build()))\n                        .build()))\n                .build())\n        .requestConfiguration(HttpEndpointRequestConfigurationProperty.builder()\n                .commonAttributes(List.of(HttpEndpointCommonAttributeProperty.builder()\n                        .attributeName(\"attributeName\")\n                        .attributeValue(\"attributeValue\")\n                        .build()))\n                .contentEncoding(\"contentEncoding\")\n                .build())\n        .retryOptions(RetryOptionsProperty.builder()\n                .durationInSeconds(123)\n                .build())\n        .roleArn(\"roleArn\")\n        .s3BackupMode(\"s3BackupMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nhttpEndpointDestinationConfigurationProperty := &httpEndpointDestinationConfigurationProperty{\n\tendpointConfiguration: &httpEndpointConfigurationProperty{\n\t\turl: jsii.String(\"url\"),\n\n\t\t// the properties below are optional\n\t\taccessKey: jsii.String(\"accessKey\"),\n\t\tname: jsii.String(\"name\"),\n\t},\n\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\n\t// the properties below are optional\n\tbufferingHints: &bufferingHintsProperty{\n\t\tintervalInSeconds: jsii.Number(123),\n\t\tsizeInMBs: jsii.Number(123),\n\t},\n\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t},\n\tprocessingConfiguration: &processingConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tprocessors: []interface{}{\n\t\t\t&processorProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\trequestConfiguration: &httpEndpointRequestConfigurationProperty{\n\t\tcommonAttributes: []interface{}{\n\t\t\t&httpEndpointCommonAttributeProperty{\n\t\t\t\tattributeName: jsii.String(\"attributeName\"),\n\t\t\t\tattributeValue: jsii.String(\"attributeValue\"),\n\t\t\t},\n\t\t},\n\t\tcontentEncoding: jsii.String(\"contentEncoding\"),\n\t},\n\tretryOptions: &retryOptionsProperty{\n\t\tdurationInSeconds: jsii.Number(123),\n\t},\n\troleArn: jsii.String(\"roleArn\"),\n\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst httpEndpointDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.HttpEndpointDestinationConfigurationProperty = {\n  endpointConfiguration: {\n    url: 'url',\n\n    // the properties below are optional\n    accessKey: 'accessKey',\n    name: 'name',\n  },\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  requestConfiguration: {\n    commonAttributes: [{\n      attributeName: 'attributeName',\n      attributeValue: 'attributeValue',\n    }],\n    contentEncoding: 'contentEncoding',\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  roleArn: 'roleArn',\n  s3BackupMode: 's3BackupMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.HttpEndpointDestinationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.HttpEndpointDestinationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpEndpointDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.HttpEndpointDestinationConfigurationProperty = {\n  endpointConfiguration: {\n    url: 'url',\n\n    // the properties below are optional\n    accessKey: 'accessKey',\n    name: 'name',\n  },\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  requestConfiguration: {\n    commonAttributes: [{\n      attributeName: 'attributeName',\n      attributeValue: 'attributeValue',\n    }],\n    contentEncoding: 'contentEncoding',\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  roleArn: 'roleArn',\n  s3BackupMode: 's3BackupMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 23,
        "75": 49,
        "91": 3,
        "153": 2,
        "169": 1,
        "192": 3,
        "193": 15,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 44,
        "290": 1
      },
      "fqnsFingerprint": "43f5639f79b38cdc457ee5af36b8fbec6ea0bb9ef78774c749dec93ff2f6702a"
    },
    "bfd589821ffa0d371078ea2138e610ec695f0599867a92ff65cead7fd8fdd59a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nhttp_endpoint_request_configuration_property = kinesisfirehose.CfnDeliveryStream.HttpEndpointRequestConfigurationProperty(\n    common_attributes=[kinesisfirehose.CfnDeliveryStream.HttpEndpointCommonAttributeProperty(\n        attribute_name=\"attributeName\",\n        attribute_value=\"attributeValue\"\n    )],\n    content_encoding=\"contentEncoding\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nHttpEndpointRequestConfigurationProperty httpEndpointRequestConfigurationProperty = new HttpEndpointRequestConfigurationProperty {\n    CommonAttributes = new [] { new HttpEndpointCommonAttributeProperty {\n        AttributeName = \"attributeName\",\n        AttributeValue = \"attributeValue\"\n    } },\n    ContentEncoding = \"contentEncoding\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nHttpEndpointRequestConfigurationProperty httpEndpointRequestConfigurationProperty = HttpEndpointRequestConfigurationProperty.builder()\n        .commonAttributes(List.of(HttpEndpointCommonAttributeProperty.builder()\n                .attributeName(\"attributeName\")\n                .attributeValue(\"attributeValue\")\n                .build()))\n        .contentEncoding(\"contentEncoding\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nhttpEndpointRequestConfigurationProperty := &httpEndpointRequestConfigurationProperty{\n\tcommonAttributes: []interface{}{\n\t\t&httpEndpointCommonAttributeProperty{\n\t\t\tattributeName: jsii.String(\"attributeName\"),\n\t\t\tattributeValue: jsii.String(\"attributeValue\"),\n\t\t},\n\t},\n\tcontentEncoding: jsii.String(\"contentEncoding\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst httpEndpointRequestConfigurationProperty: kinesisfirehose.CfnDeliveryStream.HttpEndpointRequestConfigurationProperty = {\n  commonAttributes: [{\n    attributeName: 'attributeName',\n    attributeValue: 'attributeValue',\n  }],\n  contentEncoding: 'contentEncoding',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.HttpEndpointRequestConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.HttpEndpointRequestConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpEndpointRequestConfigurationProperty: kinesisfirehose.CfnDeliveryStream.HttpEndpointRequestConfigurationProperty = {\n  commonAttributes: [{\n    attributeName: 'attributeName',\n    attributeValue: 'attributeValue',\n  }],\n  contentEncoding: 'contentEncoding',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "787bb2e13f6794bd1a83003268f70f9561dca3bedd7ea5c5aac1751a3212c33f"
    },
    "9b33d9ff15261b0c7fe1e277e6a0ab8dfbdb4ae15aa92e3b4baeaa7cfb3b418f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ninput_format_configuration_property = kinesisfirehose.CfnDeliveryStream.InputFormatConfigurationProperty(\n    deserializer=kinesisfirehose.CfnDeliveryStream.DeserializerProperty(\n        hive_json_ser_de=kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty(\n            timestamp_formats=[\"timestampFormats\"]\n        ),\n        open_xJson_ser_de=kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty(\n            case_insensitive=False,\n            column_to_json_key_mappings={\n                \"column_to_json_key_mappings_key\": \"columnToJsonKeyMappings\"\n            },\n            convert_dots_in_json_keys_to_underscores=False\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nInputFormatConfigurationProperty inputFormatConfigurationProperty = new InputFormatConfigurationProperty {\n    Deserializer = new DeserializerProperty {\n        HiveJsonSerDe = new HiveJsonSerDeProperty {\n            TimestampFormats = new [] { \"timestampFormats\" }\n        },\n        OpenXJsonSerDe = new OpenXJsonSerDeProperty {\n            CaseInsensitive = false,\n            ColumnToJsonKeyMappings = new Dictionary<string, string> {\n                { \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\" }\n            },\n            ConvertDotsInJsonKeysToUnderscores = false\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nInputFormatConfigurationProperty inputFormatConfigurationProperty = InputFormatConfigurationProperty.builder()\n        .deserializer(DeserializerProperty.builder()\n                .hiveJsonSerDe(HiveJsonSerDeProperty.builder()\n                        .timestampFormats(List.of(\"timestampFormats\"))\n                        .build())\n                .openXJsonSerDe(OpenXJsonSerDeProperty.builder()\n                        .caseInsensitive(false)\n                        .columnToJsonKeyMappings(Map.of(\n                                \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\"))\n                        .convertDotsInJsonKeysToUnderscores(false)\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ninputFormatConfigurationProperty := &inputFormatConfigurationProperty{\n\tdeserializer: &deserializerProperty{\n\t\thiveJsonSerDe: &hiveJsonSerDeProperty{\n\t\t\ttimestampFormats: []*string{\n\t\t\t\tjsii.String(\"timestampFormats\"),\n\t\t\t},\n\t\t},\n\t\topenXJsonSerDe: &openXJsonSerDeProperty{\n\t\t\tcaseInsensitive: jsii.Boolean(false),\n\t\t\tcolumnToJsonKeyMappings: map[string]*string{\n\t\t\t\t\"columnToJsonKeyMappingsKey\": jsii.String(\"columnToJsonKeyMappings\"),\n\t\t\t},\n\t\t\tconvertDotsInJsonKeysToUnderscores: jsii.Boolean(false),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst inputFormatConfigurationProperty: kinesisfirehose.CfnDeliveryStream.InputFormatConfigurationProperty = {\n  deserializer: {\n    hiveJsonSerDe: {\n      timestampFormats: ['timestampFormats'],\n    },\n    openXJsonSerDe: {\n      caseInsensitive: false,\n      columnToJsonKeyMappings: {\n        columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n      },\n      convertDotsInJsonKeysToUnderscores: false,\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.InputFormatConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.InputFormatConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputFormatConfigurationProperty: kinesisfirehose.CfnDeliveryStream.InputFormatConfigurationProperty = {\n  deserializer: {\n    hiveJsonSerDe: {\n      timestampFormats: ['timestampFormats'],\n    },\n    openXJsonSerDe: {\n      caseInsensitive: false,\n      columnToJsonKeyMappings: {\n        columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n      },\n      convertDotsInJsonKeysToUnderscores: false,\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 13,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "fddfab743263736a5a72f019c3849cf2c636de63faa38df674b02cfe5bad8ede"
    },
    "316a13d77a59bb9be0eab83fc5dfbb0bbde0f9dce4a99c5d8ec02013d1d47790": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nk_mSEncryption_config_property = kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n    awskms_key_arn=\"awskmsKeyArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nKMSEncryptionConfigProperty kMSEncryptionConfigProperty = new KMSEncryptionConfigProperty {\n    AwskmsKeyArn = \"awskmsKeyArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nKMSEncryptionConfigProperty kMSEncryptionConfigProperty = KMSEncryptionConfigProperty.builder()\n        .awskmsKeyArn(\"awskmsKeyArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nkMSEncryptionConfigProperty := &kMSEncryptionConfigProperty{\n\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst kMSEncryptionConfigProperty: kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty = {\n  awskmsKeyArn: 'awskmsKeyArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kMSEncryptionConfigProperty: kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty = {\n  awskmsKeyArn: 'awskmsKeyArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "5b0420d08b9ab6e513dfcaffcd88acc37dbaf14d9cfa61a8ee251d9d5dfd24bd"
    },
    "a3378bf93a2f958bb1e917f4e4aeb0035231f15cfc542932de00cee504a2de68": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nkinesis_stream_source_configuration_property = kinesisfirehose.CfnDeliveryStream.KinesisStreamSourceConfigurationProperty(\n    kinesis_stream_arn=\"kinesisStreamArn\",\n    role_arn=\"roleArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nKinesisStreamSourceConfigurationProperty kinesisStreamSourceConfigurationProperty = new KinesisStreamSourceConfigurationProperty {\n    KinesisStreamArn = \"kinesisStreamArn\",\n    RoleArn = \"roleArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nKinesisStreamSourceConfigurationProperty kinesisStreamSourceConfigurationProperty = KinesisStreamSourceConfigurationProperty.builder()\n        .kinesisStreamArn(\"kinesisStreamArn\")\n        .roleArn(\"roleArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nkinesisStreamSourceConfigurationProperty := &kinesisStreamSourceConfigurationProperty{\n\tkinesisStreamArn: jsii.String(\"kinesisStreamArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst kinesisStreamSourceConfigurationProperty: kinesisfirehose.CfnDeliveryStream.KinesisStreamSourceConfigurationProperty = {\n  kinesisStreamArn: 'kinesisStreamArn',\n  roleArn: 'roleArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.KinesisStreamSourceConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.KinesisStreamSourceConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst kinesisStreamSourceConfigurationProperty: kinesisfirehose.CfnDeliveryStream.KinesisStreamSourceConfigurationProperty = {\n  kinesisStreamArn: 'kinesisStreamArn',\n  roleArn: 'roleArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "1a4960d0c3df3148bfc1cb37c79a54fb41e1790be763f00c4004f9a8ec6e2068"
    },
    "64638d3eb7ed1a538bbc3eb1057ee223e8247ac512d0c8aae9179db3f1b2b0a8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nopen_xJson_ser_de_property = kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty(\n    case_insensitive=False,\n    column_to_json_key_mappings={\n        \"column_to_json_key_mappings_key\": \"columnToJsonKeyMappings\"\n    },\n    convert_dots_in_json_keys_to_underscores=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nOpenXJsonSerDeProperty openXJsonSerDeProperty = new OpenXJsonSerDeProperty {\n    CaseInsensitive = false,\n    ColumnToJsonKeyMappings = new Dictionary<string, string> {\n        { \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\" }\n    },\n    ConvertDotsInJsonKeysToUnderscores = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nOpenXJsonSerDeProperty openXJsonSerDeProperty = OpenXJsonSerDeProperty.builder()\n        .caseInsensitive(false)\n        .columnToJsonKeyMappings(Map.of(\n                \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\"))\n        .convertDotsInJsonKeysToUnderscores(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nopenXJsonSerDeProperty := &openXJsonSerDeProperty{\n\tcaseInsensitive: jsii.Boolean(false),\n\tcolumnToJsonKeyMappings: map[string]*string{\n\t\t\"columnToJsonKeyMappingsKey\": jsii.String(\"columnToJsonKeyMappings\"),\n\t},\n\tconvertDotsInJsonKeysToUnderscores: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst openXJsonSerDeProperty: kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty = {\n  caseInsensitive: false,\n  columnToJsonKeyMappings: {\n    columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n  },\n  convertDotsInJsonKeysToUnderscores: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst openXJsonSerDeProperty: kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty = {\n  caseInsensitive: false,\n  columnToJsonKeyMappings: {\n    columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n  },\n  convertDotsInJsonKeysToUnderscores: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 9,
        "91": 2,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "959dca240b9eebe0128b06229786e49014133807bb131796fcbddf67272144b9"
    },
    "38893c4e6449f7301ec6645c56163a6ca95fc42f31494563309d753dab0ebb9b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\norc_ser_de_property = kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty(\n    block_size_bytes=123,\n    bloom_filter_columns=[\"bloomFilterColumns\"],\n    bloom_filter_false_positive_probability=123,\n    compression=\"compression\",\n    dictionary_key_threshold=123,\n    enable_padding=False,\n    format_version=\"formatVersion\",\n    padding_tolerance=123,\n    row_index_stride=123,\n    stripe_size_bytes=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nOrcSerDeProperty orcSerDeProperty = new OrcSerDeProperty {\n    BlockSizeBytes = 123,\n    BloomFilterColumns = new [] { \"bloomFilterColumns\" },\n    BloomFilterFalsePositiveProbability = 123,\n    Compression = \"compression\",\n    DictionaryKeyThreshold = 123,\n    EnablePadding = false,\n    FormatVersion = \"formatVersion\",\n    PaddingTolerance = 123,\n    RowIndexStride = 123,\n    StripeSizeBytes = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nOrcSerDeProperty orcSerDeProperty = OrcSerDeProperty.builder()\n        .blockSizeBytes(123)\n        .bloomFilterColumns(List.of(\"bloomFilterColumns\"))\n        .bloomFilterFalsePositiveProbability(123)\n        .compression(\"compression\")\n        .dictionaryKeyThreshold(123)\n        .enablePadding(false)\n        .formatVersion(\"formatVersion\")\n        .paddingTolerance(123)\n        .rowIndexStride(123)\n        .stripeSizeBytes(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\norcSerDeProperty := &orcSerDeProperty{\n\tblockSizeBytes: jsii.Number(123),\n\tbloomFilterColumns: []*string{\n\t\tjsii.String(\"bloomFilterColumns\"),\n\t},\n\tbloomFilterFalsePositiveProbability: jsii.Number(123),\n\tcompression: jsii.String(\"compression\"),\n\tdictionaryKeyThreshold: jsii.Number(123),\n\tenablePadding: jsii.Boolean(false),\n\tformatVersion: jsii.String(\"formatVersion\"),\n\tpaddingTolerance: jsii.Number(123),\n\trowIndexStride: jsii.Number(123),\n\tstripeSizeBytes: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst orcSerDeProperty: kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty = {\n  blockSizeBytes: 123,\n  bloomFilterColumns: ['bloomFilterColumns'],\n  bloomFilterFalsePositiveProbability: 123,\n  compression: 'compression',\n  dictionaryKeyThreshold: 123,\n  enablePadding: false,\n  formatVersion: 'formatVersion',\n  paddingTolerance: 123,\n  rowIndexStride: 123,\n  stripeSizeBytes: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst orcSerDeProperty: kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty = {\n  blockSizeBytes: 123,\n  bloomFilterColumns: ['bloomFilterColumns'],\n  bloomFilterFalsePositiveProbability: 123,\n  compression: 'compression',\n  dictionaryKeyThreshold: 123,\n  enablePadding: false,\n  formatVersion: 'formatVersion',\n  paddingTolerance: 123,\n  rowIndexStride: 123,\n  stripeSizeBytes: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 4,
        "75": 15,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "13a7312747aaaf6d01f5ae1241bef834b4704e3ccd9c80e8bf558e83dccfa5d2"
    },
    "a76efa33aa4de6b7cc28fc9483c2f036fb95ce7b142e87f4c6ffe932065ce1b9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\noutput_format_configuration_property = kinesisfirehose.CfnDeliveryStream.OutputFormatConfigurationProperty(\n    serializer=kinesisfirehose.CfnDeliveryStream.SerializerProperty(\n        orc_ser_de=kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty(\n            block_size_bytes=123,\n            bloom_filter_columns=[\"bloomFilterColumns\"],\n            bloom_filter_false_positive_probability=123,\n            compression=\"compression\",\n            dictionary_key_threshold=123,\n            enable_padding=False,\n            format_version=\"formatVersion\",\n            padding_tolerance=123,\n            row_index_stride=123,\n            stripe_size_bytes=123\n        ),\n        parquet_ser_de=kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty(\n            block_size_bytes=123,\n            compression=\"compression\",\n            enable_dictionary_compression=False,\n            max_padding_bytes=123,\n            page_size_bytes=123,\n            writer_version=\"writerVersion\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nOutputFormatConfigurationProperty outputFormatConfigurationProperty = new OutputFormatConfigurationProperty {\n    Serializer = new SerializerProperty {\n        OrcSerDe = new OrcSerDeProperty {\n            BlockSizeBytes = 123,\n            BloomFilterColumns = new [] { \"bloomFilterColumns\" },\n            BloomFilterFalsePositiveProbability = 123,\n            Compression = \"compression\",\n            DictionaryKeyThreshold = 123,\n            EnablePadding = false,\n            FormatVersion = \"formatVersion\",\n            PaddingTolerance = 123,\n            RowIndexStride = 123,\n            StripeSizeBytes = 123\n        },\n        ParquetSerDe = new ParquetSerDeProperty {\n            BlockSizeBytes = 123,\n            Compression = \"compression\",\n            EnableDictionaryCompression = false,\n            MaxPaddingBytes = 123,\n            PageSizeBytes = 123,\n            WriterVersion = \"writerVersion\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nOutputFormatConfigurationProperty outputFormatConfigurationProperty = OutputFormatConfigurationProperty.builder()\n        .serializer(SerializerProperty.builder()\n                .orcSerDe(OrcSerDeProperty.builder()\n                        .blockSizeBytes(123)\n                        .bloomFilterColumns(List.of(\"bloomFilterColumns\"))\n                        .bloomFilterFalsePositiveProbability(123)\n                        .compression(\"compression\")\n                        .dictionaryKeyThreshold(123)\n                        .enablePadding(false)\n                        .formatVersion(\"formatVersion\")\n                        .paddingTolerance(123)\n                        .rowIndexStride(123)\n                        .stripeSizeBytes(123)\n                        .build())\n                .parquetSerDe(ParquetSerDeProperty.builder()\n                        .blockSizeBytes(123)\n                        .compression(\"compression\")\n                        .enableDictionaryCompression(false)\n                        .maxPaddingBytes(123)\n                        .pageSizeBytes(123)\n                        .writerVersion(\"writerVersion\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\noutputFormatConfigurationProperty := &outputFormatConfigurationProperty{\n\tserializer: &serializerProperty{\n\t\torcSerDe: &orcSerDeProperty{\n\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\tbloomFilterColumns: []*string{\n\t\t\t\tjsii.String(\"bloomFilterColumns\"),\n\t\t\t},\n\t\t\tbloomFilterFalsePositiveProbability: jsii.Number(123),\n\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\tdictionaryKeyThreshold: jsii.Number(123),\n\t\t\tenablePadding: jsii.Boolean(false),\n\t\t\tformatVersion: jsii.String(\"formatVersion\"),\n\t\t\tpaddingTolerance: jsii.Number(123),\n\t\t\trowIndexStride: jsii.Number(123),\n\t\t\tstripeSizeBytes: jsii.Number(123),\n\t\t},\n\t\tparquetSerDe: &parquetSerDeProperty{\n\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\tenableDictionaryCompression: jsii.Boolean(false),\n\t\t\tmaxPaddingBytes: jsii.Number(123),\n\t\t\tpageSizeBytes: jsii.Number(123),\n\t\t\twriterVersion: jsii.String(\"writerVersion\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst outputFormatConfigurationProperty: kinesisfirehose.CfnDeliveryStream.OutputFormatConfigurationProperty = {\n  serializer: {\n    orcSerDe: {\n      blockSizeBytes: 123,\n      bloomFilterColumns: ['bloomFilterColumns'],\n      bloomFilterFalsePositiveProbability: 123,\n      compression: 'compression',\n      dictionaryKeyThreshold: 123,\n      enablePadding: false,\n      formatVersion: 'formatVersion',\n      paddingTolerance: 123,\n      rowIndexStride: 123,\n      stripeSizeBytes: 123,\n    },\n    parquetSerDe: {\n      blockSizeBytes: 123,\n      compression: 'compression',\n      enableDictionaryCompression: false,\n      maxPaddingBytes: 123,\n      pageSizeBytes: 123,\n      writerVersion: 'writerVersion',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.OutputFormatConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.OutputFormatConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst outputFormatConfigurationProperty: kinesisfirehose.CfnDeliveryStream.OutputFormatConfigurationProperty = {\n  serializer: {\n    orcSerDe: {\n      blockSizeBytes: 123,\n      bloomFilterColumns: ['bloomFilterColumns'],\n      bloomFilterFalsePositiveProbability: 123,\n      compression: 'compression',\n      dictionaryKeyThreshold: 123,\n      enablePadding: false,\n      formatVersion: 'formatVersion',\n      paddingTolerance: 123,\n      rowIndexStride: 123,\n      stripeSizeBytes: 123,\n    },\n    parquetSerDe: {\n      blockSizeBytes: 123,\n      compression: 'compression',\n      enableDictionaryCompression: false,\n      maxPaddingBytes: 123,\n      pageSizeBytes: 123,\n      writerVersion: 'writerVersion',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 9,
        "10": 6,
        "75": 24,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 19,
        "290": 1
      },
      "fqnsFingerprint": "23be221f3444bf976108ab0f1c371fc69e2eaf29092894aac8be3276e9e99455"
    },
    "d583d5381b580c20d1c0e4a6efc558762c0069345c0e07d78bb04c985da0e0c2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nparquet_ser_de_property = kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty(\n    block_size_bytes=123,\n    compression=\"compression\",\n    enable_dictionary_compression=False,\n    max_padding_bytes=123,\n    page_size_bytes=123,\n    writer_version=\"writerVersion\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nParquetSerDeProperty parquetSerDeProperty = new ParquetSerDeProperty {\n    BlockSizeBytes = 123,\n    Compression = \"compression\",\n    EnableDictionaryCompression = false,\n    MaxPaddingBytes = 123,\n    PageSizeBytes = 123,\n    WriterVersion = \"writerVersion\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nParquetSerDeProperty parquetSerDeProperty = ParquetSerDeProperty.builder()\n        .blockSizeBytes(123)\n        .compression(\"compression\")\n        .enableDictionaryCompression(false)\n        .maxPaddingBytes(123)\n        .pageSizeBytes(123)\n        .writerVersion(\"writerVersion\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nparquetSerDeProperty := &parquetSerDeProperty{\n\tblockSizeBytes: jsii.Number(123),\n\tcompression: jsii.String(\"compression\"),\n\tenableDictionaryCompression: jsii.Boolean(false),\n\tmaxPaddingBytes: jsii.Number(123),\n\tpageSizeBytes: jsii.Number(123),\n\twriterVersion: jsii.String(\"writerVersion\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst parquetSerDeProperty: kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty = {\n  blockSizeBytes: 123,\n  compression: 'compression',\n  enableDictionaryCompression: false,\n  maxPaddingBytes: 123,\n  pageSizeBytes: 123,\n  writerVersion: 'writerVersion',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst parquetSerDeProperty: kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty = {\n  blockSizeBytes: 123,\n  compression: 'compression',\n  enableDictionaryCompression: false,\n  maxPaddingBytes: 123,\n  pageSizeBytes: 123,\n  writerVersion: 'writerVersion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 3,
        "75": 11,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "f09891d449678aa04c3502a3acc17e87697c603c294041cf4c6b9273696d593c"
    },
    "b35fe77ab11ad8d129f2a9e8e074994458dd89da5fe76c598a4d10ffe797a348": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nprocessing_configuration_property = kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n    enabled=False,\n    processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n        type=\"type\",\n\n        # the properties below are optional\n        parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n            parameter_name=\"parameterName\",\n            parameter_value=\"parameterValue\"\n        )]\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nProcessingConfigurationProperty processingConfigurationProperty = new ProcessingConfigurationProperty {\n    Enabled = false,\n    Processors = new [] { new ProcessorProperty {\n        Type = \"type\",\n\n        // the properties below are optional\n        Parameters = new [] { new ProcessorParameterProperty {\n            ParameterName = \"parameterName\",\n            ParameterValue = \"parameterValue\"\n        } }\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nProcessingConfigurationProperty processingConfigurationProperty = ProcessingConfigurationProperty.builder()\n        .enabled(false)\n        .processors(List.of(ProcessorProperty.builder()\n                .type(\"type\")\n\n                // the properties below are optional\n                .parameters(List.of(ProcessorParameterProperty.builder()\n                        .parameterName(\"parameterName\")\n                        .parameterValue(\"parameterValue\")\n                        .build()))\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nprocessingConfigurationProperty := &processingConfigurationProperty{\n\tenabled: jsii.Boolean(false),\n\tprocessors: []interface{}{\n\t\t&processorProperty{\n\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t// the properties below are optional\n\t\t\tparameters: []interface{}{\n\t\t\t\t&processorParameterProperty{\n\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst processingConfigurationProperty: kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty = {\n  enabled: false,\n  processors: [{\n    type: 'type',\n\n    // the properties below are optional\n    parameters: [{\n      parameterName: 'parameterName',\n      parameterValue: 'parameterValue',\n    }],\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst processingConfigurationProperty: kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty = {\n  enabled: false,\n  processors: [{\n    type: 'type',\n\n    // the properties below are optional\n    parameters: [{\n      parameterName: 'parameterName',\n      parameterValue: 'parameterValue',\n    }],\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 11,
        "91": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "d48dfc52d2da72a97d7b747370dd5f7f08ec30e9013bf164a1a5339c57890d43"
    },
    "44af8338a717d54de444e7e0b75cbf82056d5f4f186d9ffd640d7ea1b690e220": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nprocessor_parameter_property = kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n    parameter_name=\"parameterName\",\n    parameter_value=\"parameterValue\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nProcessorParameterProperty processorParameterProperty = new ProcessorParameterProperty {\n    ParameterName = \"parameterName\",\n    ParameterValue = \"parameterValue\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nProcessorParameterProperty processorParameterProperty = ProcessorParameterProperty.builder()\n        .parameterName(\"parameterName\")\n        .parameterValue(\"parameterValue\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nprocessorParameterProperty := &processorParameterProperty{\n\tparameterName: jsii.String(\"parameterName\"),\n\tparameterValue: jsii.String(\"parameterValue\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst processorParameterProperty: kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty = {\n  parameterName: 'parameterName',\n  parameterValue: 'parameterValue',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst processorParameterProperty: kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty = {\n  parameterName: 'parameterName',\n  parameterValue: 'parameterValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "377ca3aaa24ede7495bd03515b6b68a38356847623ef32d1b12b71cd8a705263"
    },
    "6a2a398efbcc2e4b5eca7cc761275276559736aefc9f637ae8de356b41cceb8d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nprocessor_property = kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n    type=\"type\",\n\n    # the properties below are optional\n    parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n        parameter_name=\"parameterName\",\n        parameter_value=\"parameterValue\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nProcessorProperty processorProperty = new ProcessorProperty {\n    Type = \"type\",\n\n    // the properties below are optional\n    Parameters = new [] { new ProcessorParameterProperty {\n        ParameterName = \"parameterName\",\n        ParameterValue = \"parameterValue\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nProcessorProperty processorProperty = ProcessorProperty.builder()\n        .type(\"type\")\n\n        // the properties below are optional\n        .parameters(List.of(ProcessorParameterProperty.builder()\n                .parameterName(\"parameterName\")\n                .parameterValue(\"parameterValue\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nprocessorProperty := &processorProperty{\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tparameters: []interface{}{\n\t\t&processorParameterProperty{\n\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst processorProperty: kinesisfirehose.CfnDeliveryStream.ProcessorProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  parameters: [{\n    parameterName: 'parameterName',\n    parameterValue: 'parameterValue',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ProcessorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ProcessorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst processorProperty: kinesisfirehose.CfnDeliveryStream.ProcessorProperty = {\n  type: 'type',\n\n  // the properties below are optional\n  parameters: [{\n    parameterName: 'parameterName',\n    parameterValue: 'parameterValue',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "087cd943cad3dabda66b2655b39844b1cfd7c15c528b8a06bddfd33b698c03f1"
    },
    "544eb17780e7e180b018641d92c28e921340d55a3c37210c13108c4912487448": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nredshift_destination_configuration_property = kinesisfirehose.CfnDeliveryStream.RedshiftDestinationConfigurationProperty(\n    cluster_jdbcurl=\"clusterJdbcurl\",\n    copy_command=kinesisfirehose.CfnDeliveryStream.CopyCommandProperty(\n        data_table_name=\"dataTableName\",\n\n        # the properties below are optional\n        copy_options=\"copyOptions\",\n        data_table_columns=\"dataTableColumns\"\n    ),\n    password=\"password\",\n    role_arn=\"roleArn\",\n    s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\"\n    ),\n    username=\"username\",\n\n    # the properties below are optional\n    cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n        enabled=False,\n        log_group_name=\"logGroupName\",\n        log_stream_name=\"logStreamName\"\n    ),\n    processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n        enabled=False,\n        processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                parameter_name=\"parameterName\",\n                parameter_value=\"parameterValue\"\n            )]\n        )]\n    ),\n    retry_options=kinesisfirehose.CfnDeliveryStream.RedshiftRetryOptionsProperty(\n        duration_in_seconds=123\n    ),\n    s3_backup_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\"\n    ),\n    s3_backup_mode=\"s3BackupMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nRedshiftDestinationConfigurationProperty redshiftDestinationConfigurationProperty = new RedshiftDestinationConfigurationProperty {\n    ClusterJdbcurl = \"clusterJdbcurl\",\n    CopyCommand = new CopyCommandProperty {\n        DataTableName = \"dataTableName\",\n\n        // the properties below are optional\n        CopyOptions = \"copyOptions\",\n        DataTableColumns = \"dataTableColumns\"\n    },\n    Password = \"password\",\n    RoleArn = \"roleArn\",\n    S3Configuration = new S3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\"\n    },\n    Username = \"username\",\n\n    // the properties below are optional\n    CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n        Enabled = false,\n        LogGroupName = \"logGroupName\",\n        LogStreamName = \"logStreamName\"\n    },\n    ProcessingConfiguration = new ProcessingConfigurationProperty {\n        Enabled = false,\n        Processors = new [] { new ProcessorProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            Parameters = new [] { new ProcessorParameterProperty {\n                ParameterName = \"parameterName\",\n                ParameterValue = \"parameterValue\"\n            } }\n        } }\n    },\n    RetryOptions = new RedshiftRetryOptionsProperty {\n        DurationInSeconds = 123\n    },\n    S3BackupConfiguration = new S3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\"\n    },\n    S3BackupMode = \"s3BackupMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nRedshiftDestinationConfigurationProperty redshiftDestinationConfigurationProperty = RedshiftDestinationConfigurationProperty.builder()\n        .clusterJdbcurl(\"clusterJdbcurl\")\n        .copyCommand(CopyCommandProperty.builder()\n                .dataTableName(\"dataTableName\")\n\n                // the properties below are optional\n                .copyOptions(\"copyOptions\")\n                .dataTableColumns(\"dataTableColumns\")\n                .build())\n        .password(\"password\")\n        .roleArn(\"roleArn\")\n        .s3Configuration(S3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .build())\n        .username(\"username\")\n\n        // the properties below are optional\n        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                .enabled(false)\n                .logGroupName(\"logGroupName\")\n                .logStreamName(\"logStreamName\")\n                .build())\n        .processingConfiguration(ProcessingConfigurationProperty.builder()\n                .enabled(false)\n                .processors(List.of(ProcessorProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .parameters(List.of(ProcessorParameterProperty.builder()\n                                .parameterName(\"parameterName\")\n                                .parameterValue(\"parameterValue\")\n                                .build()))\n                        .build()))\n                .build())\n        .retryOptions(RedshiftRetryOptionsProperty.builder()\n                .durationInSeconds(123)\n                .build())\n        .s3BackupConfiguration(S3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .build())\n        .s3BackupMode(\"s3BackupMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nredshiftDestinationConfigurationProperty := &redshiftDestinationConfigurationProperty{\n\tclusterJdbcurl: jsii.String(\"clusterJdbcurl\"),\n\tcopyCommand: &copyCommandProperty{\n\t\tdataTableName: jsii.String(\"dataTableName\"),\n\n\t\t// the properties below are optional\n\t\tcopyOptions: jsii.String(\"copyOptions\"),\n\t\tdataTableColumns: jsii.String(\"dataTableColumns\"),\n\t},\n\tpassword: jsii.String(\"password\"),\n\troleArn: jsii.String(\"roleArn\"),\n\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\tusername: jsii.String(\"username\"),\n\n\t// the properties below are optional\n\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t},\n\tprocessingConfiguration: &processingConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tprocessors: []interface{}{\n\t\t\t&processorProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tretryOptions: &redshiftRetryOptionsProperty{\n\t\tdurationInSeconds: jsii.Number(123),\n\t},\n\ts3BackupConfiguration: &s3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst redshiftDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.RedshiftDestinationConfigurationProperty = {\n  clusterJdbcurl: 'clusterJdbcurl',\n  copyCommand: {\n    dataTableName: 'dataTableName',\n\n    // the properties below are optional\n    copyOptions: 'copyOptions',\n    dataTableColumns: 'dataTableColumns',\n  },\n  password: 'password',\n  roleArn: 'roleArn',\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n  username: 'username',\n\n  // the properties below are optional\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  s3BackupConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n  s3BackupMode: 's3BackupMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.RedshiftDestinationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.RedshiftDestinationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst redshiftDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.RedshiftDestinationConfigurationProperty = {\n  clusterJdbcurl: 'clusterJdbcurl',\n  copyCommand: {\n    dataTableName: 'dataTableName',\n\n    // the properties below are optional\n    copyOptions: 'copyOptions',\n    dataTableColumns: 'dataTableColumns',\n  },\n  password: 'password',\n  roleArn: 'roleArn',\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n  username: 'username',\n\n  // the properties below are optional\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  s3BackupConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n  s3BackupMode: 's3BackupMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 5,
        "10": 32,
        "75": 61,
        "91": 4,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 17,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 56,
        "290": 1
      },
      "fqnsFingerprint": "52285bed82ea09b8b0e71a0e5f297d3acb5248972c86e20b174b4dc2f9ce4c5c"
    },
    "5b911b0f820162803099508cc98a12bcf23fca90aa4ae9b559d109a58a74b806": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nredshift_retry_options_property = kinesisfirehose.CfnDeliveryStream.RedshiftRetryOptionsProperty(\n    duration_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nRedshiftRetryOptionsProperty redshiftRetryOptionsProperty = new RedshiftRetryOptionsProperty {\n    DurationInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nRedshiftRetryOptionsProperty redshiftRetryOptionsProperty = RedshiftRetryOptionsProperty.builder()\n        .durationInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nredshiftRetryOptionsProperty := &redshiftRetryOptionsProperty{\n\tdurationInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst redshiftRetryOptionsProperty: kinesisfirehose.CfnDeliveryStream.RedshiftRetryOptionsProperty = {\n  durationInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.RedshiftRetryOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.RedshiftRetryOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst redshiftRetryOptionsProperty: kinesisfirehose.CfnDeliveryStream.RedshiftRetryOptionsProperty = {\n  durationInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "dcf5e9db7c16874b86c66e09646f4890fb26c0047bff86d57ee3b59477e8f1b1"
    },
    "08e53e2c9138737a4097519c9da95852250bf0694c65d01a6687728049038354": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nretry_options_property = kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty(\n    duration_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nRetryOptionsProperty retryOptionsProperty = new RetryOptionsProperty {\n    DurationInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nRetryOptionsProperty retryOptionsProperty = RetryOptionsProperty.builder()\n        .durationInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nretryOptionsProperty := &retryOptionsProperty{\n\tdurationInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst retryOptionsProperty: kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty = {\n  durationInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst retryOptionsProperty: kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty = {\n  durationInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "ce2baeab3d9641fa538f5557a76a0f26909b9c9d4708472db4724787db5ca769"
    },
    "61bcdfe229cd5b8e5d7f026e8744b5d28f53158c81360d0df4163def7edbaf91": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ns3_destination_configuration_property = kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n    bucket_arn=\"bucketArn\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n        interval_in_seconds=123,\n        size_in_mBs=123\n    ),\n    cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n        enabled=False,\n        log_group_name=\"logGroupName\",\n        log_stream_name=\"logStreamName\"\n    ),\n    compression_format=\"compressionFormat\",\n    encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n        kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n            awskms_key_arn=\"awskmsKeyArn\"\n        ),\n        no_encryption_config=\"noEncryptionConfig\"\n    ),\n    error_output_prefix=\"errorOutputPrefix\",\n    prefix=\"prefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nS3DestinationConfigurationProperty s3DestinationConfigurationProperty = new S3DestinationConfigurationProperty {\n    BucketArn = \"bucketArn\",\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    BufferingHints = new BufferingHintsProperty {\n        IntervalInSeconds = 123,\n        SizeInMBs = 123\n    },\n    CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n        Enabled = false,\n        LogGroupName = \"logGroupName\",\n        LogStreamName = \"logStreamName\"\n    },\n    CompressionFormat = \"compressionFormat\",\n    EncryptionConfiguration = new EncryptionConfigurationProperty {\n        KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n            AwskmsKeyArn = \"awskmsKeyArn\"\n        },\n        NoEncryptionConfig = \"noEncryptionConfig\"\n    },\n    ErrorOutputPrefix = \"errorOutputPrefix\",\n    Prefix = \"prefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nS3DestinationConfigurationProperty s3DestinationConfigurationProperty = S3DestinationConfigurationProperty.builder()\n        .bucketArn(\"bucketArn\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .bufferingHints(BufferingHintsProperty.builder()\n                .intervalInSeconds(123)\n                .sizeInMBs(123)\n                .build())\n        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                .enabled(false)\n                .logGroupName(\"logGroupName\")\n                .logStreamName(\"logStreamName\")\n                .build())\n        .compressionFormat(\"compressionFormat\")\n        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                        .awskmsKeyArn(\"awskmsKeyArn\")\n                        .build())\n                .noEncryptionConfig(\"noEncryptionConfig\")\n                .build())\n        .errorOutputPrefix(\"errorOutputPrefix\")\n        .prefix(\"prefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ns3DestinationConfigurationProperty := &s3DestinationConfigurationProperty{\n\tbucketArn: jsii.String(\"bucketArn\"),\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\tbufferingHints: &bufferingHintsProperty{\n\t\tintervalInSeconds: jsii.Number(123),\n\t\tsizeInMBs: jsii.Number(123),\n\t},\n\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t},\n\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t},\n\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t},\n\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\tprefix: jsii.String(\"prefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst s3DestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty = {\n  bucketArn: 'bucketArn',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  compressionFormat: 'compressionFormat',\n  encryptionConfiguration: {\n    kmsEncryptionConfig: {\n      awskmsKeyArn: 'awskmsKeyArn',\n    },\n    noEncryptionConfig: 'noEncryptionConfig',\n  },\n  errorOutputPrefix: 'errorOutputPrefix',\n  prefix: 'prefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3DestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty = {\n  bucketArn: 'bucketArn',\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  bufferingHints: {\n    intervalInSeconds: 123,\n    sizeInMBs: 123,\n  },\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  compressionFormat: 'compressionFormat',\n  encryptionConfiguration: {\n    kmsEncryptionConfig: {\n      awskmsKeyArn: 'awskmsKeyArn',\n    },\n    noEncryptionConfig: 'noEncryptionConfig',\n  },\n  errorOutputPrefix: 'errorOutputPrefix',\n  prefix: 'prefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 10,
        "75": 21,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 16,
        "290": 1
      },
      "fqnsFingerprint": "82243919ebe6507d8d812b2f769cd8aa3b6ccafbabe5ccbda0b7eec237a2fcb3"
    },
    "35f16b77cb4bc8294eae0a164913220cae1e07d70a3468fe4bdbd082bbaf0628": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nschema_configuration_property = kinesisfirehose.CfnDeliveryStream.SchemaConfigurationProperty(\n    catalog_id=\"catalogId\",\n    database_name=\"databaseName\",\n    region=\"region\",\n    role_arn=\"roleArn\",\n    table_name=\"tableName\",\n    version_id=\"versionId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nSchemaConfigurationProperty schemaConfigurationProperty = new SchemaConfigurationProperty {\n    CatalogId = \"catalogId\",\n    DatabaseName = \"databaseName\",\n    Region = \"region\",\n    RoleArn = \"roleArn\",\n    TableName = \"tableName\",\n    VersionId = \"versionId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nSchemaConfigurationProperty schemaConfigurationProperty = SchemaConfigurationProperty.builder()\n        .catalogId(\"catalogId\")\n        .databaseName(\"databaseName\")\n        .region(\"region\")\n        .roleArn(\"roleArn\")\n        .tableName(\"tableName\")\n        .versionId(\"versionId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nschemaConfigurationProperty := &schemaConfigurationProperty{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\tregion: jsii.String(\"region\"),\n\troleArn: jsii.String(\"roleArn\"),\n\ttableName: jsii.String(\"tableName\"),\n\tversionId: jsii.String(\"versionId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst schemaConfigurationProperty: kinesisfirehose.CfnDeliveryStream.SchemaConfigurationProperty = {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  region: 'region',\n  roleArn: 'roleArn',\n  tableName: 'tableName',\n  versionId: 'versionId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.SchemaConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.SchemaConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst schemaConfigurationProperty: kinesisfirehose.CfnDeliveryStream.SchemaConfigurationProperty = {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  region: 'region',\n  roleArn: 'roleArn',\n  tableName: 'tableName',\n  versionId: 'versionId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "574a6e89952d586e54937eb89ca4ca64ee08df5260a467ce24dae3bd67cf4aad"
    },
    "23262fe730cad557ba18a01ce4ea4b3969ceaf16558c692821b053dda0dbbb15": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nserializer_property = kinesisfirehose.CfnDeliveryStream.SerializerProperty(\n    orc_ser_de=kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty(\n        block_size_bytes=123,\n        bloom_filter_columns=[\"bloomFilterColumns\"],\n        bloom_filter_false_positive_probability=123,\n        compression=\"compression\",\n        dictionary_key_threshold=123,\n        enable_padding=False,\n        format_version=\"formatVersion\",\n        padding_tolerance=123,\n        row_index_stride=123,\n        stripe_size_bytes=123\n    ),\n    parquet_ser_de=kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty(\n        block_size_bytes=123,\n        compression=\"compression\",\n        enable_dictionary_compression=False,\n        max_padding_bytes=123,\n        page_size_bytes=123,\n        writer_version=\"writerVersion\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nSerializerProperty serializerProperty = new SerializerProperty {\n    OrcSerDe = new OrcSerDeProperty {\n        BlockSizeBytes = 123,\n        BloomFilterColumns = new [] { \"bloomFilterColumns\" },\n        BloomFilterFalsePositiveProbability = 123,\n        Compression = \"compression\",\n        DictionaryKeyThreshold = 123,\n        EnablePadding = false,\n        FormatVersion = \"formatVersion\",\n        PaddingTolerance = 123,\n        RowIndexStride = 123,\n        StripeSizeBytes = 123\n    },\n    ParquetSerDe = new ParquetSerDeProperty {\n        BlockSizeBytes = 123,\n        Compression = \"compression\",\n        EnableDictionaryCompression = false,\n        MaxPaddingBytes = 123,\n        PageSizeBytes = 123,\n        WriterVersion = \"writerVersion\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nSerializerProperty serializerProperty = SerializerProperty.builder()\n        .orcSerDe(OrcSerDeProperty.builder()\n                .blockSizeBytes(123)\n                .bloomFilterColumns(List.of(\"bloomFilterColumns\"))\n                .bloomFilterFalsePositiveProbability(123)\n                .compression(\"compression\")\n                .dictionaryKeyThreshold(123)\n                .enablePadding(false)\n                .formatVersion(\"formatVersion\")\n                .paddingTolerance(123)\n                .rowIndexStride(123)\n                .stripeSizeBytes(123)\n                .build())\n        .parquetSerDe(ParquetSerDeProperty.builder()\n                .blockSizeBytes(123)\n                .compression(\"compression\")\n                .enableDictionaryCompression(false)\n                .maxPaddingBytes(123)\n                .pageSizeBytes(123)\n                .writerVersion(\"writerVersion\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nserializerProperty := &serializerProperty{\n\torcSerDe: &orcSerDeProperty{\n\t\tblockSizeBytes: jsii.Number(123),\n\t\tbloomFilterColumns: []*string{\n\t\t\tjsii.String(\"bloomFilterColumns\"),\n\t\t},\n\t\tbloomFilterFalsePositiveProbability: jsii.Number(123),\n\t\tcompression: jsii.String(\"compression\"),\n\t\tdictionaryKeyThreshold: jsii.Number(123),\n\t\tenablePadding: jsii.Boolean(false),\n\t\tformatVersion: jsii.String(\"formatVersion\"),\n\t\tpaddingTolerance: jsii.Number(123),\n\t\trowIndexStride: jsii.Number(123),\n\t\tstripeSizeBytes: jsii.Number(123),\n\t},\n\tparquetSerDe: &parquetSerDeProperty{\n\t\tblockSizeBytes: jsii.Number(123),\n\t\tcompression: jsii.String(\"compression\"),\n\t\tenableDictionaryCompression: jsii.Boolean(false),\n\t\tmaxPaddingBytes: jsii.Number(123),\n\t\tpageSizeBytes: jsii.Number(123),\n\t\twriterVersion: jsii.String(\"writerVersion\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst serializerProperty: kinesisfirehose.CfnDeliveryStream.SerializerProperty = {\n  orcSerDe: {\n    blockSizeBytes: 123,\n    bloomFilterColumns: ['bloomFilterColumns'],\n    bloomFilterFalsePositiveProbability: 123,\n    compression: 'compression',\n    dictionaryKeyThreshold: 123,\n    enablePadding: false,\n    formatVersion: 'formatVersion',\n    paddingTolerance: 123,\n    rowIndexStride: 123,\n    stripeSizeBytes: 123,\n  },\n  parquetSerDe: {\n    blockSizeBytes: 123,\n    compression: 'compression',\n    enableDictionaryCompression: false,\n    maxPaddingBytes: 123,\n    pageSizeBytes: 123,\n    writerVersion: 'writerVersion',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.SerializerProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.SerializerProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst serializerProperty: kinesisfirehose.CfnDeliveryStream.SerializerProperty = {\n  orcSerDe: {\n    blockSizeBytes: 123,\n    bloomFilterColumns: ['bloomFilterColumns'],\n    bloomFilterFalsePositiveProbability: 123,\n    compression: 'compression',\n    dictionaryKeyThreshold: 123,\n    enablePadding: false,\n    formatVersion: 'formatVersion',\n    paddingTolerance: 123,\n    rowIndexStride: 123,\n    stripeSizeBytes: 123,\n  },\n  parquetSerDe: {\n    blockSizeBytes: 123,\n    compression: 'compression',\n    enableDictionaryCompression: false,\n    maxPaddingBytes: 123,\n    pageSizeBytes: 123,\n    writerVersion: 'writerVersion',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 9,
        "10": 6,
        "75": 23,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "85d2845b80bde910196179a4a157e9fb373e424755ee9d9bf2fa3783c3a44d82"
    },
    "daf16035fd604df008361652bbab7389fad5799042f9ed40d20c7fe4abfafeca": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nsplunk_destination_configuration_property = kinesisfirehose.CfnDeliveryStream.SplunkDestinationConfigurationProperty(\n    hec_endpoint=\"hecEndpoint\",\n    hec_endpoint_type=\"hecEndpointType\",\n    hec_token=\"hecToken\",\n    s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\"\n    ),\n\n    # the properties below are optional\n    cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n        enabled=False,\n        log_group_name=\"logGroupName\",\n        log_stream_name=\"logStreamName\"\n    ),\n    hec_acknowledgment_timeout_in_seconds=123,\n    processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n        enabled=False,\n        processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n            type=\"type\",\n\n            # the properties below are optional\n            parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                parameter_name=\"parameterName\",\n                parameter_value=\"parameterValue\"\n            )]\n        )]\n    ),\n    retry_options=kinesisfirehose.CfnDeliveryStream.SplunkRetryOptionsProperty(\n        duration_in_seconds=123\n    ),\n    s3_backup_mode=\"s3BackupMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nSplunkDestinationConfigurationProperty splunkDestinationConfigurationProperty = new SplunkDestinationConfigurationProperty {\n    HecEndpoint = \"hecEndpoint\",\n    HecEndpointType = \"hecEndpointType\",\n    HecToken = \"hecToken\",\n    S3Configuration = new S3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\"\n    },\n\n    // the properties below are optional\n    CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n        Enabled = false,\n        LogGroupName = \"logGroupName\",\n        LogStreamName = \"logStreamName\"\n    },\n    HecAcknowledgmentTimeoutInSeconds = 123,\n    ProcessingConfiguration = new ProcessingConfigurationProperty {\n        Enabled = false,\n        Processors = new [] { new ProcessorProperty {\n            Type = \"type\",\n\n            // the properties below are optional\n            Parameters = new [] { new ProcessorParameterProperty {\n                ParameterName = \"parameterName\",\n                ParameterValue = \"parameterValue\"\n            } }\n        } }\n    },\n    RetryOptions = new SplunkRetryOptionsProperty {\n        DurationInSeconds = 123\n    },\n    S3BackupMode = \"s3BackupMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nSplunkDestinationConfigurationProperty splunkDestinationConfigurationProperty = SplunkDestinationConfigurationProperty.builder()\n        .hecEndpoint(\"hecEndpoint\")\n        .hecEndpointType(\"hecEndpointType\")\n        .hecToken(\"hecToken\")\n        .s3Configuration(S3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .build())\n\n        // the properties below are optional\n        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                .enabled(false)\n                .logGroupName(\"logGroupName\")\n                .logStreamName(\"logStreamName\")\n                .build())\n        .hecAcknowledgmentTimeoutInSeconds(123)\n        .processingConfiguration(ProcessingConfigurationProperty.builder()\n                .enabled(false)\n                .processors(List.of(ProcessorProperty.builder()\n                        .type(\"type\")\n\n                        // the properties below are optional\n                        .parameters(List.of(ProcessorParameterProperty.builder()\n                                .parameterName(\"parameterName\")\n                                .parameterValue(\"parameterValue\")\n                                .build()))\n                        .build()))\n                .build())\n        .retryOptions(SplunkRetryOptionsProperty.builder()\n                .durationInSeconds(123)\n                .build())\n        .s3BackupMode(\"s3BackupMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nsplunkDestinationConfigurationProperty := &splunkDestinationConfigurationProperty{\n\thecEndpoint: jsii.String(\"hecEndpoint\"),\n\thecEndpointType: jsii.String(\"hecEndpointType\"),\n\thecToken: jsii.String(\"hecToken\"),\n\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\n\t// the properties below are optional\n\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t},\n\thecAcknowledgmentTimeoutInSeconds: jsii.Number(123),\n\tprocessingConfiguration: &processingConfigurationProperty{\n\t\tenabled: jsii.Boolean(false),\n\t\tprocessors: []interface{}{\n\t\t\t&processorProperty{\n\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tretryOptions: &splunkRetryOptionsProperty{\n\t\tdurationInSeconds: jsii.Number(123),\n\t},\n\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst splunkDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.SplunkDestinationConfigurationProperty = {\n  hecEndpoint: 'hecEndpoint',\n  hecEndpointType: 'hecEndpointType',\n  hecToken: 'hecToken',\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  hecAcknowledgmentTimeoutInSeconds: 123,\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  s3BackupMode: 's3BackupMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.SplunkDestinationConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.SplunkDestinationConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst splunkDestinationConfigurationProperty: kinesisfirehose.CfnDeliveryStream.SplunkDestinationConfigurationProperty = {\n  hecEndpoint: 'hecEndpoint',\n  hecEndpointType: 'hecEndpointType',\n  hecToken: 'hecToken',\n  s3Configuration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n\n  // the properties below are optional\n  cloudWatchLoggingOptions: {\n    enabled: false,\n    logGroupName: 'logGroupName',\n    logStreamName: 'logStreamName',\n  },\n  hecAcknowledgmentTimeoutInSeconds: 123,\n  processingConfiguration: {\n    enabled: false,\n    processors: [{\n      type: 'type',\n\n      // the properties below are optional\n      parameters: [{\n        parameterName: 'parameterName',\n        parameterValue: 'parameterValue',\n      }],\n    }],\n  },\n  retryOptions: {\n    durationInSeconds: 123,\n  },\n  s3BackupMode: 's3BackupMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 19,
        "75": 40,
        "91": 3,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 11,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 35,
        "290": 1
      },
      "fqnsFingerprint": "a706ca8a7adaebe470ac83dcbfa3a3dc51a683d3d6903a5dac68eff4bd2d8cbb"
    },
    "f50c134373d21723ae3ecdbdbefadbfb4a85f8ee95e018d90fca9d9505defffa": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nsplunk_retry_options_property = kinesisfirehose.CfnDeliveryStream.SplunkRetryOptionsProperty(\n    duration_in_seconds=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nSplunkRetryOptionsProperty splunkRetryOptionsProperty = new SplunkRetryOptionsProperty {\n    DurationInSeconds = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nSplunkRetryOptionsProperty splunkRetryOptionsProperty = SplunkRetryOptionsProperty.builder()\n        .durationInSeconds(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nsplunkRetryOptionsProperty := &splunkRetryOptionsProperty{\n\tdurationInSeconds: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst splunkRetryOptionsProperty: kinesisfirehose.CfnDeliveryStream.SplunkRetryOptionsProperty = {\n  durationInSeconds: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.SplunkRetryOptionsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.SplunkRetryOptionsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst splunkRetryOptionsProperty: kinesisfirehose.CfnDeliveryStream.SplunkRetryOptionsProperty = {\n  durationInSeconds: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "825998acc685d8d7dd6356d1b256cd742f033a074b2defa98d3ac19ae301bcf5"
    },
    "5d56c5577c5ca4c57b73b2f560713a5bb12bb40d9b2e4475027d948b79621bc5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\nvpc_configuration_property = kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty(\n    role_arn=\"roleArn\",\n    security_group_ids=[\"securityGroupIds\"],\n    subnet_ids=[\"subnetIds\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nVpcConfigurationProperty vpcConfigurationProperty = new VpcConfigurationProperty {\n    RoleArn = \"roleArn\",\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    SubnetIds = new [] { \"subnetIds\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nVpcConfigurationProperty vpcConfigurationProperty = VpcConfigurationProperty.builder()\n        .roleArn(\"roleArn\")\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnetIds(List.of(\"subnetIds\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nvpcConfigurationProperty := &vpcConfigurationProperty{\n\troleArn: jsii.String(\"roleArn\"),\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst vpcConfigurationProperty: kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty = {\n  roleArn: 'roleArn',\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst vpcConfigurationProperty: kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty = {\n  roleArn: 'roleArn',\n  securityGroupIds: ['securityGroupIds'],\n  subnetIds: ['subnetIds'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "4ea843ab71f940e750829f6e05a72d19bdeee2332137a2a34d08ebcfedc1916a"
    },
    "ff9ed62139cca34dad58cac1a60de7f2e461e18c83c0dca9c002c23c670e16c9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ncfn_delivery_stream_props = kinesisfirehose.CfnDeliveryStreamProps(\n    amazon_open_search_serverless_destination_configuration=kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessDestinationConfigurationProperty(\n        index_name=\"indexName\",\n        role_arn=\"roleArn\",\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessBufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        collection_endpoint=\"collectionEndpoint\",\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.AmazonOpenSearchServerlessRetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        s3_backup_mode=\"s3BackupMode\",\n        vpc_configuration=kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty(\n            role_arn=\"roleArn\",\n            security_group_ids=[\"securityGroupIds\"],\n            subnet_ids=[\"subnetIds\"]\n        )\n    ),\n    amazonopensearchservice_destination_configuration=kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceDestinationConfigurationProperty(\n        index_name=\"indexName\",\n        role_arn=\"roleArn\",\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceBufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        cluster_endpoint=\"clusterEndpoint\",\n        domain_arn=\"domainArn\",\n        index_rotation_period=\"indexRotationPeriod\",\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.AmazonopensearchserviceRetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        s3_backup_mode=\"s3BackupMode\",\n        type_name=\"typeName\",\n        vpc_configuration=kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty(\n            role_arn=\"roleArn\",\n            security_group_ids=[\"securityGroupIds\"],\n            subnet_ids=[\"subnetIds\"]\n        )\n    ),\n    delivery_stream_encryption_configuration_input=kinesisfirehose.CfnDeliveryStream.DeliveryStreamEncryptionConfigurationInputProperty(\n        key_type=\"keyType\",\n\n        # the properties below are optional\n        key_arn=\"keyArn\"\n    ),\n    delivery_stream_name=\"deliveryStreamName\",\n    delivery_stream_type=\"deliveryStreamType\",\n    elasticsearch_destination_configuration=kinesisfirehose.CfnDeliveryStream.ElasticsearchDestinationConfigurationProperty(\n        index_name=\"indexName\",\n        role_arn=\"roleArn\",\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.ElasticsearchBufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        cluster_endpoint=\"clusterEndpoint\",\n        domain_arn=\"domainArn\",\n        index_rotation_period=\"indexRotationPeriod\",\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.ElasticsearchRetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        s3_backup_mode=\"s3BackupMode\",\n        type_name=\"typeName\",\n        vpc_configuration=kinesisfirehose.CfnDeliveryStream.VpcConfigurationProperty(\n            role_arn=\"roleArn\",\n            security_group_ids=[\"securityGroupIds\"],\n            subnet_ids=[\"subnetIds\"]\n        )\n    ),\n    extended_s3_destination_configuration=kinesisfirehose.CfnDeliveryStream.ExtendedS3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        data_format_conversion_configuration=kinesisfirehose.CfnDeliveryStream.DataFormatConversionConfigurationProperty(\n            enabled=False,\n            input_format_configuration=kinesisfirehose.CfnDeliveryStream.InputFormatConfigurationProperty(\n                deserializer=kinesisfirehose.CfnDeliveryStream.DeserializerProperty(\n                    hive_json_ser_de=kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty(\n                        timestamp_formats=[\"timestampFormats\"]\n                    ),\n                    open_xJson_ser_de=kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty(\n                        case_insensitive=False,\n                        column_to_json_key_mappings={\n                            \"column_to_json_key_mappings_key\": \"columnToJsonKeyMappings\"\n                        },\n                        convert_dots_in_json_keys_to_underscores=False\n                    )\n                )\n            ),\n            output_format_configuration=kinesisfirehose.CfnDeliveryStream.OutputFormatConfigurationProperty(\n                serializer=kinesisfirehose.CfnDeliveryStream.SerializerProperty(\n                    orc_ser_de=kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty(\n                        block_size_bytes=123,\n                        bloom_filter_columns=[\"bloomFilterColumns\"],\n                        bloom_filter_false_positive_probability=123,\n                        compression=\"compression\",\n                        dictionary_key_threshold=123,\n                        enable_padding=False,\n                        format_version=\"formatVersion\",\n                        padding_tolerance=123,\n                        row_index_stride=123,\n                        stripe_size_bytes=123\n                    ),\n                    parquet_ser_de=kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty(\n                        block_size_bytes=123,\n                        compression=\"compression\",\n                        enable_dictionary_compression=False,\n                        max_padding_bytes=123,\n                        page_size_bytes=123,\n                        writer_version=\"writerVersion\"\n                    )\n                )\n            ),\n            schema_configuration=kinesisfirehose.CfnDeliveryStream.SchemaConfigurationProperty(\n                catalog_id=\"catalogId\",\n                database_name=\"databaseName\",\n                region=\"region\",\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n                version_id=\"versionId\"\n            )\n        ),\n        dynamic_partitioning_configuration=kinesisfirehose.CfnDeliveryStream.DynamicPartitioningConfigurationProperty(\n            enabled=False,\n            retry_options=kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty(\n                duration_in_seconds=123\n            )\n        ),\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\",\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        s3_backup_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n        s3_backup_mode=\"s3BackupMode\"\n    ),\n    http_endpoint_destination_configuration=kinesisfirehose.CfnDeliveryStream.HttpEndpointDestinationConfigurationProperty(\n        endpoint_configuration=kinesisfirehose.CfnDeliveryStream.HttpEndpointConfigurationProperty(\n            url=\"url\",\n\n            # the properties below are optional\n            access_key=\"accessKey\",\n            name=\"name\"\n        ),\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        request_configuration=kinesisfirehose.CfnDeliveryStream.HttpEndpointRequestConfigurationProperty(\n            common_attributes=[kinesisfirehose.CfnDeliveryStream.HttpEndpointCommonAttributeProperty(\n                attribute_name=\"attributeName\",\n                attribute_value=\"attributeValue\"\n            )],\n            content_encoding=\"contentEncoding\"\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        role_arn=\"roleArn\",\n        s3_backup_mode=\"s3BackupMode\"\n    ),\n    kinesis_stream_source_configuration=kinesisfirehose.CfnDeliveryStream.KinesisStreamSourceConfigurationProperty(\n        kinesis_stream_arn=\"kinesisStreamArn\",\n        role_arn=\"roleArn\"\n    ),\n    redshift_destination_configuration=kinesisfirehose.CfnDeliveryStream.RedshiftDestinationConfigurationProperty(\n        cluster_jdbcurl=\"clusterJdbcurl\",\n        copy_command=kinesisfirehose.CfnDeliveryStream.CopyCommandProperty(\n            data_table_name=\"dataTableName\",\n\n            # the properties below are optional\n            copy_options=\"copyOptions\",\n            data_table_columns=\"dataTableColumns\"\n        ),\n        password=\"password\",\n        role_arn=\"roleArn\",\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n        username=\"username\",\n\n        # the properties below are optional\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.RedshiftRetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        s3_backup_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n        s3_backup_mode=\"s3BackupMode\"\n    ),\n    s3_destination_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\"\n    ),\n    splunk_destination_configuration=kinesisfirehose.CfnDeliveryStream.SplunkDestinationConfigurationProperty(\n        hec_endpoint=\"hecEndpoint\",\n        hec_endpoint_type=\"hecEndpointType\",\n        hec_token=\"hecToken\",\n        s3_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n\n        # the properties below are optional\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        hec_acknowledgment_timeout_in_seconds=123,\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        retry_options=kinesisfirehose.CfnDeliveryStream.SplunkRetryOptionsProperty(\n            duration_in_seconds=123\n        ),\n        s3_backup_mode=\"s3BackupMode\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nCfnDeliveryStreamProps cfnDeliveryStreamProps = new CfnDeliveryStreamProps {\n    AmazonOpenSearchServerlessDestinationConfiguration = new AmazonOpenSearchServerlessDestinationConfigurationProperty {\n        IndexName = \"indexName\",\n        RoleArn = \"roleArn\",\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n\n        // the properties below are optional\n        BufferingHints = new AmazonOpenSearchServerlessBufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CollectionEndpoint = \"collectionEndpoint\",\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RetryOptions = new AmazonOpenSearchServerlessRetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        S3BackupMode = \"s3BackupMode\",\n        VpcConfiguration = new VpcConfigurationProperty {\n            RoleArn = \"roleArn\",\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            SubnetIds = new [] { \"subnetIds\" }\n        }\n    },\n    AmazonopensearchserviceDestinationConfiguration = new AmazonopensearchserviceDestinationConfigurationProperty {\n        IndexName = \"indexName\",\n        RoleArn = \"roleArn\",\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n\n        // the properties below are optional\n        BufferingHints = new AmazonopensearchserviceBufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        ClusterEndpoint = \"clusterEndpoint\",\n        DomainArn = \"domainArn\",\n        IndexRotationPeriod = \"indexRotationPeriod\",\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RetryOptions = new AmazonopensearchserviceRetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        S3BackupMode = \"s3BackupMode\",\n        TypeName = \"typeName\",\n        VpcConfiguration = new VpcConfigurationProperty {\n            RoleArn = \"roleArn\",\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            SubnetIds = new [] { \"subnetIds\" }\n        }\n    },\n    DeliveryStreamEncryptionConfigurationInput = new DeliveryStreamEncryptionConfigurationInputProperty {\n        KeyType = \"keyType\",\n\n        // the properties below are optional\n        KeyArn = \"keyArn\"\n    },\n    DeliveryStreamName = \"deliveryStreamName\",\n    DeliveryStreamType = \"deliveryStreamType\",\n    ElasticsearchDestinationConfiguration = new ElasticsearchDestinationConfigurationProperty {\n        IndexName = \"indexName\",\n        RoleArn = \"roleArn\",\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n\n        // the properties below are optional\n        BufferingHints = new ElasticsearchBufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        ClusterEndpoint = \"clusterEndpoint\",\n        DomainArn = \"domainArn\",\n        IndexRotationPeriod = \"indexRotationPeriod\",\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RetryOptions = new ElasticsearchRetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        S3BackupMode = \"s3BackupMode\",\n        TypeName = \"typeName\",\n        VpcConfiguration = new VpcConfigurationProperty {\n            RoleArn = \"roleArn\",\n            SecurityGroupIds = new [] { \"securityGroupIds\" },\n            SubnetIds = new [] { \"subnetIds\" }\n        }\n    },\n    ExtendedS3DestinationConfiguration = new ExtendedS3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        DataFormatConversionConfiguration = new DataFormatConversionConfigurationProperty {\n            Enabled = false,\n            InputFormatConfiguration = new InputFormatConfigurationProperty {\n                Deserializer = new DeserializerProperty {\n                    HiveJsonSerDe = new HiveJsonSerDeProperty {\n                        TimestampFormats = new [] { \"timestampFormats\" }\n                    },\n                    OpenXJsonSerDe = new OpenXJsonSerDeProperty {\n                        CaseInsensitive = false,\n                        ColumnToJsonKeyMappings = new Dictionary<string, string> {\n                            { \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\" }\n                        },\n                        ConvertDotsInJsonKeysToUnderscores = false\n                    }\n                }\n            },\n            OutputFormatConfiguration = new OutputFormatConfigurationProperty {\n                Serializer = new SerializerProperty {\n                    OrcSerDe = new OrcSerDeProperty {\n                        BlockSizeBytes = 123,\n                        BloomFilterColumns = new [] { \"bloomFilterColumns\" },\n                        BloomFilterFalsePositiveProbability = 123,\n                        Compression = \"compression\",\n                        DictionaryKeyThreshold = 123,\n                        EnablePadding = false,\n                        FormatVersion = \"formatVersion\",\n                        PaddingTolerance = 123,\n                        RowIndexStride = 123,\n                        StripeSizeBytes = 123\n                    },\n                    ParquetSerDe = new ParquetSerDeProperty {\n                        BlockSizeBytes = 123,\n                        Compression = \"compression\",\n                        EnableDictionaryCompression = false,\n                        MaxPaddingBytes = 123,\n                        PageSizeBytes = 123,\n                        WriterVersion = \"writerVersion\"\n                    }\n                }\n            },\n            SchemaConfiguration = new SchemaConfigurationProperty {\n                CatalogId = \"catalogId\",\n                DatabaseName = \"databaseName\",\n                Region = \"region\",\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n                VersionId = \"versionId\"\n            }\n        },\n        DynamicPartitioningConfiguration = new DynamicPartitioningConfigurationProperty {\n            Enabled = false,\n            RetryOptions = new RetryOptionsProperty {\n                DurationInSeconds = 123\n            }\n        },\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\",\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        S3BackupConfiguration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n        S3BackupMode = \"s3BackupMode\"\n    },\n    HttpEndpointDestinationConfiguration = new HttpEndpointDestinationConfigurationProperty {\n        EndpointConfiguration = new HttpEndpointConfigurationProperty {\n            Url = \"url\",\n\n            // the properties below are optional\n            AccessKey = \"accessKey\",\n            Name = \"name\"\n        },\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RequestConfiguration = new HttpEndpointRequestConfigurationProperty {\n            CommonAttributes = new [] { new HttpEndpointCommonAttributeProperty {\n                AttributeName = \"attributeName\",\n                AttributeValue = \"attributeValue\"\n            } },\n            ContentEncoding = \"contentEncoding\"\n        },\n        RetryOptions = new RetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        RoleArn = \"roleArn\",\n        S3BackupMode = \"s3BackupMode\"\n    },\n    KinesisStreamSourceConfiguration = new KinesisStreamSourceConfigurationProperty {\n        KinesisStreamArn = \"kinesisStreamArn\",\n        RoleArn = \"roleArn\"\n    },\n    RedshiftDestinationConfiguration = new RedshiftDestinationConfigurationProperty {\n        ClusterJdbcurl = \"clusterJdbcurl\",\n        CopyCommand = new CopyCommandProperty {\n            DataTableName = \"dataTableName\",\n\n            // the properties below are optional\n            CopyOptions = \"copyOptions\",\n            DataTableColumns = \"dataTableColumns\"\n        },\n        Password = \"password\",\n        RoleArn = \"roleArn\",\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n        Username = \"username\",\n\n        // the properties below are optional\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RetryOptions = new RedshiftRetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        S3BackupConfiguration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n        S3BackupMode = \"s3BackupMode\"\n    },\n    S3DestinationConfiguration = new S3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\"\n    },\n    SplunkDestinationConfiguration = new SplunkDestinationConfigurationProperty {\n        HecEndpoint = \"hecEndpoint\",\n        HecEndpointType = \"hecEndpointType\",\n        HecToken = \"hecToken\",\n        S3Configuration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n\n        // the properties below are optional\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        HecAcknowledgmentTimeoutInSeconds = 123,\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        RetryOptions = new SplunkRetryOptionsProperty {\n            DurationInSeconds = 123\n        },\n        S3BackupMode = \"s3BackupMode\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nCfnDeliveryStreamProps cfnDeliveryStreamProps = CfnDeliveryStreamProps.builder()\n        .amazonOpenSearchServerlessDestinationConfiguration(AmazonOpenSearchServerlessDestinationConfigurationProperty.builder()\n                .indexName(\"indexName\")\n                .roleArn(\"roleArn\")\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n\n                // the properties below are optional\n                .bufferingHints(AmazonOpenSearchServerlessBufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .collectionEndpoint(\"collectionEndpoint\")\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .retryOptions(AmazonOpenSearchServerlessRetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .vpcConfiguration(VpcConfigurationProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnetIds(List.of(\"subnetIds\"))\n                        .build())\n                .build())\n        .amazonopensearchserviceDestinationConfiguration(AmazonopensearchserviceDestinationConfigurationProperty.builder()\n                .indexName(\"indexName\")\n                .roleArn(\"roleArn\")\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n\n                // the properties below are optional\n                .bufferingHints(AmazonopensearchserviceBufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .clusterEndpoint(\"clusterEndpoint\")\n                .domainArn(\"domainArn\")\n                .indexRotationPeriod(\"indexRotationPeriod\")\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .retryOptions(AmazonopensearchserviceRetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .typeName(\"typeName\")\n                .vpcConfiguration(VpcConfigurationProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnetIds(List.of(\"subnetIds\"))\n                        .build())\n                .build())\n        .deliveryStreamEncryptionConfigurationInput(DeliveryStreamEncryptionConfigurationInputProperty.builder()\n                .keyType(\"keyType\")\n\n                // the properties below are optional\n                .keyArn(\"keyArn\")\n                .build())\n        .deliveryStreamName(\"deliveryStreamName\")\n        .deliveryStreamType(\"deliveryStreamType\")\n        .elasticsearchDestinationConfiguration(ElasticsearchDestinationConfigurationProperty.builder()\n                .indexName(\"indexName\")\n                .roleArn(\"roleArn\")\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n\n                // the properties below are optional\n                .bufferingHints(ElasticsearchBufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .clusterEndpoint(\"clusterEndpoint\")\n                .domainArn(\"domainArn\")\n                .indexRotationPeriod(\"indexRotationPeriod\")\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .retryOptions(ElasticsearchRetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .typeName(\"typeName\")\n                .vpcConfiguration(VpcConfigurationProperty.builder()\n                        .roleArn(\"roleArn\")\n                        .securityGroupIds(List.of(\"securityGroupIds\"))\n                        .subnetIds(List.of(\"subnetIds\"))\n                        .build())\n                .build())\n        .extendedS3DestinationConfiguration(ExtendedS3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .dataFormatConversionConfiguration(DataFormatConversionConfigurationProperty.builder()\n                        .enabled(false)\n                        .inputFormatConfiguration(InputFormatConfigurationProperty.builder()\n                                .deserializer(DeserializerProperty.builder()\n                                        .hiveJsonSerDe(HiveJsonSerDeProperty.builder()\n                                                .timestampFormats(List.of(\"timestampFormats\"))\n                                                .build())\n                                        .openXJsonSerDe(OpenXJsonSerDeProperty.builder()\n                                                .caseInsensitive(false)\n                                                .columnToJsonKeyMappings(Map.of(\n                                                        \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\"))\n                                                .convertDotsInJsonKeysToUnderscores(false)\n                                                .build())\n                                        .build())\n                                .build())\n                        .outputFormatConfiguration(OutputFormatConfigurationProperty.builder()\n                                .serializer(SerializerProperty.builder()\n                                        .orcSerDe(OrcSerDeProperty.builder()\n                                                .blockSizeBytes(123)\n                                                .bloomFilterColumns(List.of(\"bloomFilterColumns\"))\n                                                .bloomFilterFalsePositiveProbability(123)\n                                                .compression(\"compression\")\n                                                .dictionaryKeyThreshold(123)\n                                                .enablePadding(false)\n                                                .formatVersion(\"formatVersion\")\n                                                .paddingTolerance(123)\n                                                .rowIndexStride(123)\n                                                .stripeSizeBytes(123)\n                                                .build())\n                                        .parquetSerDe(ParquetSerDeProperty.builder()\n                                                .blockSizeBytes(123)\n                                                .compression(\"compression\")\n                                                .enableDictionaryCompression(false)\n                                                .maxPaddingBytes(123)\n                                                .pageSizeBytes(123)\n                                                .writerVersion(\"writerVersion\")\n                                                .build())\n                                        .build())\n                                .build())\n                        .schemaConfiguration(SchemaConfigurationProperty.builder()\n                                .catalogId(\"catalogId\")\n                                .databaseName(\"databaseName\")\n                                .region(\"region\")\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n                                .versionId(\"versionId\")\n                                .build())\n                        .build())\n                .dynamicPartitioningConfiguration(DynamicPartitioningConfigurationProperty.builder()\n                        .enabled(false)\n                        .retryOptions(RetryOptionsProperty.builder()\n                                .durationInSeconds(123)\n                                .build())\n                        .build())\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .s3BackupConfiguration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .build())\n        .httpEndpointDestinationConfiguration(HttpEndpointDestinationConfigurationProperty.builder()\n                .endpointConfiguration(HttpEndpointConfigurationProperty.builder()\n                        .url(\"url\")\n\n                        // the properties below are optional\n                        .accessKey(\"accessKey\")\n                        .name(\"name\")\n                        .build())\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .requestConfiguration(HttpEndpointRequestConfigurationProperty.builder()\n                        .commonAttributes(List.of(HttpEndpointCommonAttributeProperty.builder()\n                                .attributeName(\"attributeName\")\n                                .attributeValue(\"attributeValue\")\n                                .build()))\n                        .contentEncoding(\"contentEncoding\")\n                        .build())\n                .retryOptions(RetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .roleArn(\"roleArn\")\n                .s3BackupMode(\"s3BackupMode\")\n                .build())\n        .kinesisStreamSourceConfiguration(KinesisStreamSourceConfigurationProperty.builder()\n                .kinesisStreamArn(\"kinesisStreamArn\")\n                .roleArn(\"roleArn\")\n                .build())\n        .redshiftDestinationConfiguration(RedshiftDestinationConfigurationProperty.builder()\n                .clusterJdbcurl(\"clusterJdbcurl\")\n                .copyCommand(CopyCommandProperty.builder()\n                        .dataTableName(\"dataTableName\")\n\n                        // the properties below are optional\n                        .copyOptions(\"copyOptions\")\n                        .dataTableColumns(\"dataTableColumns\")\n                        .build())\n                .password(\"password\")\n                .roleArn(\"roleArn\")\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n                .username(\"username\")\n\n                // the properties below are optional\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .retryOptions(RedshiftRetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .s3BackupConfiguration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .build())\n        .s3DestinationConfiguration(S3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .build())\n        .splunkDestinationConfiguration(SplunkDestinationConfigurationProperty.builder()\n                .hecEndpoint(\"hecEndpoint\")\n                .hecEndpointType(\"hecEndpointType\")\n                .hecToken(\"hecToken\")\n                .s3Configuration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n\n                // the properties below are optional\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .hecAcknowledgmentTimeoutInSeconds(123)\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .retryOptions(SplunkRetryOptionsProperty.builder()\n                        .durationInSeconds(123)\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ncfnDeliveryStreamProps := &cfnDeliveryStreamProps{\n\tamazonOpenSearchServerlessDestinationConfiguration: &amazonOpenSearchServerlessDestinationConfigurationProperty{\n\t\tindexName: jsii.String(\"indexName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &amazonOpenSearchServerlessBufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcollectionEndpoint: jsii.String(\"collectionEndpoint\"),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tretryOptions: &amazonOpenSearchServerlessRetryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t\tvpcConfiguration: &vpcConfigurationProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnetIds: []*string{\n\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t},\n\t\t},\n\t},\n\tamazonopensearchserviceDestinationConfiguration: &amazonopensearchserviceDestinationConfigurationProperty{\n\t\tindexName: jsii.String(\"indexName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &amazonopensearchserviceBufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tclusterEndpoint: jsii.String(\"clusterEndpoint\"),\n\t\tdomainArn: jsii.String(\"domainArn\"),\n\t\tindexRotationPeriod: jsii.String(\"indexRotationPeriod\"),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tretryOptions: &amazonopensearchserviceRetryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t\ttypeName: jsii.String(\"typeName\"),\n\t\tvpcConfiguration: &vpcConfigurationProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnetIds: []*string{\n\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t},\n\t\t},\n\t},\n\tdeliveryStreamEncryptionConfigurationInput: &deliveryStreamEncryptionConfigurationInputProperty{\n\t\tkeyType: jsii.String(\"keyType\"),\n\n\t\t// the properties below are optional\n\t\tkeyArn: jsii.String(\"keyArn\"),\n\t},\n\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\tdeliveryStreamType: jsii.String(\"deliveryStreamType\"),\n\telasticsearchDestinationConfiguration: &elasticsearchDestinationConfigurationProperty{\n\t\tindexName: jsii.String(\"indexName\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &elasticsearchBufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tclusterEndpoint: jsii.String(\"clusterEndpoint\"),\n\t\tdomainArn: jsii.String(\"domainArn\"),\n\t\tindexRotationPeriod: jsii.String(\"indexRotationPeriod\"),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tretryOptions: &elasticsearchRetryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t\ttypeName: jsii.String(\"typeName\"),\n\t\tvpcConfiguration: &vpcConfigurationProperty{\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\tsecurityGroupIds: []*string{\n\t\t\t\tjsii.String(\"securityGroupIds\"),\n\t\t\t},\n\t\t\tsubnetIds: []*string{\n\t\t\t\tjsii.String(\"subnetIds\"),\n\t\t\t},\n\t\t},\n\t},\n\textendedS3DestinationConfiguration: &extendedS3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tdataFormatConversionConfiguration: &dataFormatConversionConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tinputFormatConfiguration: &inputFormatConfigurationProperty{\n\t\t\t\tdeserializer: &deserializerProperty{\n\t\t\t\t\thiveJsonSerDe: &hiveJsonSerDeProperty{\n\t\t\t\t\t\ttimestampFormats: []*string{\n\t\t\t\t\t\t\tjsii.String(\"timestampFormats\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\topenXJsonSerDe: &openXJsonSerDeProperty{\n\t\t\t\t\t\tcaseInsensitive: jsii.Boolean(false),\n\t\t\t\t\t\tcolumnToJsonKeyMappings: map[string]*string{\n\t\t\t\t\t\t\t\"columnToJsonKeyMappingsKey\": jsii.String(\"columnToJsonKeyMappings\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tconvertDotsInJsonKeysToUnderscores: jsii.Boolean(false),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\toutputFormatConfiguration: &outputFormatConfigurationProperty{\n\t\t\t\tserializer: &serializerProperty{\n\t\t\t\t\torcSerDe: &orcSerDeProperty{\n\t\t\t\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\t\t\t\tbloomFilterColumns: []*string{\n\t\t\t\t\t\t\tjsii.String(\"bloomFilterColumns\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbloomFilterFalsePositiveProbability: jsii.Number(123),\n\t\t\t\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\t\t\t\tdictionaryKeyThreshold: jsii.Number(123),\n\t\t\t\t\t\tenablePadding: jsii.Boolean(false),\n\t\t\t\t\t\tformatVersion: jsii.String(\"formatVersion\"),\n\t\t\t\t\t\tpaddingTolerance: jsii.Number(123),\n\t\t\t\t\t\trowIndexStride: jsii.Number(123),\n\t\t\t\t\t\tstripeSizeBytes: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tparquetSerDe: &parquetSerDeProperty{\n\t\t\t\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\t\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\t\t\t\tenableDictionaryCompression: jsii.Boolean(false),\n\t\t\t\t\t\tmaxPaddingBytes: jsii.Number(123),\n\t\t\t\t\t\tpageSizeBytes: jsii.Number(123),\n\t\t\t\t\t\twriterVersion: jsii.String(\"writerVersion\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tschemaConfiguration: &schemaConfigurationProperty{\n\t\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\tregion: jsii.String(\"region\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\t\tversionId: jsii.String(\"versionId\"),\n\t\t\t},\n\t\t},\n\t\tdynamicPartitioningConfiguration: &dynamicPartitioningConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tretryOptions: &retryOptionsProperty{\n\t\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\ts3BackupConfiguration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t},\n\thttpEndpointDestinationConfiguration: &httpEndpointDestinationConfigurationProperty{\n\t\tendpointConfiguration: &httpEndpointConfigurationProperty{\n\t\t\turl: jsii.String(\"url\"),\n\n\t\t\t// the properties below are optional\n\t\t\taccessKey: jsii.String(\"accessKey\"),\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\trequestConfiguration: &httpEndpointRequestConfigurationProperty{\n\t\t\tcommonAttributes: []interface{}{\n\t\t\t\t&httpEndpointCommonAttributeProperty{\n\t\t\t\t\tattributeName: jsii.String(\"attributeName\"),\n\t\t\t\t\tattributeValue: jsii.String(\"attributeValue\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontentEncoding: jsii.String(\"contentEncoding\"),\n\t\t},\n\t\tretryOptions: &retryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t},\n\tkinesisStreamSourceConfiguration: &kinesisStreamSourceConfigurationProperty{\n\t\tkinesisStreamArn: jsii.String(\"kinesisStreamArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t},\n\tredshiftDestinationConfiguration: &redshiftDestinationConfigurationProperty{\n\t\tclusterJdbcurl: jsii.String(\"clusterJdbcurl\"),\n\t\tcopyCommand: &copyCommandProperty{\n\t\t\tdataTableName: jsii.String(\"dataTableName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcopyOptions: jsii.String(\"copyOptions\"),\n\t\t\tdataTableColumns: jsii.String(\"dataTableColumns\"),\n\t\t},\n\t\tpassword: jsii.String(\"password\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\t\tusername: jsii.String(\"username\"),\n\n\t\t// the properties below are optional\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tretryOptions: &redshiftRetryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\ts3BackupConfiguration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t},\n\ts3DestinationConfiguration: &s3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t},\n\tsplunkDestinationConfiguration: &splunkDestinationConfigurationProperty{\n\t\thecEndpoint: jsii.String(\"hecEndpoint\"),\n\t\thecEndpointType: jsii.String(\"hecEndpointType\"),\n\t\thecToken: jsii.String(\"hecToken\"),\n\t\ts3Configuration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\thecAcknowledgmentTimeoutInSeconds: jsii.Number(123),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tretryOptions: &splunkRetryOptionsProperty{\n\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst cfnDeliveryStreamProps: kinesisfirehose.CfnDeliveryStreamProps = {\n  amazonOpenSearchServerlessDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    collectionEndpoint: 'collectionEndpoint',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  amazonopensearchserviceDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    clusterEndpoint: 'clusterEndpoint',\n    domainArn: 'domainArn',\n    indexRotationPeriod: 'indexRotationPeriod',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    typeName: 'typeName',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  deliveryStreamEncryptionConfigurationInput: {\n    keyType: 'keyType',\n\n    // the properties below are optional\n    keyArn: 'keyArn',\n  },\n  deliveryStreamName: 'deliveryStreamName',\n  deliveryStreamType: 'deliveryStreamType',\n  elasticsearchDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    clusterEndpoint: 'clusterEndpoint',\n    domainArn: 'domainArn',\n    indexRotationPeriod: 'indexRotationPeriod',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    typeName: 'typeName',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  extendedS3DestinationConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    dataFormatConversionConfiguration: {\n      enabled: false,\n      inputFormatConfiguration: {\n        deserializer: {\n          hiveJsonSerDe: {\n            timestampFormats: ['timestampFormats'],\n          },\n          openXJsonSerDe: {\n            caseInsensitive: false,\n            columnToJsonKeyMappings: {\n              columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n            },\n            convertDotsInJsonKeysToUnderscores: false,\n          },\n        },\n      },\n      outputFormatConfiguration: {\n        serializer: {\n          orcSerDe: {\n            blockSizeBytes: 123,\n            bloomFilterColumns: ['bloomFilterColumns'],\n            bloomFilterFalsePositiveProbability: 123,\n            compression: 'compression',\n            dictionaryKeyThreshold: 123,\n            enablePadding: false,\n            formatVersion: 'formatVersion',\n            paddingTolerance: 123,\n            rowIndexStride: 123,\n            stripeSizeBytes: 123,\n          },\n          parquetSerDe: {\n            blockSizeBytes: 123,\n            compression: 'compression',\n            enableDictionaryCompression: false,\n            maxPaddingBytes: 123,\n            pageSizeBytes: 123,\n            writerVersion: 'writerVersion',\n          },\n        },\n      },\n      schemaConfiguration: {\n        catalogId: 'catalogId',\n        databaseName: 'databaseName',\n        region: 'region',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n        versionId: 'versionId',\n      },\n    },\n    dynamicPartitioningConfiguration: {\n      enabled: false,\n      retryOptions: {\n        durationInSeconds: 123,\n      },\n    },\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    s3BackupConfiguration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  httpEndpointDestinationConfiguration: {\n    endpointConfiguration: {\n      url: 'url',\n\n      // the properties below are optional\n      accessKey: 'accessKey',\n      name: 'name',\n    },\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    requestConfiguration: {\n      commonAttributes: [{\n        attributeName: 'attributeName',\n        attributeValue: 'attributeValue',\n      }],\n      contentEncoding: 'contentEncoding',\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    roleArn: 'roleArn',\n    s3BackupMode: 's3BackupMode',\n  },\n  kinesisStreamSourceConfiguration: {\n    kinesisStreamArn: 'kinesisStreamArn',\n    roleArn: 'roleArn',\n  },\n  redshiftDestinationConfiguration: {\n    clusterJdbcurl: 'clusterJdbcurl',\n    copyCommand: {\n      dataTableName: 'dataTableName',\n\n      // the properties below are optional\n      copyOptions: 'copyOptions',\n      dataTableColumns: 'dataTableColumns',\n    },\n    password: 'password',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    username: 'username',\n\n    // the properties below are optional\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupConfiguration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  s3DestinationConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n  splunkDestinationConfiguration: {\n    hecEndpoint: 'hecEndpoint',\n    hecEndpointType: 'hecEndpointType',\n    hecToken: 'hecToken',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    hecAcknowledgmentTimeoutInSeconds: 123,\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStreamProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStreamProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDeliveryStreamProps: kinesisfirehose.CfnDeliveryStreamProps = {\n  amazonOpenSearchServerlessDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    collectionEndpoint: 'collectionEndpoint',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  amazonopensearchserviceDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    clusterEndpoint: 'clusterEndpoint',\n    domainArn: 'domainArn',\n    indexRotationPeriod: 'indexRotationPeriod',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    typeName: 'typeName',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  deliveryStreamEncryptionConfigurationInput: {\n    keyType: 'keyType',\n\n    // the properties below are optional\n    keyArn: 'keyArn',\n  },\n  deliveryStreamName: 'deliveryStreamName',\n  deliveryStreamType: 'deliveryStreamType',\n  elasticsearchDestinationConfiguration: {\n    indexName: 'indexName',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    clusterEndpoint: 'clusterEndpoint',\n    domainArn: 'domainArn',\n    indexRotationPeriod: 'indexRotationPeriod',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n    typeName: 'typeName',\n    vpcConfiguration: {\n      roleArn: 'roleArn',\n      securityGroupIds: ['securityGroupIds'],\n      subnetIds: ['subnetIds'],\n    },\n  },\n  extendedS3DestinationConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    dataFormatConversionConfiguration: {\n      enabled: false,\n      inputFormatConfiguration: {\n        deserializer: {\n          hiveJsonSerDe: {\n            timestampFormats: ['timestampFormats'],\n          },\n          openXJsonSerDe: {\n            caseInsensitive: false,\n            columnToJsonKeyMappings: {\n              columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n            },\n            convertDotsInJsonKeysToUnderscores: false,\n          },\n        },\n      },\n      outputFormatConfiguration: {\n        serializer: {\n          orcSerDe: {\n            blockSizeBytes: 123,\n            bloomFilterColumns: ['bloomFilterColumns'],\n            bloomFilterFalsePositiveProbability: 123,\n            compression: 'compression',\n            dictionaryKeyThreshold: 123,\n            enablePadding: false,\n            formatVersion: 'formatVersion',\n            paddingTolerance: 123,\n            rowIndexStride: 123,\n            stripeSizeBytes: 123,\n          },\n          parquetSerDe: {\n            blockSizeBytes: 123,\n            compression: 'compression',\n            enableDictionaryCompression: false,\n            maxPaddingBytes: 123,\n            pageSizeBytes: 123,\n            writerVersion: 'writerVersion',\n          },\n        },\n      },\n      schemaConfiguration: {\n        catalogId: 'catalogId',\n        databaseName: 'databaseName',\n        region: 'region',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n        versionId: 'versionId',\n      },\n    },\n    dynamicPartitioningConfiguration: {\n      enabled: false,\n      retryOptions: {\n        durationInSeconds: 123,\n      },\n    },\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    s3BackupConfiguration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  httpEndpointDestinationConfiguration: {\n    endpointConfiguration: {\n      url: 'url',\n\n      // the properties below are optional\n      accessKey: 'accessKey',\n      name: 'name',\n    },\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    requestConfiguration: {\n      commonAttributes: [{\n        attributeName: 'attributeName',\n        attributeValue: 'attributeValue',\n      }],\n      contentEncoding: 'contentEncoding',\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    roleArn: 'roleArn',\n    s3BackupMode: 's3BackupMode',\n  },\n  kinesisStreamSourceConfiguration: {\n    kinesisStreamArn: 'kinesisStreamArn',\n    roleArn: 'roleArn',\n  },\n  redshiftDestinationConfiguration: {\n    clusterJdbcurl: 'clusterJdbcurl',\n    copyCommand: {\n      dataTableName: 'dataTableName',\n\n      // the properties below are optional\n      copyOptions: 'copyOptions',\n      dataTableColumns: 'dataTableColumns',\n    },\n    password: 'password',\n    roleArn: 'roleArn',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    username: 'username',\n\n    // the properties below are optional\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupConfiguration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  s3DestinationConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n  },\n  splunkDestinationConfiguration: {\n    hecEndpoint: 'hecEndpoint',\n    hecEndpointType: 'hecEndpointType',\n    hecToken: 'hecToken',\n    s3Configuration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n\n    // the properties below are optional\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    hecAcknowledgmentTimeoutInSeconds: 123,\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    retryOptions: {\n      durationInSeconds: 123,\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 45,
        "10": 193,
        "75": 386,
        "91": 29,
        "153": 1,
        "169": 1,
        "192": 24,
        "193": 117,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 382,
        "290": 1
      },
      "fqnsFingerprint": "d4910608fcfb5bd2fbed45b6b9d92a6447b3940d6402e0c6235f2111c2fbd6d0"
    },
    "73104d5d811dffee19ae80dd05316f921880bd3f757aeee02467e92ea7da8825": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\n# role: iam.Role\n\ndata_processor_bind_options = kinesisfirehose.DataProcessorBindOptions(\n    role=role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nRole role;\n\nDataProcessorBindOptions dataProcessorBindOptions = new DataProcessorBindOptions {\n    Role = role\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nRole role;\n\nDataProcessorBindOptions dataProcessorBindOptions = DataProcessorBindOptions.builder()\n        .role(role)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nvar role role\n\ndataProcessorBindOptions := &dataProcessorBindOptions{\n\trole: role,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n\ndeclare const role: iam.Role;\nconst dataProcessorBindOptions: kinesisfirehose.DataProcessorBindOptions = {\n  role: role,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.DataProcessorBindOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/aws-kinesisfirehose.DataProcessorBindOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataProcessorBindOptions: kinesisfirehose.DataProcessorBindOptions = {\n  role: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 10,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "a776f895e9da39d2e0453283f8548851172dd82d734e77a1d6a0da32302e7609"
    },
    "2478783e4f3111ea5bedfe32c484ccec96b4bebf527c5ff108cddcec34313350": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ndata_processor_config = kinesisfirehose.DataProcessorConfig(\n    processor_identifier=kinesisfirehose.DataProcessorIdentifier(\n        parameter_name=\"parameterName\",\n        parameter_value=\"parameterValue\"\n    ),\n    processor_type=\"processorType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nDataProcessorConfig dataProcessorConfig = new DataProcessorConfig {\n    ProcessorIdentifier = new DataProcessorIdentifier {\n        ParameterName = \"parameterName\",\n        ParameterValue = \"parameterValue\"\n    },\n    ProcessorType = \"processorType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nDataProcessorConfig dataProcessorConfig = DataProcessorConfig.builder()\n        .processorIdentifier(DataProcessorIdentifier.builder()\n                .parameterName(\"parameterName\")\n                .parameterValue(\"parameterValue\")\n                .build())\n        .processorType(\"processorType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ndataProcessorConfig := &dataProcessorConfig{\n\tprocessorIdentifier: &dataProcessorIdentifier{\n\t\tparameterName: jsii.String(\"parameterName\"),\n\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t},\n\tprocessorType: jsii.String(\"processorType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst dataProcessorConfig: kinesisfirehose.DataProcessorConfig = {\n  processorIdentifier: {\n    parameterName: 'parameterName',\n    parameterValue: 'parameterValue',\n  },\n  processorType: 'processorType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.DataProcessorConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.DataProcessorConfig",
        "@aws-cdk/aws-kinesisfirehose.DataProcessorIdentifier"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataProcessorConfig: kinesisfirehose.DataProcessorConfig = {\n  processorIdentifier: {\n    parameterName: 'parameterName',\n    parameterValue: 'parameterValue',\n  },\n  processorType: 'processorType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "40157d5abb397961dc2a5db47e640e27204ffc66703168cb43ce3f99297390f6"
    },
    "3258b5e136093f1dfeab533a2ad89d72ec6851b54cd7a2a9c889fb5e07169a70": {
      "translations": {
        "python": {
          "source": "\"Lambda\"",
          "version": "2"
        },
        "csharp": {
          "source": "\"Lambda\";",
          "version": "1"
        },
        "java": {
          "source": "\"Lambda\";",
          "version": "1"
        },
        "go": {
          "source": "\"Lambda\"",
          "version": "1"
        },
        "$": {
          "source": "'Lambda'",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "member",
          "fqn": "@aws-cdk/aws-kinesisfirehose.DataProcessorConfig",
          "memberName": "processorType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n'Lambda'\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "226": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "6b318b29acffe1e269c45728e55993f71321a5ff8457614e00e9e6cc82809a87": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ndata_processor_identifier = kinesisfirehose.DataProcessorIdentifier(\n    parameter_name=\"parameterName\",\n    parameter_value=\"parameterValue\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nDataProcessorIdentifier dataProcessorIdentifier = new DataProcessorIdentifier {\n    ParameterName = \"parameterName\",\n    ParameterValue = \"parameterValue\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nDataProcessorIdentifier dataProcessorIdentifier = DataProcessorIdentifier.builder()\n        .parameterName(\"parameterName\")\n        .parameterValue(\"parameterValue\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ndataProcessorIdentifier := &dataProcessorIdentifier{\n\tparameterName: jsii.String(\"parameterName\"),\n\tparameterValue: jsii.String(\"parameterValue\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst dataProcessorIdentifier: kinesisfirehose.DataProcessorIdentifier = {\n  parameterName: 'parameterName',\n  parameterValue: 'parameterValue',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.DataProcessorIdentifier"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.DataProcessorIdentifier"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataProcessorIdentifier: kinesisfirehose.DataProcessorIdentifier = {\n  parameterName: 'parameterName',\n  parameterValue: 'parameterValue',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e27e76b1b7489c9ef7b830fe2274443e7010aa5b3f2fc2f097b1e9435c6960b6"
    },
    "728e4898acc9395db16bd1f6918b9c1387557c9e2fc7b878a8761624c967b475": {
      "translations": {
        "python": {
          "source": "import path as path\nimport aws_cdk.aws_kinesisfirehose as firehose\nimport aws_cdk.aws_kms as kms\nimport aws_cdk.aws_lambda_nodejs as lambdanodejs\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\nimport aws_cdk.aws_kinesisfirehose_destinations as destinations\n\napp = cdk.App()\n\nstack = cdk.Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\")\n\nbucket = s3.Bucket(stack, \"Bucket\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    auto_delete_objects=True\n)\n\nbackup_bucket = s3.Bucket(stack, \"BackupBucket\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    auto_delete_objects=True\n)\nlog_group = logs.LogGroup(stack, \"LogGroup\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\ndata_processor_function = lambdanodejs.NodejsFunction(stack, \"DataProcessorFunction\",\n    entry=path.join(__dirname, \"lambda-data-processor.js\"),\n    timeout=cdk.Duration.minutes(1)\n)\n\nprocessor = firehose.LambdaFunctionProcessor(data_processor_function,\n    buffer_interval=cdk.Duration.seconds(60),\n    buffer_size=cdk.Size.mebibytes(1),\n    retries=1\n)\n\nkey = kms.Key(stack, \"Key\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\nbackup_key = kms.Key(stack, \"BackupKey\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\nfirehose.DeliveryStream(stack, \"Delivery Stream\",\n    destinations=[destinations.S3Bucket(bucket,\n        logging=True,\n        log_group=log_group,\n        processor=processor,\n        compression=destinations.Compression.GZIP,\n        data_output_prefix=\"regularPrefix\",\n        error_output_prefix=\"errorPrefix\",\n        buffering_interval=cdk.Duration.seconds(60),\n        buffering_size=cdk.Size.mebibytes(1),\n        encryption_key=key,\n        s3_backup=destinations.DestinationS3BackupProps(\n            mode=destinations.BackupMode.ALL,\n            bucket=backup_bucket,\n            compression=destinations.Compression.ZIP,\n            data_output_prefix=\"backupPrefix\",\n            error_output_prefix=\"backupErrorPrefix\",\n            buffering_interval=cdk.Duration.seconds(60),\n            buffering_size=cdk.Size.mebibytes(1),\n            encryption_key=backup_key\n        )\n    )]\n)\n\napp.synth()",
          "version": "2"
        },
        "csharp": {
          "source": "using Path;\nusing Amazon.CDK.AWS.KinesisFirehose;\nusing Amazon.CDK.AWS.KMS;\nusing Amazon.CDK.AWS.Lambda.Nodejs;\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\nusing Amazon.CDK.AWS.KinesisFirehose.Destinations;\n\nApp app = new App();\n\nStack stack = new Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\");\n\nBucket bucket = new Bucket(stack, \"Bucket\", new BucketProps {\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    AutoDeleteObjects = true\n});\n\nBucket backupBucket = new Bucket(stack, \"BackupBucket\", new BucketProps {\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    AutoDeleteObjects = true\n});\nLogGroup logGroup = new LogGroup(stack, \"LogGroup\", new LogGroupProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nNodejsFunction dataProcessorFunction = new NodejsFunction(stack, \"DataProcessorFunction\", new NodejsFunctionProps {\n    Entry = Join(__dirname, \"lambda-data-processor.js\"),\n    Timeout = Duration.Minutes(1)\n});\n\nLambdaFunctionProcessor processor = new LambdaFunctionProcessor(dataProcessorFunction, new DataProcessorProps {\n    BufferInterval = Duration.Seconds(60),\n    BufferSize = Size.Mebibytes(1),\n    Retries = 1\n});\n\nKey key = new Key(stack, \"Key\", new KeyProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nKey backupKey = new Key(stack, \"BackupKey\", new KeyProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nnew DeliveryStream(stack, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { new S3Bucket(bucket, new S3BucketProps {\n        Logging = true,\n        LogGroup = logGroup,\n        Processor = processor,\n        Compression = Compression.GZIP,\n        DataOutputPrefix = \"regularPrefix\",\n        ErrorOutputPrefix = \"errorPrefix\",\n        BufferingInterval = Duration.Seconds(60),\n        BufferingSize = Size.Mebibytes(1),\n        EncryptionKey = key,\n        S3Backup = new DestinationS3BackupProps {\n            Mode = BackupMode.ALL,\n            Bucket = backupBucket,\n            Compression = Compression.ZIP,\n            DataOutputPrefix = \"backupPrefix\",\n            ErrorOutputPrefix = \"backupErrorPrefix\",\n            BufferingInterval = Duration.Seconds(60),\n            BufferingSize = Size.Mebibytes(1),\n            EncryptionKey = backupKey\n        }\n    }) }\n});\n\napp.Synth();",
          "version": "1"
        },
        "java": {
          "source": "import path.*;\nimport software.amazon.awscdk.services.kinesisfirehose.*;\nimport software.amazon.awscdk.services.kms.*;\nimport software.amazon.awscdk.services.lambda.nodejs.*;\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\nimport software.amazon.awscdk.services.kinesisfirehose.destinations.*;\n\nApp app = new App();\n\nStack stack = new Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\");\n\nBucket bucket = Bucket.Builder.create(stack, \"Bucket\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .autoDeleteObjects(true)\n        .build();\n\nBucket backupBucket = Bucket.Builder.create(stack, \"BackupBucket\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .autoDeleteObjects(true)\n        .build();\nLogGroup logGroup = LogGroup.Builder.create(stack, \"LogGroup\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nNodejsFunction dataProcessorFunction = NodejsFunction.Builder.create(stack, \"DataProcessorFunction\")\n        .entry(join(__dirname, \"lambda-data-processor.js\"))\n        .timeout(Duration.minutes(1))\n        .build();\n\nLambdaFunctionProcessor processor = LambdaFunctionProcessor.Builder.create(dataProcessorFunction)\n        .bufferInterval(Duration.seconds(60))\n        .bufferSize(Size.mebibytes(1))\n        .retries(1)\n        .build();\n\nKey key = Key.Builder.create(stack, \"Key\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nKey backupKey = Key.Builder.create(stack, \"BackupKey\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nDeliveryStream.Builder.create(stack, \"Delivery Stream\")\n        .destinations(List.of(S3Bucket.Builder.create(bucket)\n                .logging(true)\n                .logGroup(logGroup)\n                .processor(processor)\n                .compression(Compression.GZIP)\n                .dataOutputPrefix(\"regularPrefix\")\n                .errorOutputPrefix(\"errorPrefix\")\n                .bufferingInterval(Duration.seconds(60))\n                .bufferingSize(Size.mebibytes(1))\n                .encryptionKey(key)\n                .s3Backup(DestinationS3BackupProps.builder()\n                        .mode(BackupMode.ALL)\n                        .bucket(backupBucket)\n                        .compression(Compression.ZIP)\n                        .dataOutputPrefix(\"backupPrefix\")\n                        .errorOutputPrefix(\"backupErrorPrefix\")\n                        .bufferingInterval(Duration.seconds(60))\n                        .bufferingSize(Size.mebibytes(1))\n                        .encryptionKey(backupKey)\n                        .build())\n                .build()))\n        .build();\n\napp.synth();",
          "version": "1"
        },
        "go": {
          "source": "import path \"github.com/aws-samples/dummy/path\"\nimport firehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\nimport kms \"github.com/aws-samples/dummy/awscdkawskms\"\nimport lambdanodejs \"github.com/aws-samples/dummy/awscdkawslambdanodejs\"\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nimport s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\nimport destinations \"github.com/aws-samples/dummy/lib\"\n\napp := cdk.NewApp()\n\nstack := cdk.NewStack(app, jsii.String(\"aws-cdk-firehose-delivery-stream-s3-all-properties\"))\n\nbucket := s3.NewBucket(stack, jsii.String(\"Bucket\"), &bucketProps{\n\tremovalPolicy: cdk.removalPolicy_DESTROY,\n\tautoDeleteObjects: jsii.Boolean(true),\n})\n\nbackupBucket := s3.NewBucket(stack, jsii.String(\"BackupBucket\"), &bucketProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n\tautoDeleteObjects: jsii.Boolean(true),\n})\nlogGroup := logs.NewLogGroup(stack, jsii.String(\"LogGroup\"), &logGroupProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\ndataProcessorFunction := lambdanodejs.NewNodejsFunction(stack, jsii.String(\"DataProcessorFunction\"), &nodejsFunctionProps{\n\tentry: path.join(__dirname, jsii.String(\"lambda-data-processor.js\")),\n\ttimeout: cdk.duration.minutes(jsii.Number(1)),\n})\n\nprocessor := firehose.NewLambdaFunctionProcessor(dataProcessorFunction, &dataProcessorProps{\n\tbufferInterval: cdk.*duration.seconds(jsii.Number(60)),\n\tbufferSize: cdk.size.mebibytes(jsii.Number(1)),\n\tretries: jsii.Number(1),\n})\n\nkey := kms.NewKey(stack, jsii.String(\"Key\"), &keyProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\nbackupKey := kms.NewKey(stack, jsii.String(\"BackupKey\"), &keyProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\nfirehose.NewDeliveryStream(stack, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\tdestinations.NewS3Bucket(bucket, &s3BucketProps{\n\t\t\tlogging: jsii.Boolean(true),\n\t\t\tlogGroup: logGroup,\n\t\t\tprocessor: processor,\n\t\t\tcompression: destinations.compression_GZIP(),\n\t\t\tdataOutputPrefix: jsii.String(\"regularPrefix\"),\n\t\t\terrorOutputPrefix: jsii.String(\"errorPrefix\"),\n\t\t\tbufferingInterval: cdk.*duration.seconds(jsii.Number(60)),\n\t\t\tbufferingSize: cdk.*size.mebibytes(jsii.Number(1)),\n\t\t\tencryptionKey: key,\n\t\t\ts3Backup: &destinationS3BackupProps{\n\t\t\t\tmode: destinations.backupMode_ALL,\n\t\t\t\tbucket: backupBucket,\n\t\t\t\tcompression: destinations.*compression_ZIP(),\n\t\t\t\tdataOutputPrefix: jsii.String(\"backupPrefix\"),\n\t\t\t\terrorOutputPrefix: jsii.String(\"backupErrorPrefix\"),\n\t\t\t\tbufferingInterval: cdk.*duration.seconds(jsii.Number(60)),\n\t\t\t\tbufferingSize: cdk.*size.mebibytes(jsii.Number(1)),\n\t\t\t\tencryptionKey: backupKey,\n\t\t\t},\n\t\t}),\n\t},\n})\n\napp.synth()",
          "version": "1"
        },
        "$": {
          "source": "#!/usr/bin/env node",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.DataProcessorProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.BackupMode",
        "@aws-cdk/aws-kinesisfirehose-destinations.BackupMode#ALL",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression#GZIP",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression#ZIP",
        "@aws-cdk/aws-kinesisfirehose-destinations.DestinationS3BackupProps",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DataProcessorProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-kinesisfirehose.IDataProcessor",
        "@aws-cdk/aws-kinesisfirehose.LambdaFunctionProcessor",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-kms.KeyProps",
        "@aws-cdk/aws-lambda-nodejs.NodejsFunction",
        "@aws-cdk/aws-lambda-nodejs.NodejsFunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-logs.ILogGroup",
        "@aws-cdk/aws-logs.LogGroup",
        "@aws-cdk/aws-logs.LogGroupProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "@aws-cdk/core.Duration#seconds",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY",
        "@aws-cdk/core.Size",
        "@aws-cdk/core.Size#mebibytes",
        "@aws-cdk/core.Stack",
        "@aws-cdk/core.Stage#synth",
        "constructs.Construct"
      ],
      "fullSource": "#!/usr/bin/env node\n/// !cdk-integ pragma:ignore-assets\nimport * as path from 'path';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as lambdanodejs from '@aws-cdk/aws-lambda-nodejs';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\nimport * as destinations from '../lib';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-firehose-delivery-stream-s3-all-properties');\n\nconst bucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\n\nconst backupBucket = new s3.Bucket(stack, 'BackupBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\nconst logGroup = new logs.LogGroup(stack, 'LogGroup', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst dataProcessorFunction = new lambdanodejs.NodejsFunction(stack, 'DataProcessorFunction', {\n  entry: path.join(__dirname, 'lambda-data-processor.js'),\n  timeout: cdk.Duration.minutes(1),\n});\n\nconst processor = new firehose.LambdaFunctionProcessor(dataProcessorFunction, {\n  bufferInterval: cdk.Duration.seconds(60),\n  bufferSize: cdk.Size.mebibytes(1),\n  retries: 1,\n});\n\nconst key = new kms.Key(stack, 'Key', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst backupKey = new kms.Key(stack, 'BackupKey', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew firehose.DeliveryStream(stack, 'Delivery Stream', {\n  destinations: [new destinations.S3Bucket(bucket, {\n    logging: true,\n    logGroup: logGroup,\n    processor: processor,\n    compression: destinations.Compression.GZIP,\n    dataOutputPrefix: 'regularPrefix',\n    errorOutputPrefix: 'errorPrefix',\n    bufferingInterval: cdk.Duration.seconds(60),\n    bufferingSize: cdk.Size.mebibytes(1),\n    encryptionKey: key,\n    s3Backup: {\n      mode: destinations.BackupMode.ALL,\n      bucket: backupBucket,\n      compression: destinations.Compression.ZIP,\n      dataOutputPrefix: 'backupPrefix',\n      errorOutputPrefix: 'backupErrorPrefix',\n      bufferingInterval: cdk.Duration.seconds(60),\n      bufferingSize: cdk.Size.mebibytes(1),\n      encryptionKey: backupKey,\n    },\n  })],\n});\n\napp.synth();\n",
      "syntaxKindCounter": {
        "8": 8,
        "10": 21,
        "75": 135,
        "106": 3,
        "192": 1,
        "193": 10,
        "194": 43,
        "196": 9,
        "197": 11,
        "225": 9,
        "226": 2,
        "242": 9,
        "243": 9,
        "254": 8,
        "255": 8,
        "256": 8,
        "281": 31,
        "290": 1
      },
      "fqnsFingerprint": "14f93717371c27d8ab15f18004cce3c49ff5781992a468be6e6b7b3908a008c1"
    },
    "b119e5e520bab597fc55e971d78592b7d27aecba71f11770845a7cb072c16ffc": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n# Provide a Lambda function that will transform records before delivery, with custom\n# buffering and retry configuration\nlambda_function = lambda_.Function(self, \"Processor\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset(path.join(__dirname, \"process-records\"))\n)\nlambda_processor = firehose.LambdaFunctionProcessor(lambda_function,\n    buffer_interval=Duration.minutes(5),\n    buffer_size=Size.mebibytes(5),\n    retries=5\n)\ns3_destination = destinations.S3Bucket(bucket,\n    processor=lambda_processor\n)\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[s3_destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nFunction lambdaFunction = new Function(this, \"Processor\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset(Join(__dirname, \"process-records\"))\n});\nLambdaFunctionProcessor lambdaProcessor = new LambdaFunctionProcessor(lambdaFunction, new DataProcessorProps {\n    BufferInterval = Duration.Minutes(5),\n    BufferSize = Size.Mebibytes(5),\n    Retries = 5\n});\nS3Bucket s3Destination = new S3Bucket(bucket, new S3BucketProps {\n    Processor = lambdaProcessor\n});\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { s3Destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nFunction lambdaFunction = Function.Builder.create(this, \"Processor\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset(join(__dirname, \"process-records\")))\n        .build();\nLambdaFunctionProcessor lambdaProcessor = LambdaFunctionProcessor.Builder.create(lambdaFunction)\n        .bufferInterval(Duration.minutes(5))\n        .bufferSize(Size.mebibytes(5))\n        .retries(5)\n        .build();\nS3Bucket s3Destination = S3Bucket.Builder.create(bucket)\n        .processor(lambdaProcessor)\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(s3Destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nlambdaFunction := lambda.NewFunction(this, jsii.String(\"Processor\"), &functionProps{\n\truntime: lambda.runtime_NODEJS_14_X(),\n\thandler: jsii.String(\"index.handler\"),\n\tcode: lambda.code.fromAsset(path.join(__dirname, jsii.String(\"process-records\"))),\n})\nlambdaProcessor := firehose.NewLambdaFunctionProcessor(lambdaFunction, &dataProcessorProps{\n\tbufferInterval: *awscdkcore.Duration.minutes(jsii.Number(5)),\n\tbufferSize: *awscdkcore.Size.mebibytes(jsii.Number(5)),\n\tretries: jsii.Number(5),\n})\ns3Destination := destinations.NewS3Bucket(bucket, &s3BucketProps{\n\tprocessor: lambdaProcessor,\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\ts3Destination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nconst lambdaFunction = new lambda.Function(this, 'Processor', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'process-records')),\n});\nconst lambdaProcessor = new firehose.LambdaFunctionProcessor(lambdaFunction, {\n  bufferInterval: Duration.minutes(5),\n  bufferSize: Size.mebibytes(5),\n  retries: 5,\n});\ndeclare const bucket: s3.Bucket;\nconst s3Destination = new destinations.S3Bucket(bucket, {\n  processor: lambdaProcessor,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [s3Destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.DeliveryStream"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DataProcessorProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-kinesisfirehose.IDataProcessor",
        "@aws-cdk/aws-kinesisfirehose.LambdaFunctionProcessor",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromAsset",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_14_X",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "@aws-cdk/core.Size",
        "@aws-cdk/core.Size#mebibytes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nconst lambdaFunction = new lambda.Function(this, 'Processor', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'process-records')),\n});\nconst lambdaProcessor = new firehose.LambdaFunctionProcessor(lambdaFunction, {\n  bufferInterval: Duration.minutes(5),\n  bufferSize: Size.mebibytes(5),\n  retries: 5,\n});\nconst s3Destination = new destinations.S3Bucket(bucket, {\n  processor: lambdaProcessor,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [s3Destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 3,
        "10": 4,
        "75": 39,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 4,
        "194": 11,
        "196": 4,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "9d6b81e3b76c760ba885d038b83ab12a77c63303cf47e6e03009735d0ba4677d"
    },
    "8cc7a37c6edfcd04d6ca099b5faa027ff43c070247a6cca53a081a07c32a61c7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\n# role: iam.Role\n\ndelivery_stream_attributes = kinesisfirehose.DeliveryStreamAttributes(\n    delivery_stream_arn=\"deliveryStreamArn\",\n    delivery_stream_name=\"deliveryStreamName\",\n    role=role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nRole role;\n\nDeliveryStreamAttributes deliveryStreamAttributes = new DeliveryStreamAttributes {\n    DeliveryStreamArn = \"deliveryStreamArn\",\n    DeliveryStreamName = \"deliveryStreamName\",\n    Role = role\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nRole role;\n\nDeliveryStreamAttributes deliveryStreamAttributes = DeliveryStreamAttributes.builder()\n        .deliveryStreamArn(\"deliveryStreamArn\")\n        .deliveryStreamName(\"deliveryStreamName\")\n        .role(role)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\nvar role role\n\ndeliveryStreamAttributes := &deliveryStreamAttributes{\n\tdeliveryStreamArn: jsii.String(\"deliveryStreamArn\"),\n\tdeliveryStreamName: jsii.String(\"deliveryStreamName\"),\n\trole: role,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n\ndeclare const role: iam.Role;\nconst deliveryStreamAttributes: kinesisfirehose.DeliveryStreamAttributes = {\n  deliveryStreamArn: 'deliveryStreamArn',\n  deliveryStreamName: 'deliveryStreamName',\n  role: role,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.DeliveryStreamAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-iam.IRole",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamAttributes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst deliveryStreamAttributes: kinesisfirehose.DeliveryStreamAttributes = {\n  deliveryStreamArn: 'deliveryStreamArn',\n  deliveryStreamName: 'deliveryStreamName',\n  role: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 12,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "88ac68c47b68231aa3abc9aa7dbd42369619b7200193d2c1e12a24834c51792a"
    },
    "a4f02102a81fc8138a3c7014a7f10b8c8500fc448c2aad80b6da6c2e97ea8145": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n# Provide a Lambda function that will transform records before delivery, with custom\n# buffering and retry configuration\nlambda_function = lambda_.Function(self, \"Processor\",\n    runtime=lambda_.Runtime.NODEJS_14_X,\n    handler=\"index.handler\",\n    code=lambda_.Code.from_asset(path.join(__dirname, \"process-records\"))\n)\nlambda_processor = firehose.LambdaFunctionProcessor(lambda_function,\n    buffer_interval=Duration.minutes(5),\n    buffer_size=Size.mebibytes(5),\n    retries=5\n)\ns3_destination = destinations.S3Bucket(bucket,\n    processor=lambda_processor\n)\nfirehose.DeliveryStream(self, \"Delivery Stream\",\n    destinations=[s3_destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nFunction lambdaFunction = new Function(this, \"Processor\", new FunctionProps {\n    Runtime = Runtime.NODEJS_14_X,\n    Handler = \"index.handler\",\n    Code = Code.FromAsset(Join(__dirname, \"process-records\"))\n});\nLambdaFunctionProcessor lambdaProcessor = new LambdaFunctionProcessor(lambdaFunction, new DataProcessorProps {\n    BufferInterval = Duration.Minutes(5),\n    BufferSize = Size.Mebibytes(5),\n    Retries = 5\n});\nS3Bucket s3Destination = new S3Bucket(bucket, new S3BucketProps {\n    Processor = lambdaProcessor\n});\nnew DeliveryStream(this, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { s3Destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nFunction lambdaFunction = Function.Builder.create(this, \"Processor\")\n        .runtime(Runtime.NODEJS_14_X)\n        .handler(\"index.handler\")\n        .code(Code.fromAsset(join(__dirname, \"process-records\")))\n        .build();\nLambdaFunctionProcessor lambdaProcessor = LambdaFunctionProcessor.Builder.create(lambdaFunction)\n        .bufferInterval(Duration.minutes(5))\n        .bufferSize(Size.mebibytes(5))\n        .retries(5)\n        .build();\nS3Bucket s3Destination = S3Bucket.Builder.create(bucket)\n        .processor(lambdaProcessor)\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream\")\n        .destinations(List.of(s3Destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nlambdaFunction := lambda.NewFunction(this, jsii.String(\"Processor\"), &functionProps{\n\truntime: lambda.runtime_NODEJS_14_X(),\n\thandler: jsii.String(\"index.handler\"),\n\tcode: lambda.code.fromAsset(path.join(__dirname, jsii.String(\"process-records\"))),\n})\nlambdaProcessor := firehose.NewLambdaFunctionProcessor(lambdaFunction, &dataProcessorProps{\n\tbufferInterval: *awscdkcore.Duration.minutes(jsii.Number(5)),\n\tbufferSize: *awscdkcore.Size.mebibytes(jsii.Number(5)),\n\tretries: jsii.Number(5),\n})\ns3Destination := destinations.NewS3Bucket(bucket, &s3BucketProps{\n\tprocessor: lambdaProcessor,\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\ts3Destination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nconst lambdaFunction = new lambda.Function(this, 'Processor', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'process-records')),\n});\nconst lambdaProcessor = new firehose.LambdaFunctionProcessor(lambdaFunction, {\n  bufferInterval: Duration.minutes(5),\n  bufferSize: Size.mebibytes(5),\n  retries: 5,\n});\ndeclare const bucket: s3.Bucket;\nconst s3Destination = new destinations.S3Bucket(bucket, {\n  processor: lambdaProcessor,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [s3Destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DataProcessorProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-kinesisfirehose.IDataProcessor",
        "@aws-cdk/aws-kinesisfirehose.LambdaFunctionProcessor",
        "@aws-cdk/aws-lambda.Code",
        "@aws-cdk/aws-lambda.Code#fromAsset",
        "@aws-cdk/aws-lambda.Function",
        "@aws-cdk/aws-lambda.FunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-lambda.Runtime",
        "@aws-cdk/aws-lambda.Runtime#NODEJS_14_X",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "@aws-cdk/core.Size",
        "@aws-cdk/core.Size#mebibytes",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n// Provide a Lambda function that will transform records before delivery, with custom\n// buffering and retry configuration\nconst lambdaFunction = new lambda.Function(this, 'Processor', {\n  runtime: lambda.Runtime.NODEJS_14_X,\n  handler: 'index.handler',\n  code: lambda.Code.fromAsset(path.join(__dirname, 'process-records')),\n});\nconst lambdaProcessor = new firehose.LambdaFunctionProcessor(lambdaFunction, {\n  bufferInterval: Duration.minutes(5),\n  bufferSize: Size.mebibytes(5),\n  retries: 5,\n});\nconst s3Destination = new destinations.S3Bucket(bucket, {\n  processor: lambdaProcessor,\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream', {\n  destinations: [s3Destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 3,
        "10": 4,
        "75": 39,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 4,
        "194": 11,
        "196": 4,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "9d6b81e3b76c760ba885d038b83ab12a77c63303cf47e6e03009735d0ba4677d"
    },
    "db79c7705f79722ee6f4bc272452ccbd4e82e27dd29044382748ba865ecdd45f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\n\ndestination_bind_options = kinesisfirehose.DestinationBindOptions()",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\n\nDestinationBindOptions destinationBindOptions = new DestinationBindOptions { };",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\n\nDestinationBindOptions destinationBindOptions = DestinationBindOptions.builder().build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\n\ndestinationBindOptions := &destinationBindOptions{\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nconst destinationBindOptions: kinesisfirehose.DestinationBindOptions = { };",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.DestinationBindOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.DestinationBindOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst destinationBindOptions: kinesisfirehose.DestinationBindOptions = { };\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 4,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "2dc11309b380dd478400b3f53e234c02afe470fd4c92e83041e9a809de2ffde6"
    },
    "9f116dff71dbecdb9cbc366d624eb1cf9bf3cacca7f95a90c5a39a26cc9679fe": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_kinesisfirehose as kinesisfirehose\nimport aws_cdk.core as cdk\n\n# dependable: cdk.IDependable\n\ndestination_config = kinesisfirehose.DestinationConfig(\n    dependables=[dependable],\n    extended_s3_destination_configuration=kinesisfirehose.CfnDeliveryStream.ExtendedS3DestinationConfigurationProperty(\n        bucket_arn=\"bucketArn\",\n        role_arn=\"roleArn\",\n\n        # the properties below are optional\n        buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n            interval_in_seconds=123,\n            size_in_mBs=123\n        ),\n        cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n            enabled=False,\n            log_group_name=\"logGroupName\",\n            log_stream_name=\"logStreamName\"\n        ),\n        compression_format=\"compressionFormat\",\n        data_format_conversion_configuration=kinesisfirehose.CfnDeliveryStream.DataFormatConversionConfigurationProperty(\n            enabled=False,\n            input_format_configuration=kinesisfirehose.CfnDeliveryStream.InputFormatConfigurationProperty(\n                deserializer=kinesisfirehose.CfnDeliveryStream.DeserializerProperty(\n                    hive_json_ser_de=kinesisfirehose.CfnDeliveryStream.HiveJsonSerDeProperty(\n                        timestamp_formats=[\"timestampFormats\"]\n                    ),\n                    open_xJson_ser_de=kinesisfirehose.CfnDeliveryStream.OpenXJsonSerDeProperty(\n                        case_insensitive=False,\n                        column_to_json_key_mappings={\n                            \"column_to_json_key_mappings_key\": \"columnToJsonKeyMappings\"\n                        },\n                        convert_dots_in_json_keys_to_underscores=False\n                    )\n                )\n            ),\n            output_format_configuration=kinesisfirehose.CfnDeliveryStream.OutputFormatConfigurationProperty(\n                serializer=kinesisfirehose.CfnDeliveryStream.SerializerProperty(\n                    orc_ser_de=kinesisfirehose.CfnDeliveryStream.OrcSerDeProperty(\n                        block_size_bytes=123,\n                        bloom_filter_columns=[\"bloomFilterColumns\"],\n                        bloom_filter_false_positive_probability=123,\n                        compression=\"compression\",\n                        dictionary_key_threshold=123,\n                        enable_padding=False,\n                        format_version=\"formatVersion\",\n                        padding_tolerance=123,\n                        row_index_stride=123,\n                        stripe_size_bytes=123\n                    ),\n                    parquet_ser_de=kinesisfirehose.CfnDeliveryStream.ParquetSerDeProperty(\n                        block_size_bytes=123,\n                        compression=\"compression\",\n                        enable_dictionary_compression=False,\n                        max_padding_bytes=123,\n                        page_size_bytes=123,\n                        writer_version=\"writerVersion\"\n                    )\n                )\n            ),\n            schema_configuration=kinesisfirehose.CfnDeliveryStream.SchemaConfigurationProperty(\n                catalog_id=\"catalogId\",\n                database_name=\"databaseName\",\n                region=\"region\",\n                role_arn=\"roleArn\",\n                table_name=\"tableName\",\n                version_id=\"versionId\"\n            )\n        ),\n        dynamic_partitioning_configuration=kinesisfirehose.CfnDeliveryStream.DynamicPartitioningConfigurationProperty(\n            enabled=False,\n            retry_options=kinesisfirehose.CfnDeliveryStream.RetryOptionsProperty(\n                duration_in_seconds=123\n            )\n        ),\n        encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n            kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                awskms_key_arn=\"awskmsKeyArn\"\n            ),\n            no_encryption_config=\"noEncryptionConfig\"\n        ),\n        error_output_prefix=\"errorOutputPrefix\",\n        prefix=\"prefix\",\n        processing_configuration=kinesisfirehose.CfnDeliveryStream.ProcessingConfigurationProperty(\n            enabled=False,\n            processors=[kinesisfirehose.CfnDeliveryStream.ProcessorProperty(\n                type=\"type\",\n\n                # the properties below are optional\n                parameters=[kinesisfirehose.CfnDeliveryStream.ProcessorParameterProperty(\n                    parameter_name=\"parameterName\",\n                    parameter_value=\"parameterValue\"\n                )]\n            )]\n        ),\n        s3_backup_configuration=kinesisfirehose.CfnDeliveryStream.S3DestinationConfigurationProperty(\n            bucket_arn=\"bucketArn\",\n            role_arn=\"roleArn\",\n\n            # the properties below are optional\n            buffering_hints=kinesisfirehose.CfnDeliveryStream.BufferingHintsProperty(\n                interval_in_seconds=123,\n                size_in_mBs=123\n            ),\n            cloud_watch_logging_options=kinesisfirehose.CfnDeliveryStream.CloudWatchLoggingOptionsProperty(\n                enabled=False,\n                log_group_name=\"logGroupName\",\n                log_stream_name=\"logStreamName\"\n            ),\n            compression_format=\"compressionFormat\",\n            encryption_configuration=kinesisfirehose.CfnDeliveryStream.EncryptionConfigurationProperty(\n                kms_encryption_config=kinesisfirehose.CfnDeliveryStream.KMSEncryptionConfigProperty(\n                    awskms_key_arn=\"awskmsKeyArn\"\n                ),\n                no_encryption_config=\"noEncryptionConfig\"\n            ),\n            error_output_prefix=\"errorOutputPrefix\",\n            prefix=\"prefix\"\n        ),\n        s3_backup_mode=\"s3BackupMode\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.KinesisFirehose;\nusing Amazon.CDK;\n\nIDependable dependable;\nDestinationConfig destinationConfig = new DestinationConfig {\n    Dependables = new [] { dependable },\n    ExtendedS3DestinationConfiguration = new ExtendedS3DestinationConfigurationProperty {\n        BucketArn = \"bucketArn\",\n        RoleArn = \"roleArn\",\n\n        // the properties below are optional\n        BufferingHints = new BufferingHintsProperty {\n            IntervalInSeconds = 123,\n            SizeInMBs = 123\n        },\n        CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n            Enabled = false,\n            LogGroupName = \"logGroupName\",\n            LogStreamName = \"logStreamName\"\n        },\n        CompressionFormat = \"compressionFormat\",\n        DataFormatConversionConfiguration = new DataFormatConversionConfigurationProperty {\n            Enabled = false,\n            InputFormatConfiguration = new InputFormatConfigurationProperty {\n                Deserializer = new DeserializerProperty {\n                    HiveJsonSerDe = new HiveJsonSerDeProperty {\n                        TimestampFormats = new [] { \"timestampFormats\" }\n                    },\n                    OpenXJsonSerDe = new OpenXJsonSerDeProperty {\n                        CaseInsensitive = false,\n                        ColumnToJsonKeyMappings = new Dictionary<string, string> {\n                            { \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\" }\n                        },\n                        ConvertDotsInJsonKeysToUnderscores = false\n                    }\n                }\n            },\n            OutputFormatConfiguration = new OutputFormatConfigurationProperty {\n                Serializer = new SerializerProperty {\n                    OrcSerDe = new OrcSerDeProperty {\n                        BlockSizeBytes = 123,\n                        BloomFilterColumns = new [] { \"bloomFilterColumns\" },\n                        BloomFilterFalsePositiveProbability = 123,\n                        Compression = \"compression\",\n                        DictionaryKeyThreshold = 123,\n                        EnablePadding = false,\n                        FormatVersion = \"formatVersion\",\n                        PaddingTolerance = 123,\n                        RowIndexStride = 123,\n                        StripeSizeBytes = 123\n                    },\n                    ParquetSerDe = new ParquetSerDeProperty {\n                        BlockSizeBytes = 123,\n                        Compression = \"compression\",\n                        EnableDictionaryCompression = false,\n                        MaxPaddingBytes = 123,\n                        PageSizeBytes = 123,\n                        WriterVersion = \"writerVersion\"\n                    }\n                }\n            },\n            SchemaConfiguration = new SchemaConfigurationProperty {\n                CatalogId = \"catalogId\",\n                DatabaseName = \"databaseName\",\n                Region = \"region\",\n                RoleArn = \"roleArn\",\n                TableName = \"tableName\",\n                VersionId = \"versionId\"\n            }\n        },\n        DynamicPartitioningConfiguration = new DynamicPartitioningConfigurationProperty {\n            Enabled = false,\n            RetryOptions = new RetryOptionsProperty {\n                DurationInSeconds = 123\n            }\n        },\n        EncryptionConfiguration = new EncryptionConfigurationProperty {\n            KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                AwskmsKeyArn = \"awskmsKeyArn\"\n            },\n            NoEncryptionConfig = \"noEncryptionConfig\"\n        },\n        ErrorOutputPrefix = \"errorOutputPrefix\",\n        Prefix = \"prefix\",\n        ProcessingConfiguration = new ProcessingConfigurationProperty {\n            Enabled = false,\n            Processors = new [] { new ProcessorProperty {\n                Type = \"type\",\n\n                // the properties below are optional\n                Parameters = new [] { new ProcessorParameterProperty {\n                    ParameterName = \"parameterName\",\n                    ParameterValue = \"parameterValue\"\n                } }\n            } }\n        },\n        S3BackupConfiguration = new S3DestinationConfigurationProperty {\n            BucketArn = \"bucketArn\",\n            RoleArn = \"roleArn\",\n\n            // the properties below are optional\n            BufferingHints = new BufferingHintsProperty {\n                IntervalInSeconds = 123,\n                SizeInMBs = 123\n            },\n            CloudWatchLoggingOptions = new CloudWatchLoggingOptionsProperty {\n                Enabled = false,\n                LogGroupName = \"logGroupName\",\n                LogStreamName = \"logStreamName\"\n            },\n            CompressionFormat = \"compressionFormat\",\n            EncryptionConfiguration = new EncryptionConfigurationProperty {\n                KmsEncryptionConfig = new KMSEncryptionConfigProperty {\n                    AwskmsKeyArn = \"awskmsKeyArn\"\n                },\n                NoEncryptionConfig = \"noEncryptionConfig\"\n            },\n            ErrorOutputPrefix = \"errorOutputPrefix\",\n            Prefix = \"prefix\"\n        },\n        S3BackupMode = \"s3BackupMode\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.kinesisfirehose.*;\nimport software.amazon.awscdk.core.*;\n\nIDependable dependable;\n\nDestinationConfig destinationConfig = DestinationConfig.builder()\n        .dependables(List.of(dependable))\n        .extendedS3DestinationConfiguration(ExtendedS3DestinationConfigurationProperty.builder()\n                .bucketArn(\"bucketArn\")\n                .roleArn(\"roleArn\")\n\n                // the properties below are optional\n                .bufferingHints(BufferingHintsProperty.builder()\n                        .intervalInSeconds(123)\n                        .sizeInMBs(123)\n                        .build())\n                .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                        .enabled(false)\n                        .logGroupName(\"logGroupName\")\n                        .logStreamName(\"logStreamName\")\n                        .build())\n                .compressionFormat(\"compressionFormat\")\n                .dataFormatConversionConfiguration(DataFormatConversionConfigurationProperty.builder()\n                        .enabled(false)\n                        .inputFormatConfiguration(InputFormatConfigurationProperty.builder()\n                                .deserializer(DeserializerProperty.builder()\n                                        .hiveJsonSerDe(HiveJsonSerDeProperty.builder()\n                                                .timestampFormats(List.of(\"timestampFormats\"))\n                                                .build())\n                                        .openXJsonSerDe(OpenXJsonSerDeProperty.builder()\n                                                .caseInsensitive(false)\n                                                .columnToJsonKeyMappings(Map.of(\n                                                        \"columnToJsonKeyMappingsKey\", \"columnToJsonKeyMappings\"))\n                                                .convertDotsInJsonKeysToUnderscores(false)\n                                                .build())\n                                        .build())\n                                .build())\n                        .outputFormatConfiguration(OutputFormatConfigurationProperty.builder()\n                                .serializer(SerializerProperty.builder()\n                                        .orcSerDe(OrcSerDeProperty.builder()\n                                                .blockSizeBytes(123)\n                                                .bloomFilterColumns(List.of(\"bloomFilterColumns\"))\n                                                .bloomFilterFalsePositiveProbability(123)\n                                                .compression(\"compression\")\n                                                .dictionaryKeyThreshold(123)\n                                                .enablePadding(false)\n                                                .formatVersion(\"formatVersion\")\n                                                .paddingTolerance(123)\n                                                .rowIndexStride(123)\n                                                .stripeSizeBytes(123)\n                                                .build())\n                                        .parquetSerDe(ParquetSerDeProperty.builder()\n                                                .blockSizeBytes(123)\n                                                .compression(\"compression\")\n                                                .enableDictionaryCompression(false)\n                                                .maxPaddingBytes(123)\n                                                .pageSizeBytes(123)\n                                                .writerVersion(\"writerVersion\")\n                                                .build())\n                                        .build())\n                                .build())\n                        .schemaConfiguration(SchemaConfigurationProperty.builder()\n                                .catalogId(\"catalogId\")\n                                .databaseName(\"databaseName\")\n                                .region(\"region\")\n                                .roleArn(\"roleArn\")\n                                .tableName(\"tableName\")\n                                .versionId(\"versionId\")\n                                .build())\n                        .build())\n                .dynamicPartitioningConfiguration(DynamicPartitioningConfigurationProperty.builder()\n                        .enabled(false)\n                        .retryOptions(RetryOptionsProperty.builder()\n                                .durationInSeconds(123)\n                                .build())\n                        .build())\n                .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                        .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                .awskmsKeyArn(\"awskmsKeyArn\")\n                                .build())\n                        .noEncryptionConfig(\"noEncryptionConfig\")\n                        .build())\n                .errorOutputPrefix(\"errorOutputPrefix\")\n                .prefix(\"prefix\")\n                .processingConfiguration(ProcessingConfigurationProperty.builder()\n                        .enabled(false)\n                        .processors(List.of(ProcessorProperty.builder()\n                                .type(\"type\")\n\n                                // the properties below are optional\n                                .parameters(List.of(ProcessorParameterProperty.builder()\n                                        .parameterName(\"parameterName\")\n                                        .parameterValue(\"parameterValue\")\n                                        .build()))\n                                .build()))\n                        .build())\n                .s3BackupConfiguration(S3DestinationConfigurationProperty.builder()\n                        .bucketArn(\"bucketArn\")\n                        .roleArn(\"roleArn\")\n\n                        // the properties below are optional\n                        .bufferingHints(BufferingHintsProperty.builder()\n                                .intervalInSeconds(123)\n                                .sizeInMBs(123)\n                                .build())\n                        .cloudWatchLoggingOptions(CloudWatchLoggingOptionsProperty.builder()\n                                .enabled(false)\n                                .logGroupName(\"logGroupName\")\n                                .logStreamName(\"logStreamName\")\n                                .build())\n                        .compressionFormat(\"compressionFormat\")\n                        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                                .kmsEncryptionConfig(KMSEncryptionConfigProperty.builder()\n                                        .awskmsKeyArn(\"awskmsKeyArn\")\n                                        .build())\n                                .noEncryptionConfig(\"noEncryptionConfig\")\n                                .build())\n                        .errorOutputPrefix(\"errorOutputPrefix\")\n                        .prefix(\"prefix\")\n                        .build())\n                .s3BackupMode(\"s3BackupMode\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport kinesisfirehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar dependable iDependable\n\ndestinationConfig := &destinationConfig{\n\tdependables: []*iDependable{\n\t\tdependable,\n\t},\n\textendedS3DestinationConfiguration: &extendedS3DestinationConfigurationProperty{\n\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t// the properties below are optional\n\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\tsizeInMBs: jsii.Number(123),\n\t\t},\n\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t},\n\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\tdataFormatConversionConfiguration: &dataFormatConversionConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tinputFormatConfiguration: &inputFormatConfigurationProperty{\n\t\t\t\tdeserializer: &deserializerProperty{\n\t\t\t\t\thiveJsonSerDe: &hiveJsonSerDeProperty{\n\t\t\t\t\t\ttimestampFormats: []*string{\n\t\t\t\t\t\t\tjsii.String(\"timestampFormats\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\topenXJsonSerDe: &openXJsonSerDeProperty{\n\t\t\t\t\t\tcaseInsensitive: jsii.Boolean(false),\n\t\t\t\t\t\tcolumnToJsonKeyMappings: map[string]*string{\n\t\t\t\t\t\t\t\"columnToJsonKeyMappingsKey\": jsii.String(\"columnToJsonKeyMappings\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tconvertDotsInJsonKeysToUnderscores: jsii.Boolean(false),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\toutputFormatConfiguration: &outputFormatConfigurationProperty{\n\t\t\t\tserializer: &serializerProperty{\n\t\t\t\t\torcSerDe: &orcSerDeProperty{\n\t\t\t\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\t\t\t\tbloomFilterColumns: []*string{\n\t\t\t\t\t\t\tjsii.String(\"bloomFilterColumns\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbloomFilterFalsePositiveProbability: jsii.Number(123),\n\t\t\t\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\t\t\t\tdictionaryKeyThreshold: jsii.Number(123),\n\t\t\t\t\t\tenablePadding: jsii.Boolean(false),\n\t\t\t\t\t\tformatVersion: jsii.String(\"formatVersion\"),\n\t\t\t\t\t\tpaddingTolerance: jsii.Number(123),\n\t\t\t\t\t\trowIndexStride: jsii.Number(123),\n\t\t\t\t\t\tstripeSizeBytes: jsii.Number(123),\n\t\t\t\t\t},\n\t\t\t\t\tparquetSerDe: &parquetSerDeProperty{\n\t\t\t\t\t\tblockSizeBytes: jsii.Number(123),\n\t\t\t\t\t\tcompression: jsii.String(\"compression\"),\n\t\t\t\t\t\tenableDictionaryCompression: jsii.Boolean(false),\n\t\t\t\t\t\tmaxPaddingBytes: jsii.Number(123),\n\t\t\t\t\t\tpageSizeBytes: jsii.Number(123),\n\t\t\t\t\t\twriterVersion: jsii.String(\"writerVersion\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tschemaConfiguration: &schemaConfigurationProperty{\n\t\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\tregion: jsii.String(\"region\"),\n\t\t\t\troleArn: jsii.String(\"roleArn\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\t\t\t\tversionId: jsii.String(\"versionId\"),\n\t\t\t},\n\t\t},\n\t\tdynamicPartitioningConfiguration: &dynamicPartitioningConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tretryOptions: &retryOptionsProperty{\n\t\t\t\tdurationInSeconds: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t},\n\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t},\n\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\tprefix: jsii.String(\"prefix\"),\n\t\tprocessingConfiguration: &processingConfigurationProperty{\n\t\t\tenabled: jsii.Boolean(false),\n\t\t\tprocessors: []interface{}{\n\t\t\t\t&processorProperty{\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tparameters: []interface{}{\n\t\t\t\t\t\t&processorParameterProperty{\n\t\t\t\t\t\t\tparameterName: jsii.String(\"parameterName\"),\n\t\t\t\t\t\t\tparameterValue: jsii.String(\"parameterValue\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\ts3BackupConfiguration: &s3DestinationConfigurationProperty{\n\t\t\tbucketArn: jsii.String(\"bucketArn\"),\n\t\t\troleArn: jsii.String(\"roleArn\"),\n\n\t\t\t// the properties below are optional\n\t\t\tbufferingHints: &bufferingHintsProperty{\n\t\t\t\tintervalInSeconds: jsii.Number(123),\n\t\t\t\tsizeInMBs: jsii.Number(123),\n\t\t\t},\n\t\t\tcloudWatchLoggingOptions: &cloudWatchLoggingOptionsProperty{\n\t\t\t\tenabled: jsii.Boolean(false),\n\t\t\t\tlogGroupName: jsii.String(\"logGroupName\"),\n\t\t\t\tlogStreamName: jsii.String(\"logStreamName\"),\n\t\t\t},\n\t\t\tcompressionFormat: jsii.String(\"compressionFormat\"),\n\t\t\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\t\t\tkmsEncryptionConfig: &kMSEncryptionConfigProperty{\n\t\t\t\t\tawskmsKeyArn: jsii.String(\"awskmsKeyArn\"),\n\t\t\t\t},\n\t\t\t\tnoEncryptionConfig: jsii.String(\"noEncryptionConfig\"),\n\t\t\t},\n\t\t\terrorOutputPrefix: jsii.String(\"errorOutputPrefix\"),\n\t\t\tprefix: jsii.String(\"prefix\"),\n\t\t},\n\t\ts3BackupMode: jsii.String(\"s3BackupMode\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dependable: cdk.IDependable;\nconst destinationConfig: kinesisfirehose.DestinationConfig = {\n  dependables: [dependable],\n  extendedS3DestinationConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    dataFormatConversionConfiguration: {\n      enabled: false,\n      inputFormatConfiguration: {\n        deserializer: {\n          hiveJsonSerDe: {\n            timestampFormats: ['timestampFormats'],\n          },\n          openXJsonSerDe: {\n            caseInsensitive: false,\n            columnToJsonKeyMappings: {\n              columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n            },\n            convertDotsInJsonKeysToUnderscores: false,\n          },\n        },\n      },\n      outputFormatConfiguration: {\n        serializer: {\n          orcSerDe: {\n            blockSizeBytes: 123,\n            bloomFilterColumns: ['bloomFilterColumns'],\n            bloomFilterFalsePositiveProbability: 123,\n            compression: 'compression',\n            dictionaryKeyThreshold: 123,\n            enablePadding: false,\n            formatVersion: 'formatVersion',\n            paddingTolerance: 123,\n            rowIndexStride: 123,\n            stripeSizeBytes: 123,\n          },\n          parquetSerDe: {\n            blockSizeBytes: 123,\n            compression: 'compression',\n            enableDictionaryCompression: false,\n            maxPaddingBytes: 123,\n            pageSizeBytes: 123,\n            writerVersion: 'writerVersion',\n          },\n        },\n      },\n      schemaConfiguration: {\n        catalogId: 'catalogId',\n        databaseName: 'databaseName',\n        region: 'region',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n        versionId: 'versionId',\n      },\n    },\n    dynamicPartitioningConfiguration: {\n      enabled: false,\n      retryOptions: {\n        durationInSeconds: 123,\n      },\n    },\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    s3BackupConfiguration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.DestinationConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.CfnDeliveryStream.ExtendedS3DestinationConfigurationProperty",
        "@aws-cdk/aws-kinesisfirehose.DestinationConfig"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as kinesisfirehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dependable: cdk.IDependable;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst destinationConfig: kinesisfirehose.DestinationConfig = {\n  dependables: [dependable],\n  extendedS3DestinationConfiguration: {\n    bucketArn: 'bucketArn',\n    roleArn: 'roleArn',\n\n    // the properties below are optional\n    bufferingHints: {\n      intervalInSeconds: 123,\n      sizeInMBs: 123,\n    },\n    cloudWatchLoggingOptions: {\n      enabled: false,\n      logGroupName: 'logGroupName',\n      logStreamName: 'logStreamName',\n    },\n    compressionFormat: 'compressionFormat',\n    dataFormatConversionConfiguration: {\n      enabled: false,\n      inputFormatConfiguration: {\n        deserializer: {\n          hiveJsonSerDe: {\n            timestampFormats: ['timestampFormats'],\n          },\n          openXJsonSerDe: {\n            caseInsensitive: false,\n            columnToJsonKeyMappings: {\n              columnToJsonKeyMappingsKey: 'columnToJsonKeyMappings',\n            },\n            convertDotsInJsonKeysToUnderscores: false,\n          },\n        },\n      },\n      outputFormatConfiguration: {\n        serializer: {\n          orcSerDe: {\n            blockSizeBytes: 123,\n            bloomFilterColumns: ['bloomFilterColumns'],\n            bloomFilterFalsePositiveProbability: 123,\n            compression: 'compression',\n            dictionaryKeyThreshold: 123,\n            enablePadding: false,\n            formatVersion: 'formatVersion',\n            paddingTolerance: 123,\n            rowIndexStride: 123,\n            stripeSizeBytes: 123,\n          },\n          parquetSerDe: {\n            blockSizeBytes: 123,\n            compression: 'compression',\n            enableDictionaryCompression: false,\n            maxPaddingBytes: 123,\n            pageSizeBytes: 123,\n            writerVersion: 'writerVersion',\n          },\n        },\n      },\n      schemaConfiguration: {\n        catalogId: 'catalogId',\n        databaseName: 'databaseName',\n        region: 'region',\n        roleArn: 'roleArn',\n        tableName: 'tableName',\n        versionId: 'versionId',\n      },\n    },\n    dynamicPartitioningConfiguration: {\n      enabled: false,\n      retryOptions: {\n        durationInSeconds: 123,\n      },\n    },\n    encryptionConfiguration: {\n      kmsEncryptionConfig: {\n        awskmsKeyArn: 'awskmsKeyArn',\n      },\n      noEncryptionConfig: 'noEncryptionConfig',\n    },\n    errorOutputPrefix: 'errorOutputPrefix',\n    prefix: 'prefix',\n    processingConfiguration: {\n      enabled: false,\n      processors: [{\n        type: 'type',\n\n        // the properties below are optional\n        parameters: [{\n          parameterName: 'parameterName',\n          parameterValue: 'parameterValue',\n        }],\n      }],\n    },\n    s3BackupConfiguration: {\n      bucketArn: 'bucketArn',\n      roleArn: 'roleArn',\n\n      // the properties below are optional\n      bufferingHints: {\n        intervalInSeconds: 123,\n        sizeInMBs: 123,\n      },\n      cloudWatchLoggingOptions: {\n        enabled: false,\n        logGroupName: 'logGroupName',\n        logStreamName: 'logStreamName',\n      },\n      compressionFormat: 'compressionFormat',\n      encryptionConfiguration: {\n        kmsEncryptionConfig: {\n          awskmsKeyArn: 'awskmsKeyArn',\n        },\n        noEncryptionConfig: 'noEncryptionConfig',\n      },\n      errorOutputPrefix: 'errorOutputPrefix',\n      prefix: 'prefix',\n    },\n    s3BackupMode: 's3BackupMode',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 14,
        "10": 37,
        "75": 94,
        "91": 9,
        "130": 1,
        "153": 2,
        "169": 2,
        "192": 5,
        "193": 27,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 85,
        "290": 1
      },
      "fqnsFingerprint": "ada7c4408120326dd9f649ec0fcbb212047f4c3e13126653cdac6ae654b46072"
    },
    "605a9ab5c38071c62b61107b3514f855d3532283826b38f7848f10b233349967": {
      "translations": {
        "python": {
          "source": "import path as path\nimport aws_cdk.aws_kinesisfirehose as firehose\nimport aws_cdk.aws_kms as kms\nimport aws_cdk.aws_lambda_nodejs as lambdanodejs\nimport aws_cdk.aws_logs as logs\nimport aws_cdk.aws_s3 as s3\nimport aws_cdk.core as cdk\nimport aws_cdk.aws_kinesisfirehose_destinations as destinations\n\napp = cdk.App()\n\nstack = cdk.Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\")\n\nbucket = s3.Bucket(stack, \"Bucket\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    auto_delete_objects=True\n)\n\nbackup_bucket = s3.Bucket(stack, \"BackupBucket\",\n    removal_policy=cdk.RemovalPolicy.DESTROY,\n    auto_delete_objects=True\n)\nlog_group = logs.LogGroup(stack, \"LogGroup\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\ndata_processor_function = lambdanodejs.NodejsFunction(stack, \"DataProcessorFunction\",\n    entry=path.join(__dirname, \"lambda-data-processor.js\"),\n    timeout=cdk.Duration.minutes(1)\n)\n\nprocessor = firehose.LambdaFunctionProcessor(data_processor_function,\n    buffer_interval=cdk.Duration.seconds(60),\n    buffer_size=cdk.Size.mebibytes(1),\n    retries=1\n)\n\nkey = kms.Key(stack, \"Key\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\nbackup_key = kms.Key(stack, \"BackupKey\",\n    removal_policy=cdk.RemovalPolicy.DESTROY\n)\n\nfirehose.DeliveryStream(stack, \"Delivery Stream\",\n    destinations=[destinations.S3Bucket(bucket,\n        logging=True,\n        log_group=log_group,\n        processor=processor,\n        compression=destinations.Compression.GZIP,\n        data_output_prefix=\"regularPrefix\",\n        error_output_prefix=\"errorPrefix\",\n        buffering_interval=cdk.Duration.seconds(60),\n        buffering_size=cdk.Size.mebibytes(1),\n        encryption_key=key,\n        s3_backup=destinations.DestinationS3BackupProps(\n            mode=destinations.BackupMode.ALL,\n            bucket=backup_bucket,\n            compression=destinations.Compression.ZIP,\n            data_output_prefix=\"backupPrefix\",\n            error_output_prefix=\"backupErrorPrefix\",\n            buffering_interval=cdk.Duration.seconds(60),\n            buffering_size=cdk.Size.mebibytes(1),\n            encryption_key=backup_key\n        )\n    )]\n)\n\napp.synth()",
          "version": "2"
        },
        "csharp": {
          "source": "using Path;\nusing Amazon.CDK.AWS.KinesisFirehose;\nusing Amazon.CDK.AWS.KMS;\nusing Amazon.CDK.AWS.Lambda.Nodejs;\nusing Amazon.CDK.AWS.Logs;\nusing Amazon.CDK.AWS.S3;\nusing Amazon.CDK;\nusing Amazon.CDK.AWS.KinesisFirehose.Destinations;\n\nApp app = new App();\n\nStack stack = new Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\");\n\nBucket bucket = new Bucket(stack, \"Bucket\", new BucketProps {\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    AutoDeleteObjects = true\n});\n\nBucket backupBucket = new Bucket(stack, \"BackupBucket\", new BucketProps {\n    RemovalPolicy = RemovalPolicy.DESTROY,\n    AutoDeleteObjects = true\n});\nLogGroup logGroup = new LogGroup(stack, \"LogGroup\", new LogGroupProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nNodejsFunction dataProcessorFunction = new NodejsFunction(stack, \"DataProcessorFunction\", new NodejsFunctionProps {\n    Entry = Join(__dirname, \"lambda-data-processor.js\"),\n    Timeout = Duration.Minutes(1)\n});\n\nLambdaFunctionProcessor processor = new LambdaFunctionProcessor(dataProcessorFunction, new DataProcessorProps {\n    BufferInterval = Duration.Seconds(60),\n    BufferSize = Size.Mebibytes(1),\n    Retries = 1\n});\n\nKey key = new Key(stack, \"Key\", new KeyProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nKey backupKey = new Key(stack, \"BackupKey\", new KeyProps {\n    RemovalPolicy = RemovalPolicy.DESTROY\n});\n\nnew DeliveryStream(stack, \"Delivery Stream\", new DeliveryStreamProps {\n    Destinations = new [] { new S3Bucket(bucket, new S3BucketProps {\n        Logging = true,\n        LogGroup = logGroup,\n        Processor = processor,\n        Compression = Compression.GZIP,\n        DataOutputPrefix = \"regularPrefix\",\n        ErrorOutputPrefix = \"errorPrefix\",\n        BufferingInterval = Duration.Seconds(60),\n        BufferingSize = Size.Mebibytes(1),\n        EncryptionKey = key,\n        S3Backup = new DestinationS3BackupProps {\n            Mode = BackupMode.ALL,\n            Bucket = backupBucket,\n            Compression = Compression.ZIP,\n            DataOutputPrefix = \"backupPrefix\",\n            ErrorOutputPrefix = \"backupErrorPrefix\",\n            BufferingInterval = Duration.Seconds(60),\n            BufferingSize = Size.Mebibytes(1),\n            EncryptionKey = backupKey\n        }\n    }) }\n});\n\napp.Synth();",
          "version": "1"
        },
        "java": {
          "source": "import path.*;\nimport software.amazon.awscdk.services.kinesisfirehose.*;\nimport software.amazon.awscdk.services.kms.*;\nimport software.amazon.awscdk.services.lambda.nodejs.*;\nimport software.amazon.awscdk.services.logs.*;\nimport software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.core.*;\nimport software.amazon.awscdk.services.kinesisfirehose.destinations.*;\n\nApp app = new App();\n\nStack stack = new Stack(app, \"aws-cdk-firehose-delivery-stream-s3-all-properties\");\n\nBucket bucket = Bucket.Builder.create(stack, \"Bucket\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .autoDeleteObjects(true)\n        .build();\n\nBucket backupBucket = Bucket.Builder.create(stack, \"BackupBucket\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .autoDeleteObjects(true)\n        .build();\nLogGroup logGroup = LogGroup.Builder.create(stack, \"LogGroup\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nNodejsFunction dataProcessorFunction = NodejsFunction.Builder.create(stack, \"DataProcessorFunction\")\n        .entry(join(__dirname, \"lambda-data-processor.js\"))\n        .timeout(Duration.minutes(1))\n        .build();\n\nLambdaFunctionProcessor processor = LambdaFunctionProcessor.Builder.create(dataProcessorFunction)\n        .bufferInterval(Duration.seconds(60))\n        .bufferSize(Size.mebibytes(1))\n        .retries(1)\n        .build();\n\nKey key = Key.Builder.create(stack, \"Key\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nKey backupKey = Key.Builder.create(stack, \"BackupKey\")\n        .removalPolicy(RemovalPolicy.DESTROY)\n        .build();\n\nDeliveryStream.Builder.create(stack, \"Delivery Stream\")\n        .destinations(List.of(S3Bucket.Builder.create(bucket)\n                .logging(true)\n                .logGroup(logGroup)\n                .processor(processor)\n                .compression(Compression.GZIP)\n                .dataOutputPrefix(\"regularPrefix\")\n                .errorOutputPrefix(\"errorPrefix\")\n                .bufferingInterval(Duration.seconds(60))\n                .bufferingSize(Size.mebibytes(1))\n                .encryptionKey(key)\n                .s3Backup(DestinationS3BackupProps.builder()\n                        .mode(BackupMode.ALL)\n                        .bucket(backupBucket)\n                        .compression(Compression.ZIP)\n                        .dataOutputPrefix(\"backupPrefix\")\n                        .errorOutputPrefix(\"backupErrorPrefix\")\n                        .bufferingInterval(Duration.seconds(60))\n                        .bufferingSize(Size.mebibytes(1))\n                        .encryptionKey(backupKey)\n                        .build())\n                .build()))\n        .build();\n\napp.synth();",
          "version": "1"
        },
        "go": {
          "source": "import path \"github.com/aws-samples/dummy/path\"\nimport firehose \"github.com/aws-samples/dummy/awscdkawskinesisfirehose\"\nimport kms \"github.com/aws-samples/dummy/awscdkawskms\"\nimport lambdanodejs \"github.com/aws-samples/dummy/awscdkawslambdanodejs\"\nimport logs \"github.com/aws-samples/dummy/awscdkawslogs\"\nimport s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\nimport destinations \"github.com/aws-samples/dummy/lib\"\n\napp := cdk.NewApp()\n\nstack := cdk.NewStack(app, jsii.String(\"aws-cdk-firehose-delivery-stream-s3-all-properties\"))\n\nbucket := s3.NewBucket(stack, jsii.String(\"Bucket\"), &bucketProps{\n\tremovalPolicy: cdk.removalPolicy_DESTROY,\n\tautoDeleteObjects: jsii.Boolean(true),\n})\n\nbackupBucket := s3.NewBucket(stack, jsii.String(\"BackupBucket\"), &bucketProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n\tautoDeleteObjects: jsii.Boolean(true),\n})\nlogGroup := logs.NewLogGroup(stack, jsii.String(\"LogGroup\"), &logGroupProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\ndataProcessorFunction := lambdanodejs.NewNodejsFunction(stack, jsii.String(\"DataProcessorFunction\"), &nodejsFunctionProps{\n\tentry: path.join(__dirname, jsii.String(\"lambda-data-processor.js\")),\n\ttimeout: cdk.duration.minutes(jsii.Number(1)),\n})\n\nprocessor := firehose.NewLambdaFunctionProcessor(dataProcessorFunction, &dataProcessorProps{\n\tbufferInterval: cdk.*duration.seconds(jsii.Number(60)),\n\tbufferSize: cdk.size.mebibytes(jsii.Number(1)),\n\tretries: jsii.Number(1),\n})\n\nkey := kms.NewKey(stack, jsii.String(\"Key\"), &keyProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\nbackupKey := kms.NewKey(stack, jsii.String(\"BackupKey\"), &keyProps{\n\tremovalPolicy: cdk.*removalPolicy_DESTROY,\n})\n\nfirehose.NewDeliveryStream(stack, jsii.String(\"Delivery Stream\"), &deliveryStreamProps{\n\tdestinations: []iDestination{\n\t\tdestinations.NewS3Bucket(bucket, &s3BucketProps{\n\t\t\tlogging: jsii.Boolean(true),\n\t\t\tlogGroup: logGroup,\n\t\t\tprocessor: processor,\n\t\t\tcompression: destinations.compression_GZIP(),\n\t\t\tdataOutputPrefix: jsii.String(\"regularPrefix\"),\n\t\t\terrorOutputPrefix: jsii.String(\"errorPrefix\"),\n\t\t\tbufferingInterval: cdk.*duration.seconds(jsii.Number(60)),\n\t\t\tbufferingSize: cdk.*size.mebibytes(jsii.Number(1)),\n\t\t\tencryptionKey: key,\n\t\t\ts3Backup: &destinationS3BackupProps{\n\t\t\t\tmode: destinations.backupMode_ALL,\n\t\t\t\tbucket: backupBucket,\n\t\t\t\tcompression: destinations.*compression_ZIP(),\n\t\t\t\tdataOutputPrefix: jsii.String(\"backupPrefix\"),\n\t\t\t\terrorOutputPrefix: jsii.String(\"backupErrorPrefix\"),\n\t\t\t\tbufferingInterval: cdk.*duration.seconds(jsii.Number(60)),\n\t\t\t\tbufferingSize: cdk.*size.mebibytes(jsii.Number(1)),\n\t\t\t\tencryptionKey: backupKey,\n\t\t\t},\n\t\t}),\n\t},\n})\n\napp.synth()",
          "version": "1"
        },
        "$": {
          "source": "#!/usr/bin/env node",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.LambdaFunctionProcessor"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose-destinations.BackupMode",
        "@aws-cdk/aws-kinesisfirehose-destinations.BackupMode#ALL",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression#GZIP",
        "@aws-cdk/aws-kinesisfirehose-destinations.Compression#ZIP",
        "@aws-cdk/aws-kinesisfirehose-destinations.DestinationS3BackupProps",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3Bucket",
        "@aws-cdk/aws-kinesisfirehose-destinations.S3BucketProps",
        "@aws-cdk/aws-kinesisfirehose.DataProcessorProps",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-kinesisfirehose.IDataProcessor",
        "@aws-cdk/aws-kinesisfirehose.LambdaFunctionProcessor",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "@aws-cdk/aws-kms.KeyProps",
        "@aws-cdk/aws-lambda-nodejs.NodejsFunction",
        "@aws-cdk/aws-lambda-nodejs.NodejsFunctionProps",
        "@aws-cdk/aws-lambda.IFunction",
        "@aws-cdk/aws-logs.ILogGroup",
        "@aws-cdk/aws-logs.LogGroup",
        "@aws-cdk/aws-logs.LogGroupProps",
        "@aws-cdk/aws-s3.Bucket",
        "@aws-cdk/aws-s3.BucketProps",
        "@aws-cdk/aws-s3.IBucket",
        "@aws-cdk/core.App",
        "@aws-cdk/core.Construct",
        "@aws-cdk/core.Duration",
        "@aws-cdk/core.Duration#minutes",
        "@aws-cdk/core.Duration#seconds",
        "@aws-cdk/core.RemovalPolicy",
        "@aws-cdk/core.RemovalPolicy#DESTROY",
        "@aws-cdk/core.Size",
        "@aws-cdk/core.Size#mebibytes",
        "@aws-cdk/core.Stack",
        "@aws-cdk/core.Stage#synth",
        "constructs.Construct"
      ],
      "fullSource": "#!/usr/bin/env node\n/// !cdk-integ pragma:ignore-assets\nimport * as path from 'path';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as lambdanodejs from '@aws-cdk/aws-lambda-nodejs';\nimport * as logs from '@aws-cdk/aws-logs';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as cdk from '@aws-cdk/core';\nimport * as destinations from '../lib';\n\nconst app = new cdk.App();\n\nconst stack = new cdk.Stack(app, 'aws-cdk-firehose-delivery-stream-s3-all-properties');\n\nconst bucket = new s3.Bucket(stack, 'Bucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\n\nconst backupBucket = new s3.Bucket(stack, 'BackupBucket', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n  autoDeleteObjects: true,\n});\nconst logGroup = new logs.LogGroup(stack, 'LogGroup', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst dataProcessorFunction = new lambdanodejs.NodejsFunction(stack, 'DataProcessorFunction', {\n  entry: path.join(__dirname, 'lambda-data-processor.js'),\n  timeout: cdk.Duration.minutes(1),\n});\n\nconst processor = new firehose.LambdaFunctionProcessor(dataProcessorFunction, {\n  bufferInterval: cdk.Duration.seconds(60),\n  bufferSize: cdk.Size.mebibytes(1),\n  retries: 1,\n});\n\nconst key = new kms.Key(stack, 'Key', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nconst backupKey = new kms.Key(stack, 'BackupKey', {\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\nnew firehose.DeliveryStream(stack, 'Delivery Stream', {\n  destinations: [new destinations.S3Bucket(bucket, {\n    logging: true,\n    logGroup: logGroup,\n    processor: processor,\n    compression: destinations.Compression.GZIP,\n    dataOutputPrefix: 'regularPrefix',\n    errorOutputPrefix: 'errorPrefix',\n    bufferingInterval: cdk.Duration.seconds(60),\n    bufferingSize: cdk.Size.mebibytes(1),\n    encryptionKey: key,\n    s3Backup: {\n      mode: destinations.BackupMode.ALL,\n      bucket: backupBucket,\n      compression: destinations.Compression.ZIP,\n      dataOutputPrefix: 'backupPrefix',\n      errorOutputPrefix: 'backupErrorPrefix',\n      bufferingInterval: cdk.Duration.seconds(60),\n      bufferingSize: cdk.Size.mebibytes(1),\n      encryptionKey: backupKey,\n    },\n  })],\n});\n\napp.synth();\n",
      "syntaxKindCounter": {
        "8": 8,
        "10": 21,
        "75": 135,
        "106": 3,
        "192": 1,
        "193": 10,
        "194": 43,
        "196": 9,
        "197": 11,
        "225": 9,
        "226": 2,
        "242": 9,
        "243": 9,
        "254": 8,
        "255": 8,
        "256": 8,
        "281": 31,
        "290": 1
      },
      "fqnsFingerprint": "14f93717371c27d8ab15f18004cce3c49ff5781992a468be6e6b7b3908a008c1"
    },
    "d4e7efa2286d6c274052f861788d186b6c0249db4d9be4aa93f190a4c82fd985": {
      "translations": {
        "python": {
          "source": "# destination: firehose.IDestination\n# SSE with an customer-managed CMK that is explicitly specified\n# key: kms.Key\n\n\n# SSE with an AWS-owned CMK\nfirehose.DeliveryStream(self, \"Delivery Stream AWS Owned\",\n    encryption=firehose.StreamEncryption.AWS_OWNED,\n    destinations=[destination]\n)\n# SSE with an customer-managed CMK that is created automatically by the CDK\nfirehose.DeliveryStream(self, \"Delivery Stream Implicit Customer Managed\",\n    encryption=firehose.StreamEncryption.CUSTOMER_MANAGED,\n    destinations=[destination]\n)\nfirehose.DeliveryStream(self, \"Delivery Stream Explicit Customer Managed\",\n    encryption_key=key,\n    destinations=[destination]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "IDestination destination;\n// SSE with an customer-managed CMK that is explicitly specified\nKey key;\n\n\n// SSE with an AWS-owned CMK\n// SSE with an AWS-owned CMK\nnew DeliveryStream(this, \"Delivery Stream AWS Owned\", new DeliveryStreamProps {\n    Encryption = StreamEncryption.AWS_OWNED,\n    Destinations = new [] { destination }\n});\n// SSE with an customer-managed CMK that is created automatically by the CDK\n// SSE with an customer-managed CMK that is created automatically by the CDK\nnew DeliveryStream(this, \"Delivery Stream Implicit Customer Managed\", new DeliveryStreamProps {\n    Encryption = StreamEncryption.CUSTOMER_MANAGED,\n    Destinations = new [] { destination }\n});\nnew DeliveryStream(this, \"Delivery Stream Explicit Customer Managed\", new DeliveryStreamProps {\n    EncryptionKey = key,\n    Destinations = new [] { destination }\n});",
          "version": "1"
        },
        "java": {
          "source": "IDestination destination;\n// SSE with an customer-managed CMK that is explicitly specified\nKey key;\n\n\n// SSE with an AWS-owned CMK\n// SSE with an AWS-owned CMK\nDeliveryStream.Builder.create(this, \"Delivery Stream AWS Owned\")\n        .encryption(StreamEncryption.AWS_OWNED)\n        .destinations(List.of(destination))\n        .build();\n// SSE with an customer-managed CMK that is created automatically by the CDK\n// SSE with an customer-managed CMK that is created automatically by the CDK\nDeliveryStream.Builder.create(this, \"Delivery Stream Implicit Customer Managed\")\n        .encryption(StreamEncryption.CUSTOMER_MANAGED)\n        .destinations(List.of(destination))\n        .build();\nDeliveryStream.Builder.create(this, \"Delivery Stream Explicit Customer Managed\")\n        .encryptionKey(key)\n        .destinations(List.of(destination))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var destination iDestination\n// SSE with an customer-managed CMK that is explicitly specified\nvar key key\n\n\n// SSE with an AWS-owned CMK\n// SSE with an AWS-owned CMK\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream AWS Owned\"), &deliveryStreamProps{\n\tencryption: firehose.streamEncryption_AWS_OWNED,\n\tdestinations: []*iDestination{\n\t\tdestination,\n\t},\n})\n// SSE with an customer-managed CMK that is created automatically by the CDK\n// SSE with an customer-managed CMK that is created automatically by the CDK\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream Implicit Customer Managed\"), &deliveryStreamProps{\n\tencryption: firehose.*streamEncryption_CUSTOMER_MANAGED,\n\tdestinations: []*iDestination{\n\t\tdestination,\n\t},\n})\nfirehose.NewDeliveryStream(this, jsii.String(\"Delivery Stream Explicit Customer Managed\"), &deliveryStreamProps{\n\tencryptionKey: key,\n\tdestinations: []*iDestination{\n\t\tdestination,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const destination: firehose.IDestination;\n\n// SSE with an AWS-owned CMK\nnew firehose.DeliveryStream(this, 'Delivery Stream AWS Owned', {\n  encryption: firehose.StreamEncryption.AWS_OWNED,\n  destinations: [destination],\n});\n// SSE with an customer-managed CMK that is created automatically by the CDK\nnew firehose.DeliveryStream(this, 'Delivery Stream Implicit Customer Managed', {\n  encryption: firehose.StreamEncryption.CUSTOMER_MANAGED,\n  destinations: [destination],\n});\n// SSE with an customer-managed CMK that is explicitly specified\ndeclare const key: kms.Key;\nnew firehose.DeliveryStream(this, 'Delivery Stream Explicit Customer Managed', {\n  encryptionKey: key,\n  destinations: [destination],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-kinesisfirehose.StreamEncryption"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-kinesisfirehose.DeliveryStream",
        "@aws-cdk/aws-kinesisfirehose.DeliveryStreamProps",
        "@aws-cdk/aws-kinesisfirehose.StreamEncryption",
        "@aws-cdk/aws-kinesisfirehose.StreamEncryption#AWS_OWNED",
        "@aws-cdk/aws-kinesisfirehose.StreamEncryption#CUSTOMER_MANAGED",
        "@aws-cdk/aws-kms.IKey",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const destination: firehose.IDestination;\n// SSE with an customer-managed CMK that is explicitly specified\ndeclare const key: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Size, Stack } from '@aws-cdk/core';\nimport * as firehose from '@aws-cdk/aws-kinesisfirehose';\nimport * as kinesis from '@aws-cdk/aws-kinesis';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as destinations from '@aws-cdk/aws-kinesisfirehose-destinations';\nimport * as kms from '@aws-cdk/aws-kms';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\n// SSE with an AWS-owned CMK\nnew firehose.DeliveryStream(this, 'Delivery Stream AWS Owned', {\n  encryption: firehose.StreamEncryption.AWS_OWNED,\n  destinations: [destination],\n});\n// SSE with an customer-managed CMK that is created automatically by the CDK\nnew firehose.DeliveryStream(this, 'Delivery Stream Implicit Customer Managed', {\n  encryption: firehose.StreamEncryption.CUSTOMER_MANAGED,\n  destinations: [destination],\n});\nnew firehose.DeliveryStream(this, 'Delivery Stream Explicit Customer Managed', {\n  encryptionKey: key,\n  destinations: [destination],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 28,
        "104": 3,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 3,
        "193": 3,
        "194": 7,
        "197": 3,
        "225": 2,
        "226": 3,
        "242": 2,
        "243": 2,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "d04db70c0e83182b14b1e16869dd79731a2c1cd8abc493de8e1577ce3f771f78"
    }
  }
}